; Listing generated by Microsoft (R) Optimizing Compiler Version 19.29.30151.0 

	TITLE	C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\Distribute\PythonSlotWindow.obj
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

CONST	SEGMENT
?piecewise_construct@std@@3Upiecewise_construct_t@1@B	ORG $+1 ; std::piecewise_construct
?_Fake_alloc@std@@3U_Fake_allocator@1@B	ORG $+1		; std::_Fake_alloc
CONST	ENDS
PUBLIC	___local_stdio_printf_options
PUBLIC	__snprintf
PUBLIC	??0exception@std@@QAE@ABV01@@Z			; std::exception::exception
PUBLIC	??1exception@std@@UAE@XZ			; std::exception::~exception
PUBLIC	?what@exception@std@@UBEPBDXZ			; std::exception::what
PUBLIC	??_Gexception@std@@UAEPAXI@Z			; std::exception::`scalar deleting destructor'
PUBLIC	??0bad_alloc@std@@QAE@ABV01@@Z			; std::bad_alloc::bad_alloc
PUBLIC	??_Gbad_alloc@std@@UAEPAXI@Z			; std::bad_alloc::`scalar deleting destructor'
PUBLIC	??0bad_array_new_length@std@@QAE@XZ		; std::bad_array_new_length::bad_array_new_length
PUBLIC	??1bad_array_new_length@std@@UAE@XZ		; std::bad_array_new_length::~bad_array_new_length
PUBLIC	??0bad_array_new_length@std@@QAE@ABV01@@Z	; std::bad_array_new_length::bad_array_new_length
PUBLIC	??_Gbad_array_new_length@std@@UAEPAXI@Z		; std::bad_array_new_length::`scalar deleting destructor'
PUBLIC	?_Throw_bad_array_new_length@std@@YAXXZ		; std::_Throw_bad_array_new_length
PUBLIC	?_Throw_tree_length_error@std@@YAXXZ		; std::_Throw_tree_length_error
PUBLIC	??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
PUBLIC	?OnChangePosition@CWindow@UI@@UAEXXZ		; UI::CWindow::OnChangePosition
PUBLIC	?SetColor@CWindow@UI@@UAEXK@Z			; UI::CWindow::SetColor
PUBLIC	?IsWindow@CWindow@UI@@UAEHXZ			; UI::CWindow::IsWindow
PUBLIC	?Type@CSlotWindow@UI@@SAKXZ			; UI::CSlotWindow::Type
PUBLIC	??1?$list@USSlot@CSlotWindow@UI@@V?$allocator@USSlot@CSlotWindow@UI@@@std@@@std@@QAE@XZ ; std::list<UI::CSlotWindow::SSlot,std::allocator<UI::CSlotWindow::SSlot> >::~list<UI::CSlotWindow::SSlot,std::allocator<UI::CSlotWindow::SSlot> >
PUBLIC	??0CSlotWindow@UI@@QAE@PAU_object@@@Z		; UI::CSlotWindow::CSlotWindow
PUBLIC	?SetSlotID@CSlotWindow@UI@@QAEXKK@Z		; UI::CSlotWindow::SetSlotID
PUBLIC	??1CSlotWindow@UI@@UAE@XZ			; UI::CSlotWindow::~CSlotWindow
PUBLIC	?Destroy@CSlotWindow@UI@@QAEXXZ			; UI::CSlotWindow::Destroy
PUBLIC	?SetSlotType@CSlotWindow@UI@@QAEXK@Z		; UI::CSlotWindow::SetSlotType
PUBLIC	?SetSlotStyle@CSlotWindow@UI@@QAEXK@Z		; UI::CSlotWindow::SetSlotStyle
PUBLIC	?SetSlotScale@CSlotWindow@UI@@QAEXMM@Z		; UI::CSlotWindow::SetSlotScale
PUBLIC	?AppendSlot@CSlotWindow@UI@@QAEXKHHHH@Z		; UI::CSlotWindow::AppendSlot
PUBLIC	?SetCoverButton@CSlotWindow@UI@@QAEXKPBD000HH@Z	; UI::CSlotWindow::SetCoverButton
PUBLIC	?SetSlotBaseImage@CSlotWindow@UI@@QAEXPBDMMMM@Z	; UI::CSlotWindow::SetSlotBaseImage
PUBLIC	?AppendSlotButton@CSlotWindow@UI@@QAEXPBD00@Z	; UI::CSlotWindow::AppendSlotButton
PUBLIC	?AppendRequirementSignImage@CSlotWindow@UI@@QAEXPBD@Z ; UI::CSlotWindow::AppendRequirementSignImage
PUBLIC	?EnableCoverButton@CSlotWindow@UI@@QAEXK@Z	; UI::CSlotWindow::EnableCoverButton
PUBLIC	?DisableCoverButton@CSlotWindow@UI@@QAEXK@Z	; UI::CSlotWindow::DisableCoverButton
PUBLIC	?SetAlwaysRenderCoverButton@CSlotWindow@UI@@QAEXK_N@Z ; UI::CSlotWindow::SetAlwaysRenderCoverButton
PUBLIC	?ShowSlotBaseImage@CSlotWindow@UI@@QAEXK@Z	; UI::CSlotWindow::ShowSlotBaseImage
PUBLIC	?HideSlotBaseImage@CSlotWindow@UI@@QAEXK@Z	; UI::CSlotWindow::HideSlotBaseImage
PUBLIC	?IsDisableCoverButton@CSlotWindow@UI@@QAEHK@Z	; UI::CSlotWindow::IsDisableCoverButton
PUBLIC	?HasSlot@CSlotWindow@UI@@QAEHK@Z		; UI::CSlotWindow::HasSlot
PUBLIC	?ClearAllSlot@CSlotWindow@UI@@QAEXXZ		; UI::CSlotWindow::ClearAllSlot
PUBLIC	?ClearSlot@CSlotWindow@UI@@QAEXK@Z		; UI::CSlotWindow::ClearSlot
PUBLIC	?SetSlot@CSlotWindow@UI@@QAEXKKEEPAVCGraphicImage@@AAUD3DXCOLOR@@@Z ; UI::CSlotWindow::SetSlot
PUBLIC	?SetSlotCount@CSlotWindow@UI@@QAEXKK@Z		; UI::CSlotWindow::SetSlotCount
PUBLIC	?SetRealSlotNumber@CSlotWindow@UI@@QAEXKK@Z	; UI::CSlotWindow::SetRealSlotNumber
PUBLIC	?SetSlotCountNew@CSlotWindow@UI@@QAEXKKK@Z	; UI::CSlotWindow::SetSlotCountNew
PUBLIC	?SetSlotCoolTime@CSlotWindow@UI@@QAEXKMM@Z	; UI::CSlotWindow::SetSlotCoolTime
PUBLIC	?SetSlotCoolTimeColor@CSlotWindow@UI@@QAEXKMMMM@Z ; UI::CSlotWindow::SetSlotCoolTimeColor
PUBLIC	?SetSlotCoolTimeInverse@CSlotWindow@UI@@QAEXKMM@Z ; UI::CSlotWindow::SetSlotCoolTimeInverse
PUBLIC	?StoreSlotCoolTime@CSlotWindow@UI@@QAEXKKMM@Z	; UI::CSlotWindow::StoreSlotCoolTime
PUBLIC	?RestoreSlotCoolTime@CSlotWindow@UI@@QAEXK@Z	; UI::CSlotWindow::RestoreSlotCoolTime
PUBLIC	?ActivateSlot@CSlotWindow@UI@@QAEXK@Z		; UI::CSlotWindow::ActivateSlot
PUBLIC	?DeactivateSlot@CSlotWindow@UI@@QAEXK@Z		; UI::CSlotWindow::DeactivateSlot
PUBLIC	?RefreshSlot@CSlotWindow@UI@@QAEXXZ		; UI::CSlotWindow::RefreshSlot
PUBLIC	?GetSlotCoolTime@CSlotWindow@UI@@QAEMKPAM@Z	; UI::CSlotWindow::GetSlotCoolTime
PUBLIC	?IsActivatedSlot@CSlotWindow@UI@@QAE_NK@Z	; UI::CSlotWindow::IsActivatedSlot
PUBLIC	?GetSlotCount@CSlotWindow@UI@@QAEKXZ		; UI::CSlotWindow::GetSlotCount
PUBLIC	?LockSlot@CSlotWindow@UI@@QAEXK@Z		; UI::CSlotWindow::LockSlot
PUBLIC	?UnlockSlot@CSlotWindow@UI@@QAEXK@Z		; UI::CSlotWindow::UnlockSlot
PUBLIC	?SetCantUseSlot@CSlotWindow@UI@@QAEXK@Z		; UI::CSlotWindow::SetCantUseSlot
PUBLIC	?SetUseSlot@CSlotWindow@UI@@QAEXK@Z		; UI::CSlotWindow::SetUseSlot
PUBLIC	?EnableSlot@CSlotWindow@UI@@QAEXK@Z		; UI::CSlotWindow::EnableSlot
PUBLIC	?DisableSlot@CSlotWindow@UI@@QAEXK@Z		; UI::CSlotWindow::DisableSlot
PUBLIC	?SetCanMouseEventSlot@CSlotWindow@UI@@QAEXK@Z	; UI::CSlotWindow::SetCanMouseEventSlot
PUBLIC	?SetCantMouseEventSlot@CSlotWindow@UI@@QAEXK@Z	; UI::CSlotWindow::SetCantMouseEventSlot
PUBLIC	?SetUsableSlotOnTopWnd@CSlotWindow@UI@@QAEXK@Z	; UI::CSlotWindow::SetUsableSlotOnTopWnd
PUBLIC	?SetUnusableSlotOnTopWnd@CSlotWindow@UI@@QAEXK@Z ; UI::CSlotWindow::SetUnusableSlotOnTopWnd
PUBLIC	?ClearSelected@CSlotWindow@UI@@QAEXXZ		; UI::CSlotWindow::ClearSelected
PUBLIC	?SelectSlot@CSlotWindow@UI@@QAEXK@Z		; UI::CSlotWindow::SelectSlot
PUBLIC	?isSelectedSlot@CSlotWindow@UI@@QAEHK@Z		; UI::CSlotWindow::isSelectedSlot
PUBLIC	?GetSelectedSlotCount@CSlotWindow@UI@@QAEKXZ	; UI::CSlotWindow::GetSelectedSlotCount
PUBLIC	?GetSelectedSlotNumber@CSlotWindow@UI@@QAEKK@Z	; UI::CSlotWindow::GetSelectedSlotNumber
PUBLIC	?ShowSlotButton@CSlotWindow@UI@@QAEXK@Z		; UI::CSlotWindow::ShowSlotButton
PUBLIC	?HideAllSlotButton@CSlotWindow@UI@@QAEXXZ	; UI::CSlotWindow::HideAllSlotButton
PUBLIC	?OnPressedSlotButton@CSlotWindow@UI@@QAEXKKH@Z	; UI::CSlotWindow::OnPressedSlotButton
PUBLIC	?ShowRequirementSign@CSlotWindow@UI@@QAEXK@Z	; UI::CSlotWindow::ShowRequirementSign
PUBLIC	?HideRequirementSign@CSlotWindow@UI@@QAEXK@Z	; UI::CSlotWindow::HideRequirementSign
PUBLIC	?OnOverInItem@CSlotWindow@UI@@QAEHK@Z		; UI::CSlotWindow::OnOverInItem
PUBLIC	?OnOverOutItem@CSlotWindow@UI@@QAEXXZ		; UI::CSlotWindow::OnOverOutItem
PUBLIC	?SetUseMode@CSlotWindow@UI@@QAEXH@Z		; UI::CSlotWindow::SetUseMode
PUBLIC	?SetUsableItem@CSlotWindow@UI@@QAEXH@Z		; UI::CSlotWindow::SetUsableItem
PUBLIC	?ReserveDestroyCoolTimeFinishEffect@CSlotWindow@UI@@QAEXK@Z ; UI::CSlotWindow::ReserveDestroyCoolTimeFinishEffect
PUBLIC	?ActivateEffect@CSlotWindow@UI@@QAEXKMMMM@Z	; UI::CSlotWindow::ActivateEffect
PUBLIC	?DeactivateEffect@CSlotWindow@UI@@QAEXK@Z	; UI::CSlotWindow::DeactivateEffect
PUBLIC	?__Initialize@CSlotWindow@UI@@IAEXXZ		; UI::CSlotWindow::__Initialize
PUBLIC	?__CreateToggleSlotImage@CSlotWindow@UI@@IAEXXZ	; UI::CSlotWindow::__CreateToggleSlotImage
PUBLIC	?__CreateSlotEnableEffect@CSlotWindow@UI@@IAEXH@Z ; UI::CSlotWindow::__CreateSlotEnableEffect
PUBLIC	?__CreateFinishCoolTimeEffect@CSlotWindow@UI@@IAEXPAUSSlot@12@@Z ; UI::CSlotWindow::__CreateFinishCoolTimeEffect
PUBLIC	?__CreateBaseImage@CSlotWindow@UI@@IAEXPBDMMMM@Z ; UI::CSlotWindow::__CreateBaseImage
PUBLIC	?__DestroyToggleSlotImage@CSlotWindow@UI@@IAEXXZ ; UI::CSlotWindow::__DestroyToggleSlotImage
PUBLIC	?__DestroySlotEnableEffect@CSlotWindow@UI@@IAEXH@Z ; UI::CSlotWindow::__DestroySlotEnableEffect
PUBLIC	?__DestroyFinishCoolTimeEffect@CSlotWindow@UI@@IAEXPAUSSlot@12@@Z ; UI::CSlotWindow::__DestroyFinishCoolTimeEffect
PUBLIC	?__DestroyBaseImage@CSlotWindow@UI@@IAEXXZ	; UI::CSlotWindow::__DestroyBaseImage
PUBLIC	?OnUpdate@CSlotWindow@UI@@MAEXXZ		; UI::CSlotWindow::OnUpdate
PUBLIC	?OnRender@CSlotWindow@UI@@MAEXXZ		; UI::CSlotWindow::OnRender
PUBLIC	?OnMouseLeftButtonDown@CSlotWindow@UI@@MAEHXZ	; UI::CSlotWindow::OnMouseLeftButtonDown
PUBLIC	?OnMouseLeftButtonUp@CSlotWindow@UI@@MAEHXZ	; UI::CSlotWindow::OnMouseLeftButtonUp
PUBLIC	?OnMouseRightButtonDown@CSlotWindow@UI@@MAEHXZ	; UI::CSlotWindow::OnMouseRightButtonDown
PUBLIC	?OnMouseLeftButtonDoubleClick@CSlotWindow@UI@@MAEHXZ ; UI::CSlotWindow::OnMouseLeftButtonDoubleClick
PUBLIC	?OnMouseOverOut@CSlotWindow@UI@@MAEXXZ		; UI::CSlotWindow::OnMouseOverOut
PUBLIC	?OnMouseOver@CSlotWindow@UI@@MAEXXZ		; UI::CSlotWindow::OnMouseOver
PUBLIC	?RenderSlotBaseImage@CSlotWindow@UI@@IAEXXZ	; UI::CSlotWindow::RenderSlotBaseImage
PUBLIC	?RenderLockedSlot@CSlotWindow@UI@@IAEXXZ	; UI::CSlotWindow::RenderLockedSlot
PUBLIC	?OnRenderPickingSlot@CSlotWindow@UI@@MAEXXZ	; UI::CSlotWindow::OnRenderPickingSlot
PUBLIC	?OnRenderSelectedSlot@CSlotWindow@UI@@MAEXXZ	; UI::CSlotWindow::OnRenderSelectedSlot
PUBLIC	?OnSelectEmptySlot@CSlotWindow@UI@@IAEXH@Z	; UI::CSlotWindow::OnSelectEmptySlot
PUBLIC	?OnSelectItemSlot@CSlotWindow@UI@@IAEXH@Z	; UI::CSlotWindow::OnSelectItemSlot
PUBLIC	?OnUnselectEmptySlot@CSlotWindow@UI@@IAEXH@Z	; UI::CSlotWindow::OnUnselectEmptySlot
PUBLIC	?OnUnselectItemSlot@CSlotWindow@UI@@IAEXH@Z	; UI::CSlotWindow::OnUnselectItemSlot
PUBLIC	?OnUseSlot@CSlotWindow@UI@@IAEXXZ		; UI::CSlotWindow::OnUseSlot
PUBLIC	?GetSlotPointer@CSlotWindow@UI@@IAEHKPAPAUSSlot@12@@Z ; UI::CSlotWindow::GetSlotPointer
PUBLIC	?GetSelectedSlotPointer@CSlotWindow@UI@@IAEHPAPAUSSlot@12@@Z ; UI::CSlotWindow::GetSelectedSlotPointer
PUBLIC	?GetPickedSlotPointer@CSlotWindow@UI@@MAEHPAPAUSSlot@12@@Z ; UI::CSlotWindow::GetPickedSlotPointer
PUBLIC	?ClearSlot@CSlotWindow@UI@@IAEXPAUSSlot@12@@Z	; UI::CSlotWindow::ClearSlot
PUBLIC	?OnRefreshSlot@CSlotWindow@UI@@MAEXXZ		; UI::CSlotWindow::OnRefreshSlot
PUBLIC	?OnIsType@CSlotWindow@UI@@MAEHK@Z		; UI::CSlotWindow::OnIsType
PUBLIC	??1?$list@KV?$allocator@K@std@@@std@@QAE@XZ	; std::list<unsigned long,std::allocator<unsigned long> >::~list<unsigned long,std::allocator<unsigned long> >
PUBLIC	?_Insert_node@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$map@KUSStoreCoolDown@CSlotWindow@UI@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@5@@std@@@std@@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBKV?$map@KUSStoreCoolDown@CSlotWindow@UI@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@5@@std@@@std@@PAX@2@U?$_Tree_id@PAU?$_Tree_node@U?$pair@$$CBKV?$map@KUSStoreCoolDown@CSlotWindow@UI@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@5@@std@@@std@@PAX@std@@@2@QAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,std::map<unsigned long,UI::CSlotWindow::SStoreCoolDown,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,UI::CSlotWindow::SStoreCoolDown> > > > > >::_Insert_node
PUBLIC	??A?$map@KV?$map@KUSStoreCoolDown@CSlotWindow@UI@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@5@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$map@KUSStoreCoolDown@CSlotWindow@UI@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@5@@std@@@std@@@2@@std@@QAEAAV?$map@KUSStoreCoolDown@CSlotWindow@UI@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@5@@1@$$QAK@Z ; std::map<unsigned long,std::map<unsigned long,UI::CSlotWindow::SStoreCoolDown,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,UI::CSlotWindow::SStoreCoolDown> > >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::map<unsigned long,UI::CSlotWindow::SStoreCoolDown,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,UI::CSlotWindow::SStoreCoolDown> > > > > >::operator[]
PUBLIC	??A?$map@KV?$map@KUSStoreCoolDown@CSlotWindow@UI@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@5@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$map@KUSStoreCoolDown@CSlotWindow@UI@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@5@@std@@@std@@@2@@std@@QAEAAV?$map@KUSStoreCoolDown@CSlotWindow@UI@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@5@@1@ABK@Z ; std::map<unsigned long,std::map<unsigned long,UI::CSlotWindow::SStoreCoolDown,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,UI::CSlotWindow::SStoreCoolDown> > >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::map<unsigned long,UI::CSlotWindow::SStoreCoolDown,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,UI::CSlotWindow::SStoreCoolDown> > > > > >::operator[]
PUBLIC	??1?$map@KV?$map@KUSStoreCoolDown@CSlotWindow@UI@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@5@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$map@KUSStoreCoolDown@CSlotWindow@UI@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@5@@std@@@std@@@2@@std@@QAE@XZ ; std::map<unsigned long,std::map<unsigned long,UI::CSlotWindow::SStoreCoolDown,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,UI::CSlotWindow::SStoreCoolDown> > >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::map<unsigned long,UI::CSlotWindow::SStoreCoolDown,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,UI::CSlotWindow::SStoreCoolDown> > > > > >::~map<unsigned long,std::map<unsigned long,UI::CSlotWindow::SStoreCoolDown,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,UI::CSlotWindow::SStoreCoolDown> > >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::map<unsigned long,UI::CSlotWindow::SStoreCoolDown,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,UI::CSlotWindow::SStoreCoolDown> > > > > >
PUBLIC	?_Xlen@?$deque@KV?$allocator@K@std@@@std@@ABEXXZ ; std::deque<unsigned long,std::allocator<unsigned long> >::_Xlen
PUBLIC	?_Growmap@?$deque@KV?$allocator@K@std@@@std@@AAEXI@Z ; std::deque<unsigned long,std::allocator<unsigned long> >::_Growmap
PUBLIC	?_Tidy@?$deque@KV?$allocator@K@std@@@std@@AAEXXZ ; std::deque<unsigned long,std::allocator<unsigned long> >::_Tidy
PUBLIC	??_GCSlotWindow@UI@@UAEPAXI@Z			; UI::CSlotWindow::`scalar deleting destructor'
PUBLIC	??1CSlotButton@CSlotWindow@UI@@UAE@XZ		; UI::CSlotWindow::CSlotButton::~CSlotButton
PUBLIC	?OnMouseLeftButtonDown@CSlotButton@CSlotWindow@UI@@UAEHXZ ; UI::CSlotWindow::CSlotButton::OnMouseLeftButtonDown
PUBLIC	?OnMouseLeftButtonUp@CSlotButton@CSlotWindow@UI@@UAEHXZ ; UI::CSlotWindow::CSlotButton::OnMouseLeftButtonUp
PUBLIC	?OnMouseOverIn@CSlotButton@CSlotWindow@UI@@UAEXXZ ; UI::CSlotWindow::CSlotButton::OnMouseOverIn
PUBLIC	?OnMouseOverOut@CSlotButton@CSlotWindow@UI@@UAEXXZ ; UI::CSlotWindow::CSlotButton::OnMouseOverOut
PUBLIC	??_GCSlotButton@CSlotWindow@UI@@UAEPAXI@Z	; UI::CSlotWindow::CSlotButton::`scalar deleting destructor'
PUBLIC	??1CCoverButton@CSlotWindow@UI@@UAE@XZ		; UI::CSlotWindow::CCoverButton::~CCoverButton
PUBLIC	?OnRender@CCoverButton@CSlotWindow@UI@@UAEXXZ	; UI::CSlotWindow::CCoverButton::OnRender
PUBLIC	?OnMouseLeftButtonDown@CCoverButton@CSlotWindow@UI@@UAEHXZ ; UI::CSlotWindow::CCoverButton::OnMouseLeftButtonDown
PUBLIC	?OnMouseLeftButtonUp@CCoverButton@CSlotWindow@UI@@UAEHXZ ; UI::CSlotWindow::CCoverButton::OnMouseLeftButtonUp
PUBLIC	?OnMouseRightButtonDown@CCoverButton@CSlotWindow@UI@@UAEHXZ ; UI::CSlotWindow::CCoverButton::OnMouseRightButtonDown
PUBLIC	?OnMouseRightButtonUp@CCoverButton@CSlotWindow@UI@@UAEHXZ ; UI::CSlotWindow::CCoverButton::OnMouseRightButtonUp
PUBLIC	??_GCCoverButton@CSlotWindow@UI@@UAEPAXI@Z	; UI::CSlotWindow::CCoverButton::`scalar deleting destructor'
PUBLIC	??1CCoolTimeFinishEffect@CSlotWindow@UI@@UAE@XZ	; UI::CSlotWindow::CCoolTimeFinishEffect::~CCoolTimeFinishEffect
PUBLIC	?OnEndFrame@CCoolTimeFinishEffect@CSlotWindow@UI@@UAEXXZ ; UI::CSlotWindow::CCoolTimeFinishEffect::OnEndFrame
PUBLIC	??_GCCoolTimeFinishEffect@CSlotWindow@UI@@UAEPAXI@Z ; UI::CSlotWindow::CCoolTimeFinishEffect::`scalar deleting destructor'
PUBLIC	??1?$_Tree@V?$_Tmap_traits@KUSStoreCoolDown@CSlotWindow@UI@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@5@$0A@@std@@@std@@QAE@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,UI::CSlotWindow::SStoreCoolDown,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,UI::CSlotWindow::SStoreCoolDown> >,0> >::~_Tree<std::_Tmap_traits<unsigned long,UI::CSlotWindow::SStoreCoolDown,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,UI::CSlotWindow::SStoreCoolDown> >,0> >
PUBLIC	?_Insert_node@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@PAX@2@U?$_Tree_id@PAU?$_Tree_node@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@PAX@std@@@2@QAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,UI::CSlotWindow::SStoreCoolDown> > >::_Insert_node
PUBLIC	??_9CWindow@UI@@$B3AE				; UI::CWindow::`vcall'{4}'
PUBLIC	??$_Find_lower_bound@K@?$_Tree@V?$_Tmap_traits@KUSStoreCoolDown@CSlotWindow@UI@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@5@$0A@@std@@@std@@IBE?AU?$_Tree_find_result@PAU?$_Tree_node@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@PAX@std@@@1@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,UI::CSlotWindow::SStoreCoolDown,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,UI::CSlotWindow::SStoreCoolDown> >,0> >::_Find_lower_bound<unsigned long>
PUBLIC	??$_Find_lower_bound@K@?$_Tree@V?$_Tmap_traits@KV?$map@KUSStoreCoolDown@CSlotWindow@UI@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@5@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$map@KUSStoreCoolDown@CSlotWindow@UI@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@5@@std@@@std@@@2@$0A@@std@@@std@@IBE?AU?$_Tree_find_result@PAU?$_Tree_node@U?$pair@$$CBKV?$map@KUSStoreCoolDown@CSlotWindow@UI@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@5@@std@@@std@@PAX@std@@@1@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::map<unsigned long,UI::CSlotWindow::SStoreCoolDown,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,UI::CSlotWindow::SStoreCoolDown> > >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::map<unsigned long,UI::CSlotWindow::SStoreCoolDown,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,UI::CSlotWindow::SStoreCoolDown> > > > >,0> >::_Find_lower_bound<unsigned long>
PUBLIC	??1?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBKV?$map@KUSStoreCoolDown@CSlotWindow@UI@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@5@@std@@@std@@PAX@std@@@std@@@std@@QAE@XZ ; std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<unsigned long const ,std::map<unsigned long,UI::CSlotWindow::SStoreCoolDown,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,UI::CSlotWindow::SStoreCoolDown> > > >,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<unsigned long const ,std::map<unsigned long,UI::CSlotWindow::SStoreCoolDown,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,UI::CSlotWindow::SStoreCoolDown> > > >,void *> > >
PUBLIC	??1?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBKV?$map@KUSStoreCoolDown@CSlotWindow@UI@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@5@@std@@@std@@PAX@std@@@std@@@std@@QAE@XZ ; std::_Tree_temp_node_alloc<std::allocator<std::_Tree_node<std::pair<unsigned long const ,std::map<unsigned long,UI::CSlotWindow::SStoreCoolDown,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,UI::CSlotWindow::SStoreCoolDown> > > >,void *> > >::~_Tree_temp_node_alloc<std::allocator<std::_Tree_node<std::pair<unsigned long const ,std::map<unsigned long,UI::CSlotWindow::SStoreCoolDown,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,UI::CSlotWindow::SStoreCoolDown> > > >,void *> > >
PUBLIC	??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBKV?$map@KUSStoreCoolDown@CSlotWindow@UI@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@5@@std@@@std@@PAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$map@KUSStoreCoolDown@CSlotWindow@UI@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@5@@std@@@std@@@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBKV?$map@KUSStoreCoolDown@CSlotWindow@UI@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@5@@std@@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBKV?$map@KUSStoreCoolDown@CSlotWindow@UI@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@5@@std@@@std@@PAX@1@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,std::map<unsigned long,UI::CSlotWindow::SStoreCoolDown,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,UI::CSlotWindow::SStoreCoolDown> > > > > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<unsigned long const ,std::map<unsigned long,UI::CSlotWindow::SStoreCoolDown,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,UI::CSlotWindow::SStoreCoolDown> > > >,void *> > >
PUBLIC	??1?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@KPAX@std@@@std@@@std@@QAE@XZ ; std::_Alloc_construct_ptr<std::allocator<std::_List_node<unsigned long,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_List_node<unsigned long,void *> > >
PUBLIC	??1?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@USSlot@CSlotWindow@UI@@PAX@std@@@std@@@std@@QAE@XZ ; std::_Alloc_construct_ptr<std::allocator<std::_List_node<UI::CSlotWindow::SSlot,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_List_node<UI::CSlotWindow::SSlot,void *> > >
PUBLIC	??$uninitialized_copy@PAPAKPAPAK@std@@YAPAPAKQAPAK0PAPAK@Z ; std::uninitialized_copy<unsigned long * *,unsigned long * *>
PUBLIC	??$_Uninitialized_value_construct_n_unchecked1@PAPAKI@std@@YAPAPAKPAPAKI@Z ; std::_Uninitialized_value_construct_n_unchecked1<unsigned long * *,unsigned int>
PUBLIC	??1?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@PAX@std@@@std@@@std@@QAE@XZ ; std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<unsigned long const ,UI::CSlotWindow::SStoreCoolDown>,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<unsigned long const ,UI::CSlotWindow::SStoreCoolDown>,void *> > >
PUBLIC	??$_Zero_range@PAPAK@std@@YAPAPAKQAPAK0@Z	; std::_Zero_range<unsigned long * *>
PUBLIC	??$_Copy_memmove@PAPAKPAPAK@std@@YAPAPAKPAPAK00@Z ; std::_Copy_memmove<unsigned long * *,unsigned long * *>
PUBLIC	??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@PAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@PAX@1@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,UI::CSlotWindow::SStoreCoolDown> > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<unsigned long const ,UI::CSlotWindow::SStoreCoolDown>,void *> > >
PUBLIC	?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA ; `__local_stdio_printf_options'::`2'::_OptionsStorage
PUBLIC	??_7exception@std@@6B@				; std::exception::`vftable'
PUBLIC	??_C@_0BC@EOODALEL@Unknown?5exception@		; `string'
PUBLIC	??_7bad_alloc@std@@6B@				; std::bad_alloc::`vftable'
PUBLIC	??_7bad_array_new_length@std@@6B@		; std::bad_array_new_length::`vftable'
PUBLIC	??_C@_0BF@KINCDENJ@bad?5array?5new?5length@	; `string'
PUBLIC	__TI3?AVbad_array_new_length@std@@
PUBLIC	__CTA3?AVbad_array_new_length@std@@
PUBLIC	??_R0?AVbad_array_new_length@std@@@8		; std::bad_array_new_length `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QAE@ABV01@@Z12
PUBLIC	??_R0?AVbad_alloc@std@@@8			; std::bad_alloc `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
PUBLIC	??_R0?AVexception@std@@@8			; std::exception `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
PUBLIC	??_C@_0BB@GCADKGJO@map?1set?5too?5long@		; `string'
PUBLIC	?ms_singleton@?$CSingleton@VCTimer@@@@0PAVCTimer@@A ; CSingleton<CTimer>::ms_singleton
PUBLIC	?ms_singleton@?$CSingleton@VCResourceManager@@@@0PAVCResourceManager@@A ; CSingleton<CResourceManager>::ms_singleton
PUBLIC	?ms_singleton@?$CSingleton@VCPythonGraphic@@@@0PAVCPythonGraphic@@A ; CSingleton<CPythonGraphic>::ms_singleton
PUBLIC	?ms_singleton@?$CSingleton@VCWindowManager@UI@@@@0PAVCWindowManager@UI@@A ; CSingleton<UI::CWindowManager>::ms_singleton
PUBLIC	??_R4exception@std@@6B@				; std::exception::`RTTI Complete Object Locator'
PUBLIC	??_R3exception@std@@8				; std::exception::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2exception@std@@8				; std::exception::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@exception@std@@8			; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4bad_alloc@std@@6B@				; std::bad_alloc::`RTTI Complete Object Locator'
PUBLIC	??_R3bad_alloc@std@@8				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2bad_alloc@std@@8				; std::bad_alloc::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@bad_alloc@std@@8			; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4bad_array_new_length@std@@6B@		; std::bad_array_new_length::`RTTI Complete Object Locator'
PUBLIC	??_R3bad_array_new_length@std@@8		; std::bad_array_new_length::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2bad_array_new_length@std@@8		; std::bad_array_new_length::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@bad_array_new_length@std@@8	; std::bad_array_new_length::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_7CSlotWindow@UI@@6B@				; UI::CSlotWindow::`vftable'
PUBLIC	??_7CSlotButton@CSlotWindow@UI@@6B@		; UI::CSlotWindow::CSlotButton::`vftable'
PUBLIC	??_7CCoverButton@CSlotWindow@UI@@6B@		; UI::CSlotWindow::CCoverButton::`vftable'
PUBLIC	??_7CCoolTimeFinishEffect@CSlotWindow@UI@@6B@	; UI::CSlotWindow::CCoolTimeFinishEffect::`vftable'
PUBLIC	??_C@_02DPKJAMEF@?$CFd@				; `string'
PUBLIC	??_C@_03CIOACFJF@m?$CFd@			; `string'
PUBLIC	??_C@_03EHFNMFPB@g?$CFd@			; `string'
PUBLIC	??_C@_01JBBJJEPG@p@				; `string'
PUBLIC	??_C@_03LIHNMIHG@?$CIi?$CJ@			; `string'
PUBLIC	??_C@_0BC@JJECHKOF@OnSelectEmptySlot@		; `string'
PUBLIC	??_C@_0BB@PFHJJJ@OnSelectItemSlot@		; `string'
PUBLIC	??_C@_0BE@GMADJAFC@OnUnselectEmptySlot@		; `string'
PUBLIC	??_C@_0BD@EONLJJMO@OnUnselectItemSlot@		; `string'
PUBLIC	??_C@_09HJIBPFCA@OnUseSlot@			; `string'
PUBLIC	??_C@_05HEIOBLPG@?$CIiii?$CJ@			; `string'
PUBLIC	??_C@_0N@CBOPEHFH@OnOverInItem@			; `string'
PUBLIC	??_C@_02HCKGKOFO@?$CI?$CJ@			; `string'
PUBLIC	??_C@_0O@IBCIPGEP@OnOverOutItem@		; `string'
PUBLIC	??_C@_0BE@MBGDMPNF@OnPressedSlotButton@		; `string'
PUBLIC	??_C@_0M@DKKKJBKL@CSlotWindow@			; `string'
PUBLIC	??_C@_0DI@PPHKLJOI@d?3?1ymir?5work?1ui?1public?1slotacti@ ; `string'
PUBLIC	??_C@_0CH@JJGPDFBJ@d?3?1ymir?5work?1ui?1public?1slot_tog@ ; `string'
PUBLIC	??_C@_0DF@FHBGNIHM@d?3?1ymir?5work?1ui?1public?1slotacti@ ; `string'
PUBLIC	??_C@_0DF@JMEKALNJ@d?3?1ymir?5work?1ui?1public?1slotacti@ ; `string'
PUBLIC	??_C@_0DF@BKNOHJHH@d?3?1ymir?5work?1ui?1public?1slotacti@ ; `string'
PUBLIC	??_C@_0DF@NBICKKNC@d?3?1ymir?5work?1ui?1public?1slotacti@ ; `string'
PUBLIC	??_C@_0DF@MMIHJKGK@d?3?1ymir?5work?1ui?1public?1slotacti@ ; `string'
PUBLIC	??_C@_0DF@HNLEJMP@d?3?1ymir?5work?1ui?1public?1slotacti@ ; `string'
PUBLIC	??_C@_0DF@IBEPDLGB@d?3?1ymir?5work?1ui?1public?1slotacti@ ; `string'
PUBLIC	??_C@_0DF@EKBDOIME@d?3?1ymir?5work?1ui?1public?1slotacti@ ; `string'
PUBLIC	??_C@_0DF@LLEFFKBB@d?3?1ymir?5work?1ui?1public?1slotacti@ ; `string'
PUBLIC	??_C@_0DF@HABJIJLE@d?3?1ymir?5work?1ui?1public?1slotacti@ ; `string'
PUBLIC	??_C@_0DF@PBGBNDMI@d?3?1ymir?5work?1ui?1public?1slotacti@ ; `string'
PUBLIC	??_C@_0DF@DKDNAAGN@d?3?1ymir?5work?1ui?1public?1slotacti@ ; `string'
PUBLIC	??_C@_0DF@LMKJHCMD@d?3?1ymir?5work?1ui?1public?1slotacti@ ; `string'
PUBLIC	??_C@_0DF@EAGNMMDP@d?3?1ymir?5work?1ui?1public?1slotacti@ ; `string'
PUBLIC	??_C@_0DF@ILDBBPJK@d?3?1ymir?5work?1ui?1public?1slotacti@ ; `string'
PUBLIC	??_C@_0DF@NKFGNDE@d?3?1ymir?5work?1ui?1public?1slotacti@ ; `string'
PUBLIC	??_C@_0DF@MGPJLOJB@d?3?1ymir?5work?1ui?1public?1slotacti@ ; `string'
PUBLIC	??_C@_0DF@NLPMIOCJ@d?3?1ymir?5work?1ui?1public?1slotacti@ ; `string'
PUBLIC	??_C@_0DF@BAKAFNIM@d?3?1ymir?5work?1ui?1public?1slotacti@ ; `string'
PUBLIC	??_C@_0DF@JGDECPCC@d?3?1ymir?5work?1ui?1public?1slotacti@ ; `string'
PUBLIC	??_C@_0DF@FNGIPMIH@d?3?1ymir?5work?1ui?1public?1slotacti@ ; `string'
PUBLIC	??_C@_0DF@KMDOEOFC@d?3?1ymir?5work?1ui?1public?1slotacti@ ; `string'
PUBLIC	??_C@_0DF@GHGCJNPH@d?3?1ymir?5work?1ui?1public?1slotacti@ ; `string'
PUBLIC	??_C@_0DF@OGBKMHIL@d?3?1ymir?5work?1ui?1public?1slotacti@ ; `string'
PUBLIC	??_C@_0DF@CNEGBECO@d?3?1ymir?5work?1ui?1public?1slotacti@ ; `string'
PUBLIC	??_C@_0DF@KLNCGGIA@d?3?1ymir?5work?1ui?1public?1slotacti@ ; `string'
PUBLIC	??_C@_0CP@LLEDDNBJ@d?3?1ymir?5work?1ui?1public?1slotacti@ ; `string'
PUBLIC	??_C@_0CP@HABPOOLM@d?3?1ymir?5work?1ui?1public?1slotacti@ ; `string'
PUBLIC	??_C@_0CP@PGILJMBC@d?3?1ymir?5work?1ui?1public?1slotacti@ ; `string'
PUBLIC	??_C@_0CP@DNNHEPLH@d?3?1ymir?5work?1ui?1public?1slotacti@ ; `string'
PUBLIC	??_C@_0CP@CANCHPAP@d?3?1ymir?5work?1ui?1public?1slotacti@ ; `string'
PUBLIC	??_C@_0CP@OLIOKMKK@d?3?1ymir?5work?1ui?1public?1slotacti@ ; `string'
PUBLIC	??_C@_0CP@GNBKNOAE@d?3?1ymir?5work?1ui?1public?1slotacti@ ; `string'
PUBLIC	??_C@_0CP@KGEGANKB@d?3?1ymir?5work?1ui?1public?1slotacti@ ; `string'
PUBLIC	??_C@_0CP@FHBALPHE@d?3?1ymir?5work?1ui?1public?1slotacti@ ; `string'
PUBLIC	??_C@_0CP@JMEMGMNB@d?3?1ymir?5work?1ui?1public?1slotacti@ ; `string'
PUBLIC	??_C@_0CP@BNDEDGKN@d?3?1ymir?5work?1ui?1public?1slotacti@ ; `string'
PUBLIC	??_C@_0CP@NGGIOFAI@d?3?1ymir?5work?1ui?1public?1slotacti@ ; `string'
PUBLIC	??_C@_0CP@FAPMJHKG@d?3?1ymir?5work?1ui?1public?1slotacti@ ; `string'
PUBLIC	??_C@_0DH@EECLJILE@d?3?1ymir?5work?1ui?1public?1slotfini@ ; `string'
PUBLIC	??_C@_0DH@IPHHELBB@d?3?1ymir?5work?1ui?1public?1slotfini@ ; `string'
PUBLIC	??_C@_0DH@JODDJLP@d?3?1ymir?5work?1ui?1public?1slotfini@ ; `string'
PUBLIC	??_C@_0DH@MCLPOKBK@d?3?1ymir?5work?1ui?1public?1slotfini@ ; `string'
PUBLIC	??_C@_0DH@NPLKNKKC@d?3?1ymir?5work?1ui?1public?1slotfini@ ; `string'
PUBLIC	??_C@_0DH@BEOGAJAH@d?3?1ymir?5work?1ui?1public?1slotfini@ ; `string'
PUBLIC	??_C@_0DH@JCHCHLKJ@d?3?1ymir?5work?1ui?1public?1slotfini@ ; `string'
PUBLIC	??_C@_0DH@FJCOKIAM@d?3?1ymir?5work?1ui?1public?1slotfini@ ; `string'
PUBLIC	??_C@_0DH@KIHIBKNJ@d?3?1ymir?5work?1ui?1public?1slotfini@ ; `string'
PUBLIC	??_C@_0DH@GDCEMJHM@d?3?1ymir?5work?1ui?1public?1slotfini@ ; `string'
PUBLIC	??_C@_0DH@OCFMJDAA@d?3?1ymir?5work?1ui?1public?1slotfini@ ; `string'
PUBLIC	??_C@_0O@NKNMEGII@list?5too?5long@		; `string'
PUBLIC	??_C@_0BC@KBDMBKEH@deque?$DMT?$DO?5too?5long@	; `string'
PUBLIC	??_R1A@?0A@EA@CWindow@UI@@8			; UI::CWindow::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVCWindow@UI@@@8				; UI::CWindow `RTTI Type Descriptor'
PUBLIC	??_R3CWindow@UI@@8				; UI::CWindow::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CWindow@UI@@8				; UI::CWindow::`RTTI Base Class Array'
PUBLIC	??_R4CSlotWindow@UI@@6B@			; UI::CSlotWindow::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCSlotWindow@UI@@@8			; UI::CSlotWindow `RTTI Type Descriptor'
PUBLIC	??_R3CSlotWindow@UI@@8				; UI::CSlotWindow::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CSlotWindow@UI@@8				; UI::CSlotWindow::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CSlotWindow@UI@@8			; UI::CSlotWindow::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4CSlotButton@CSlotWindow@UI@@6B@		; UI::CSlotWindow::CSlotButton::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCSlotButton@CSlotWindow@UI@@@8		; UI::CSlotWindow::CSlotButton `RTTI Type Descriptor'
PUBLIC	??_R3CSlotButton@CSlotWindow@UI@@8		; UI::CSlotWindow::CSlotButton::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CSlotButton@CSlotWindow@UI@@8		; UI::CSlotWindow::CSlotButton::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CSlotButton@CSlotWindow@UI@@8	; UI::CSlotWindow::CSlotButton::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@CButton@UI@@8			; UI::CButton::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVCButton@UI@@@8				; UI::CButton `RTTI Type Descriptor'
PUBLIC	??_R3CButton@UI@@8				; UI::CButton::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CButton@UI@@8				; UI::CButton::`RTTI Base Class Array'
PUBLIC	??_R4CCoverButton@CSlotWindow@UI@@6B@		; UI::CSlotWindow::CCoverButton::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCCoverButton@CSlotWindow@UI@@@8		; UI::CSlotWindow::CCoverButton `RTTI Type Descriptor'
PUBLIC	??_R3CCoverButton@CSlotWindow@UI@@8		; UI::CSlotWindow::CCoverButton::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CCoverButton@CSlotWindow@UI@@8		; UI::CSlotWindow::CCoverButton::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CCoverButton@CSlotWindow@UI@@8	; UI::CSlotWindow::CCoverButton::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4CCoolTimeFinishEffect@CSlotWindow@UI@@6B@	; UI::CSlotWindow::CCoolTimeFinishEffect::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCCoolTimeFinishEffect@CSlotWindow@UI@@@8 ; UI::CSlotWindow::CCoolTimeFinishEffect `RTTI Type Descriptor'
PUBLIC	??_R3CCoolTimeFinishEffect@CSlotWindow@UI@@8	; UI::CSlotWindow::CCoolTimeFinishEffect::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CCoolTimeFinishEffect@CSlotWindow@UI@@8	; UI::CSlotWindow::CCoolTimeFinishEffect::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CCoolTimeFinishEffect@CSlotWindow@UI@@8 ; UI::CSlotWindow::CCoolTimeFinishEffect::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@CAniImageBox@UI@@8		; UI::CAniImageBox::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVCAniImageBox@UI@@@8			; UI::CAniImageBox `RTTI Type Descriptor'
PUBLIC	??_R3CAniImageBox@UI@@8				; UI::CAniImageBox::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CAniImageBox@UI@@8				; UI::CAniImageBox::`RTTI Base Class Array'
PUBLIC	__real@00000000
PUBLIC	__real@3f800000
PUBLIC	__real@41800000
EXTRN	??2@YAPAXI@Z:PROC				; operator new
EXTRN	??3@YAXPAXI@Z:PROC				; operator delete
EXTRN	__Init_thread_header:PROC
EXTRN	__Init_thread_abort:PROC
EXTRN	__Init_thread_footer:PROC
EXTRN	__invalid_parameter_noinfo_noreturn:PROC
EXTRN	___stdio_common_vsprintf:PROC
EXTRN	___std_exception_copy:PROC
EXTRN	___std_exception_destroy:PROC
EXTRN	??_Eexception@std@@UAEPAXI@Z:PROC		; std::exception::`vector deleting destructor'
EXTRN	??_Ebad_alloc@std@@UAEPAXI@Z:PROC		; std::bad_alloc::`vector deleting destructor'
EXTRN	??_Ebad_array_new_length@std@@UAEPAXI@Z:PROC	; std::bad_array_new_length::`vector deleting destructor'
EXTRN	?_Xlength_error@std@@YAXPBD@Z:PROC		; std::_Xlength_error
EXTRN	__imp__Py_BuildValue:PROC
EXTRN	?PyCallClassMemberFunc@@YA_NPAU_object@@PBD0@Z:PROC ; PyCallClassMemberFunc
EXTRN	?GetCurrentSecond@CTimer@@QAEMXZ:PROC		; CTimer::GetCurrentSecond
EXTRN	?GetCRC32@@YAKPBDI@Z:PROC			; GetCRC32
EXTRN	?GetResourcePointer@CResourceManager@@QAEPAVCResource@@PBD@Z:PROC ; CResourceManager::GetResourcePointer
EXTRN	?Render@CGraphicImageInstance@@QAEXXZ:PROC	; CGraphicImageInstance::Render
EXTRN	?SetDiffuseColor@CGraphicImageInstance@@QAEXMMMM@Z:PROC ; CGraphicImageInstance::SetDiffuseColor
EXTRN	?SetPosition@CGraphicImageInstance@@QAEXMM@Z:PROC ; CGraphicImageInstance::SetPosition
EXTRN	?SetImagePointer@CGraphicImageInstance@@QAEXPAVCGraphicImage@@@Z:PROC ; CGraphicImageInstance::SetImagePointer
EXTRN	?SetScale@CGraphicImageInstance@@QAEXMM@Z:PROC	; CGraphicImageInstance::SetScale
EXTRN	?GetScale@CGraphicImageInstance@@QBEABUD3DXVECTOR2@@XZ:PROC ; CGraphicImageInstance::GetScale
EXTRN	?New@CGraphicImageInstance@@SAPAV1@XZ:PROC	; CGraphicImageInstance::New
EXTRN	?Delete@CGraphicImageInstance@@SAXPAV1@@Z:PROC	; CGraphicImageInstance::Delete
EXTRN	?RenderBar2d@CScreen@@QAEXMMMMM@Z:PROC		; CScreen::RenderBar2d
EXTRN	?SetDiffuseColor@CScreen@@QAEXMMMM@Z:PROC	; CScreen::SetDiffuseColor
EXTRN	?RenderCoolTimeBox@CPythonGraphic@@QAEXMMMMAAUD3DXCOLOR@@@Z:PROC ; CPythonGraphic::RenderCoolTimeBox
EXTRN	?RenderCoolTimeBoxInverse@CPythonGraphic@@QAEXMMMM@Z:PROC ; CPythonGraphic::RenderCoolTimeBoxInverse
EXTRN	?GetMousePosition@CWindowManager@UI@@QAEXAAJ0@Z:PROC ; UI::CWindowManager::GetMousePosition
EXTRN	?IsDragging@CWindowManager@UI@@QAEHXZ:PROC	; UI::CWindowManager::IsDragging
EXTRN	?SetParent@CWindowManager@UI@@QAEXPAVCWindow@2@0@Z:PROC ; UI::CWindowManager::SetParent
EXTRN	?DestroyWindow@CWindowManager@UI@@QAEXPAVCWindow@2@@Z:PROC ; UI::CWindowManager::DestroyWindow
EXTRN	?IsAttaching@CWindowManager@UI@@QAEHXZ:PROC	; UI::CWindowManager::IsAttaching
EXTRN	?DeattachIcon@CWindowManager@UI@@QAEXXZ:PROC	; UI::CWindowManager::DeattachIcon
EXTRN	?IsType@CWindow@UI@@QAEHK@Z:PROC		; UI::CWindow::IsType
EXTRN	??0CWindow@UI@@QAE@PAU_object@@@Z:PROC		; UI::CWindow::CWindow
EXTRN	??1CWindow@UI@@UAE@XZ:PROC			; UI::CWindow::~CWindow
EXTRN	?Update@CWindow@UI@@QAEXXZ:PROC			; UI::CWindow::Update
EXTRN	?Render@CWindow@UI@@QAEXXZ:PROC			; UI::CWindow::Render
EXTRN	?SetPosition@CWindow@UI@@QAEXJJ@Z:PROC		; UI::CWindow::SetPosition
EXTRN	?GetMouseLocalPosition@CWindow@UI@@QAEXAAJ0@Z:PROC ; UI::CWindow::GetMouseLocalPosition
EXTRN	?Show@CWindow@UI@@QAEXXZ:PROC			; UI::CWindow::Show
EXTRN	?Hide@CWindow@UI@@QAEXXZ:PROC			; UI::CWindow::Hide
EXTRN	?IsRendering@CWindow@UI@@QAE_NXZ:PROC		; UI::CWindow::IsRendering
EXTRN	?SetTop@CWindow@UI@@QAEXPAV12@@Z:PROC		; UI::CWindow::SetTop
EXTRN	?IsIn@CWindow@UI@@QAE_NXZ:PROC			; UI::CWindow::IsIn
EXTRN	?OnSetFocus@CWindow@UI@@UAEXXZ:PROC		; UI::CWindow::OnSetFocus
EXTRN	?OnKillFocus@CWindow@UI@@UAEXXZ:PROC		; UI::CWindow::OnKillFocus
EXTRN	?OnMouseDrag@CWindow@UI@@UAEXJJ@Z:PROC		; UI::CWindow::OnMouseDrag
EXTRN	?OnMouseOverIn@CWindow@UI@@UAEXXZ:PROC		; UI::CWindow::OnMouseOverIn
EXTRN	?OnMouseOverOut@CWindow@UI@@UAEXXZ:PROC		; UI::CWindow::OnMouseOverOut
EXTRN	?OnMouseOver@CWindow@UI@@UAEXXZ:PROC		; UI::CWindow::OnMouseOver
EXTRN	?OnDrop@CWindow@UI@@UAEXXZ:PROC			; UI::CWindow::OnDrop
EXTRN	?OnTop@CWindow@UI@@UAEXXZ:PROC			; UI::CWindow::OnTop
EXTRN	?OnIMEUpdate@CWindow@UI@@UAEXXZ:PROC		; UI::CWindow::OnIMEUpdate
EXTRN	?OnMoveWindow@CWindow@UI@@UAEXJJ@Z:PROC		; UI::CWindow::OnMoveWindow
EXTRN	?OnIMETabEvent@CWindow@UI@@UAEHXZ:PROC		; UI::CWindow::OnIMETabEvent
EXTRN	?OnIMEReturnEvent@CWindow@UI@@UAEHXZ:PROC	; UI::CWindow::OnIMEReturnEvent
EXTRN	?OnIMEKeyDownEvent@CWindow@UI@@UAEHH@Z:PROC	; UI::CWindow::OnIMEKeyDownEvent
EXTRN	?OnIMEChangeCodePage@CWindow@UI@@UAEHXZ:PROC	; UI::CWindow::OnIMEChangeCodePage
EXTRN	?OnIMEOpenCandidateListEvent@CWindow@UI@@UAEHXZ:PROC ; UI::CWindow::OnIMEOpenCandidateListEvent
EXTRN	?OnIMECloseCandidateListEvent@CWindow@UI@@UAEHXZ:PROC ; UI::CWindow::OnIMECloseCandidateListEvent
EXTRN	?OnIMEOpenReadingWndEvent@CWindow@UI@@UAEHXZ:PROC ; UI::CWindow::OnIMEOpenReadingWndEvent
EXTRN	?OnIMECloseReadingWndEvent@CWindow@UI@@UAEHXZ:PROC ; UI::CWindow::OnIMECloseReadingWndEvent
EXTRN	?OnMouseLeftButtonDown@CWindow@UI@@UAEHXZ:PROC	; UI::CWindow::OnMouseLeftButtonDown
EXTRN	?OnMouseLeftButtonUp@CWindow@UI@@UAEHXZ:PROC	; UI::CWindow::OnMouseLeftButtonUp
EXTRN	?OnMouseLeftButtonDoubleClick@CWindow@UI@@UAEHXZ:PROC ; UI::CWindow::OnMouseLeftButtonDoubleClick
EXTRN	?OnMouseRightButtonDown@CWindow@UI@@UAEHXZ:PROC	; UI::CWindow::OnMouseRightButtonDown
EXTRN	?OnMouseRightButtonUp@CWindow@UI@@UAEHXZ:PROC	; UI::CWindow::OnMouseRightButtonUp
EXTRN	?OnMouseRightButtonDoubleClick@CWindow@UI@@UAEHXZ:PROC ; UI::CWindow::OnMouseRightButtonDoubleClick
EXTRN	?OnMouseMiddleButtonDown@CWindow@UI@@UAEHXZ:PROC ; UI::CWindow::OnMouseMiddleButtonDown
EXTRN	?OnMouseMiddleButtonUp@CWindow@UI@@UAEHXZ:PROC	; UI::CWindow::OnMouseMiddleButtonUp
EXTRN	?RunMouseWheelEvent@CWindow@UI@@UAEHJ@Z:PROC	; UI::CWindow::RunMouseWheelEvent
EXTRN	?OnMouseWheelScroll@CWindow@UI@@UAEHF@Z:PROC	; UI::CWindow::OnMouseWheelScroll
EXTRN	?SetScrollable@CWindow@UI@@UAEXXZ:PROC		; UI::CWindow::SetScrollable
EXTRN	?OnKeyDown@CWindow@UI@@UAEHH@Z:PROC		; UI::CWindow::OnKeyDown
EXTRN	?OnKeyUp@CWindow@UI@@UAEHH@Z:PROC		; UI::CWindow::OnKeyUp
EXTRN	?OnPressEscapeKey@CWindow@UI@@UAEHXZ:PROC	; UI::CWindow::OnPressEscapeKey
EXTRN	?OnPressExitKey@CWindow@UI@@UAEHXZ:PROC		; UI::CWindow::OnPressExitKey
EXTRN	?OnIsType@CWindow@UI@@UAEHK@Z:PROC		; UI::CWindow::OnIsType
EXTRN	??0CNumberLine@UI@@QAE@PAVCWindow@1@@Z:PROC	; UI::CNumberLine::CNumberLine
EXTRN	?SetHorizontalAlign@CNumberLine@UI@@QAEXH@Z:PROC ; UI::CNumberLine::SetHorizontalAlign
EXTRN	?SetNumber@CNumberLine@UI@@QAEXPBD@Z:PROC	; UI::CNumberLine::SetNumber
EXTRN	??0CImageBox@UI@@QAE@PAU_object@@@Z:PROC	; UI::CImageBox::CImageBox
EXTRN	?LoadImageA@CImageBox@UI@@QAEHPBD@Z:PROC	; UI::CImageBox::LoadImageA
EXTRN	??0CAniImageBox@UI@@QAE@PAU_object@@@Z:PROC	; UI::CAniImageBox::CAniImageBox
EXTRN	??1CAniImageBox@UI@@UAE@XZ:PROC			; UI::CAniImageBox::~CAniImageBox
EXTRN	?SetDelay@CAniImageBox@UI@@QAEXH@Z:PROC		; UI::CAniImageBox::SetDelay
EXTRN	?AppendImage@CAniImageBox@UI@@QAEXPBDMMMM@Z:PROC ; UI::CAniImageBox::AppendImage
EXTRN	?SetRenderingMode@CAniImageBox@UI@@QAEXH@Z:PROC	; UI::CAniImageBox::SetRenderingMode
EXTRN	?ResetFrame@CAniImageBox@UI@@QAEXXZ:PROC	; UI::CAniImageBox::ResetFrame
EXTRN	?OnUpdate@CAniImageBox@UI@@MAEXXZ:PROC		; UI::CAniImageBox::OnUpdate
EXTRN	?OnRender@CAniImageBox@UI@@MAEXXZ:PROC		; UI::CAniImageBox::OnRender
EXTRN	?OnChangePosition@CAniImageBox@UI@@MAEXXZ:PROC	; UI::CAniImageBox::OnChangePosition
EXTRN	?OnIsType@CAniImageBox@UI@@MAEHK@Z:PROC		; UI::CAniImageBox::OnIsType
EXTRN	??0CButton@UI@@QAE@PAU_object@@@Z:PROC		; UI::CButton::CButton
EXTRN	??1CButton@UI@@UAE@XZ:PROC			; UI::CButton::~CButton
EXTRN	?SetUpVisual@CButton@UI@@QAEHPBD@Z:PROC		; UI::CButton::SetUpVisual
EXTRN	?SetOverVisual@CButton@UI@@QAEHPBD@Z:PROC	; UI::CButton::SetOverVisual
EXTRN	?SetDownVisual@CButton@UI@@QAEHPBD@Z:PROC	; UI::CButton::SetDownVisual
EXTRN	?SetDisableVisual@CButton@UI@@QAEHPBD@Z:PROC	; UI::CButton::SetDisableVisual
EXTRN	?Enable@CButton@UI@@QAEXXZ:PROC			; UI::CButton::Enable
EXTRN	?Disable@CButton@UI@@QAEXXZ:PROC		; UI::CButton::Disable
EXTRN	?SetUp@CButton@UI@@QAEXXZ:PROC			; UI::CButton::SetUp
EXTRN	?Down@CButton@UI@@QAEXXZ:PROC			; UI::CButton::Down
EXTRN	?IsDisable@CButton@UI@@QAEHXZ:PROC		; UI::CButton::IsDisable
EXTRN	?IsPressed@CButton@UI@@QAEHXZ:PROC		; UI::CButton::IsPressed
EXTRN	?SetScale@CButton@UI@@QAEXMM@Z:PROC		; UI::CButton::SetScale
EXTRN	?OnUpdate@CButton@UI@@MAEXXZ:PROC		; UI::CButton::OnUpdate
EXTRN	?OnRender@CButton@UI@@MAEXXZ:PROC		; UI::CButton::OnRender
EXTRN	?OnChangePosition@CButton@UI@@MAEXXZ:PROC	; UI::CButton::OnChangePosition
EXTRN	?OnMouseLeftButtonDown@CButton@UI@@MAEHXZ:PROC	; UI::CButton::OnMouseLeftButtonDown
EXTRN	?OnMouseLeftButtonDoubleClick@CButton@UI@@MAEHXZ:PROC ; UI::CButton::OnMouseLeftButtonDoubleClick
EXTRN	?OnMouseLeftButtonUp@CButton@UI@@MAEHXZ:PROC	; UI::CButton::OnMouseLeftButtonUp
EXTRN	?IsEnable@CButton@UI@@IAEHXZ:PROC		; UI::CButton::IsEnable
EXTRN	?SetCurrentVisual@CButton@UI@@IAEXPAVCGraphicImageInstance@@@Z:PROC ; UI::CButton::SetCurrentVisual
EXTRN	??_ECSlotWindow@UI@@UAEPAXI@Z:PROC		; UI::CSlotWindow::`vector deleting destructor'
EXTRN	??_ECSlotButton@CSlotWindow@UI@@UAEPAXI@Z:PROC	; UI::CSlotWindow::CSlotButton::`vector deleting destructor'
EXTRN	??_ECCoverButton@CSlotWindow@UI@@UAEPAXI@Z:PROC	; UI::CSlotWindow::CCoverButton::`vector deleting destructor'
EXTRN	??_ECCoolTimeFinishEffect@CSlotWindow@UI@@UAEPAXI@Z:PROC ; UI::CSlotWindow::CCoolTimeFinishEffect::`vector deleting destructor'
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__CxxThrowException@8:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	_memmove:PROC
EXTRN	_memset:PROC
EXTRN	__Init_thread_epoch:DWORD
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	___security_cookie:DWORD
EXTRN	__fltused:DWORD
EXTRN	__tls_array:DWORD
EXTRN	__tls_index:DWORD
;	COMDAT ?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA
_BSS	SEGMENT
?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA DQ 01H DUP (?) ; `__local_stdio_printf_options'::`2'::_OptionsStorage
_BSS	ENDS
;	COMDAT ?ms_singleton@?$CSingleton@VCTimer@@@@0PAVCTimer@@A
_BSS	SEGMENT
?ms_singleton@?$CSingleton@VCTimer@@@@0PAVCTimer@@A DD 01H DUP (?) ; CSingleton<CTimer>::ms_singleton
_BSS	ENDS
;	COMDAT ?ms_singleton@?$CSingleton@VCResourceManager@@@@0PAVCResourceManager@@A
_BSS	SEGMENT
?ms_singleton@?$CSingleton@VCResourceManager@@@@0PAVCResourceManager@@A DD 01H DUP (?) ; CSingleton<CResourceManager>::ms_singleton
_BSS	ENDS
;	COMDAT ?ms_singleton@?$CSingleton@VCPythonGraphic@@@@0PAVCPythonGraphic@@A
_BSS	SEGMENT
?ms_singleton@?$CSingleton@VCPythonGraphic@@@@0PAVCPythonGraphic@@A DD 01H DUP (?) ; CSingleton<CPythonGraphic>::ms_singleton
_BSS	ENDS
;	COMDAT ?ms_singleton@?$CSingleton@VCWindowManager@UI@@@@0PAVCWindowManager@UI@@A
_BSS	SEGMENT
?ms_singleton@?$CSingleton@VCWindowManager@UI@@@@0PAVCWindowManager@UI@@A DD 01H DUP (?) ; CSingleton<UI::CWindowManager>::ms_singleton
_BSS	ENDS
;	COMDAT ?s_Type@?1??Type@CSlotWindow@UI@@SAKXZ@4HA
_BSS	SEGMENT
?s_Type@?1??Type@CSlotWindow@UI@@SAKXZ@4HA DD 01H DUP (?) ; `UI::CSlotWindow::Type'::`2'::s_Type
_BSS	ENDS
;	COMDAT ?$TSS0@?1??Type@CSlotWindow@UI@@SAKXZ@4HA
_BSS	SEGMENT
?$TSS0@?1??Type@CSlotWindow@UI@@SAKXZ@4HA DD 01H DUP (?) ; `UI::CSlotWindow::Type'::`2'::$TSS0
_BSS	ENDS
;	COMDAT __real@41800000
CONST	SEGMENT
__real@41800000 DD 041800000r			; 16
CONST	ENDS
;	COMDAT __real@3f800000
CONST	SEGMENT
__real@3f800000 DD 03f800000r			; 1
CONST	ENDS
;	COMDAT __real@00000000
CONST	SEGMENT
__real@00000000 DD 000000000r			; 0
CONST	ENDS
;	COMDAT ??_R2CAniImageBox@UI@@8
rdata$r	SEGMENT
??_R2CAniImageBox@UI@@8 DD FLAT:??_R1A@?0A@EA@CAniImageBox@UI@@8 ; UI::CAniImageBox::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CWindow@UI@@8
rdata$r	ENDS
;	COMDAT ??_R3CAniImageBox@UI@@8
rdata$r	SEGMENT
??_R3CAniImageBox@UI@@8 DD 00H				; UI::CAniImageBox::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2CAniImageBox@UI@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCAniImageBox@UI@@@8
data$rs	SEGMENT
??_R0?AVCAniImageBox@UI@@@8 DD FLAT:??_7type_info@@6B@	; UI::CAniImageBox `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCAniImageBox@UI@@', 00H
data$rs	ENDS
;	COMDAT ??_R1A@?0A@EA@CAniImageBox@UI@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CAniImageBox@UI@@8 DD FLAT:??_R0?AVCAniImageBox@UI@@@8 ; UI::CAniImageBox::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CAniImageBox@UI@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CCoolTimeFinishEffect@CSlotWindow@UI@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CCoolTimeFinishEffect@CSlotWindow@UI@@8 DD FLAT:??_R0?AVCCoolTimeFinishEffect@CSlotWindow@UI@@@8 ; UI::CSlotWindow::CCoolTimeFinishEffect::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CCoolTimeFinishEffect@CSlotWindow@UI@@8
rdata$r	ENDS
;	COMDAT ??_R2CCoolTimeFinishEffect@CSlotWindow@UI@@8
rdata$r	SEGMENT
??_R2CCoolTimeFinishEffect@CSlotWindow@UI@@8 DD FLAT:??_R1A@?0A@EA@CCoolTimeFinishEffect@CSlotWindow@UI@@8 ; UI::CSlotWindow::CCoolTimeFinishEffect::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CAniImageBox@UI@@8
	DD	FLAT:??_R1A@?0A@EA@CWindow@UI@@8
rdata$r	ENDS
;	COMDAT ??_R3CCoolTimeFinishEffect@CSlotWindow@UI@@8
rdata$r	SEGMENT
??_R3CCoolTimeFinishEffect@CSlotWindow@UI@@8 DD 00H	; UI::CSlotWindow::CCoolTimeFinishEffect::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2CCoolTimeFinishEffect@CSlotWindow@UI@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCCoolTimeFinishEffect@CSlotWindow@UI@@@8
data$rs	SEGMENT
??_R0?AVCCoolTimeFinishEffect@CSlotWindow@UI@@@8 DD FLAT:??_7type_info@@6B@ ; UI::CSlotWindow::CCoolTimeFinishEffect `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCCoolTimeFinishEffect@CSlotWindow@UI@@', 00H
data$rs	ENDS
;	COMDAT ??_R4CCoolTimeFinishEffect@CSlotWindow@UI@@6B@
rdata$r	SEGMENT
??_R4CCoolTimeFinishEffect@CSlotWindow@UI@@6B@ DD 00H	; UI::CSlotWindow::CCoolTimeFinishEffect::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCCoolTimeFinishEffect@CSlotWindow@UI@@@8
	DD	FLAT:??_R3CCoolTimeFinishEffect@CSlotWindow@UI@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CCoverButton@CSlotWindow@UI@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CCoverButton@CSlotWindow@UI@@8 DD FLAT:??_R0?AVCCoverButton@CSlotWindow@UI@@@8 ; UI::CSlotWindow::CCoverButton::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CCoverButton@CSlotWindow@UI@@8
rdata$r	ENDS
;	COMDAT ??_R2CCoverButton@CSlotWindow@UI@@8
rdata$r	SEGMENT
??_R2CCoverButton@CSlotWindow@UI@@8 DD FLAT:??_R1A@?0A@EA@CCoverButton@CSlotWindow@UI@@8 ; UI::CSlotWindow::CCoverButton::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CSlotButton@CSlotWindow@UI@@8
	DD	FLAT:??_R1A@?0A@EA@CButton@UI@@8
	DD	FLAT:??_R1A@?0A@EA@CWindow@UI@@8
rdata$r	ENDS
;	COMDAT ??_R3CCoverButton@CSlotWindow@UI@@8
rdata$r	SEGMENT
??_R3CCoverButton@CSlotWindow@UI@@8 DD 00H		; UI::CSlotWindow::CCoverButton::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	FLAT:??_R2CCoverButton@CSlotWindow@UI@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCCoverButton@CSlotWindow@UI@@@8
data$rs	SEGMENT
??_R0?AVCCoverButton@CSlotWindow@UI@@@8 DD FLAT:??_7type_info@@6B@ ; UI::CSlotWindow::CCoverButton `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCCoverButton@CSlotWindow@UI@@', 00H
data$rs	ENDS
;	COMDAT ??_R4CCoverButton@CSlotWindow@UI@@6B@
rdata$r	SEGMENT
??_R4CCoverButton@CSlotWindow@UI@@6B@ DD 00H		; UI::CSlotWindow::CCoverButton::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCCoverButton@CSlotWindow@UI@@@8
	DD	FLAT:??_R3CCoverButton@CSlotWindow@UI@@8
rdata$r	ENDS
;	COMDAT ??_R2CButton@UI@@8
rdata$r	SEGMENT
??_R2CButton@UI@@8 DD FLAT:??_R1A@?0A@EA@CButton@UI@@8	; UI::CButton::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CWindow@UI@@8
rdata$r	ENDS
;	COMDAT ??_R3CButton@UI@@8
rdata$r	SEGMENT
??_R3CButton@UI@@8 DD 00H				; UI::CButton::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2CButton@UI@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCButton@UI@@@8
data$rs	SEGMENT
??_R0?AVCButton@UI@@@8 DD FLAT:??_7type_info@@6B@	; UI::CButton `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCButton@UI@@', 00H
data$rs	ENDS
;	COMDAT ??_R1A@?0A@EA@CButton@UI@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CButton@UI@@8 DD FLAT:??_R0?AVCButton@UI@@@8 ; UI::CButton::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CButton@UI@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CSlotButton@CSlotWindow@UI@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CSlotButton@CSlotWindow@UI@@8 DD FLAT:??_R0?AVCSlotButton@CSlotWindow@UI@@@8 ; UI::CSlotWindow::CSlotButton::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CSlotButton@CSlotWindow@UI@@8
rdata$r	ENDS
;	COMDAT ??_R2CSlotButton@CSlotWindow@UI@@8
rdata$r	SEGMENT
??_R2CSlotButton@CSlotWindow@UI@@8 DD FLAT:??_R1A@?0A@EA@CSlotButton@CSlotWindow@UI@@8 ; UI::CSlotWindow::CSlotButton::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CButton@UI@@8
	DD	FLAT:??_R1A@?0A@EA@CWindow@UI@@8
rdata$r	ENDS
;	COMDAT ??_R3CSlotButton@CSlotWindow@UI@@8
rdata$r	SEGMENT
??_R3CSlotButton@CSlotWindow@UI@@8 DD 00H		; UI::CSlotWindow::CSlotButton::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2CSlotButton@CSlotWindow@UI@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCSlotButton@CSlotWindow@UI@@@8
data$rs	SEGMENT
??_R0?AVCSlotButton@CSlotWindow@UI@@@8 DD FLAT:??_7type_info@@6B@ ; UI::CSlotWindow::CSlotButton `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCSlotButton@CSlotWindow@UI@@', 00H
data$rs	ENDS
;	COMDAT ??_R4CSlotButton@CSlotWindow@UI@@6B@
rdata$r	SEGMENT
??_R4CSlotButton@CSlotWindow@UI@@6B@ DD 00H		; UI::CSlotWindow::CSlotButton::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCSlotButton@CSlotWindow@UI@@@8
	DD	FLAT:??_R3CSlotButton@CSlotWindow@UI@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CSlotWindow@UI@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CSlotWindow@UI@@8 DD FLAT:??_R0?AVCSlotWindow@UI@@@8 ; UI::CSlotWindow::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CSlotWindow@UI@@8
rdata$r	ENDS
;	COMDAT ??_R2CSlotWindow@UI@@8
rdata$r	SEGMENT
??_R2CSlotWindow@UI@@8 DD FLAT:??_R1A@?0A@EA@CSlotWindow@UI@@8 ; UI::CSlotWindow::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CWindow@UI@@8
rdata$r	ENDS
;	COMDAT ??_R3CSlotWindow@UI@@8
rdata$r	SEGMENT
??_R3CSlotWindow@UI@@8 DD 00H				; UI::CSlotWindow::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2CSlotWindow@UI@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCSlotWindow@UI@@@8
data$rs	SEGMENT
??_R0?AVCSlotWindow@UI@@@8 DD FLAT:??_7type_info@@6B@	; UI::CSlotWindow `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCSlotWindow@UI@@', 00H
data$rs	ENDS
;	COMDAT ??_R4CSlotWindow@UI@@6B@
rdata$r	SEGMENT
??_R4CSlotWindow@UI@@6B@ DD 00H				; UI::CSlotWindow::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCSlotWindow@UI@@@8
	DD	FLAT:??_R3CSlotWindow@UI@@8
rdata$r	ENDS
;	COMDAT ??_R2CWindow@UI@@8
rdata$r	SEGMENT
??_R2CWindow@UI@@8 DD FLAT:??_R1A@?0A@EA@CWindow@UI@@8	; UI::CWindow::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3CWindow@UI@@8
rdata$r	SEGMENT
??_R3CWindow@UI@@8 DD 00H				; UI::CWindow::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2CWindow@UI@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCWindow@UI@@@8
data$rs	SEGMENT
??_R0?AVCWindow@UI@@@8 DD FLAT:??_7type_info@@6B@	; UI::CWindow `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCWindow@UI@@', 00H
data$rs	ENDS
;	COMDAT ??_R1A@?0A@EA@CWindow@UI@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CWindow@UI@@8 DD FLAT:??_R0?AVCWindow@UI@@@8 ; UI::CWindow::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CWindow@UI@@8
rdata$r	ENDS
;	COMDAT ??_C@_0BC@KBDMBKEH@deque?$DMT?$DO?5too?5long@
CONST	SEGMENT
??_C@_0BC@KBDMBKEH@deque?$DMT?$DO?5too?5long@ DB 'deque<T> too long', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@NKNMEGII@list?5too?5long@
CONST	SEGMENT
??_C@_0O@NKNMEGII@list?5too?5long@ DB 'list too long', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DH@OCFMJDAA@d?3?1ymir?5work?1ui?1public?1slotfini@
CONST	SEGMENT
??_C@_0DH@OCFMJDAA@d?3?1ymir?5work?1ui?1public?1slotfini@ DB 'd:/ymir wor'
	DB	'k/ui/public/slotfinishcooltimeeffect/10.sub', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DH@GDCEMJHM@d?3?1ymir?5work?1ui?1public?1slotfini@
CONST	SEGMENT
??_C@_0DH@GDCEMJHM@d?3?1ymir?5work?1ui?1public?1slotfini@ DB 'd:/ymir wor'
	DB	'k/ui/public/slotfinishcooltimeeffect/09.sub', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DH@KIHIBKNJ@d?3?1ymir?5work?1ui?1public?1slotfini@
CONST	SEGMENT
??_C@_0DH@KIHIBKNJ@d?3?1ymir?5work?1ui?1public?1slotfini@ DB 'd:/ymir wor'
	DB	'k/ui/public/slotfinishcooltimeeffect/08.sub', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DH@FJCOKIAM@d?3?1ymir?5work?1ui?1public?1slotfini@
CONST	SEGMENT
??_C@_0DH@FJCOKIAM@d?3?1ymir?5work?1ui?1public?1slotfini@ DB 'd:/ymir wor'
	DB	'k/ui/public/slotfinishcooltimeeffect/07.sub', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DH@JCHCHLKJ@d?3?1ymir?5work?1ui?1public?1slotfini@
CONST	SEGMENT
??_C@_0DH@JCHCHLKJ@d?3?1ymir?5work?1ui?1public?1slotfini@ DB 'd:/ymir wor'
	DB	'k/ui/public/slotfinishcooltimeeffect/06.sub', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DH@BEOGAJAH@d?3?1ymir?5work?1ui?1public?1slotfini@
CONST	SEGMENT
??_C@_0DH@BEOGAJAH@d?3?1ymir?5work?1ui?1public?1slotfini@ DB 'd:/ymir wor'
	DB	'k/ui/public/slotfinishcooltimeeffect/05.sub', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DH@NPLKNKKC@d?3?1ymir?5work?1ui?1public?1slotfini@
CONST	SEGMENT
??_C@_0DH@NPLKNKKC@d?3?1ymir?5work?1ui?1public?1slotfini@ DB 'd:/ymir wor'
	DB	'k/ui/public/slotfinishcooltimeeffect/04.sub', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DH@MCLPOKBK@d?3?1ymir?5work?1ui?1public?1slotfini@
CONST	SEGMENT
??_C@_0DH@MCLPOKBK@d?3?1ymir?5work?1ui?1public?1slotfini@ DB 'd:/ymir wor'
	DB	'k/ui/public/slotfinishcooltimeeffect/03.sub', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DH@JODDJLP@d?3?1ymir?5work?1ui?1public?1slotfini@
CONST	SEGMENT
??_C@_0DH@JODDJLP@d?3?1ymir?5work?1ui?1public?1slotfini@ DB 'd:/ymir work'
	DB	'/ui/public/slotfinishcooltimeeffect/02.sub', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DH@IPHHELBB@d?3?1ymir?5work?1ui?1public?1slotfini@
CONST	SEGMENT
??_C@_0DH@IPHHELBB@d?3?1ymir?5work?1ui?1public?1slotfini@ DB 'd:/ymir wor'
	DB	'k/ui/public/slotfinishcooltimeeffect/01.sub', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DH@EECLJILE@d?3?1ymir?5work?1ui?1public?1slotfini@
CONST	SEGMENT
??_C@_0DH@EECLJILE@d?3?1ymir?5work?1ui?1public?1slotfini@ DB 'd:/ymir wor'
	DB	'k/ui/public/slotfinishcooltimeeffect/00.sub', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CP@FAPMJHKG@d?3?1ymir?5work?1ui?1public?1slotacti@
CONST	SEGMENT
??_C@_0CP@FAPMJHKG@d?3?1ymir?5work?1ui?1public?1slotacti@ DB 'd:/ymir wor'
	DB	'k/ui/public/slotactiveeffect/12.sub', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CP@NGGIOFAI@d?3?1ymir?5work?1ui?1public?1slotacti@
CONST	SEGMENT
??_C@_0CP@NGGIOFAI@d?3?1ymir?5work?1ui?1public?1slotacti@ DB 'd:/ymir wor'
	DB	'k/ui/public/slotactiveeffect/11.sub', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CP@BNDEDGKN@d?3?1ymir?5work?1ui?1public?1slotacti@
CONST	SEGMENT
??_C@_0CP@BNDEDGKN@d?3?1ymir?5work?1ui?1public?1slotacti@ DB 'd:/ymir wor'
	DB	'k/ui/public/slotactiveeffect/10.sub', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CP@JMEMGMNB@d?3?1ymir?5work?1ui?1public?1slotacti@
CONST	SEGMENT
??_C@_0CP@JMEMGMNB@d?3?1ymir?5work?1ui?1public?1slotacti@ DB 'd:/ymir wor'
	DB	'k/ui/public/slotactiveeffect/09.sub', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CP@FHBALPHE@d?3?1ymir?5work?1ui?1public?1slotacti@
CONST	SEGMENT
??_C@_0CP@FHBALPHE@d?3?1ymir?5work?1ui?1public?1slotacti@ DB 'd:/ymir wor'
	DB	'k/ui/public/slotactiveeffect/08.sub', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CP@KGEGANKB@d?3?1ymir?5work?1ui?1public?1slotacti@
CONST	SEGMENT
??_C@_0CP@KGEGANKB@d?3?1ymir?5work?1ui?1public?1slotacti@ DB 'd:/ymir wor'
	DB	'k/ui/public/slotactiveeffect/07.sub', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CP@GNBKNOAE@d?3?1ymir?5work?1ui?1public?1slotacti@
CONST	SEGMENT
??_C@_0CP@GNBKNOAE@d?3?1ymir?5work?1ui?1public?1slotacti@ DB 'd:/ymir wor'
	DB	'k/ui/public/slotactiveeffect/06.sub', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CP@OLIOKMKK@d?3?1ymir?5work?1ui?1public?1slotacti@
CONST	SEGMENT
??_C@_0CP@OLIOKMKK@d?3?1ymir?5work?1ui?1public?1slotacti@ DB 'd:/ymir wor'
	DB	'k/ui/public/slotactiveeffect/05.sub', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CP@CANCHPAP@d?3?1ymir?5work?1ui?1public?1slotacti@
CONST	SEGMENT
??_C@_0CP@CANCHPAP@d?3?1ymir?5work?1ui?1public?1slotacti@ DB 'd:/ymir wor'
	DB	'k/ui/public/slotactiveeffect/04.sub', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CP@DNNHEPLH@d?3?1ymir?5work?1ui?1public?1slotacti@
CONST	SEGMENT
??_C@_0CP@DNNHEPLH@d?3?1ymir?5work?1ui?1public?1slotacti@ DB 'd:/ymir wor'
	DB	'k/ui/public/slotactiveeffect/03.sub', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CP@PGILJMBC@d?3?1ymir?5work?1ui?1public?1slotacti@
CONST	SEGMENT
??_C@_0CP@PGILJMBC@d?3?1ymir?5work?1ui?1public?1slotacti@ DB 'd:/ymir wor'
	DB	'k/ui/public/slotactiveeffect/02.sub', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CP@HABPOOLM@d?3?1ymir?5work?1ui?1public?1slotacti@
CONST	SEGMENT
??_C@_0CP@HABPOOLM@d?3?1ymir?5work?1ui?1public?1slotacti@ DB 'd:/ymir wor'
	DB	'k/ui/public/slotactiveeffect/01.sub', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CP@LLEDDNBJ@d?3?1ymir?5work?1ui?1public?1slotacti@
CONST	SEGMENT
??_C@_0CP@LLEDDNBJ@d?3?1ymir?5work?1ui?1public?1slotacti@ DB 'd:/ymir wor'
	DB	'k/ui/public/slotactiveeffect/00.sub', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0DF@KLNCGGIA@d?3?1ymir?5work?1ui?1public?1slotacti@
CONST	SEGMENT
??_C@_0DF@KLNCGGIA@d?3?1ymir?5work?1ui?1public?1slotacti@ DB 'd:/ymir wor'
	DB	'k/ui/public/slotactiveeffect/slot3/12.sub', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DF@CNEGBECO@d?3?1ymir?5work?1ui?1public?1slotacti@
CONST	SEGMENT
??_C@_0DF@CNEGBECO@d?3?1ymir?5work?1ui?1public?1slotacti@ DB 'd:/ymir wor'
	DB	'k/ui/public/slotactiveeffect/slot3/11.sub', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DF@OGBKMHIL@d?3?1ymir?5work?1ui?1public?1slotacti@
CONST	SEGMENT
??_C@_0DF@OGBKMHIL@d?3?1ymir?5work?1ui?1public?1slotacti@ DB 'd:/ymir wor'
	DB	'k/ui/public/slotactiveeffect/slot3/10.sub', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DF@GHGCJNPH@d?3?1ymir?5work?1ui?1public?1slotacti@
CONST	SEGMENT
??_C@_0DF@GHGCJNPH@d?3?1ymir?5work?1ui?1public?1slotacti@ DB 'd:/ymir wor'
	DB	'k/ui/public/slotactiveeffect/slot3/09.sub', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DF@KMDOEOFC@d?3?1ymir?5work?1ui?1public?1slotacti@
CONST	SEGMENT
??_C@_0DF@KMDOEOFC@d?3?1ymir?5work?1ui?1public?1slotacti@ DB 'd:/ymir wor'
	DB	'k/ui/public/slotactiveeffect/slot3/08.sub', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DF@FNGIPMIH@d?3?1ymir?5work?1ui?1public?1slotacti@
CONST	SEGMENT
??_C@_0DF@FNGIPMIH@d?3?1ymir?5work?1ui?1public?1slotacti@ DB 'd:/ymir wor'
	DB	'k/ui/public/slotactiveeffect/slot3/07.sub', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DF@JGDECPCC@d?3?1ymir?5work?1ui?1public?1slotacti@
CONST	SEGMENT
??_C@_0DF@JGDECPCC@d?3?1ymir?5work?1ui?1public?1slotacti@ DB 'd:/ymir wor'
	DB	'k/ui/public/slotactiveeffect/slot3/06.sub', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DF@BAKAFNIM@d?3?1ymir?5work?1ui?1public?1slotacti@
CONST	SEGMENT
??_C@_0DF@BAKAFNIM@d?3?1ymir?5work?1ui?1public?1slotacti@ DB 'd:/ymir wor'
	DB	'k/ui/public/slotactiveeffect/slot3/05.sub', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DF@NLPMIOCJ@d?3?1ymir?5work?1ui?1public?1slotacti@
CONST	SEGMENT
??_C@_0DF@NLPMIOCJ@d?3?1ymir?5work?1ui?1public?1slotacti@ DB 'd:/ymir wor'
	DB	'k/ui/public/slotactiveeffect/slot3/04.sub', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DF@MGPJLOJB@d?3?1ymir?5work?1ui?1public?1slotacti@
CONST	SEGMENT
??_C@_0DF@MGPJLOJB@d?3?1ymir?5work?1ui?1public?1slotacti@ DB 'd:/ymir wor'
	DB	'k/ui/public/slotactiveeffect/slot3/03.sub', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DF@NKFGNDE@d?3?1ymir?5work?1ui?1public?1slotacti@
CONST	SEGMENT
??_C@_0DF@NKFGNDE@d?3?1ymir?5work?1ui?1public?1slotacti@ DB 'd:/ymir work'
	DB	'/ui/public/slotactiveeffect/slot3/02.sub', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DF@ILDBBPJK@d?3?1ymir?5work?1ui?1public?1slotacti@
CONST	SEGMENT
??_C@_0DF@ILDBBPJK@d?3?1ymir?5work?1ui?1public?1slotacti@ DB 'd:/ymir wor'
	DB	'k/ui/public/slotactiveeffect/slot3/01.sub', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DF@EAGNMMDP@d?3?1ymir?5work?1ui?1public?1slotacti@
CONST	SEGMENT
??_C@_0DF@EAGNMMDP@d?3?1ymir?5work?1ui?1public?1slotacti@ DB 'd:/ymir wor'
	DB	'k/ui/public/slotactiveeffect/slot3/00.sub', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DF@LMKJHCMD@d?3?1ymir?5work?1ui?1public?1slotacti@
CONST	SEGMENT
??_C@_0DF@LMKJHCMD@d?3?1ymir?5work?1ui?1public?1slotacti@ DB 'd:/ymir wor'
	DB	'k/ui/public/slotactiveeffect/slot2/12.sub', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DF@DKDNAAGN@d?3?1ymir?5work?1ui?1public?1slotacti@
CONST	SEGMENT
??_C@_0DF@DKDNAAGN@d?3?1ymir?5work?1ui?1public?1slotacti@ DB 'd:/ymir wor'
	DB	'k/ui/public/slotactiveeffect/slot2/11.sub', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DF@PBGBNDMI@d?3?1ymir?5work?1ui?1public?1slotacti@
CONST	SEGMENT
??_C@_0DF@PBGBNDMI@d?3?1ymir?5work?1ui?1public?1slotacti@ DB 'd:/ymir wor'
	DB	'k/ui/public/slotactiveeffect/slot2/10.sub', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DF@HABJIJLE@d?3?1ymir?5work?1ui?1public?1slotacti@
CONST	SEGMENT
??_C@_0DF@HABJIJLE@d?3?1ymir?5work?1ui?1public?1slotacti@ DB 'd:/ymir wor'
	DB	'k/ui/public/slotactiveeffect/slot2/09.sub', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DF@LLEFFKBB@d?3?1ymir?5work?1ui?1public?1slotacti@
CONST	SEGMENT
??_C@_0DF@LLEFFKBB@d?3?1ymir?5work?1ui?1public?1slotacti@ DB 'd:/ymir wor'
	DB	'k/ui/public/slotactiveeffect/slot2/08.sub', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DF@EKBDOIME@d?3?1ymir?5work?1ui?1public?1slotacti@
CONST	SEGMENT
??_C@_0DF@EKBDOIME@d?3?1ymir?5work?1ui?1public?1slotacti@ DB 'd:/ymir wor'
	DB	'k/ui/public/slotactiveeffect/slot2/07.sub', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DF@IBEPDLGB@d?3?1ymir?5work?1ui?1public?1slotacti@
CONST	SEGMENT
??_C@_0DF@IBEPDLGB@d?3?1ymir?5work?1ui?1public?1slotacti@ DB 'd:/ymir wor'
	DB	'k/ui/public/slotactiveeffect/slot2/06.sub', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DF@HNLEJMP@d?3?1ymir?5work?1ui?1public?1slotacti@
CONST	SEGMENT
??_C@_0DF@HNLEJMP@d?3?1ymir?5work?1ui?1public?1slotacti@ DB 'd:/ymir work'
	DB	'/ui/public/slotactiveeffect/slot2/05.sub', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DF@MMIHJKGK@d?3?1ymir?5work?1ui?1public?1slotacti@
CONST	SEGMENT
??_C@_0DF@MMIHJKGK@d?3?1ymir?5work?1ui?1public?1slotacti@ DB 'd:/ymir wor'
	DB	'k/ui/public/slotactiveeffect/slot2/04.sub', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DF@NBICKKNC@d?3?1ymir?5work?1ui?1public?1slotacti@
CONST	SEGMENT
??_C@_0DF@NBICKKNC@d?3?1ymir?5work?1ui?1public?1slotacti@ DB 'd:/ymir wor'
	DB	'k/ui/public/slotactiveeffect/slot2/03.sub', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DF@BKNOHJHH@d?3?1ymir?5work?1ui?1public?1slotacti@
CONST	SEGMENT
??_C@_0DF@BKNOHJHH@d?3?1ymir?5work?1ui?1public?1slotacti@ DB 'd:/ymir wor'
	DB	'k/ui/public/slotactiveeffect/slot2/02.sub', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DF@JMEKALNJ@d?3?1ymir?5work?1ui?1public?1slotacti@
CONST	SEGMENT
??_C@_0DF@JMEKALNJ@d?3?1ymir?5work?1ui?1public?1slotacti@ DB 'd:/ymir wor'
	DB	'k/ui/public/slotactiveeffect/slot2/01.sub', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DF@FHBGNIHM@d?3?1ymir?5work?1ui?1public?1slotacti@
CONST	SEGMENT
??_C@_0DF@FHBGNIHM@d?3?1ymir?5work?1ui?1public?1slotacti@ DB 'd:/ymir wor'
	DB	'k/ui/public/slotactiveeffect/slot2/00.sub', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CH@JJGPDFBJ@d?3?1ymir?5work?1ui?1public?1slot_tog@
CONST	SEGMENT
??_C@_0CH@JJGPDFBJ@d?3?1ymir?5work?1ui?1public?1slot_tog@ DB 'd:/ymir wor'
	DB	'k/ui/public/slot_toggle.sub', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0DI@PPHKLJOI@d?3?1ymir?5work?1ui?1public?1slotacti@
CONST	SEGMENT
??_C@_0DI@PPHKLJOI@d?3?1ymir?5work?1ui?1public?1slotacti@ DB 'd:/ymir wor'
	DB	'k/ui/public/slotactiveeffect/slot%d/%02d.sub', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@DKKKJBKL@CSlotWindow@
CONST	SEGMENT
??_C@_0M@DKKKJBKL@CSlotWindow@ DB 'CSlotWindow', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@MBGDMPNF@OnPressedSlotButton@
CONST	SEGMENT
??_C@_0BE@MBGDMPNF@OnPressedSlotButton@ DB 'OnPressedSlotButton', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@IBCIPGEP@OnOverOutItem@
CONST	SEGMENT
??_C@_0O@IBCIPGEP@OnOverOutItem@ DB 'OnOverOutItem', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_02HCKGKOFO@?$CI?$CJ@
CONST	SEGMENT
??_C@_02HCKGKOFO@?$CI?$CJ@ DB '()', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@CBOPEHFH@OnOverInItem@
CONST	SEGMENT
??_C@_0N@CBOPEHFH@OnOverInItem@ DB 'OnOverInItem', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_05HEIOBLPG@?$CIiii?$CJ@
CONST	SEGMENT
??_C@_05HEIOBLPG@?$CIiii?$CJ@ DB '(iii)', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_09HJIBPFCA@OnUseSlot@
CONST	SEGMENT
??_C@_09HJIBPFCA@OnUseSlot@ DB 'OnUseSlot', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@EONLJJMO@OnUnselectItemSlot@
CONST	SEGMENT
??_C@_0BD@EONLJJMO@OnUnselectItemSlot@ DB 'OnUnselectItemSlot', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@GMADJAFC@OnUnselectEmptySlot@
CONST	SEGMENT
??_C@_0BE@GMADJAFC@OnUnselectEmptySlot@ DB 'OnUnselectEmptySlot', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@PFHJJJ@OnSelectItemSlot@
CONST	SEGMENT
??_C@_0BB@PFHJJJ@OnSelectItemSlot@ DB 'OnSelectItemSlot', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@JJECHKOF@OnSelectEmptySlot@
CONST	SEGMENT
??_C@_0BC@JJECHKOF@OnSelectEmptySlot@ DB 'OnSelectEmptySlot', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_03LIHNMIHG@?$CIi?$CJ@
CONST	SEGMENT
??_C@_03LIHNMIHG@?$CIi?$CJ@ DB '(i)', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_01JBBJJEPG@p@
CONST	SEGMENT
??_C@_01JBBJJEPG@p@ DB 'p', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_03EHFNMFPB@g?$CFd@
CONST	SEGMENT
??_C@_03EHFNMFPB@g?$CFd@ DB 'g%d', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03CIOACFJF@m?$CFd@
CONST	SEGMENT
??_C@_03CIOACFJF@m?$CFd@ DB 'm%d', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_02DPKJAMEF@?$CFd@
CONST	SEGMENT
??_C@_02DPKJAMEF@?$CFd@ DB '%d', 00H			; `string'
CONST	ENDS
;	COMDAT ??_7CCoolTimeFinishEffect@CSlotWindow@UI@@6B@
CONST	SEGMENT
??_7CCoolTimeFinishEffect@CSlotWindow@UI@@6B@ DD FLAT:??_R4CCoolTimeFinishEffect@CSlotWindow@UI@@6B@ ; UI::CSlotWindow::CCoolTimeFinishEffect::`vftable'
	DD	FLAT:??_ECCoolTimeFinishEffect@CSlotWindow@UI@@UAEPAXI@Z
	DD	FLAT:?OnRender@CAniImageBox@UI@@MAEXXZ
	DD	FLAT:?OnUpdate@CAniImageBox@UI@@MAEXXZ
	DD	FLAT:?OnChangePosition@CAniImageBox@UI@@MAEXXZ
	DD	FLAT:?OnSetFocus@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnKillFocus@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnMouseDrag@CWindow@UI@@UAEXJJ@Z
	DD	FLAT:?OnMouseOverIn@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnMouseOverOut@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnMouseOver@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnDrop@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnTop@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnIMEUpdate@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnMoveWindow@CWindow@UI@@UAEXJJ@Z
	DD	FLAT:?OnIMETabEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEReturnEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEKeyDownEvent@CWindow@UI@@UAEHH@Z
	DD	FLAT:?OnIMEChangeCodePage@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEOpenCandidateListEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMECloseCandidateListEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEOpenReadingWndEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMECloseReadingWndEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseLeftButtonDown@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseLeftButtonUp@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseLeftButtonDoubleClick@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseRightButtonDown@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseRightButtonUp@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseRightButtonDoubleClick@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseMiddleButtonDown@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseMiddleButtonUp@CWindow@UI@@UAEHXZ
	DD	FLAT:?RunMouseWheelEvent@CWindow@UI@@UAEHJ@Z
	DD	FLAT:?OnMouseWheelScroll@CWindow@UI@@UAEHF@Z
	DD	FLAT:?SetScrollable@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnKeyDown@CWindow@UI@@UAEHH@Z
	DD	FLAT:?OnKeyUp@CWindow@UI@@UAEHH@Z
	DD	FLAT:?OnPressEscapeKey@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnPressExitKey@CWindow@UI@@UAEHXZ
	DD	FLAT:?SetColor@CWindow@UI@@UAEXK@Z
	DD	FLAT:?OnIsType@CAniImageBox@UI@@MAEHK@Z
	DD	FLAT:?IsWindow@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnEndFrame@CCoolTimeFinishEffect@CSlotWindow@UI@@UAEXXZ
CONST	ENDS
;	COMDAT ??_7CCoverButton@CSlotWindow@UI@@6B@
CONST	SEGMENT
??_7CCoverButton@CSlotWindow@UI@@6B@ DD FLAT:??_R4CCoverButton@CSlotWindow@UI@@6B@ ; UI::CSlotWindow::CCoverButton::`vftable'
	DD	FLAT:??_ECCoverButton@CSlotWindow@UI@@UAEPAXI@Z
	DD	FLAT:?OnRender@CCoverButton@CSlotWindow@UI@@UAEXXZ
	DD	FLAT:?OnUpdate@CButton@UI@@MAEXXZ
	DD	FLAT:?OnChangePosition@CButton@UI@@MAEXXZ
	DD	FLAT:?OnSetFocus@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnKillFocus@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnMouseDrag@CWindow@UI@@UAEXJJ@Z
	DD	FLAT:?OnMouseOverIn@CSlotButton@CSlotWindow@UI@@UAEXXZ
	DD	FLAT:?OnMouseOverOut@CSlotButton@CSlotWindow@UI@@UAEXXZ
	DD	FLAT:?OnMouseOver@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnDrop@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnTop@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnIMEUpdate@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnMoveWindow@CWindow@UI@@UAEXJJ@Z
	DD	FLAT:?OnIMETabEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEReturnEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEKeyDownEvent@CWindow@UI@@UAEHH@Z
	DD	FLAT:?OnIMEChangeCodePage@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEOpenCandidateListEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMECloseCandidateListEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEOpenReadingWndEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMECloseReadingWndEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseLeftButtonDown@CCoverButton@CSlotWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseLeftButtonUp@CCoverButton@CSlotWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseLeftButtonDoubleClick@CButton@UI@@MAEHXZ
	DD	FLAT:?OnMouseRightButtonDown@CCoverButton@CSlotWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseRightButtonUp@CCoverButton@CSlotWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseRightButtonDoubleClick@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseMiddleButtonDown@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseMiddleButtonUp@CWindow@UI@@UAEHXZ
	DD	FLAT:?RunMouseWheelEvent@CWindow@UI@@UAEHJ@Z
	DD	FLAT:?OnMouseWheelScroll@CWindow@UI@@UAEHF@Z
	DD	FLAT:?SetScrollable@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnKeyDown@CWindow@UI@@UAEHH@Z
	DD	FLAT:?OnKeyUp@CWindow@UI@@UAEHH@Z
	DD	FLAT:?OnPressEscapeKey@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnPressExitKey@CWindow@UI@@UAEHXZ
	DD	FLAT:?SetColor@CWindow@UI@@UAEXK@Z
	DD	FLAT:?OnIsType@CWindow@UI@@UAEHK@Z
	DD	FLAT:?IsWindow@CWindow@UI@@UAEHXZ
CONST	ENDS
;	COMDAT ??_7CSlotButton@CSlotWindow@UI@@6B@
CONST	SEGMENT
??_7CSlotButton@CSlotWindow@UI@@6B@ DD FLAT:??_R4CSlotButton@CSlotWindow@UI@@6B@ ; UI::CSlotWindow::CSlotButton::`vftable'
	DD	FLAT:??_ECSlotButton@CSlotWindow@UI@@UAEPAXI@Z
	DD	FLAT:?OnRender@CButton@UI@@MAEXXZ
	DD	FLAT:?OnUpdate@CButton@UI@@MAEXXZ
	DD	FLAT:?OnChangePosition@CButton@UI@@MAEXXZ
	DD	FLAT:?OnSetFocus@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnKillFocus@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnMouseDrag@CWindow@UI@@UAEXJJ@Z
	DD	FLAT:?OnMouseOverIn@CSlotButton@CSlotWindow@UI@@UAEXXZ
	DD	FLAT:?OnMouseOverOut@CSlotButton@CSlotWindow@UI@@UAEXXZ
	DD	FLAT:?OnMouseOver@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnDrop@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnTop@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnIMEUpdate@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnMoveWindow@CWindow@UI@@UAEXJJ@Z
	DD	FLAT:?OnIMETabEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEReturnEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEKeyDownEvent@CWindow@UI@@UAEHH@Z
	DD	FLAT:?OnIMEChangeCodePage@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEOpenCandidateListEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMECloseCandidateListEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEOpenReadingWndEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMECloseReadingWndEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseLeftButtonDown@CSlotButton@CSlotWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseLeftButtonUp@CSlotButton@CSlotWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseLeftButtonDoubleClick@CButton@UI@@MAEHXZ
	DD	FLAT:?OnMouseRightButtonDown@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseRightButtonUp@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseRightButtonDoubleClick@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseMiddleButtonDown@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseMiddleButtonUp@CWindow@UI@@UAEHXZ
	DD	FLAT:?RunMouseWheelEvent@CWindow@UI@@UAEHJ@Z
	DD	FLAT:?OnMouseWheelScroll@CWindow@UI@@UAEHF@Z
	DD	FLAT:?SetScrollable@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnKeyDown@CWindow@UI@@UAEHH@Z
	DD	FLAT:?OnKeyUp@CWindow@UI@@UAEHH@Z
	DD	FLAT:?OnPressEscapeKey@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnPressExitKey@CWindow@UI@@UAEHXZ
	DD	FLAT:?SetColor@CWindow@UI@@UAEXK@Z
	DD	FLAT:?OnIsType@CWindow@UI@@UAEHK@Z
	DD	FLAT:?IsWindow@CWindow@UI@@UAEHXZ
CONST	ENDS
;	COMDAT ??_7CSlotWindow@UI@@6B@
CONST	SEGMENT
??_7CSlotWindow@UI@@6B@ DD FLAT:??_R4CSlotWindow@UI@@6B@ ; UI::CSlotWindow::`vftable'
	DD	FLAT:??_ECSlotWindow@UI@@UAEPAXI@Z
	DD	FLAT:?OnRender@CSlotWindow@UI@@MAEXXZ
	DD	FLAT:?OnUpdate@CSlotWindow@UI@@MAEXXZ
	DD	FLAT:?OnChangePosition@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnSetFocus@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnKillFocus@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnMouseDrag@CWindow@UI@@UAEXJJ@Z
	DD	FLAT:?OnMouseOverIn@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnMouseOverOut@CSlotWindow@UI@@MAEXXZ
	DD	FLAT:?OnMouseOver@CSlotWindow@UI@@MAEXXZ
	DD	FLAT:?OnDrop@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnTop@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnIMEUpdate@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnMoveWindow@CWindow@UI@@UAEXJJ@Z
	DD	FLAT:?OnIMETabEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEReturnEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEKeyDownEvent@CWindow@UI@@UAEHH@Z
	DD	FLAT:?OnIMEChangeCodePage@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEOpenCandidateListEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMECloseCandidateListEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEOpenReadingWndEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMECloseReadingWndEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseLeftButtonDown@CSlotWindow@UI@@MAEHXZ
	DD	FLAT:?OnMouseLeftButtonUp@CSlotWindow@UI@@MAEHXZ
	DD	FLAT:?OnMouseLeftButtonDoubleClick@CSlotWindow@UI@@MAEHXZ
	DD	FLAT:?OnMouseRightButtonDown@CSlotWindow@UI@@MAEHXZ
	DD	FLAT:?OnMouseRightButtonUp@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseRightButtonDoubleClick@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseMiddleButtonDown@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseMiddleButtonUp@CWindow@UI@@UAEHXZ
	DD	FLAT:?RunMouseWheelEvent@CWindow@UI@@UAEHJ@Z
	DD	FLAT:?OnMouseWheelScroll@CWindow@UI@@UAEHF@Z
	DD	FLAT:?SetScrollable@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnKeyDown@CWindow@UI@@UAEHH@Z
	DD	FLAT:?OnKeyUp@CWindow@UI@@UAEHH@Z
	DD	FLAT:?OnPressEscapeKey@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnPressExitKey@CWindow@UI@@UAEHXZ
	DD	FLAT:?SetColor@CWindow@UI@@UAEXK@Z
	DD	FLAT:?OnIsType@CSlotWindow@UI@@MAEHK@Z
	DD	FLAT:?IsWindow@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnRenderPickingSlot@CSlotWindow@UI@@MAEXXZ
	DD	FLAT:?OnRenderSelectedSlot@CSlotWindow@UI@@MAEXXZ
	DD	FLAT:?GetPickedSlotPointer@CSlotWindow@UI@@MAEHPAPAUSSlot@12@@Z
	DD	FLAT:?OnRefreshSlot@CSlotWindow@UI@@MAEXXZ
CONST	ENDS
;	COMDAT ??_R1A@?0A@EA@bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@bad_array_new_length@std@@8 DD FLAT:??_R0?AVbad_array_new_length@std@@@8 ; std::bad_array_new_length::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3bad_array_new_length@std@@8
rdata$r	ENDS
;	COMDAT ??_R2bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R2bad_array_new_length@std@@8 DD FLAT:??_R1A@?0A@EA@bad_array_new_length@std@@8 ; std::bad_array_new_length::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@bad_alloc@std@@8
	DD	FLAT:??_R1A@?0A@EA@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R3bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R3bad_array_new_length@std@@8 DD 00H			; std::bad_array_new_length::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2bad_array_new_length@std@@8
rdata$r	ENDS
;	COMDAT ??_R4bad_array_new_length@std@@6B@
rdata$r	SEGMENT
??_R4bad_array_new_length@std@@6B@ DD 00H		; std::bad_array_new_length::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVbad_array_new_length@std@@@8
	DD	FLAT:??_R3bad_array_new_length@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@bad_alloc@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@bad_alloc@std@@8 DD FLAT:??_R0?AVbad_alloc@std@@@8 ; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R2bad_alloc@std@@8
rdata$r	SEGMENT
??_R2bad_alloc@std@@8 DD FLAT:??_R1A@?0A@EA@bad_alloc@std@@8 ; std::bad_alloc::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R3bad_alloc@std@@8
rdata$r	SEGMENT
??_R3bad_alloc@std@@8 DD 00H				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R4bad_alloc@std@@6B@
rdata$r	SEGMENT
??_R4bad_alloc@std@@6B@ DD 00H				; std::bad_alloc::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVbad_alloc@std@@@8
	DD	FLAT:??_R3bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@exception@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@exception@std@@8 DD FLAT:??_R0?AVexception@std@@@8 ; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R2exception@std@@8
rdata$r	SEGMENT
??_R2exception@std@@8 DD FLAT:??_R1A@?0A@EA@exception@std@@8 ; std::exception::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3exception@std@@8
rdata$r	SEGMENT
??_R3exception@std@@8 DD 00H				; std::exception::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R4exception@std@@6B@
rdata$r	SEGMENT
??_R4exception@std@@6B@ DD 00H				; std::exception::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVexception@std@@@8
	DD	FLAT:??_R3exception@std@@8
rdata$r	ENDS
;	COMDAT ??_C@_0BB@GCADKGJO@map?1set?5too?5long@
CONST	SEGMENT
??_C@_0BB@GCADKGJO@map?1set?5too?5long@ DB 'map/set too long', 00H ; `string'
CONST	ENDS
;	COMDAT __CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVexception@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0exception@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVexception@std@@@8
data$r	SEGMENT
??_R0?AVexception@std@@@8 DD FLAT:??_7type_info@@6B@	; std::exception `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVexception@std@@', 00H
data$r	ENDS
;	COMDAT __CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12 DD 010H
	DD	FLAT:??_R0?AVbad_alloc@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0bad_alloc@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVbad_alloc@std@@@8
data$r	SEGMENT
??_R0?AVbad_alloc@std@@@8 DD FLAT:??_7type_info@@6B@	; std::bad_alloc `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVbad_alloc@std@@', 00H
data$r	ENDS
;	COMDAT __CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVbad_array_new_length@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0bad_array_new_length@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVbad_array_new_length@std@@@8
data$r	SEGMENT
??_R0?AVbad_array_new_length@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::bad_array_new_length `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVbad_array_new_length@std@@', 00H
data$r	ENDS
;	COMDAT __CTA3?AVbad_array_new_length@std@@
xdata$x	SEGMENT
__CTA3?AVbad_array_new_length@std@@ DD 03H
	DD	FLAT:__CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QAE@ABV01@@Z12
	DD	FLAT:__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
	DD	FLAT:__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	ENDS
;	COMDAT __TI3?AVbad_array_new_length@std@@
xdata$x	SEGMENT
__TI3?AVbad_array_new_length@std@@ DD 00H
	DD	FLAT:??1bad_array_new_length@std@@UAE@XZ
	DD	00H
	DD	FLAT:__CTA3?AVbad_array_new_length@std@@
xdata$x	ENDS
;	COMDAT ??_C@_0BF@KINCDENJ@bad?5array?5new?5length@
CONST	SEGMENT
??_C@_0BF@KINCDENJ@bad?5array?5new?5length@ DB 'bad array new length', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7bad_array_new_length@std@@6B@
CONST	SEGMENT
??_7bad_array_new_length@std@@6B@ DD FLAT:??_R4bad_array_new_length@std@@6B@ ; std::bad_array_new_length::`vftable'
	DD	FLAT:??_Ebad_array_new_length@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT ??_7bad_alloc@std@@6B@
CONST	SEGMENT
??_7bad_alloc@std@@6B@ DD FLAT:??_R4bad_alloc@std@@6B@	; std::bad_alloc::`vftable'
	DD	FLAT:??_Ebad_alloc@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT ??_C@_0BC@EOODALEL@Unknown?5exception@
CONST	SEGMENT
??_C@_0BC@EOODALEL@Unknown?5exception@ DB 'Unknown exception', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7exception@std@@6B@
CONST	SEGMENT
??_7exception@std@@6B@ DD FLAT:??_R4exception@std@@6B@	; std::exception::`vftable'
	DD	FLAT:??_Eexception@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$?0U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@PAX@1@$$QAU?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$?0U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@PAX@1@$$QAU?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@1@@Z$1
__ehfuncinfo$??$?0U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@PAX@1@$$QAU?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$?0U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@PAX@1@$$QAU?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@PAX@std@@@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@PAX@std@@@1@@Z$0
__ehfuncinfo$??0?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@PAX@std@@@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@PAX@std@@@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$?0ABUSSlot@CSlotWindow@UI@@@?$_List_node_emplace_op2@V?$allocator@U?$_List_node@USSlot@CSlotWindow@UI@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_List_node@USSlot@CSlotWindow@UI@@PAX@std@@@1@ABUSSlot@CSlotWindow@UI@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$?0ABUSSlot@CSlotWindow@UI@@@?$_List_node_emplace_op2@V?$allocator@U?$_List_node@USSlot@CSlotWindow@UI@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_List_node@USSlot@CSlotWindow@UI@@PAX@std@@@1@ABUSSlot@CSlotWindow@UI@@@Z$0
__ehfuncinfo$??$?0ABUSSlot@CSlotWindow@UI@@@?$_List_node_emplace_op2@V?$allocator@U?$_List_node@USSlot@CSlotWindow@UI@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_List_node@USSlot@CSlotWindow@UI@@PAX@std@@@1@ABUSSlot@CSlotWindow@UI@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$?0ABUSSlot@CSlotWindow@UI@@@?$_List_node_emplace_op2@V?$allocator@U?$_List_node@USSlot@CSlotWindow@UI@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_List_node@USSlot@CSlotWindow@UI@@PAX@std@@@1@ABUSSlot@CSlotWindow@UI@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$?0ABK@?$_List_node_emplace_op2@V?$allocator@U?$_List_node@KPAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_List_node@KPAX@std@@@1@ABK@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$?0ABK@?$_List_node_emplace_op2@V?$allocator@U?$_List_node@KPAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_List_node@KPAX@std@@@1@ABK@Z$0
__ehfuncinfo$??$?0ABK@?$_List_node_emplace_op2@V?$allocator@U?$_List_node@KPAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_List_node@KPAX@std@@@1@ABK@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$?0ABK@?$_List_node_emplace_op2@V?$allocator@U?$_List_node@KPAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_List_node@KPAX@std@@@1@ABK@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$?0ABUpiecewise_construct_t@std@@V?$tuple@$$QAK@1@V?$tuple@$$V@1@@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBKV?$map@KUSStoreCoolDown@CSlotWindow@UI@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@5@@std@@@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBKV?$map@KUSStoreCoolDown@CSlotWindow@UI@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@5@@std@@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBKV?$map@KUSStoreCoolDown@CSlotWindow@UI@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@5@@std@@@std@@PAX@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@$$QAK@1@$$QAV?$tuple@$$V@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$?0ABUpiecewise_construct_t@std@@V?$tuple@$$QAK@1@V?$tuple@$$V@1@@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBKV?$map@KUSStoreCoolDown@CSlotWindow@UI@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@5@@std@@@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBKV?$map@KUSStoreCoolDown@CSlotWindow@UI@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@5@@std@@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBKV?$map@KUSStoreCoolDown@CSlotWindow@UI@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@5@@std@@@std@@PAX@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@$$QAK@1@$$QAV?$tuple@$$V@1@@Z$1
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$??$?0ABUpiecewise_construct_t@std@@V?$tuple@$$QAK@1@V?$tuple@$$V@1@@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBKV?$map@KUSStoreCoolDown@CSlotWindow@UI@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@5@@std@@@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBKV?$map@KUSStoreCoolDown@CSlotWindow@UI@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@5@@std@@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBKV?$map@KUSStoreCoolDown@CSlotWindow@UI@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@5@@std@@@std@@PAX@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@$$QAK@1@$$QAV?$tuple@$$V@1@@Z$0
__ehfuncinfo$??$?0ABUpiecewise_construct_t@std@@V?$tuple@$$QAK@1@V?$tuple@$$V@1@@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBKV?$map@KUSStoreCoolDown@CSlotWindow@UI@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@5@@std@@@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBKV?$map@KUSStoreCoolDown@CSlotWindow@UI@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@5@@std@@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBKV?$map@KUSStoreCoolDown@CSlotWindow@UI@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@5@@std@@@std@@PAX@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@$$QAK@1@$$QAV?$tuple@$$V@1@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??$?0ABUpiecewise_construct_t@std@@V?$tuple@$$QAK@1@V?$tuple@$$V@1@@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBKV?$map@KUSStoreCoolDown@CSlotWindow@UI@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@5@@std@@@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBKV?$map@KUSStoreCoolDown@CSlotWindow@UI@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@5@@std@@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBKV?$map@KUSStoreCoolDown@CSlotWindow@UI@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@5@@std@@@std@@PAX@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@$$QAK@1@$$QAV?$tuple@$$V@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$?0ABUpiecewise_construct_t@std@@V?$tuple@ABK@1@V?$tuple@$$V@1@@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBKV?$map@KUSStoreCoolDown@CSlotWindow@UI@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@5@@std@@@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBKV?$map@KUSStoreCoolDown@CSlotWindow@UI@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@5@@std@@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBKV?$map@KUSStoreCoolDown@CSlotWindow@UI@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@5@@std@@@std@@PAX@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABK@1@$$QAV?$tuple@$$V@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$?0ABUpiecewise_construct_t@std@@V?$tuple@ABK@1@V?$tuple@$$V@1@@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBKV?$map@KUSStoreCoolDown@CSlotWindow@UI@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@5@@std@@@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBKV?$map@KUSStoreCoolDown@CSlotWindow@UI@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@5@@std@@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBKV?$map@KUSStoreCoolDown@CSlotWindow@UI@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@5@@std@@@std@@PAX@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABK@1@$$QAV?$tuple@$$V@1@@Z$1
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$??$?0ABUpiecewise_construct_t@std@@V?$tuple@ABK@1@V?$tuple@$$V@1@@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBKV?$map@KUSStoreCoolDown@CSlotWindow@UI@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@5@@std@@@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBKV?$map@KUSStoreCoolDown@CSlotWindow@UI@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@5@@std@@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBKV?$map@KUSStoreCoolDown@CSlotWindow@UI@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@5@@std@@@std@@PAX@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABK@1@$$QAV?$tuple@$$V@1@@Z$0
__ehfuncinfo$??$?0ABUpiecewise_construct_t@std@@V?$tuple@ABK@1@V?$tuple@$$V@1@@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBKV?$map@KUSStoreCoolDown@CSlotWindow@UI@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@5@@std@@@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBKV?$map@KUSStoreCoolDown@CSlotWindow@UI@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@5@@std@@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBKV?$map@KUSStoreCoolDown@CSlotWindow@UI@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@5@@std@@@std@@PAX@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABK@1@$$QAV?$tuple@$$V@1@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??$?0ABUpiecewise_construct_t@std@@V?$tuple@ABK@1@V?$tuple@$$V@1@@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBKV?$map@KUSStoreCoolDown@CSlotWindow@UI@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@5@@std@@@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBKV?$map@KUSStoreCoolDown@CSlotWindow@UI@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@5@@std@@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBKV?$map@KUSStoreCoolDown@CSlotWindow@UI@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@5@@std@@@std@@PAX@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABK@1@$$QAV?$tuple@$$V@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBKV?$map@KUSStoreCoolDown@CSlotWindow@UI@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@5@@std@@@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBKV?$map@KUSStoreCoolDown@CSlotWindow@UI@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@5@@std@@@std@@PAX@std@@@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBKV?$map@KUSStoreCoolDown@CSlotWindow@UI@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@5@@std@@@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBKV?$map@KUSStoreCoolDown@CSlotWindow@UI@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@5@@std@@@std@@PAX@std@@@1@@Z$0
__ehfuncinfo$??0?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBKV?$map@KUSStoreCoolDown@CSlotWindow@UI@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@5@@std@@@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBKV?$map@KUSStoreCoolDown@CSlotWindow@UI@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@5@@std@@@std@@PAX@std@@@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBKV?$map@KUSStoreCoolDown@CSlotWindow@UI@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@5@@std@@@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBKV?$map@KUSStoreCoolDown@CSlotWindow@UI@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@5@@std@@@std@@PAX@std@@@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$_Emplace@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@?$_Tree@V?$_Tmap_traits@KUSStoreCoolDown@CSlotWindow@UI@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@5@$0A@@std@@@std@@IAE?AU?$pair@PAU?$_Tree_node@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@PAX@std@@_N@1@$$QAU?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$_Emplace@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@?$_Tree@V?$_Tmap_traits@KUSStoreCoolDown@CSlotWindow@UI@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@5@$0A@@std@@@std@@IAE?AU?$pair@PAU?$_Tree_node@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@PAX@std@@_N@1@$$QAU?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@1@@Z$2
__ehfuncinfo$??$_Emplace@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@?$_Tree@V?$_Tmap_traits@KUSStoreCoolDown@CSlotWindow@UI@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@5@$0A@@std@@@std@@IAE?AU?$pair@PAU?$_Tree_node@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@PAX@std@@_N@1@$$QAU?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$_Emplace@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@?$_Tree@V?$_Tmap_traits@KUSStoreCoolDown@CSlotWindow@UI@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@5@$0A@@std@@@std@@IAE?AU?$pair@PAU?$_Tree_node@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@PAX@std@@_N@1@$$QAU?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$_Emplace@ABUSSlot@CSlotWindow@UI@@@?$list@USSlot@CSlotWindow@UI@@V?$allocator@USSlot@CSlotWindow@UI@@@std@@@std@@QAEPAU?$_List_node@USSlot@CSlotWindow@UI@@PAX@1@QAU21@ABUSSlot@CSlotWindow@UI@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$_Emplace@ABUSSlot@CSlotWindow@UI@@@?$list@USSlot@CSlotWindow@UI@@V?$allocator@USSlot@CSlotWindow@UI@@@std@@@std@@QAEPAU?$_List_node@USSlot@CSlotWindow@UI@@PAX@1@QAU21@ABUSSlot@CSlotWindow@UI@@@Z$1
__ehfuncinfo$??$_Emplace@ABUSSlot@CSlotWindow@UI@@@?$list@USSlot@CSlotWindow@UI@@V?$allocator@USSlot@CSlotWindow@UI@@@std@@@std@@QAEPAU?$_List_node@USSlot@CSlotWindow@UI@@PAX@1@QAU21@ABUSSlot@CSlotWindow@UI@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$_Emplace@ABUSSlot@CSlotWindow@UI@@@?$list@USSlot@CSlotWindow@UI@@V?$allocator@USSlot@CSlotWindow@UI@@@std@@@std@@QAEPAU?$_List_node@USSlot@CSlotWindow@UI@@PAX@1@QAU21@ABUSSlot@CSlotWindow@UI@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$_Emplace@ABK@?$list@KV?$allocator@K@std@@@std@@QAEPAU?$_List_node@KPAX@1@QAU21@ABK@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$_Emplace@ABK@?$list@KV?$allocator@K@std@@@std@@QAEPAU?$_List_node@KPAX@1@QAU21@ABK@Z$1
__ehfuncinfo$??$_Emplace@ABK@?$list@KV?$allocator@K@std@@@std@@QAEPAU?$_List_node@KPAX@1@QAU21@ABK@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$_Emplace@ABK@?$list@KV?$allocator@K@std@@@std@@QAEPAU?$_List_node@KPAX@1@QAU21@ABK@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$_Try_emplace@K$$V@?$map@KV?$map@KUSStoreCoolDown@CSlotWindow@UI@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@5@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$map@KUSStoreCoolDown@CSlotWindow@UI@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@5@@std@@@std@@@2@@std@@AAE?AU?$pair@PAU?$_Tree_node@U?$pair@$$CBKV?$map@KUSStoreCoolDown@CSlotWindow@UI@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@5@@std@@@std@@PAX@std@@_N@1@$$QAK@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$_Try_emplace@K$$V@?$map@KV?$map@KUSStoreCoolDown@CSlotWindow@UI@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@5@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$map@KUSStoreCoolDown@CSlotWindow@UI@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@5@@std@@@std@@@2@@std@@AAE?AU?$pair@PAU?$_Tree_node@U?$pair@$$CBKV?$map@KUSStoreCoolDown@CSlotWindow@UI@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@5@@std@@@std@@PAX@std@@_N@1@$$QAK@Z$2
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$??$_Try_emplace@K$$V@?$map@KV?$map@KUSStoreCoolDown@CSlotWindow@UI@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@5@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$map@KUSStoreCoolDown@CSlotWindow@UI@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@5@@std@@@std@@@2@@std@@AAE?AU?$pair@PAU?$_Tree_node@U?$pair@$$CBKV?$map@KUSStoreCoolDown@CSlotWindow@UI@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@5@@std@@@std@@PAX@std@@_N@1@$$QAK@Z$1
__ehfuncinfo$??$_Try_emplace@K$$V@?$map@KV?$map@KUSStoreCoolDown@CSlotWindow@UI@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@5@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$map@KUSStoreCoolDown@CSlotWindow@UI@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@5@@std@@@std@@@2@@std@@AAE?AU?$pair@PAU?$_Tree_node@U?$pair@$$CBKV?$map@KUSStoreCoolDown@CSlotWindow@UI@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@5@@std@@@std@@PAX@std@@_N@1@$$QAK@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??$_Try_emplace@K$$V@?$map@KV?$map@KUSStoreCoolDown@CSlotWindow@UI@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@5@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$map@KUSStoreCoolDown@CSlotWindow@UI@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@5@@std@@@std@@@2@@std@@AAE?AU?$pair@PAU?$_Tree_node@U?$pair@$$CBKV?$map@KUSStoreCoolDown@CSlotWindow@UI@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@5@@std@@@std@@PAX@std@@_N@1@$$QAK@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$_Try_emplace@ABK$$V@?$map@KV?$map@KUSStoreCoolDown@CSlotWindow@UI@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@5@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$map@KUSStoreCoolDown@CSlotWindow@UI@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@5@@std@@@std@@@2@@std@@AAE?AU?$pair@PAU?$_Tree_node@U?$pair@$$CBKV?$map@KUSStoreCoolDown@CSlotWindow@UI@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@5@@std@@@std@@PAX@std@@_N@1@ABK@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$_Try_emplace@ABK$$V@?$map@KV?$map@KUSStoreCoolDown@CSlotWindow@UI@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@5@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$map@KUSStoreCoolDown@CSlotWindow@UI@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@5@@std@@@std@@@2@@std@@AAE?AU?$pair@PAU?$_Tree_node@U?$pair@$$CBKV?$map@KUSStoreCoolDown@CSlotWindow@UI@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@5@@std@@@std@@PAX@std@@_N@1@ABK@Z$2
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$??$_Try_emplace@ABK$$V@?$map@KV?$map@KUSStoreCoolDown@CSlotWindow@UI@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@5@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$map@KUSStoreCoolDown@CSlotWindow@UI@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@5@@std@@@std@@@2@@std@@AAE?AU?$pair@PAU?$_Tree_node@U?$pair@$$CBKV?$map@KUSStoreCoolDown@CSlotWindow@UI@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@5@@std@@@std@@PAX@std@@_N@1@ABK@Z$1
__ehfuncinfo$??$_Try_emplace@ABK$$V@?$map@KV?$map@KUSStoreCoolDown@CSlotWindow@UI@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@5@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$map@KUSStoreCoolDown@CSlotWindow@UI@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@5@@std@@@std@@@2@@std@@AAE?AU?$pair@PAU?$_Tree_node@U?$pair@$$CBKV?$map@KUSStoreCoolDown@CSlotWindow@UI@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@5@@std@@@std@@PAX@std@@_N@1@ABK@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??$_Try_emplace@ABK$$V@?$map@KV?$map@KUSStoreCoolDown@CSlotWindow@UI@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@5@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$map@KUSStoreCoolDown@CSlotWindow@UI@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@5@@std@@@std@@@2@@std@@AAE?AU?$pair@PAU?$_Tree_node@U?$pair@$$CBKV?$map@KUSStoreCoolDown@CSlotWindow@UI@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@5@@std@@@std@@PAX@std@@_N@1@ABK@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$insert@$0A@$0A@@?$_Tree@V?$_Tmap_traits@KUSStoreCoolDown@CSlotWindow@UI@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@5@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@std@@@std@@@std@@_N@1@$$QAU?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$insert@$0A@$0A@@?$_Tree@V?$_Tmap_traits@KUSStoreCoolDown@CSlotWindow@UI@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@5@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@std@@@std@@@std@@_N@1@$$QAU?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@1@@Z$2
__ehfuncinfo$??$insert@$0A@$0A@@?$_Tree@V?$_Tmap_traits@KUSStoreCoolDown@CSlotWindow@UI@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@5@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@std@@@std@@@std@@_N@1@$$QAU?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$insert@$0A@$0A@@?$_Tree@V?$_Tmap_traits@KUSStoreCoolDown@CSlotWindow@UI@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@5@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@std@@@std@@@std@@_N@1@$$QAU?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??A?$map@KV?$map@KUSStoreCoolDown@CSlotWindow@UI@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@5@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$map@KUSStoreCoolDown@CSlotWindow@UI@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@5@@std@@@std@@@2@@std@@QAEAAV?$map@KUSStoreCoolDown@CSlotWindow@UI@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@5@@1@ABK@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??A?$map@KV?$map@KUSStoreCoolDown@CSlotWindow@UI@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@5@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$map@KUSStoreCoolDown@CSlotWindow@UI@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@5@@std@@@std@@@2@@std@@QAEAAV?$map@KUSStoreCoolDown@CSlotWindow@UI@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@5@@1@ABK@Z$2
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$??A?$map@KV?$map@KUSStoreCoolDown@CSlotWindow@UI@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@5@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$map@KUSStoreCoolDown@CSlotWindow@UI@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@5@@std@@@std@@@2@@std@@QAEAAV?$map@KUSStoreCoolDown@CSlotWindow@UI@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@5@@1@ABK@Z$1
__ehfuncinfo$??A?$map@KV?$map@KUSStoreCoolDown@CSlotWindow@UI@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@5@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$map@KUSStoreCoolDown@CSlotWindow@UI@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@5@@std@@@std@@@2@@std@@QAEAAV?$map@KUSStoreCoolDown@CSlotWindow@UI@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@5@@1@ABK@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??A?$map@KV?$map@KUSStoreCoolDown@CSlotWindow@UI@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@5@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$map@KUSStoreCoolDown@CSlotWindow@UI@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@5@@std@@@std@@@2@@std@@QAEAAV?$map@KUSStoreCoolDown@CSlotWindow@UI@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@5@@1@ABK@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??A?$map@KV?$map@KUSStoreCoolDown@CSlotWindow@UI@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@5@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$map@KUSStoreCoolDown@CSlotWindow@UI@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@5@@std@@@std@@@2@@std@@QAEAAV?$map@KUSStoreCoolDown@CSlotWindow@UI@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@5@@1@$$QAK@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??A?$map@KV?$map@KUSStoreCoolDown@CSlotWindow@UI@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@5@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$map@KUSStoreCoolDown@CSlotWindow@UI@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@5@@std@@@std@@@2@@std@@QAEAAV?$map@KUSStoreCoolDown@CSlotWindow@UI@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@5@@1@$$QAK@Z$2
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$??A?$map@KV?$map@KUSStoreCoolDown@CSlotWindow@UI@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@5@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$map@KUSStoreCoolDown@CSlotWindow@UI@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@5@@std@@@std@@@2@@std@@QAEAAV?$map@KUSStoreCoolDown@CSlotWindow@UI@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@5@@1@$$QAK@Z$1
__ehfuncinfo$??A?$map@KV?$map@KUSStoreCoolDown@CSlotWindow@UI@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@5@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$map@KUSStoreCoolDown@CSlotWindow@UI@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@5@@std@@@std@@@2@@std@@QAEAAV?$map@KUSStoreCoolDown@CSlotWindow@UI@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@5@@1@$$QAK@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??A?$map@KV?$map@KUSStoreCoolDown@CSlotWindow@UI@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@5@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$map@KUSStoreCoolDown@CSlotWindow@UI@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@5@@std@@@std@@@2@@std@@QAEAAV?$map@KUSStoreCoolDown@CSlotWindow@UI@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@5@@1@$$QAK@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?push_back@?$list@KV?$allocator@K@std@@@std@@QAEXABK@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?push_back@?$list@KV?$allocator@K@std@@@std@@QAEXABK@Z$1
__ehfuncinfo$?push_back@?$list@KV?$allocator@K@std@@@std@@QAEXABK@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?push_back@?$list@KV?$allocator@K@std@@@std@@QAEXABK@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?__CreateFinishCoolTimeEffect@CSlotWindow@UI@@IAEXPAUSSlot@12@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?__CreateFinishCoolTimeEffect@CSlotWindow@UI@@IAEXPAUSSlot@12@@Z$0
__ehfuncinfo$?__CreateFinishCoolTimeEffect@CSlotWindow@UI@@IAEXPAUSSlot@12@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?__CreateFinishCoolTimeEffect@CSlotWindow@UI@@IAEXPAUSSlot@12@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?__CreateSlotEnableEffect@CSlotWindow@UI@@IAEXH@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?__CreateSlotEnableEffect@CSlotWindow@UI@@IAEXH@Z$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?__CreateSlotEnableEffect@CSlotWindow@UI@@IAEXH@Z$1
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?__CreateSlotEnableEffect@CSlotWindow@UI@@IAEXH@Z$2
__ehfuncinfo$?__CreateSlotEnableEffect@CSlotWindow@UI@@IAEXH@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$?__CreateSlotEnableEffect@CSlotWindow@UI@@IAEXH@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?__CreateToggleSlotImage@CSlotWindow@UI@@IAEXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?__CreateToggleSlotImage@CSlotWindow@UI@@IAEXXZ$0
__ehfuncinfo$?__CreateToggleSlotImage@CSlotWindow@UI@@IAEXXZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?__CreateToggleSlotImage@CSlotWindow@UI@@IAEXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?ActivateEffect@CSlotWindow@UI@@QAEXKMMMM@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?ActivateEffect@CSlotWindow@UI@@QAEXKMMMM@Z$0
__ehfuncinfo$?ActivateEffect@CSlotWindow@UI@@QAEXKMMMM@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?ActivateEffect@CSlotWindow@UI@@QAEXKMMMM@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?SelectSlot@CSlotWindow@UI@@QAEXK@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?SelectSlot@CSlotWindow@UI@@QAEXK@Z$1
__ehfuncinfo$?SelectSlot@CSlotWindow@UI@@QAEXK@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?SelectSlot@CSlotWindow@UI@@QAEXK@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?RestoreSlotCoolTime@CSlotWindow@UI@@QAEXK@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?RestoreSlotCoolTime@CSlotWindow@UI@@QAEXK@Z$2
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?RestoreSlotCoolTime@CSlotWindow@UI@@QAEXK@Z$1
__ehfuncinfo$?RestoreSlotCoolTime@CSlotWindow@UI@@QAEXK@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?RestoreSlotCoolTime@CSlotWindow@UI@@QAEXK@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?StoreSlotCoolTime@CSlotWindow@UI@@QAEXKKMM@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?StoreSlotCoolTime@CSlotWindow@UI@@QAEXKKMM@Z$2
__ehfuncinfo$?StoreSlotCoolTime@CSlotWindow@UI@@QAEXKKMM@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?StoreSlotCoolTime@CSlotWindow@UI@@QAEXKKMM@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?SetSlotCountNew@CSlotWindow@UI@@QAEXKKK@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?SetSlotCountNew@CSlotWindow@UI@@QAEXKKK@Z$0
__ehfuncinfo$?SetSlotCountNew@CSlotWindow@UI@@QAEXKKK@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?SetSlotCountNew@CSlotWindow@UI@@QAEXKKK@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?SetSlotCount@CSlotWindow@UI@@QAEXKK@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?SetSlotCount@CSlotWindow@UI@@QAEXKK@Z$0
__ehfuncinfo$?SetSlotCount@CSlotWindow@UI@@QAEXKK@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?SetSlotCount@CSlotWindow@UI@@QAEXKK@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?AppendRequirementSignImage@CSlotWindow@UI@@QAEXPBD@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?AppendRequirementSignImage@CSlotWindow@UI@@QAEXPBD@Z$0
__ehfuncinfo$?AppendRequirementSignImage@CSlotWindow@UI@@QAEXPBD@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?AppendRequirementSignImage@CSlotWindow@UI@@QAEXPBD@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?AppendSlotButton@CSlotWindow@UI@@QAEXPBD00@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?AppendSlotButton@CSlotWindow@UI@@QAEXPBD00@Z$0
__ehfuncinfo$?AppendSlotButton@CSlotWindow@UI@@QAEXPBD00@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?AppendSlotButton@CSlotWindow@UI@@QAEXPBD00@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?SetCoverButton@CSlotWindow@UI@@QAEXKPBD000HH@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?SetCoverButton@CSlotWindow@UI@@QAEXKPBD000HH@Z$0
__ehfuncinfo$?SetCoverButton@CSlotWindow@UI@@QAEXKPBD000HH@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?SetCoverButton@CSlotWindow@UI@@QAEXKPBD000HH@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?AppendSlot@CSlotWindow@UI@@QAEXKHHHH@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?AppendSlot@CSlotWindow@UI@@QAEXKHHHH@Z$1
__ehfuncinfo$?AppendSlot@CSlotWindow@UI@@QAEXKHHHH@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?AppendSlot@CSlotWindow@UI@@QAEXKHHHH@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1CSlotWindow@UI@@UAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0CSlotWindow@UI@@QAE@PAU_object@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0CSlotWindow@UI@@QAE@PAU_object@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0CSlotWindow@UI@@QAE@PAU_object@@@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$??0CSlotWindow@UI@@QAE@PAU_object@@@Z$2
	DD	02H
	DD	FLAT:__unwindfunclet$??0CSlotWindow@UI@@QAE@PAU_object@@@Z$3
__ehfuncinfo$??0CSlotWindow@UI@@QAE@PAU_object@@@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$??0CSlotWindow@UI@@QAE@PAU_object@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?push_back@?$list@USSlot@CSlotWindow@UI@@V?$allocator@USSlot@CSlotWindow@UI@@@std@@@std@@QAEXABUSSlot@CSlotWindow@UI@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?push_back@?$list@USSlot@CSlotWindow@UI@@V?$allocator@USSlot@CSlotWindow@UI@@@std@@@std@@QAEXABUSSlot@CSlotWindow@UI@@@Z$1
__ehfuncinfo$?push_back@?$list@USSlot@CSlotWindow@UI@@V?$allocator@USSlot@CSlotWindow@UI@@@std@@@std@@QAEXABUSSlot@CSlotWindow@UI@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?push_back@?$list@USSlot@CSlotWindow@UI@@V?$allocator@USSlot@CSlotWindow@UI@@@std@@@std@@QAEXABUSSlot@CSlotWindow@UI@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?Type@CSlotWindow@UI@@SAKXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?Type@CSlotWindow@UI@@SAKXZ$0
__ehfuncinfo$?Type@CSlotWindow@UI@@SAKXZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?Type@CSlotWindow@UI@@SAKXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
; Function compile flags: /Ogtp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xtree
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\utility
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xtree
;	COMDAT ??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@PAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@PAX@1@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Rootnode$ = 12					; size = 4
??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@PAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@PAX@1@@Z PROC ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,UI::CSlotWindow::SStoreCoolDown> > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<unsigned long const ,UI::CSlotWindow::SStoreCoolDown>,void *> > >, COMDAT
; _this$ = ecx

; 742  :     void _Erase_tree(_Alnode& _Al, _Nodeptr _Rootnode) noexcept {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx
  00004	56		 push	 esi

; 743  :         while (!_Rootnode->_Isnil) { // free subtrees, then node

  00005	8b 75 0c	 mov	 esi, DWORD PTR __Rootnode$[ebp]
  00008	8b d9		 mov	 ebx, ecx
  0000a	80 7e 0d 00	 cmp	 BYTE PTR [esi+13], 0
  0000e	75 25		 jne	 SHORT $LN3@Erase_tree
  00010	57		 push	 edi
  00011	8b 7d 08	 mov	 edi, DWORD PTR __Al$[ebp]
$LL2@Erase_tree:

; 744  :             _Erase_tree(_Al, _Rootnode->_Right);

  00014	ff 76 08	 push	 DWORD PTR [esi+8]
  00017	8b cb		 mov	 ecx, ebx
  00019	57		 push	 edi
  0001a	e8 00 00 00 00	 call	 ??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@PAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@PAX@1@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,UI::CSlotWindow::SStoreCoolDown> > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<unsigned long const ,UI::CSlotWindow::SStoreCoolDown>,void *> > >
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\utility

; 602  :     _Ty _Old_val = static_cast<_Ty&&>(_Val);

  0001f	8b c6		 mov	 eax, esi

; 603  :     _Val         = static_cast<_Other&&>(_New_val);

  00021	8b 36		 mov	 esi, DWORD PTR [esi]
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory

; 255  :         ::operator delete(_Ptr, _Bytes);

  00023	6a 20		 push	 32			; 00000020H
  00025	50		 push	 eax
  00026	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0002b	83 c4 08	 add	 esp, 8
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xtree

; 743  :         while (!_Rootnode->_Isnil) { // free subtrees, then node

  0002e	80 7e 0d 00	 cmp	 BYTE PTR [esi+13], 0
  00032	74 e0		 je	 SHORT $LL2@Erase_tree
  00034	5f		 pop	 edi
$LN3@Erase_tree:
  00035	5e		 pop	 esi

; 745  :             _Alnode::value_type::_Freenode(_Al, _STD exchange(_Rootnode, _Rootnode->_Left));
; 746  :         }
; 747  :     }

  00036	5b		 pop	 ebx
  00037	5d		 pop	 ebp
  00038	c2 08 00	 ret	 8
??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@PAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@PAX@1@@Z ENDP ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,UI::CSlotWindow::SStoreCoolDown> > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<unsigned long const ,UI::CSlotWindow::SStoreCoolDown>,void *> > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xutility
;	COMDAT ??$_Copy_memmove@PAPAKPAPAK@std@@YAPAPAKPAPAK00@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
??$_Copy_memmove@PAPAKPAPAK@std@@YAPAPAKPAPAK00@Z PROC	; std::_Copy_memmove<unsigned long * *,unsigned long * *>, COMDAT

; 4058 : _OutCtgIt _Copy_memmove(_CtgIt _First, _CtgIt _Last, _OutCtgIt _Dest) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 4059 :     auto _FirstPtr              = _To_address(_First);
; 4060 :     auto _LastPtr               = _To_address(_Last);
; 4061 :     auto _DestPtr               = _To_address(_Dest);
; 4062 :     const char* const _First_ch = const_cast<const char*>(reinterpret_cast<const volatile char*>(_FirstPtr));
; 4063 :     const char* const _Last_ch  = const_cast<const char*>(reinterpret_cast<const volatile char*>(_LastPtr));
; 4064 :     char* const _Dest_ch        = const_cast<char*>(reinterpret_cast<const volatile char*>(_DestPtr));
; 4065 :     const auto _Count           = static_cast<size_t>(_Last_ch - _First_ch);

  00003	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  00006	56		 push	 esi

; 4066 :     _CSTD memmove(_Dest_ch, _First_ch, _Count);

  00007	8b 75 10	 mov	 esi, DWORD PTR __Dest$[ebp]
  0000a	57		 push	 edi
  0000b	8b 7d 0c	 mov	 edi, DWORD PTR __Last$[ebp]
  0000e	2b f8		 sub	 edi, eax
  00010	57		 push	 edi
  00011	50		 push	 eax
  00012	56		 push	 esi
  00013	e8 00 00 00 00	 call	 _memmove
  00018	83 c4 0c	 add	 esp, 12			; 0000000cH

; 4067 :     if constexpr (is_pointer_v<_OutCtgIt>) {
; 4068 :         return reinterpret_cast<_OutCtgIt>(_Dest_ch + _Count);

  0001b	8d 04 37	 lea	 eax, DWORD PTR [edi+esi]
  0001e	5f		 pop	 edi
  0001f	5e		 pop	 esi

; 4069 :     } else {
; 4070 :         return _Dest + (_LastPtr - _FirstPtr);
; 4071 :     }
; 4072 : }

  00020	5d		 pop	 ebp
  00021	c3		 ret	 0
??$_Copy_memmove@PAPAKPAPAK@std@@YAPAPAKPAPAK00@Z ENDP	; std::_Copy_memmove<unsigned long * *,unsigned long * *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory
;	COMDAT ??$_Zero_range@PAPAK@std@@YAPAPAKQAPAK0@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
??$_Zero_range@PAPAK@std@@YAPAPAKQAPAK0@Z PROC		; std::_Zero_range<unsigned long * *>, COMDAT

; 1789 : _Ptr _Zero_range(const _Ptr _First, const _Ptr _Last) { // fill [_First, _Last) with zeroes

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1790 :     char* const _First_ch = reinterpret_cast<char*>(_To_address(_First));
; 1791 :     char* const _Last_ch  = reinterpret_cast<char*>(_To_address(_Last));
; 1792 :     _CSTD memset(_First_ch, 0, static_cast<size_t>(_Last_ch - _First_ch));

  00003	8b 55 08	 mov	 edx, DWORD PTR __First$[ebp]
  00006	8b 4d 0c	 mov	 ecx, DWORD PTR __Last$[ebp]
  00009	2b ca		 sub	 ecx, edx
  0000b	51		 push	 ecx
  0000c	6a 00		 push	 0
  0000e	52		 push	 edx
  0000f	e8 00 00 00 00	 call	 _memset

; 1793 :     return _Last;

  00014	8b 45 0c	 mov	 eax, DWORD PTR __Last$[ebp]
  00017	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1794 : }

  0001a	5d		 pop	 ebp
  0001b	c3		 ret	 0
??$_Zero_range@PAPAK@std@@YAPAPAKQAPAK0@Z ENDP		; std::_Zero_range<unsigned long * *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory
;	COMDAT ??1?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@PAX@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@PAX@std@@@std@@@std@@QAE@XZ PROC ; std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<unsigned long const ,UI::CSlotWindow::SStoreCoolDown>,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<unsigned long const ,UI::CSlotWindow::SStoreCoolDown>,void *> > >, COMDAT
; _this$ = ecx

; 970  :         if (_Ptr) {

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	85 c0		 test	 eax, eax
  00005	74 0b		 je	 SHORT $LN8@Alloc_cons

; 255  :         ::operator delete(_Ptr, _Bytes);

  00007	6a 20		 push	 32			; 00000020H
  00009	50		 push	 eax
  0000a	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0000f	83 c4 08	 add	 esp, 8
$LN8@Alloc_cons:

; 971  :             _Al.deallocate(_Ptr, 1);
; 972  :         }
; 973  :     }

  00012	c3		 ret	 0
??1?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@PAX@std@@@std@@@std@@QAE@XZ ENDP ; std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<unsigned long const ,UI::CSlotWindow::SStoreCoolDown>,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<unsigned long const ,UI::CSlotWindow::SStoreCoolDown>,void *> > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory
;	COMDAT ??$_Uninitialized_value_construct_n_unchecked1@PAPAKI@std@@YAPAPAKPAPAKI@Z
_TEXT	SEGMENT
__UFirst$ = 8						; size = 4
__Count$ = 12						; size = 4
??$_Uninitialized_value_construct_n_unchecked1@PAPAKI@std@@YAPAPAKPAPAKI@Z PROC ; std::_Uninitialized_value_construct_n_unchecked1<unsigned long * *,unsigned int>, COMDAT

; 1821 : _NoThrowFwdIt _Uninitialized_value_construct_n_unchecked1(_NoThrowFwdIt _UFirst, _Diff _Count) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1822 :     // value-initialize all elements in [_UFirst, _UFirst + _Count_raw)
; 1823 :     _STL_INTERNAL_CHECK(_Count >= 0);
; 1824 :     if constexpr (_Use_memset_value_construct_v<_NoThrowFwdIt>) {
; 1825 :         return _Zero_range(_UFirst, _UFirst + _Count);

  00003	8b 4d 08	 mov	 ecx, DWORD PTR __UFirst$[ebp]
  00006	8b 45 0c	 mov	 eax, DWORD PTR __Count$[ebp]
  00009	8d 04 81	 lea	 eax, DWORD PTR [ecx+eax*4]
  0000c	89 45 0c	 mov	 DWORD PTR __Count$[ebp], eax
  0000f	89 4d 08	 mov	 DWORD PTR __UFirst$[ebp], ecx

; 1826 :     } else {
; 1827 :         _Uninitialized_backout<_NoThrowFwdIt> _Backout{_UFirst};
; 1828 :         for (; 0 < _Count; --_Count) {
; 1829 :             _Backout._Emplace_back();
; 1830 :         }
; 1831 : 
; 1832 :         return _Backout._Release();
; 1833 :     }
; 1834 : }

  00012	5d		 pop	 ebp

; 1822 :     // value-initialize all elements in [_UFirst, _UFirst + _Count_raw)
; 1823 :     _STL_INTERNAL_CHECK(_Count >= 0);
; 1824 :     if constexpr (_Use_memset_value_construct_v<_NoThrowFwdIt>) {
; 1825 :         return _Zero_range(_UFirst, _UFirst + _Count);

  00013	e9 00 00 00 00	 jmp	 ??$_Zero_range@PAPAK@std@@YAPAPAKQAPAK0@Z ; std::_Zero_range<unsigned long * *>
??$_Uninitialized_value_construct_n_unchecked1@PAPAKI@std@@YAPAPAKPAPAKI@Z ENDP ; std::_Uninitialized_value_construct_n_unchecked1<unsigned long * *,unsigned int>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory
;	COMDAT ??$uninitialized_copy@PAPAKPAPAK@std@@YAPAPAKQAPAK0PAPAK@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
??$uninitialized_copy@PAPAKPAPAK@std@@YAPAPAKQAPAK0PAPAK@Z PROC ; std::uninitialized_copy<unsigned long * *,unsigned long * *>, COMDAT

; 1687 : _NoThrowFwdIt uninitialized_copy(const _InIt _First, const _InIt _Last, _NoThrowFwdIt _Dest) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1688 :     // copy [_First, _Last) to raw [_Dest, ...)
; 1689 :     _Adl_verify_range(_First, _Last);
; 1690 :     auto _UFirst      = _Get_unwrapped(_First);
; 1691 :     const auto _ULast = _Get_unwrapped(_Last);
; 1692 :     auto _UDest       = _Get_unwrapped_n(_Dest, _Idl_distance<_InIt>(_UFirst, _ULast));
; 1693 :     _Seek_wrapped(_Dest, _Uninitialized_copy_unchecked(_UFirst, _ULast, _UDest));
; 1694 :     return _Dest;
; 1695 : }

  00003	5d		 pop	 ebp

; 1674 :             return _Copy_memmove(_First, _Last, _Dest);

  00004	e9 00 00 00 00	 jmp	 ??$_Copy_memmove@PAPAKPAPAK@std@@YAPAPAKPAPAK00@Z ; std::_Copy_memmove<unsigned long * *,unsigned long * *>
??$uninitialized_copy@PAPAKPAPAK@std@@YAPAPAKQAPAK0PAPAK@Z ENDP ; std::uninitialized_copy<unsigned long * *,unsigned long * *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory
;	COMDAT ??1?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@USSlot@CSlotWindow@UI@@PAX@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@USSlot@CSlotWindow@UI@@PAX@std@@@std@@@std@@QAE@XZ PROC ; std::_Alloc_construct_ptr<std::allocator<std::_List_node<UI::CSlotWindow::SSlot,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_List_node<UI::CSlotWindow::SSlot,void *> > >, COMDAT
; _this$ = ecx

; 970  :         if (_Ptr) {

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	85 c0		 test	 eax, eax
  00005	74 0e		 je	 SHORT $LN8@Alloc_cons

; 255  :         ::operator delete(_Ptr, _Bytes);

  00007	68 84 00 00 00	 push	 132			; 00000084H
  0000c	50		 push	 eax
  0000d	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00012	83 c4 08	 add	 esp, 8
$LN8@Alloc_cons:

; 971  :             _Al.deallocate(_Ptr, 1);
; 972  :         }
; 973  :     }

  00015	c3		 ret	 0
??1?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@USSlot@CSlotWindow@UI@@PAX@std@@@std@@@std@@QAE@XZ ENDP ; std::_Alloc_construct_ptr<std::allocator<std::_List_node<UI::CSlotWindow::SSlot,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_List_node<UI::CSlotWindow::SSlot,void *> > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory
;	COMDAT ??1?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@KPAX@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@KPAX@std@@@std@@@std@@QAE@XZ PROC ; std::_Alloc_construct_ptr<std::allocator<std::_List_node<unsigned long,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_List_node<unsigned long,void *> > >, COMDAT
; _this$ = ecx

; 970  :         if (_Ptr) {

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	85 c0		 test	 eax, eax
  00005	74 0b		 je	 SHORT $LN8@Alloc_cons

; 255  :         ::operator delete(_Ptr, _Bytes);

  00007	6a 0c		 push	 12			; 0000000cH
  00009	50		 push	 eax
  0000a	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0000f	83 c4 08	 add	 esp, 8
$LN8@Alloc_cons:

; 971  :             _Al.deallocate(_Ptr, 1);
; 972  :         }
; 973  :     }

  00012	c3		 ret	 0
??1?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@KPAX@std@@@std@@@std@@QAE@XZ ENDP ; std::_Alloc_construct_ptr<std::allocator<std::_List_node<unsigned long,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_List_node<unsigned long,void *> > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xtree
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\utility
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xtree
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xtree
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xtree
;	COMDAT ??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBKV?$map@KUSStoreCoolDown@CSlotWindow@UI@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@5@@std@@@std@@PAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$map@KUSStoreCoolDown@CSlotWindow@UI@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@5@@std@@@std@@@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBKV?$map@KUSStoreCoolDown@CSlotWindow@UI@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@5@@std@@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBKV?$map@KUSStoreCoolDown@CSlotWindow@UI@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@5@@std@@@std@@PAX@1@@Z
_TEXT	SEGMENT
_this$1$ = -4						; size = 4
__Al$ = 8						; size = 4
__Rootnode$ = 12					; size = 4
??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBKV?$map@KUSStoreCoolDown@CSlotWindow@UI@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@5@@std@@@std@@PAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$map@KUSStoreCoolDown@CSlotWindow@UI@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@5@@std@@@std@@@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBKV?$map@KUSStoreCoolDown@CSlotWindow@UI@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@5@@std@@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBKV?$map@KUSStoreCoolDown@CSlotWindow@UI@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@5@@std@@@std@@PAX@1@@Z PROC ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,std::map<unsigned long,UI::CSlotWindow::SStoreCoolDown,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,UI::CSlotWindow::SStoreCoolDown> > > > > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<unsigned long const ,std::map<unsigned long,UI::CSlotWindow::SStoreCoolDown,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,UI::CSlotWindow::SStoreCoolDown> > > >,void *> > >, COMDAT
; _this$ = ecx

; 742  :     void _Erase_tree(_Alnode& _Al, _Nodeptr _Rootnode) noexcept {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi

; 743  :         while (!_Rootnode->_Isnil) { // free subtrees, then node

  00005	8b 75 0c	 mov	 esi, DWORD PTR __Rootnode$[ebp]
  00008	8b c1		 mov	 eax, ecx
  0000a	89 45 fc	 mov	 DWORD PTR _this$1$[ebp], eax
  0000d	80 7e 0d 00	 cmp	 BYTE PTR [esi+13], 0
  00011	75 32		 jne	 SHORT $LN3@Erase_tree
  00013	53		 push	 ebx
  00014	8b 5d 08	 mov	 ebx, DWORD PTR __Al$[ebp]
  00017	57		 push	 edi
$LL2@Erase_tree:

; 744  :             _Erase_tree(_Al, _Rootnode->_Right);

  00018	ff 76 08	 push	 DWORD PTR [esi+8]
  0001b	8b c8		 mov	 ecx, eax
  0001d	53		 push	 ebx
  0001e	e8 00 00 00 00	 call	 ??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBKV?$map@KUSStoreCoolDown@CSlotWindow@UI@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@5@@std@@@std@@PAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$map@KUSStoreCoolDown@CSlotWindow@UI@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@5@@std@@@std@@@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBKV?$map@KUSStoreCoolDown@CSlotWindow@UI@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@5@@std@@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBKV?$map@KUSStoreCoolDown@CSlotWindow@UI@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@5@@std@@@std@@PAX@1@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,std::map<unsigned long,UI::CSlotWindow::SStoreCoolDown,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,UI::CSlotWindow::SStoreCoolDown> > > > > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<unsigned long const ,std::map<unsigned long,UI::CSlotWindow::SStoreCoolDown,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,UI::CSlotWindow::SStoreCoolDown> > > >,void *> > >
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\utility

; 602  :     _Ty _Old_val = static_cast<_Ty&&>(_Val);

  00023	8b fe		 mov	 edi, esi

; 603  :     _Val         = static_cast<_Other&&>(_New_val);

  00025	8b 36		 mov	 esi, DWORD PTR [esi]
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xtree

; 380  :         allocator_traits<_Alloc>::destroy(_Al, _STD addressof(_Ptr->_Myval));

  00027	8d 4f 14	 lea	 ecx, DWORD PTR [edi+20]
  0002a	e8 00 00 00 00	 call	 ??1?$_Tree@V?$_Tmap_traits@KUSStoreCoolDown@CSlotWindow@UI@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@5@$0A@@std@@@std@@QAE@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,UI::CSlotWindow::SStoreCoolDown,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,UI::CSlotWindow::SStoreCoolDown> >,0> >::~_Tree<std::_Tmap_traits<unsigned long,UI::CSlotWindow::SStoreCoolDown,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,UI::CSlotWindow::SStoreCoolDown> >,0> >
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory

; 255  :         ::operator delete(_Ptr, _Bytes);

  0002f	6a 1c		 push	 28			; 0000001cH
  00031	57		 push	 edi
  00032	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xtree

; 743  :         while (!_Rootnode->_Isnil) { // free subtrees, then node

  00037	8b 45 fc	 mov	 eax, DWORD PTR _this$1$[ebp]
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory

; 255  :         ::operator delete(_Ptr, _Bytes);

  0003a	83 c4 08	 add	 esp, 8
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xtree

; 743  :         while (!_Rootnode->_Isnil) { // free subtrees, then node

  0003d	80 7e 0d 00	 cmp	 BYTE PTR [esi+13], 0
  00041	74 d5		 je	 SHORT $LL2@Erase_tree
  00043	5f		 pop	 edi
  00044	5b		 pop	 ebx
$LN3@Erase_tree:
  00045	5e		 pop	 esi

; 745  :             _Alnode::value_type::_Freenode(_Al, _STD exchange(_Rootnode, _Rootnode->_Left));
; 746  :         }
; 747  :     }

  00046	8b e5		 mov	 esp, ebp
  00048	5d		 pop	 ebp
  00049	c2 08 00	 ret	 8
??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBKV?$map@KUSStoreCoolDown@CSlotWindow@UI@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@5@@std@@@std@@PAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$map@KUSStoreCoolDown@CSlotWindow@UI@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@5@@std@@@std@@@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBKV?$map@KUSStoreCoolDown@CSlotWindow@UI@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@5@@std@@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBKV?$map@KUSStoreCoolDown@CSlotWindow@UI@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@5@@std@@@std@@PAX@1@@Z ENDP ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,std::map<unsigned long,UI::CSlotWindow::SStoreCoolDown,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,UI::CSlotWindow::SStoreCoolDown> > > > > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<unsigned long const ,std::map<unsigned long,UI::CSlotWindow::SStoreCoolDown,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,UI::CSlotWindow::SStoreCoolDown> > > >,void *> > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory
;	COMDAT ??1?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBKV?$map@KUSStoreCoolDown@CSlotWindow@UI@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@5@@std@@@std@@PAX@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBKV?$map@KUSStoreCoolDown@CSlotWindow@UI@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@5@@std@@@std@@PAX@std@@@std@@@std@@QAE@XZ PROC ; std::_Tree_temp_node_alloc<std::allocator<std::_Tree_node<std::pair<unsigned long const ,std::map<unsigned long,UI::CSlotWindow::SStoreCoolDown,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,UI::CSlotWindow::SStoreCoolDown> > > >,void *> > >::~_Tree_temp_node_alloc<std::allocator<std::_Tree_node<std::pair<unsigned long const ,std::map<unsigned long,UI::CSlotWindow::SStoreCoolDown,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,UI::CSlotWindow::SStoreCoolDown> > > >,void *> > >, COMDAT
; _this$ = ecx

; 970  :         if (_Ptr) {

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	85 c0		 test	 eax, eax
  00005	74 0b		 je	 SHORT $LN10@Tree_temp_

; 255  :         ::operator delete(_Ptr, _Bytes);

  00007	6a 1c		 push	 28			; 0000001cH
  00009	50		 push	 eax
  0000a	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0000f	83 c4 08	 add	 esp, 8
$LN10@Tree_temp_:
  00012	c3		 ret	 0
??1?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBKV?$map@KUSStoreCoolDown@CSlotWindow@UI@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@5@@std@@@std@@PAX@std@@@std@@@std@@QAE@XZ ENDP ; std::_Tree_temp_node_alloc<std::allocator<std::_Tree_node<std::pair<unsigned long const ,std::map<unsigned long,UI::CSlotWindow::SStoreCoolDown,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,UI::CSlotWindow::SStoreCoolDown> > > >,void *> > >::~_Tree_temp_node_alloc<std::allocator<std::_Tree_node<std::pair<unsigned long const ,std::map<unsigned long,UI::CSlotWindow::SStoreCoolDown,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,UI::CSlotWindow::SStoreCoolDown> > > >,void *> > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory
;	COMDAT ??1?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBKV?$map@KUSStoreCoolDown@CSlotWindow@UI@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@5@@std@@@std@@PAX@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBKV?$map@KUSStoreCoolDown@CSlotWindow@UI@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@5@@std@@@std@@PAX@std@@@std@@@std@@QAE@XZ PROC ; std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<unsigned long const ,std::map<unsigned long,UI::CSlotWindow::SStoreCoolDown,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,UI::CSlotWindow::SStoreCoolDown> > > >,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<unsigned long const ,std::map<unsigned long,UI::CSlotWindow::SStoreCoolDown,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,UI::CSlotWindow::SStoreCoolDown> > > >,void *> > >, COMDAT
; _this$ = ecx

; 970  :         if (_Ptr) {

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	85 c0		 test	 eax, eax
  00005	74 0b		 je	 SHORT $LN8@Alloc_cons

; 255  :         ::operator delete(_Ptr, _Bytes);

  00007	6a 1c		 push	 28			; 0000001cH
  00009	50		 push	 eax
  0000a	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0000f	83 c4 08	 add	 esp, 8
$LN8@Alloc_cons:

; 971  :             _Al.deallocate(_Ptr, 1);
; 972  :         }
; 973  :     }

  00012	c3		 ret	 0
??1?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBKV?$map@KUSStoreCoolDown@CSlotWindow@UI@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@5@@std@@@std@@PAX@std@@@std@@@std@@QAE@XZ ENDP ; std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<unsigned long const ,std::map<unsigned long,UI::CSlotWindow::SStoreCoolDown,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,UI::CSlotWindow::SStoreCoolDown> > > >,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<unsigned long const ,std::map<unsigned long,UI::CSlotWindow::SStoreCoolDown,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,UI::CSlotWindow::SStoreCoolDown> > > >,void *> > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xtree
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xstddef
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xtree
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xstddef
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xtree
;	COMDAT ??$_Find_lower_bound@K@?$_Tree@V?$_Tmap_traits@KV?$map@KUSStoreCoolDown@CSlotWindow@UI@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@5@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$map@KUSStoreCoolDown@CSlotWindow@UI@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@5@@std@@@std@@@2@$0A@@std@@@std@@IBE?AU?$_Tree_find_result@PAU?$_Tree_node@U?$pair@$$CBKV?$map@KUSStoreCoolDown@CSlotWindow@UI@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@5@@std@@@std@@PAX@std@@@1@ABK@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Keyval$ = 12						; size = 4
??$_Find_lower_bound@K@?$_Tree@V?$_Tmap_traits@KV?$map@KUSStoreCoolDown@CSlotWindow@UI@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@5@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$map@KUSStoreCoolDown@CSlotWindow@UI@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@5@@std@@@std@@@2@$0A@@std@@@std@@IBE?AU?$_Tree_find_result@PAU?$_Tree_node@U?$pair@$$CBKV?$map@KUSStoreCoolDown@CSlotWindow@UI@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@5@@std@@@std@@PAX@std@@@1@ABK@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned long,std::map<unsigned long,UI::CSlotWindow::SStoreCoolDown,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,UI::CSlotWindow::SStoreCoolDown> > >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::map<unsigned long,UI::CSlotWindow::SStoreCoolDown,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,UI::CSlotWindow::SStoreCoolDown> > > > >,0> >::_Find_lower_bound<unsigned long>, COMDAT
; _this$ = ecx

; 1595 :     _Tree_find_result<_Nodeptr> _Find_lower_bound(const _Keyty& _Keyval) const {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1596 :         const auto _Scary = _Get_scary();
; 1597 :         _Tree_find_result<_Nodeptr> _Result{{_Scary->_Myhead->_Parent, _Tree_child::_Right}, _Scary->_Myhead};

  00003	8b 09		 mov	 ecx, DWORD PTR [ecx]
  00005	8b 55 08	 mov	 edx, DWORD PTR ___$ReturnUdt$[ebp]
  00008	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  0000b	89 02		 mov	 DWORD PTR [edx], eax
  0000d	c7 42 04 00 00
	00 00		 mov	 DWORD PTR [edx+4], 0
  00014	89 4a 08	 mov	 DWORD PTR [edx+8], ecx

; 1598 :         _Nodeptr _Trynode = _Result._Location._Parent;
; 1599 :         while (!_Trynode->_Isnil) {

  00017	80 78 0d 00	 cmp	 BYTE PTR [eax+13], 0
  0001b	75 28		 jne	 SHORT $LN12@Find_lower
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xstddef

; 117  :         return _Left < _Right;

  0001d	8b 4d 0c	 mov	 ecx, DWORD PTR __Keyval$[ebp]
  00020	56		 push	 esi
  00021	8b 31		 mov	 esi, DWORD PTR [ecx]
$LL2@Find_lower:
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xtree

; 1600 :             _Result._Location._Parent = _Trynode;

  00023	89 02		 mov	 DWORD PTR [edx], eax
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xstddef

; 117  :         return _Left < _Right;

  00025	39 70 10	 cmp	 DWORD PTR [eax+16], esi
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xtree

; 1601 :             if (_DEBUG_LT_PRED(_Getcomp(), _Traits::_Kfn(_Trynode->_Myval), _Keyval)) {

  00028	73 07		 jae	 SHORT $LN4@Find_lower

; 1602 :                 _Result._Location._Child = _Tree_child::_Right;
; 1603 :                 _Trynode                 = _Trynode->_Right;

  0002a	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  0002d	33 c9		 xor	 ecx, ecx

; 1604 :             } else {

  0002f	eb 0a		 jmp	 SHORT $LN5@Find_lower
$LN4@Find_lower:

; 1605 :                 _Result._Location._Child = _Tree_child::_Left;
; 1606 :                 _Result._Bound           = _Trynode;

  00031	89 42 08	 mov	 DWORD PTR [edx+8], eax

; 1607 :                 _Trynode                 = _Trynode->_Left;

  00034	b9 01 00 00 00	 mov	 ecx, 1
  00039	8b 00		 mov	 eax, DWORD PTR [eax]
$LN5@Find_lower:

; 1598 :         _Nodeptr _Trynode = _Result._Location._Parent;
; 1599 :         while (!_Trynode->_Isnil) {

  0003b	89 4a 04	 mov	 DWORD PTR [edx+4], ecx
  0003e	80 78 0d 00	 cmp	 BYTE PTR [eax+13], 0
  00042	74 df		 je	 SHORT $LL2@Find_lower

; 1608 :             }
; 1609 :         }
; 1610 : 
; 1611 :         return _Result;

  00044	5e		 pop	 esi
$LN12@Find_lower:

; 1612 :     }

  00045	8b c2		 mov	 eax, edx
  00047	5d		 pop	 ebp
  00048	c2 08 00	 ret	 8
??$_Find_lower_bound@K@?$_Tree@V?$_Tmap_traits@KV?$map@KUSStoreCoolDown@CSlotWindow@UI@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@5@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$map@KUSStoreCoolDown@CSlotWindow@UI@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@5@@std@@@std@@@2@$0A@@std@@@std@@IBE?AU?$_Tree_find_result@PAU?$_Tree_node@U?$pair@$$CBKV?$map@KUSStoreCoolDown@CSlotWindow@UI@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@5@@std@@@std@@PAX@std@@@1@ABK@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,std::map<unsigned long,UI::CSlotWindow::SStoreCoolDown,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,UI::CSlotWindow::SStoreCoolDown> > >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::map<unsigned long,UI::CSlotWindow::SStoreCoolDown,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,UI::CSlotWindow::SStoreCoolDown> > > > >,0> >::_Find_lower_bound<unsigned long>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xtree
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xstddef
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xtree
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xstddef
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xtree
;	COMDAT ??$_Find_lower_bound@K@?$_Tree@V?$_Tmap_traits@KUSStoreCoolDown@CSlotWindow@UI@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@5@$0A@@std@@@std@@IBE?AU?$_Tree_find_result@PAU?$_Tree_node@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@PAX@std@@@1@ABK@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Keyval$ = 12						; size = 4
??$_Find_lower_bound@K@?$_Tree@V?$_Tmap_traits@KUSStoreCoolDown@CSlotWindow@UI@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@5@$0A@@std@@@std@@IBE?AU?$_Tree_find_result@PAU?$_Tree_node@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@PAX@std@@@1@ABK@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned long,UI::CSlotWindow::SStoreCoolDown,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,UI::CSlotWindow::SStoreCoolDown> >,0> >::_Find_lower_bound<unsigned long>, COMDAT
; _this$ = ecx

; 1595 :     _Tree_find_result<_Nodeptr> _Find_lower_bound(const _Keyty& _Keyval) const {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1596 :         const auto _Scary = _Get_scary();
; 1597 :         _Tree_find_result<_Nodeptr> _Result{{_Scary->_Myhead->_Parent, _Tree_child::_Right}, _Scary->_Myhead};

  00003	8b 09		 mov	 ecx, DWORD PTR [ecx]
  00005	8b 55 08	 mov	 edx, DWORD PTR ___$ReturnUdt$[ebp]
  00008	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  0000b	89 02		 mov	 DWORD PTR [edx], eax
  0000d	c7 42 04 00 00
	00 00		 mov	 DWORD PTR [edx+4], 0
  00014	89 4a 08	 mov	 DWORD PTR [edx+8], ecx

; 1598 :         _Nodeptr _Trynode = _Result._Location._Parent;
; 1599 :         while (!_Trynode->_Isnil) {

  00017	80 78 0d 00	 cmp	 BYTE PTR [eax+13], 0
  0001b	75 28		 jne	 SHORT $LN12@Find_lower
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xstddef

; 117  :         return _Left < _Right;

  0001d	8b 4d 0c	 mov	 ecx, DWORD PTR __Keyval$[ebp]
  00020	56		 push	 esi
  00021	8b 31		 mov	 esi, DWORD PTR [ecx]
$LL2@Find_lower:
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xtree

; 1600 :             _Result._Location._Parent = _Trynode;

  00023	89 02		 mov	 DWORD PTR [edx], eax
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xstddef

; 117  :         return _Left < _Right;

  00025	39 70 10	 cmp	 DWORD PTR [eax+16], esi
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xtree

; 1601 :             if (_DEBUG_LT_PRED(_Getcomp(), _Traits::_Kfn(_Trynode->_Myval), _Keyval)) {

  00028	73 07		 jae	 SHORT $LN4@Find_lower

; 1602 :                 _Result._Location._Child = _Tree_child::_Right;
; 1603 :                 _Trynode                 = _Trynode->_Right;

  0002a	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  0002d	33 c9		 xor	 ecx, ecx

; 1604 :             } else {

  0002f	eb 0a		 jmp	 SHORT $LN5@Find_lower
$LN4@Find_lower:

; 1605 :                 _Result._Location._Child = _Tree_child::_Left;
; 1606 :                 _Result._Bound           = _Trynode;

  00031	89 42 08	 mov	 DWORD PTR [edx+8], eax

; 1607 :                 _Trynode                 = _Trynode->_Left;

  00034	b9 01 00 00 00	 mov	 ecx, 1
  00039	8b 00		 mov	 eax, DWORD PTR [eax]
$LN5@Find_lower:

; 1598 :         _Nodeptr _Trynode = _Result._Location._Parent;
; 1599 :         while (!_Trynode->_Isnil) {

  0003b	89 4a 04	 mov	 DWORD PTR [edx+4], ecx
  0003e	80 78 0d 00	 cmp	 BYTE PTR [eax+13], 0
  00042	74 df		 je	 SHORT $LL2@Find_lower

; 1608 :             }
; 1609 :         }
; 1610 : 
; 1611 :         return _Result;

  00044	5e		 pop	 esi
$LN12@Find_lower:

; 1612 :     }

  00045	8b c2		 mov	 eax, edx
  00047	5d		 pop	 ebp
  00048	c2 08 00	 ret	 8
??$_Find_lower_bound@K@?$_Tree@V?$_Tmap_traits@KUSStoreCoolDown@CSlotWindow@UI@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@5@$0A@@std@@@std@@IBE?AU?$_Tree_find_result@PAU?$_Tree_node@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@PAX@std@@@1@ABK@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,UI::CSlotWindow::SStoreCoolDown,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,UI::CSlotWindow::SStoreCoolDown> >,0> >::_Find_lower_bound<unsigned long>
_TEXT	ENDS
; Function compile flags: /Odsp
;	COMDAT ??_9CWindow@UI@@$B3AE
_TEXT	SEGMENT
??_9CWindow@UI@@$B3AE PROC				; UI::CWindow::`vcall'{4}', COMDAT
  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	ff 60 04	 jmp	 DWORD PTR [eax+4]
??_9CWindow@UI@@$B3AE ENDP				; UI::CWindow::`vcall'{4}'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xtree
;	COMDAT ?_Insert_node@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@PAX@2@U?$_Tree_id@PAU?$_Tree_node@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@PAX@std@@@2@QAU32@@Z
_TEXT	SEGMENT
__Head$1$ = -8						; size = 4
_this$1$ = -4						; size = 4
__Loc$ = 8						; size = 8
__Newnode$ = 16						; size = 4
?_Insert_node@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@PAX@2@U?$_Tree_id@PAU?$_Tree_node@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@PAX@std@@@2@QAU32@@Z PROC ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,UI::CSlotWindow::SStoreCoolDown> > >::_Insert_node, COMDAT
; _this$ = ecx

; 644  :     _Nodeptr _Insert_node(const _Tree_id<_Nodeptr> _Loc, const _Nodeptr _Newnode) noexcept {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8

; 645  :         ++_Mysize;
; 646  :         const auto _Head  = _Myhead;
; 647  :         _Newnode->_Parent = _Loc._Parent;

  00006	8b 55 08	 mov	 edx, DWORD PTR __Loc$[ebp]
  00009	8b c1		 mov	 eax, ecx
  0000b	89 45 fc	 mov	 DWORD PTR _this$1$[ebp], eax
  0000e	8b 08		 mov	 ecx, DWORD PTR [eax]
  00010	ff 40 04	 inc	 DWORD PTR [eax+4]
  00013	8b 45 10	 mov	 eax, DWORD PTR __Newnode$[ebp]
  00016	89 4d f8	 mov	 DWORD PTR __Head$1$[ebp], ecx
  00019	89 50 04	 mov	 DWORD PTR [eax+4], edx

; 648  :         if (_Loc._Parent == _Head) { // first node in tree, just set head values

  0001c	3b d1		 cmp	 edx, ecx
  0001e	75 12		 jne	 SHORT $LN5@Insert_nod

; 649  :             _Head->_Left     = _Newnode;

  00020	89 01		 mov	 DWORD PTR [ecx], eax

; 650  :             _Head->_Parent   = _Newnode;

  00022	89 41 04	 mov	 DWORD PTR [ecx+4], eax

; 651  :             _Head->_Right    = _Newnode;

  00025	89 41 08	 mov	 DWORD PTR [ecx+8], eax

; 652  :             _Newnode->_Color = _Black; // the root is black

  00028	c6 40 0c 01	 mov	 BYTE PTR [eax+12], 1

; 711  :     }

  0002c	8b e5		 mov	 esp, ebp
  0002e	5d		 pop	 ebp
  0002f	c2 0c 00	 ret	 12			; 0000000cH
$LN5@Insert_nod:

; 653  :             return _Newnode;
; 654  :         }
; 655  : 
; 656  :         _STL_INTERNAL_CHECK(_Loc._Child != _Tree_child::_Unused);
; 657  :         if (_Loc._Child == _Tree_child::_Right) { // add to right of _Loc._Parent

  00032	83 7d 0c 00	 cmp	 DWORD PTR __Loc$[ebp+4], 0
  00036	75 0d		 jne	 SHORT $LN6@Insert_nod

; 658  :             _STL_INTERNAL_CHECK(_Loc._Parent->_Right->_Isnil);
; 659  :             _Loc._Parent->_Right = _Newnode;

  00038	89 42 08	 mov	 DWORD PTR [edx+8], eax

; 660  :             if (_Loc._Parent == _Head->_Right) { // remember rightmost node

  0003b	3b 51 08	 cmp	 edx, DWORD PTR [ecx+8]
  0003e	75 0d		 jne	 SHORT $LN9@Insert_nod

; 661  :                 _Head->_Right = _Newnode;

  00040	89 41 08	 mov	 DWORD PTR [ecx+8], eax

; 662  :             }
; 663  :         } else { // add to left of _Loc._Parent

  00043	eb 08		 jmp	 SHORT $LN9@Insert_nod
$LN6@Insert_nod:

; 664  :             _STL_INTERNAL_CHECK(_Loc._Parent->_Left->_Isnil);
; 665  :             _Loc._Parent->_Left = _Newnode;

  00045	89 02		 mov	 DWORD PTR [edx], eax

; 666  :             if (_Loc._Parent == _Head->_Left) { // remember leftmost node

  00047	3b 11		 cmp	 edx, DWORD PTR [ecx]
  00049	75 02		 jne	 SHORT $LN9@Insert_nod

; 667  :                 _Head->_Left = _Newnode;

  0004b	89 01		 mov	 DWORD PTR [ecx], eax
$LN9@Insert_nod:

; 668  :             }
; 669  :         }
; 670  : 
; 671  :         for (_Nodeptr _Pnode = _Newnode; _Pnode->_Parent->_Color == _Red;) {

  0004d	8b d0		 mov	 edx, eax
  0004f	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00052	80 78 0c 00	 cmp	 BYTE PTR [eax+12], 0
  00056	0f 85 99 01 00
	00		 jne	 $LN3@Insert_nod
  0005c	53		 push	 ebx
  0005d	56		 push	 esi
  0005e	57		 push	 edi
  0005f	90		 npad	 1
$LL2@Insert_nod:

; 672  :             if (_Pnode->_Parent == _Pnode->_Parent->_Parent->_Left) { // fixup red-red in left subtree

  00060	8b 4a 04	 mov	 ecx, DWORD PTR [edx+4]
  00063	8d 7a 04	 lea	 edi, DWORD PTR [edx+4]
  00066	8b 71 04	 mov	 esi, DWORD PTR [ecx+4]
  00069	8d 59 04	 lea	 ebx, DWORD PTR [ecx+4]
  0006c	8b 06		 mov	 eax, DWORD PTR [esi]
  0006e	3b c8		 cmp	 ecx, eax
  00070	0f 85 ba 00 00
	00		 jne	 $LN10@Insert_nod

; 673  :                 const auto _Parent_sibling = _Pnode->_Parent->_Parent->_Right;

  00076	8b 46 08	 mov	 eax, DWORD PTR [esi+8]

; 674  :                 if (_Parent_sibling->_Color == _Red) { // parent's sibling has two red children, blacken both

  00079	80 78 0c 00	 cmp	 BYTE PTR [eax+12], 0
  0007d	0f 84 b3 00 00
	00		 je	 $LN53@Insert_nod

; 675  :                     _Pnode->_Parent->_Color          = _Black;
; 676  :                     _Parent_sibling->_Color          = _Black;
; 677  :                     _Pnode->_Parent->_Parent->_Color = _Red;
; 678  :                     _Pnode                           = _Pnode->_Parent->_Parent;
; 679  :                 } else { // parent's sibling has red and black children
; 680  :                     if (_Pnode == _Pnode->_Parent->_Right) { // rotate right child to left

  00083	8b 71 08	 mov	 esi, DWORD PTR [ecx+8]
  00086	3b d6		 cmp	 edx, esi
  00088	75 47		 jne	 SHORT $LN51@Insert_nod

; 460  :         _Wherenode->_Right = _Pnode->_Left;

  0008a	8b 06		 mov	 eax, DWORD PTR [esi]

; 681  :                         _Pnode = _Pnode->_Parent;

  0008c	8b d1		 mov	 edx, ecx

; 460  :         _Wherenode->_Right = _Pnode->_Left;

  0008e	89 42 08	 mov	 DWORD PTR [edx+8], eax

; 461  : 
; 462  :         if (!_Pnode->_Left->_Isnil) {

  00091	8b 06		 mov	 eax, DWORD PTR [esi]
  00093	80 78 0d 00	 cmp	 BYTE PTR [eax+13], 0
  00097	75 03		 jne	 SHORT $LN20@Insert_nod

; 463  :             _Pnode->_Left->_Parent = _Wherenode;

  00099	89 50 04	 mov	 DWORD PTR [eax+4], edx
$LN20@Insert_nod:

; 464  :         }
; 465  : 
; 466  :         _Pnode->_Parent = _Wherenode->_Parent;

  0009c	8b 03		 mov	 eax, DWORD PTR [ebx]
  0009e	89 46 04	 mov	 DWORD PTR [esi+4], eax

; 467  : 
; 468  :         if (_Wherenode == _Myhead->_Parent) {

  000a1	8b 45 fc	 mov	 eax, DWORD PTR _this$1$[ebp]
  000a4	8b 00		 mov	 eax, DWORD PTR [eax]
  000a6	3b 50 04	 cmp	 edx, DWORD PTR [eax+4]
  000a9	75 0b		 jne	 SHORT $LN21@Insert_nod

; 469  :             _Myhead->_Parent = _Pnode;

  000ab	89 70 04	 mov	 DWORD PTR [eax+4], esi

; 477  :         _Wherenode->_Parent = _Pnode;

  000ae	8b fb		 mov	 edi, ebx
  000b0	89 16		 mov	 DWORD PTR [esi], edx
  000b2	89 33		 mov	 DWORD PTR [ebx], esi
  000b4	eb 1d		 jmp	 SHORT $LN49@Insert_nod
$LN21@Insert_nod:

; 470  :         } else if (_Wherenode == _Wherenode->_Parent->_Left) {

  000b6	8b 03		 mov	 eax, DWORD PTR [ebx]
  000b8	3b 10		 cmp	 edx, DWORD PTR [eax]
  000ba	75 0a		 jne	 SHORT $LN23@Insert_nod

; 471  :             _Wherenode->_Parent->_Left = _Pnode;

  000bc	89 30		 mov	 DWORD PTR [eax], esi

; 477  :         _Wherenode->_Parent = _Pnode;

  000be	8b fb		 mov	 edi, ebx
  000c0	89 16		 mov	 DWORD PTR [esi], edx
  000c2	89 33		 mov	 DWORD PTR [ebx], esi
  000c4	eb 0d		 jmp	 SHORT $LN49@Insert_nod
$LN23@Insert_nod:

; 473  :             _Wherenode->_Parent->_Right = _Pnode;

  000c6	89 70 08	 mov	 DWORD PTR [eax+8], esi

; 477  :         _Wherenode->_Parent = _Pnode;

  000c9	8b fb		 mov	 edi, ebx
  000cb	89 16		 mov	 DWORD PTR [esi], edx
  000cd	89 33		 mov	 DWORD PTR [ebx], esi
  000cf	eb 02		 jmp	 SHORT $LN49@Insert_nod
$LN51@Insert_nod:
  000d1	8b f1		 mov	 esi, ecx
$LN49@Insert_nod:

; 682  :                         _Lrotate(_Pnode);
; 683  :                     }
; 684  : 
; 685  :                     _Pnode->_Parent->_Color          = _Black; // propagate red up

  000d3	c6 46 0c 01	 mov	 BYTE PTR [esi+12], 1

; 686  :                     _Pnode->_Parent->_Parent->_Color = _Red;

  000d7	8b 07		 mov	 eax, DWORD PTR [edi]
  000d9	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  000dc	c6 40 0c 00	 mov	 BYTE PTR [eax+12], 0

; 687  :                     _Rrotate(_Pnode->_Parent->_Parent);

  000e0	8b 07		 mov	 eax, DWORD PTR [edi]
  000e2	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]

; 481  :         _Nodeptr _Pnode   = _Wherenode->_Left;

  000e5	8b 31		 mov	 esi, DWORD PTR [ecx]

; 482  :         _Wherenode->_Left = _Pnode->_Right;

  000e7	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  000ea	89 01		 mov	 DWORD PTR [ecx], eax

; 483  : 
; 484  :         if (!_Pnode->_Right->_Isnil) {

  000ec	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  000ef	80 78 0d 00	 cmp	 BYTE PTR [eax+13], 0
  000f3	75 03		 jne	 SHORT $LN27@Insert_nod

; 485  :             _Pnode->_Right->_Parent = _Wherenode;

  000f5	89 48 04	 mov	 DWORD PTR [eax+4], ecx
$LN27@Insert_nod:

; 486  :         }
; 487  : 
; 488  :         _Pnode->_Parent = _Wherenode->_Parent;

  000f8	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  000fb	89 46 04	 mov	 DWORD PTR [esi+4], eax

; 489  : 
; 490  :         if (_Wherenode == _Myhead->_Parent) {

  000fe	8b 45 fc	 mov	 eax, DWORD PTR _this$1$[ebp]
  00101	8b 00		 mov	 eax, DWORD PTR [eax]
  00103	3b 48 04	 cmp	 ecx, DWORD PTR [eax+4]
  00106	75 0b		 jne	 SHORT $LN28@Insert_nod

; 491  :             _Myhead->_Parent = _Pnode;

  00108	89 70 04	 mov	 DWORD PTR [eax+4], esi

; 496  :         }
; 497  : 
; 498  :         _Pnode->_Right      = _Wherenode;

  0010b	89 4e 08	 mov	 DWORD PTR [esi+8], ecx

; 688  :                 }
; 689  :             } else { // fixup red-red in right subtree

  0010e	e9 cc 00 00 00	 jmp	 $LN52@Insert_nod
$LN28@Insert_nod:

; 492  :         } else if (_Wherenode == _Wherenode->_Parent->_Right) {

  00113	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00116	3b 48 08	 cmp	 ecx, DWORD PTR [eax+8]
  00119	75 0b		 jne	 SHORT $LN30@Insert_nod

; 493  :             _Wherenode->_Parent->_Right = _Pnode;

  0011b	89 70 08	 mov	 DWORD PTR [eax+8], esi

; 496  :         }
; 497  : 
; 498  :         _Pnode->_Right      = _Wherenode;

  0011e	89 4e 08	 mov	 DWORD PTR [esi+8], ecx

; 688  :                 }
; 689  :             } else { // fixup red-red in right subtree

  00121	e9 b9 00 00 00	 jmp	 $LN52@Insert_nod
$LN30@Insert_nod:

; 495  :             _Wherenode->_Parent->_Left = _Pnode;

  00126	89 30		 mov	 DWORD PTR [eax], esi

; 496  :         }
; 497  : 
; 498  :         _Pnode->_Right      = _Wherenode;

  00128	89 4e 08	 mov	 DWORD PTR [esi+8], ecx

; 688  :                 }
; 689  :             } else { // fixup red-red in right subtree

  0012b	e9 af 00 00 00	 jmp	 $LN52@Insert_nod
$LN10@Insert_nod:

; 690  :                 const auto _Parent_sibling = _Pnode->_Parent->_Parent->_Left;
; 691  :                 if (_Parent_sibling->_Color == _Red) { // parent's sibling has two red children, blacken both

  00130	80 78 0c 00	 cmp	 BYTE PTR [eax+12], 0
  00134	75 1b		 jne	 SHORT $LN15@Insert_nod
$LN53@Insert_nod:

; 668  :             }
; 669  :         }
; 670  : 
; 671  :         for (_Nodeptr _Pnode = _Newnode; _Pnode->_Parent->_Color == _Red;) {

  00136	c6 41 0c 01	 mov	 BYTE PTR [ecx+12], 1
  0013a	c6 40 0c 01	 mov	 BYTE PTR [eax+12], 1
  0013e	8b 07		 mov	 eax, DWORD PTR [edi]
  00140	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00143	c6 40 0c 00	 mov	 BYTE PTR [eax+12], 0
  00147	8b 07		 mov	 eax, DWORD PTR [edi]
  00149	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  0014c	e9 91 00 00 00	 jmp	 $LN46@Insert_nod
$LN15@Insert_nod:

; 692  :                     _Pnode->_Parent->_Color          = _Black;
; 693  :                     _Parent_sibling->_Color          = _Black;
; 694  :                     _Pnode->_Parent->_Parent->_Color = _Red;
; 695  :                     _Pnode                           = _Pnode->_Parent->_Parent;
; 696  :                 } else { // parent's sibling has red and black children
; 697  :                     if (_Pnode == _Pnode->_Parent->_Left) { // rotate left child to right

  00151	8b 01		 mov	 eax, DWORD PTR [ecx]
  00153	3b d0		 cmp	 edx, eax
  00155	75 3e		 jne	 SHORT $LN39@Insert_nod

; 698  :                         _Pnode = _Pnode->_Parent;

  00157	8b d1		 mov	 edx, ecx

; 481  :         _Nodeptr _Pnode   = _Wherenode->_Left;

  00159	8b c8		 mov	 ecx, eax

; 482  :         _Wherenode->_Left = _Pnode->_Right;

  0015b	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  0015e	89 02		 mov	 DWORD PTR [edx], eax

; 483  : 
; 484  :         if (!_Pnode->_Right->_Isnil) {

  00160	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  00163	80 78 0d 00	 cmp	 BYTE PTR [eax+13], 0
  00167	75 03		 jne	 SHORT $LN34@Insert_nod

; 485  :             _Pnode->_Right->_Parent = _Wherenode;

  00169	89 50 04	 mov	 DWORD PTR [eax+4], edx
$LN34@Insert_nod:

; 486  :         }
; 487  : 
; 488  :         _Pnode->_Parent = _Wherenode->_Parent;

  0016c	8b 03		 mov	 eax, DWORD PTR [ebx]
  0016e	89 41 04	 mov	 DWORD PTR [ecx+4], eax

; 489  : 
; 490  :         if (_Wherenode == _Myhead->_Parent) {

  00171	8b 45 fc	 mov	 eax, DWORD PTR _this$1$[ebp]
  00174	8b 00		 mov	 eax, DWORD PTR [eax]
  00176	3b 50 04	 cmp	 edx, DWORD PTR [eax+4]
  00179	75 05		 jne	 SHORT $LN35@Insert_nod

; 491  :             _Myhead->_Parent = _Pnode;

  0017b	89 48 04	 mov	 DWORD PTR [eax+4], ecx
  0017e	eb 0e		 jmp	 SHORT $LN38@Insert_nod
$LN35@Insert_nod:

; 492  :         } else if (_Wherenode == _Wherenode->_Parent->_Right) {

  00180	8b 03		 mov	 eax, DWORD PTR [ebx]
  00182	3b 50 08	 cmp	 edx, DWORD PTR [eax+8]
  00185	75 05		 jne	 SHORT $LN37@Insert_nod

; 493  :             _Wherenode->_Parent->_Right = _Pnode;

  00187	89 48 08	 mov	 DWORD PTR [eax+8], ecx

; 494  :         } else {

  0018a	eb 02		 jmp	 SHORT $LN38@Insert_nod
$LN37@Insert_nod:

; 495  :             _Wherenode->_Parent->_Left = _Pnode;

  0018c	89 08		 mov	 DWORD PTR [eax], ecx
$LN38@Insert_nod:

; 496  :         }
; 497  : 
; 498  :         _Pnode->_Right      = _Wherenode;

  0018e	89 51 08	 mov	 DWORD PTR [ecx+8], edx

; 499  :         _Wherenode->_Parent = _Pnode;

  00191	8b fb		 mov	 edi, ebx
  00193	89 0b		 mov	 DWORD PTR [ebx], ecx
$LN39@Insert_nod:

; 699  :                         _Rrotate(_Pnode);
; 700  :                     }
; 701  : 
; 702  :                     _Pnode->_Parent->_Color          = _Black; // propagate red up

  00195	c6 41 0c 01	 mov	 BYTE PTR [ecx+12], 1

; 703  :                     _Pnode->_Parent->_Parent->_Color = _Red;

  00199	8b 07		 mov	 eax, DWORD PTR [edi]
  0019b	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0019e	c6 40 0c 00	 mov	 BYTE PTR [eax+12], 0

; 704  :                     _Lrotate(_Pnode->_Parent->_Parent);

  001a2	8b 07		 mov	 eax, DWORD PTR [edi]
  001a4	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]

; 459  :         _Nodeptr _Pnode    = _Wherenode->_Right;

  001a7	8b 71 08	 mov	 esi, DWORD PTR [ecx+8]

; 460  :         _Wherenode->_Right = _Pnode->_Left;

  001aa	8b 06		 mov	 eax, DWORD PTR [esi]
  001ac	89 41 08	 mov	 DWORD PTR [ecx+8], eax

; 461  : 
; 462  :         if (!_Pnode->_Left->_Isnil) {

  001af	8b 06		 mov	 eax, DWORD PTR [esi]
  001b1	80 78 0d 00	 cmp	 BYTE PTR [eax+13], 0
  001b5	75 03		 jne	 SHORT $LN41@Insert_nod

; 463  :             _Pnode->_Left->_Parent = _Wherenode;

  001b7	89 48 04	 mov	 DWORD PTR [eax+4], ecx
$LN41@Insert_nod:

; 464  :         }
; 465  : 
; 466  :         _Pnode->_Parent = _Wherenode->_Parent;

  001ba	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  001bd	89 46 04	 mov	 DWORD PTR [esi+4], eax

; 467  : 
; 468  :         if (_Wherenode == _Myhead->_Parent) {

  001c0	8b 45 fc	 mov	 eax, DWORD PTR _this$1$[ebp]
  001c3	8b 00		 mov	 eax, DWORD PTR [eax]
  001c5	3b 48 04	 cmp	 ecx, DWORD PTR [eax+4]
  001c8	75 05		 jne	 SHORT $LN42@Insert_nod

; 469  :             _Myhead->_Parent = _Pnode;

  001ca	89 70 04	 mov	 DWORD PTR [eax+4], esi
  001cd	eb 0e		 jmp	 SHORT $LN45@Insert_nod
$LN42@Insert_nod:

; 470  :         } else if (_Wherenode == _Wherenode->_Parent->_Left) {

  001cf	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  001d2	3b 08		 cmp	 ecx, DWORD PTR [eax]
  001d4	75 04		 jne	 SHORT $LN44@Insert_nod

; 471  :             _Wherenode->_Parent->_Left = _Pnode;

  001d6	89 30		 mov	 DWORD PTR [eax], esi

; 472  :         } else {

  001d8	eb 03		 jmp	 SHORT $LN45@Insert_nod
$LN44@Insert_nod:

; 473  :             _Wherenode->_Parent->_Right = _Pnode;

  001da	89 70 08	 mov	 DWORD PTR [eax+8], esi
$LN45@Insert_nod:

; 474  :         }
; 475  : 
; 476  :         _Pnode->_Left       = _Wherenode;

  001dd	89 0e		 mov	 DWORD PTR [esi], ecx
$LN52@Insert_nod:

; 668  :             }
; 669  :         }
; 670  : 
; 671  :         for (_Nodeptr _Pnode = _Newnode; _Pnode->_Parent->_Color == _Red;) {

  001df	89 71 04	 mov	 DWORD PTR [ecx+4], esi
$LN46@Insert_nod:
  001e2	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  001e5	80 78 0c 00	 cmp	 BYTE PTR [eax+12], 0
  001e9	0f 84 71 fe ff
	ff		 je	 $LL2@Insert_nod
  001ef	8b 4d f8	 mov	 ecx, DWORD PTR __Head$1$[ebp]
  001f2	5f		 pop	 edi
  001f3	5e		 pop	 esi
  001f4	5b		 pop	 ebx
$LN3@Insert_nod:

; 705  :                 }
; 706  :             }
; 707  :         }
; 708  : 
; 709  :         _Head->_Parent->_Color = _Black; // root is always black

  001f5	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  001f8	c6 40 0c 01	 mov	 BYTE PTR [eax+12], 1

; 710  :         return _Newnode;

  001fc	8b 45 10	 mov	 eax, DWORD PTR __Newnode$[ebp]

; 711  :     }

  001ff	8b e5		 mov	 esp, ebp
  00201	5d		 pop	 ebp
  00202	c2 0c 00	 ret	 12			; 0000000cH
?_Insert_node@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@PAX@2@U?$_Tree_id@PAU?$_Tree_node@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@PAX@std@@@2@QAU32@@Z ENDP ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,UI::CSlotWindow::SStoreCoolDown> > >::_Insert_node
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xtree
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\utility
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xtree
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xtree
;	COMDAT ??1?$_Tree@V?$_Tmap_traits@KUSStoreCoolDown@CSlotWindow@UI@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@5@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$_Tree@V?$_Tmap_traits@KUSStoreCoolDown@CSlotWindow@UI@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@5@$0A@@std@@@std@@QAE@XZ PROC ; std::_Tree<std::_Tmap_traits<unsigned long,UI::CSlotWindow::SStoreCoolDown,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,UI::CSlotWindow::SStoreCoolDown> >,0> >::~_Tree<std::_Tmap_traits<unsigned long,UI::CSlotWindow::SStoreCoolDown,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,UI::CSlotWindow::SStoreCoolDown> >,0> >, COMDAT
; _this$ = ecx

; 1084 :     ~_Tree() noexcept {

  00000	56		 push	 esi
  00001	57		 push	 edi
  00002	8b f9		 mov	 edi, ecx

; 752  :         _Erase_tree(_Al, _Myhead->_Parent);

  00004	8b 07		 mov	 eax, DWORD PTR [edi]
  00006	8b 70 04	 mov	 esi, DWORD PTR [eax+4]

; 743  :         while (!_Rootnode->_Isnil) { // free subtrees, then node

  00009	80 7e 0d 00	 cmp	 BYTE PTR [esi+13], 0
  0000d	75 23		 jne	 SHORT $LN7@Tree
  0000f	90		 npad	 1
$LL6@Tree:

; 744  :             _Erase_tree(_Al, _Rootnode->_Right);

  00010	ff 76 08	 push	 DWORD PTR [esi+8]
  00013	8b cf		 mov	 ecx, edi
  00015	57		 push	 edi
  00016	e8 00 00 00 00	 call	 ??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@PAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@PAX@1@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,UI::CSlotWindow::SStoreCoolDown> > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<unsigned long const ,UI::CSlotWindow::SStoreCoolDown>,void *> > >
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\utility

; 602  :     _Ty _Old_val = static_cast<_Ty&&>(_Val);

  0001b	8b c6		 mov	 eax, esi

; 603  :     _Val         = static_cast<_Other&&>(_New_val);

  0001d	8b 36		 mov	 esi, DWORD PTR [esi]
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory

; 255  :         ::operator delete(_Ptr, _Bytes);

  0001f	6a 20		 push	 32			; 00000020H
  00021	50		 push	 eax
  00022	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00027	83 c4 08	 add	 esp, 8
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xtree

; 743  :         while (!_Rootnode->_Isnil) { // free subtrees, then node

  0002a	80 7e 0d 00	 cmp	 BYTE PTR [esi+13], 0
  0002e	74 e0		 je	 SHORT $LL6@Tree
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory

; 165  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  00030	8b 07		 mov	 eax, DWORD PTR [edi]
$LN7@Tree:

; 255  :         ::operator delete(_Ptr, _Bytes);

  00032	6a 20		 push	 32			; 00000020H
  00034	50		 push	 eax
  00035	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0003a	83 c4 08	 add	 esp, 8
  0003d	5f		 pop	 edi
  0003e	5e		 pop	 esi
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xtree

; 1091 :     }

  0003f	c3		 ret	 0
??1?$_Tree@V?$_Tmap_traits@KUSStoreCoolDown@CSlotWindow@UI@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@5@$0A@@std@@@std@@QAE@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,UI::CSlotWindow::SStoreCoolDown,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,UI::CSlotWindow::SStoreCoolDown> >,0> >::~_Tree<std::_Tmap_traits<unsigned long,UI::CSlotWindow::SStoreCoolDown,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,UI::CSlotWindow::SStoreCoolDown> >,0> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ??_GCCoolTimeFinishEffect@CSlotWindow@UI@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCCoolTimeFinishEffect@CSlotWindow@UI@@UAEPAXI@Z PROC ; UI::CSlotWindow::CCoolTimeFinishEffect::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 184  : 		{

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CCoolTimeFinishEffect@CSlotWindow@UI@@6B@

; 185  : 		}

  0000c	e8 00 00 00 00	 call	 ??1CAniImageBox@UI@@UAE@XZ ; UI::CAniImageBox::~CAniImageBox
  00011	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  00015	74 0e		 je	 SHORT $LN7@scalar
  00017	68 98 00 00 00	 push	 152			; 00000098H
  0001c	56		 push	 esi
  0001d	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00022	83 c4 08	 add	 esp, 8
$LN7@scalar:
  00025	8b c6		 mov	 eax, esi
  00027	5e		 pop	 esi
  00028	5d		 pop	 ebp
  00029	c2 04 00	 ret	 4
??_GCCoolTimeFinishEffect@CSlotWindow@UI@@UAEPAXI@Z ENDP ; UI::CSlotWindow::CCoolTimeFinishEffect::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ?OnEndFrame@CCoolTimeFinishEffect@CSlotWindow@UI@@UAEXXZ
_TEXT	SEGMENT
?OnEndFrame@CCoolTimeFinishEffect@CSlotWindow@UI@@UAEXXZ PROC ; UI::CSlotWindow::CCoolTimeFinishEffect::OnEndFrame, COMDAT
; _this$ = ecx

; 189  : 			((CSlotWindow *)m_pParent)->ReserveDestroyCoolTimeFinishEffect(m_dwSlotIndex);

  00000	ff b1 94 00 00
	00		 push	 DWORD PTR [ecx+148]
  00006	8b 49 60	 mov	 ecx, DWORD PTR [ecx+96]
  00009	e8 00 00 00 00	 call	 ?ReserveDestroyCoolTimeFinishEffect@CSlotWindow@UI@@QAEXK@Z ; UI::CSlotWindow::ReserveDestroyCoolTimeFinishEffect

; 190  : 		}

  0000e	c3		 ret	 0
?OnEndFrame@CCoolTimeFinishEffect@CSlotWindow@UI@@UAEXXZ ENDP ; UI::CSlotWindow::CCoolTimeFinishEffect::OnEndFrame
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ??1CCoolTimeFinishEffect@CSlotWindow@UI@@UAE@XZ
_TEXT	SEGMENT
??1CCoolTimeFinishEffect@CSlotWindow@UI@@UAE@XZ PROC	; UI::CSlotWindow::CCoolTimeFinishEffect::~CCoolTimeFinishEffect, COMDAT
; _this$ = ecx

; 184  : 		{

  00000	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7CCoolTimeFinishEffect@CSlotWindow@UI@@6B@

; 185  : 		}

  00006	e9 00 00 00 00	 jmp	 ??1CAniImageBox@UI@@UAE@XZ ; UI::CAniImageBox::~CAniImageBox
??1CCoolTimeFinishEffect@CSlotWindow@UI@@UAE@XZ ENDP	; UI::CSlotWindow::CCoolTimeFinishEffect::~CCoolTimeFinishEffect
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ??_GCCoverButton@CSlotWindow@UI@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCCoverButton@CSlotWindow@UI@@UAEPAXI@Z PROC		; UI::CSlotWindow::CCoverButton::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 28   : 		{

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CSlotButton@CSlotWindow@UI@@6B@

; 29   : 		}

  0000c	e8 00 00 00 00	 call	 ??1CButton@UI@@UAE@XZ	; UI::CButton::~CButton
  00011	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  00015	74 0e		 je	 SHORT $LN10@scalar
  00017	68 48 01 00 00	 push	 328			; 00000148H
  0001c	56		 push	 esi
  0001d	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00022	83 c4 08	 add	 esp, 8
$LN10@scalar:
  00025	8b c6		 mov	 eax, esi
  00027	5e		 pop	 esi
  00028	5d		 pop	 ebp
  00029	c2 04 00	 ret	 4
??_GCCoverButton@CSlotWindow@UI@@UAEPAXI@Z ENDP		; UI::CSlotWindow::CCoverButton::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ?OnMouseRightButtonUp@CCoverButton@CSlotWindow@UI@@UAEHXZ
_TEXT	SEGMENT
?OnMouseRightButtonUp@CCoverButton@CSlotWindow@UI@@UAEHXZ PROC ; UI::CSlotWindow::CCoverButton::OnMouseRightButtonUp, COMDAT
; _this$ = ecx

; 157  : 		{

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 158  : 			if (!IsEnable())

  00003	e8 00 00 00 00	 call	 ?IsEnable@CButton@UI@@IAEHXZ ; UI::CButton::IsEnable
  00008	85 c0		 test	 eax, eax
  0000a	74 1b		 je	 SHORT $LN6@OnMouseRig

; 159  : 				return TRUE;
; 160  : 			m_pParent->OnMouseRightButtonDown();

  0000c	8b 8e 3c 01 00
	00		 mov	 ecx, DWORD PTR [esi+316]
  00012	8b 01		 mov	 eax, DWORD PTR [ecx]
  00014	ff 50 64	 call	 DWORD PTR [eax+100]

; 161  : 			if (m_bRightButtonEnable)

  00017	83 be 44 01 00
	00 00		 cmp	 DWORD PTR [esi+324], 0
  0001e	74 07		 je	 SHORT $LN6@OnMouseRig

; 162  : 				CButton::OnMouseLeftButtonUp();

  00020	8b ce		 mov	 ecx, esi
  00022	e8 00 00 00 00	 call	 ?OnMouseLeftButtonUp@CButton@UI@@MAEHXZ ; UI::CButton::OnMouseLeftButtonUp
$LN6@OnMouseRig:

; 163  : 			return TRUE;
; 164  : 		}

  00027	b8 01 00 00 00	 mov	 eax, 1
  0002c	5e		 pop	 esi
  0002d	c3		 ret	 0
?OnMouseRightButtonUp@CCoverButton@CSlotWindow@UI@@UAEHXZ ENDP ; UI::CSlotWindow::CCoverButton::OnMouseRightButtonUp
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ?OnMouseRightButtonDown@CCoverButton@CSlotWindow@UI@@UAEHXZ
_TEXT	SEGMENT
?OnMouseRightButtonDown@CCoverButton@CSlotWindow@UI@@UAEHXZ PROC ; UI::CSlotWindow::CCoverButton::OnMouseRightButtonDown, COMDAT
; _this$ = ecx

; 149  : 		{

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 150  : 			if (!IsEnable())

  00003	e8 00 00 00 00	 call	 ?IsEnable@CButton@UI@@IAEHXZ ; UI::CButton::IsEnable
  00008	85 c0		 test	 eax, eax
  0000a	74 10		 je	 SHORT $LN6@OnMouseRig

; 151  : 				return TRUE;
; 152  : 			if (m_bRightButtonEnable)

  0000c	83 be 44 01 00
	00 00		 cmp	 DWORD PTR [esi+324], 0
  00013	74 07		 je	 SHORT $LN6@OnMouseRig

; 153  : 				CButton::OnMouseLeftButtonDown();

  00015	8b ce		 mov	 ecx, esi
  00017	e8 00 00 00 00	 call	 ?OnMouseLeftButtonDown@CButton@UI@@MAEHXZ ; UI::CButton::OnMouseLeftButtonDown
$LN6@OnMouseRig:

; 154  : 			return TRUE;
; 155  : 		}

  0001c	b8 01 00 00 00	 mov	 eax, 1
  00021	5e		 pop	 esi
  00022	c3		 ret	 0
?OnMouseRightButtonDown@CCoverButton@CSlotWindow@UI@@UAEHXZ ENDP ; UI::CSlotWindow::CCoverButton::OnMouseRightButtonDown
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ?OnMouseLeftButtonUp@CCoverButton@CSlotWindow@UI@@UAEHXZ
_TEXT	SEGMENT
?OnMouseLeftButtonUp@CCoverButton@CSlotWindow@UI@@UAEHXZ PROC ; UI::CSlotWindow::CCoverButton::OnMouseLeftButtonUp, COMDAT
; _this$ = ecx

; 133  : 		{

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 134  : 			if (!IsEnable())

  00003	e8 00 00 00 00	 call	 ?IsEnable@CButton@UI@@IAEHXZ ; UI::CButton::IsEnable
  00008	85 c0		 test	 eax, eax
  0000a	74 2d		 je	 SHORT $LN6@OnMouseLef

; 135  : 				return TRUE;
; 136  : 			if (m_bLeftButtonEnable)

  0000c	83 be 40 01 00
	00 00		 cmp	 DWORD PTR [esi+320], 0
  00013	74 19		 je	 SHORT $LN3@OnMouseLef

; 137  : 			{
; 138  : 				CButton::OnMouseLeftButtonUp();

  00015	8b ce		 mov	 ecx, esi
  00017	e8 00 00 00 00	 call	 ?OnMouseLeftButtonUp@CButton@UI@@MAEHXZ ; UI::CButton::OnMouseLeftButtonUp

; 139  : 				m_pParent->OnMouseLeftButtonDown();

  0001c	8b 8e 3c 01 00
	00		 mov	 ecx, DWORD PTR [esi+316]
  00022	8b 01		 mov	 eax, DWORD PTR [ecx]
  00024	ff 50 58	 call	 DWORD PTR [eax+88]

; 144  : 			}
; 145  : 			return TRUE;
; 146  : 		}

  00027	b8 01 00 00 00	 mov	 eax, 1
  0002c	5e		 pop	 esi
  0002d	c3		 ret	 0
$LN3@OnMouseLef:

; 140  : 			}
; 141  : 			else
; 142  : 			{
; 143  : 				m_pParent->OnMouseLeftButtonUp();

  0002e	8b 8e 3c 01 00
	00		 mov	 ecx, DWORD PTR [esi+316]
  00034	8b 01		 mov	 eax, DWORD PTR [ecx]
  00036	ff 50 5c	 call	 DWORD PTR [eax+92]
$LN6@OnMouseLef:

; 144  : 			}
; 145  : 			return TRUE;
; 146  : 		}

  00039	b8 01 00 00 00	 mov	 eax, 1
  0003e	5e		 pop	 esi
  0003f	c3		 ret	 0
?OnMouseLeftButtonUp@CCoverButton@CSlotWindow@UI@@UAEHXZ ENDP ; UI::CSlotWindow::CCoverButton::OnMouseLeftButtonUp
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ?OnMouseLeftButtonDown@CCoverButton@CSlotWindow@UI@@UAEHXZ
_TEXT	SEGMENT
?OnMouseLeftButtonDown@CCoverButton@CSlotWindow@UI@@UAEHXZ PROC ; UI::CSlotWindow::CCoverButton::OnMouseLeftButtonDown, COMDAT
; _this$ = ecx

; 119  : 		{

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 120  : 			if (!IsEnable())

  00003	e8 00 00 00 00	 call	 ?IsEnable@CButton@UI@@IAEHXZ ; UI::CButton::IsEnable
  00008	85 c0		 test	 eax, eax
  0000a	74 22		 je	 SHORT $LN6@OnMouseLef

; 121  : 				return TRUE;
; 122  : 			if (m_bLeftButtonEnable)

  0000c	83 be 40 01 00
	00 00		 cmp	 DWORD PTR [esi+320], 0
  00013	74 0e		 je	 SHORT $LN3@OnMouseLef

; 123  : 			{
; 124  : 				CButton::OnMouseLeftButtonDown();

  00015	8b ce		 mov	 ecx, esi
  00017	e8 00 00 00 00	 call	 ?OnMouseLeftButtonDown@CButton@UI@@MAEHXZ ; UI::CButton::OnMouseLeftButtonDown

; 129  : 			}
; 130  : 			return TRUE;
; 131  : 		}

  0001c	b8 01 00 00 00	 mov	 eax, 1
  00021	5e		 pop	 esi
  00022	c3		 ret	 0
$LN3@OnMouseLef:

; 125  : 			}
; 126  : 			else
; 127  : 			{
; 128  : 				m_pParent->OnMouseLeftButtonDown();

  00023	8b 8e 3c 01 00
	00		 mov	 ecx, DWORD PTR [esi+316]
  00029	8b 01		 mov	 eax, DWORD PTR [ecx]
  0002b	ff 50 58	 call	 DWORD PTR [eax+88]
$LN6@OnMouseLef:

; 129  : 			}
; 130  : 			return TRUE;
; 131  : 		}

  0002e	b8 01 00 00 00	 mov	 eax, 1
  00033	5e		 pop	 esi
  00034	c3		 ret	 0
?OnMouseLeftButtonDown@CCoverButton@CSlotWindow@UI@@UAEHXZ ENDP ; UI::CSlotWindow::CCoverButton::OnMouseLeftButtonDown
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ?OnRender@CCoverButton@CSlotWindow@UI@@UAEXXZ
_TEXT	SEGMENT
?OnRender@CCoverButton@CSlotWindow@UI@@UAEXXZ PROC	; UI::CSlotWindow::CCoverButton::OnRender, COMDAT
; _this$ = ecx

; 111  : 		}

  00000	c2 00 00	 ret	 0
?OnRender@CCoverButton@CSlotWindow@UI@@UAEXXZ ENDP	; UI::CSlotWindow::CCoverButton::OnRender
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ??1CCoverButton@CSlotWindow@UI@@UAE@XZ
_TEXT	SEGMENT
??1CCoverButton@CSlotWindow@UI@@UAE@XZ PROC		; UI::CSlotWindow::CCoverButton::~CCoverButton, COMDAT
; _this$ = ecx

; 28   : 		{

  00000	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7CSlotButton@CSlotWindow@UI@@6B@

; 29   : 		}

  00006	e9 00 00 00 00	 jmp	 ??1CButton@UI@@UAE@XZ	; UI::CButton::~CButton
??1CCoverButton@CSlotWindow@UI@@UAE@XZ ENDP		; UI::CSlotWindow::CCoverButton::~CCoverButton
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ??_GCSlotButton@CSlotWindow@UI@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCSlotButton@CSlotWindow@UI@@UAEPAXI@Z PROC		; UI::CSlotWindow::CSlotButton::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 28   : 		{

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CSlotButton@CSlotWindow@UI@@6B@

; 29   : 		}

  0000c	e8 00 00 00 00	 call	 ??1CButton@UI@@UAE@XZ	; UI::CButton::~CButton
  00011	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  00015	74 0e		 je	 SHORT $LN7@scalar
  00017	68 40 01 00 00	 push	 320			; 00000140H
  0001c	56		 push	 esi
  0001d	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00022	83 c4 08	 add	 esp, 8
$LN7@scalar:
  00025	8b c6		 mov	 eax, esi
  00027	5e		 pop	 esi
  00028	5d		 pop	 ebp
  00029	c2 04 00	 ret	 4
??_GCSlotButton@CSlotWindow@UI@@UAEPAXI@Z ENDP		; UI::CSlotWindow::CSlotButton::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ?OnMouseOverOut@CSlotButton@CSlotWindow@UI@@UAEXXZ
_TEXT	SEGMENT
?OnMouseOverOut@CSlotButton@CSlotWindow@UI@@UAEXXZ PROC	; UI::CSlotWindow::CSlotButton::OnMouseOverOut, COMDAT
; _this$ = ecx

; 69   : 		{

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 70   : 			if (IsEnable())

  00003	e8 00 00 00 00	 call	 ?IsEnable@CButton@UI@@IAEHXZ ; UI::CButton::IsEnable
  00008	85 c0		 test	 eax, eax
  0000a	74 15		 je	 SHORT $LN2@OnMouseOve

; 71   : 			{
; 72   : 				SetUp();

  0000c	8b ce		 mov	 ecx, esi
  0000e	e8 00 00 00 00	 call	 ?SetUp@CButton@UI@@QAEXXZ ; UI::CButton::SetUp

; 73   : 				SetCurrentVisual(&m_upVisual);

  00013	8d 86 8c 00 00
	00		 lea	 eax, DWORD PTR [esi+140]
  00019	8b ce		 mov	 ecx, esi
  0001b	50		 push	 eax
  0001c	e8 00 00 00 00	 call	 ?SetCurrentVisual@CButton@UI@@IAEXPAVCGraphicImageInstance@@@Z ; UI::CButton::SetCurrentVisual
$LN2@OnMouseOve:

; 74   : 			}
; 75   : 			m_pParent->OnOverOutItem();

  00021	8b 8e 3c 01 00
	00		 mov	 ecx, DWORD PTR [esi+316]
  00027	5e		 pop	 esi
  00028	e9 00 00 00 00	 jmp	 ?OnOverOutItem@CSlotWindow@UI@@QAEXXZ ; UI::CSlotWindow::OnOverOutItem
?OnMouseOverOut@CSlotButton@CSlotWindow@UI@@UAEXXZ ENDP	; UI::CSlotWindow::CSlotButton::OnMouseOverOut
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ?OnMouseOverIn@CSlotButton@CSlotWindow@UI@@UAEXXZ
_TEXT	SEGMENT
?OnMouseOverIn@CSlotButton@CSlotWindow@UI@@UAEXXZ PROC	; UI::CSlotWindow::CSlotButton::OnMouseOverIn, COMDAT
; _this$ = ecx

; 61   : 		{

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 62   : 			if (IsEnable())

  00003	e8 00 00 00 00	 call	 ?IsEnable@CButton@UI@@IAEHXZ ; UI::CButton::IsEnable
  00008	85 c0		 test	 eax, eax
  0000a	74 0e		 je	 SHORT $LN2@OnMouseOve

; 63   : 			{
; 64   : 				SetCurrentVisual(&m_overVisual);

  0000c	8d 86 b4 00 00
	00		 lea	 eax, DWORD PTR [esi+180]
  00012	8b ce		 mov	 ecx, esi
  00014	50		 push	 eax
  00015	e8 00 00 00 00	 call	 ?SetCurrentVisual@CButton@UI@@IAEXPAVCGraphicImageInstance@@@Z ; UI::CButton::SetCurrentVisual
$LN2@OnMouseOve:

; 65   : 			}
; 66   : 			m_pParent->OnOverInItem(m_dwSlotNumber);

  0001a	ff b6 38 01 00
	00		 push	 DWORD PTR [esi+312]
  00020	8b 8e 3c 01 00
	00		 mov	 ecx, DWORD PTR [esi+316]
  00026	e8 00 00 00 00	 call	 ?OnOverInItem@CSlotWindow@UI@@QAEHK@Z ; UI::CSlotWindow::OnOverInItem
  0002b	5e		 pop	 esi

; 67   : 		}

  0002c	c3		 ret	 0
?OnMouseOverIn@CSlotButton@CSlotWindow@UI@@UAEXXZ ENDP	; UI::CSlotWindow::CSlotButton::OnMouseOverIn
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ?OnMouseLeftButtonUp@CSlotButton@CSlotWindow@UI@@UAEHXZ
_TEXT	SEGMENT
?OnMouseLeftButtonUp@CSlotButton@CSlotWindow@UI@@UAEHXZ PROC ; UI::CSlotWindow::CSlotButton::OnMouseLeftButtonUp, COMDAT
; _this$ = ecx

; 44   : 		{

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 45   : 			if (!IsEnable())

  00003	e8 00 00 00 00	 call	 ?IsEnable@CButton@UI@@IAEHXZ ; UI::CButton::IsEnable
  00008	85 c0		 test	 eax, eax
  0000a	74 45		 je	 SHORT $LN7@OnMouseLef

; 46   : 				return TRUE;
; 47   : 			if (!IsPressed())

  0000c	8b ce		 mov	 ecx, esi
  0000e	e8 00 00 00 00	 call	 ?IsPressed@CButton@UI@@QAEHXZ ; UI::CButton::IsPressed
  00013	85 c0		 test	 eax, eax
  00015	74 3a		 je	 SHORT $LN7@OnMouseLef

; 48   : 				return TRUE;
; 49   : 
; 50   : 			if (IsIn())

  00017	8b ce		 mov	 ecx, esi
  00019	e8 00 00 00 00	 call	 ?IsIn@CWindow@UI@@QAE_NXZ ; UI::CWindow::IsIn
  0001e	84 c0		 test	 al, al
  00020	ba b4 00 00 00	 mov	 edx, 180		; 000000b4H
  00025	b9 8c 00 00 00	 mov	 ecx, 140		; 0000008cH
  0002a	0f 45 ca	 cmovne	 ecx, edx

; 51   : 				SetCurrentVisual(&m_overVisual);
; 52   : 			else
; 53   : 				SetCurrentVisual(&m_upVisual);
; 54   : 
; 55   : 			m_pParent->OnPressedSlotButton(m_dwSlotButtonType, m_dwSlotNumber);

  0002d	8d 04 31	 lea	 eax, DWORD PTR [ecx+esi]
  00030	8b ce		 mov	 ecx, esi
  00032	50		 push	 eax
  00033	e8 00 00 00 00	 call	 ?SetCurrentVisual@CButton@UI@@IAEXPAVCGraphicImageInstance@@@Z ; UI::CButton::SetCurrentVisual
  00038	8b 8e 3c 01 00
	00		 mov	 ecx, DWORD PTR [esi+316]
  0003e	6a 01		 push	 1
  00040	ff b6 38 01 00
	00		 push	 DWORD PTR [esi+312]
  00046	ff b6 34 01 00
	00		 push	 DWORD PTR [esi+308]
  0004c	e8 00 00 00 00	 call	 ?OnPressedSlotButton@CSlotWindow@UI@@QAEXKKH@Z ; UI::CSlotWindow::OnPressedSlotButton
$LN7@OnMouseLef:

; 56   : 
; 57   : 			return TRUE;
; 58   : 		}

  00051	b8 01 00 00 00	 mov	 eax, 1
  00056	5e		 pop	 esi
  00057	c3		 ret	 0
?OnMouseLeftButtonUp@CSlotButton@CSlotWindow@UI@@UAEHXZ ENDP ; UI::CSlotWindow::CSlotButton::OnMouseLeftButtonUp
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ?OnMouseLeftButtonDown@CSlotButton@CSlotWindow@UI@@UAEHXZ
_TEXT	SEGMENT
?OnMouseLeftButtonDown@CSlotButton@CSlotWindow@UI@@UAEHXZ PROC ; UI::CSlotWindow::CSlotButton::OnMouseLeftButtonDown, COMDAT
; _this$ = ecx

; 32   : 		{

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 33   : 			if (!IsEnable())

  00003	e8 00 00 00 00	 call	 ?IsEnable@CButton@UI@@IAEHXZ ; UI::CButton::IsEnable
  00008	85 c0		 test	 eax, eax
  0000a	74 20		 je	 SHORT $LN5@OnMouseLef

; 34   : 				return TRUE;
; 35   : 			if (UI::CWindowManager::Instance().IsAttaching())

  0000c	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCWindowManager@UI@@@@0PAVCWindowManager@UI@@A ; CSingleton<UI::CWindowManager>::ms_singleton
  00012	e8 00 00 00 00	 call	 ?IsAttaching@CWindowManager@UI@@QAEHXZ ; UI::CWindowManager::IsAttaching
  00017	85 c0		 test	 eax, eax
  00019	75 11		 jne	 SHORT $LN5@OnMouseLef

; 36   : 				return TRUE;
; 37   : 
; 38   : 			m_isPressed = TRUE;
; 39   : 			Down();

  0001b	8b ce		 mov	 ecx, esi
  0001d	c7 86 80 00 00
	00 01 00 00 00	 mov	 DWORD PTR [esi+128], 1
  00027	e8 00 00 00 00	 call	 ?Down@CButton@UI@@QAEXXZ ; UI::CButton::Down
$LN5@OnMouseLef:

; 40   : 
; 41   : 			return TRUE;
; 42   : 		}

  0002c	b8 01 00 00 00	 mov	 eax, 1
  00031	5e		 pop	 esi
  00032	c3		 ret	 0
?OnMouseLeftButtonDown@CSlotButton@CSlotWindow@UI@@UAEHXZ ENDP ; UI::CSlotWindow::CSlotButton::OnMouseLeftButtonDown
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ??1CSlotButton@CSlotWindow@UI@@UAE@XZ
_TEXT	SEGMENT
??1CSlotButton@CSlotWindow@UI@@UAE@XZ PROC		; UI::CSlotWindow::CSlotButton::~CSlotButton, COMDAT
; _this$ = ecx

; 28   : 		{

  00000	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7CSlotButton@CSlotWindow@UI@@6B@

; 29   : 		}

  00006	e9 00 00 00 00	 jmp	 ??1CButton@UI@@UAE@XZ	; UI::CButton::~CButton
??1CSlotButton@CSlotWindow@UI@@UAE@XZ ENDP		; UI::CSlotWindow::CSlotButton::~CSlotButton
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_GCSlotWindow@UI@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCSlotWindow@UI@@UAEPAXI@Z PROC			; UI::CSlotWindow::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1CSlotWindow@UI@@UAE@XZ ; UI::CSlotWindow::~CSlotWindow
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0e		 je	 SHORT $LN4@scalar
  00011	68 d8 00 00 00	 push	 216			; 000000d8H
  00016	56		 push	 esi
  00017	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0001c	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001f	8b c6		 mov	 eax, esi
  00021	5e		 pop	 esi
  00022	5d		 pop	 ebp
  00023	c2 04 00	 ret	 4
??_GCSlotWindow@UI@@UAEPAXI@Z ENDP			; UI::CSlotWindow::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\deque
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\deque
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\deque
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\deque
;	COMDAT ?_Tidy@?$deque@KV?$allocator@K@std@@@std@@AAEXXZ
_TEXT	SEGMENT
?_Tidy@?$deque@KV?$allocator@K@std@@@std@@AAEXXZ PROC	; std::deque<unsigned long,std::allocator<unsigned long> >::_Tidy, COMDAT
; _this$ = ecx

; 1471 :     void _Tidy() noexcept { // free all storage

  00000	57		 push	 edi
  00001	8b f9		 mov	 edi, ecx

; 1002 :         return _Mysize() == 0;

  00003	8b 4f 10	 mov	 ecx, DWORD PTR [edi+16]
  00006	85 c9		 test	 ecx, ecx

; 1472 :         _Orphan_all();
; 1473 : 
; 1474 :         _Alpty _Almap(_Getal());
; 1475 :         while (!empty()) {

  00008	74 15		 je	 SHORT $LN60@Tidy
  0000a	66 0f 1f 44 00
	00		 npad	 6
$LL2@Tidy:

; 1146 :         if (--_Mysize() == 0) {

  00010	8d 41 ff	 lea	 eax, DWORD PTR [ecx-1]
  00013	89 47 10	 mov	 DWORD PTR [edi+16], eax
  00016	8b c8		 mov	 ecx, eax
  00018	85 c0		 test	 eax, eax
  0001a	75 f4		 jne	 SHORT $LL2@Tidy

; 1147 :             _Myoff() = 0;

  0001c	89 47 0c	 mov	 DWORD PTR [edi+12], eax
$LN60@Tidy:
  0001f	56		 push	 esi

; 1479 :         for (size_type _Block = _Mapsize(); 0 < _Block;) { // free storage for a block and destroy pointer

  00020	8b 77 08	 mov	 esi, DWORD PTR [edi+8]
  00023	85 f6		 test	 esi, esi
  00025	74 1a		 je	 SHORT $LN5@Tidy
$LL4@Tidy:

; 1480 :             if (_Map()[--_Block]) { // free block and destroy its pointer

  00027	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  0002a	4e		 dec	 esi
  0002b	8b 04 b0	 mov	 eax, DWORD PTR [eax+esi*4]
  0002e	85 c0		 test	 eax, eax
  00030	74 0b		 je	 SHORT $LN23@Tidy
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory

; 255  :         ::operator delete(_Ptr, _Bytes);

  00032	6a 10		 push	 16			; 00000010H
  00034	50		 push	 eax
  00035	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0003a	83 c4 08	 add	 esp, 8
$LN23@Tidy:
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\deque

; 1479 :         for (size_type _Block = _Mapsize(); 0 < _Block;) { // free storage for a block and destroy pointer

  0003d	85 f6		 test	 esi, esi
  0003f	75 e6		 jne	 SHORT $LL4@Tidy
$LN5@Tidy:

; 1481 :                 _Getal().deallocate(_Map()[_Block], _Block_size);
; 1482 :                 _Destroy_in_place(_Map()[_Block]);
; 1483 :             }
; 1484 :         }
; 1485 : 
; 1486 :         if (_Map() != _Mapptr()) {

  00041	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00044	5e		 pop	 esi
  00045	85 c0		 test	 eax, eax
  00047	74 2a		 je	 SHORT $LN41@Tidy
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory

; 797  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00049	8b 4f 08	 mov	 ecx, DWORD PTR [edi+8]
  0004c	c1 e1 02	 shl	 ecx, 2

; 251  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  0004f	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  00055	72 12		 jb	 SHORT $LN51@Tidy

; 150  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00057	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  0005a	83 c1 23	 add	 ecx, 35			; 00000023H

; 151  : 
; 152  :     // If the following asserts, it likely means that we are performing
; 153  :     // an aligned delete on memory coming from an unaligned allocation.
; 154  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 155  : 
; 156  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 157  :     // in range [_Min_back_shift, _Non_user_size]
; 158  : #ifdef _DEBUG
; 159  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 160  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 161  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 162  : #endif // _DEBUG
; 163  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  0005d	2b c2		 sub	 eax, edx

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  0005f	83 c0 fc	 add	 eax, -4			; fffffffcH
  00062	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00065	77 1c		 ja	 SHORT $LN48@Tidy

; 165  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  00067	8b c2		 mov	 eax, edx
$LN51@Tidy:

; 255  :         ::operator delete(_Ptr, _Bytes);

  00069	51		 push	 ecx
  0006a	50		 push	 eax
  0006b	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00070	83 c4 08	 add	 esp, 8
$LN41@Tidy:
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\deque

; 1490 :         _Mapsize() = 0;

  00073	c7 47 08 00 00
	00 00		 mov	 DWORD PTR [edi+8], 0

; 1491 :         _Map()     = _Mapptr();

  0007a	c7 47 04 00 00
	00 00		 mov	 DWORD PTR [edi+4], 0
  00081	5f		 pop	 edi

; 1492 :     }

  00082	c3		 ret	 0
$LN48@Tidy:
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00083	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN62@Tidy:
  00088	cc		 int	 3
?_Tidy@?$deque@KV?$allocator@K@std@@@std@@AAEXXZ ENDP	; std::deque<unsigned long,std::allocator<unsigned long> >::_Tidy
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\deque
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\deque
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\deque
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\deque
;	COMDAT ?_Growmap@?$deque@KV?$allocator@K@std@@@std@@AAEXI@Z
_TEXT	SEGMENT
tv483 = -4						; size = 4
$T1 = 8							; size = 4
__Count$ = 8						; size = 4
?_Growmap@?$deque@KV?$allocator@K@std@@@std@@AAEXI@Z PROC ; std::deque<unsigned long,std::allocator<unsigned long> >::_Growmap, COMDAT
; _this$ = ecx

; 1432 :     void _Growmap(size_type _Count) { // grow map by at least _Count pointers, _Mapsize() a power of 2

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	53		 push	 ebx

; 1433 :         static_assert(1 < _Minimum_map_size, "The _Xlen() test should always be performed.");
; 1434 : 
; 1435 :         _Alpty _Almap(_Getal());
; 1436 :         size_type _Newsize = 0 < _Mapsize() ? _Mapsize() : 1;

  00005	8b 5d 08	 mov	 ebx, DWORD PTR __Count$[ebp]
  00008	b8 01 00 00 00	 mov	 eax, 1
  0000d	56		 push	 esi
  0000e	57		 push	 edi
  0000f	8b f9		 mov	 edi, ecx
  00011	8b 57 08	 mov	 edx, DWORD PTR [edi+8]
  00014	85 d2		 test	 edx, edx
  00016	0f 45 c2	 cmovne	 eax, edx
  00019	0f 1f 80 00 00
	00 00		 npad	 7
$LL2@Growmap:

; 1437 :         while (_Newsize - _Mapsize() < _Count || _Newsize < _Minimum_map_size) {

  00020	8b f0		 mov	 esi, eax
  00022	2b f2		 sub	 esi, edx
  00024	3b f3		 cmp	 esi, ebx
  00026	72 05		 jb	 SHORT $LN4@Growmap
  00028	83 f8 08	 cmp	 eax, 8
  0002b	73 13		 jae	 SHORT $LN3@Growmap
$LN4@Growmap:

; 1438 :             // scale _Newsize to 2^N >= _Mapsize() + _Count
; 1439 :             if (max_size() / _Block_size - _Newsize < _Newsize) {

  0002d	b9 ff ff ff 0f	 mov	 ecx, 268435455		; 0fffffffH
  00032	2b c8		 sub	 ecx, eax
  00034	3b c8		 cmp	 ecx, eax
  00036	0f 82 fe 00 00
	00		 jb	 $LN44@Growmap

; 1441 :             }
; 1442 : 
; 1443 :             _Newsize *= 2;

  0003c	03 c0		 add	 eax, eax

; 1444 :         }

  0003e	eb e0		 jmp	 SHORT $LL2@Growmap
$LN3@Growmap:

; 1445 :         _Count = _Newsize - _Mapsize();
; 1446 : 
; 1447 :         size_type _Myboff = _Myoff() / _Block_size;

  00040	8b 5f 0c	 mov	 ebx, DWORD PTR [edi+12]
  00043	c1 eb 02	 shr	 ebx, 2
  00046	89 5d 08	 mov	 DWORD PTR $T1[ebp], ebx
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory

; 60   :         if (_Count > _Max_possible) {

  00049	3d ff ff ff 3f	 cmp	 eax, 1073741823		; 3fffffffH
  0004e	0f 87 ed 00 00
	00		 ja	 $LN51@Growmap

; 62   :         }
; 63   :     }
; 64   : 
; 65   :     return _Count * _Ty_size;

  00054	c1 e0 02	 shl	 eax, 2

; 228  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00057	3d 00 10 00 00	 cmp	 eax, 4096		; 00001000H
  0005c	72 0d		 jb	 SHORT $LN19@Growmap

; 229  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  0005e	50		 push	 eax
  0005f	e8 00 00 00 00	 call	 ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
  00064	83 c4 04	 add	 esp, 4
  00067	8b d8		 mov	 ebx, eax
  00069	eb 13		 jmp	 SHORT $LN18@Growmap
$LN19@Growmap:

; 230  :         }
; 231  :     }
; 232  : #endif // defined(_M_IX86) || defined(_M_X64)
; 233  : 
; 234  :     if (_Bytes != 0) {

  0006b	85 c0		 test	 eax, eax
  0006d	74 0d		 je	 SHORT $LN20@Growmap

; 79   :         return ::operator new(_Bytes);

  0006f	50		 push	 eax
  00070	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00075	83 c4 04	 add	 esp, 4

; 235  :         return _Traits::_Allocate(_Bytes);

  00078	8b d8		 mov	 ebx, eax
  0007a	eb 02		 jmp	 SHORT $LN18@Growmap
$LN20@Growmap:

; 236  :     }
; 237  : 
; 238  :     return nullptr;

  0007c	33 db		 xor	 ebx, ebx
$LN18@Growmap:
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\deque

; 1449 :         _Mapptr _Myptr    = _Newmap + _Myboff;

  0007e	8b 55 08	 mov	 edx, DWORD PTR $T1[ebp]

; 1450 : 
; 1451 :         _Myptr = _STD uninitialized_copy(_Map() + _Myboff, _Map() + _Mapsize(), _Myptr); // copy initial to end

  00081	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
  00084	c1 e2 02	 shl	 edx, 2
  00087	89 55 fc	 mov	 DWORD PTR tv483[ebp], edx
  0008a	8d 04 1a	 lea	 eax, DWORD PTR [edx+ebx]
  0008d	50		 push	 eax
  0008e	8b 47 08	 mov	 eax, DWORD PTR [edi+8]
  00091	8d 04 81	 lea	 eax, DWORD PTR [ecx+eax*4]
  00094	50		 push	 eax
  00095	8d 04 11	 lea	 eax, DWORD PTR [ecx+edx]
  00098	50		 push	 eax
  00099	e8 00 00 00 00	 call	 ??$uninitialized_copy@PAPAKPAPAK@std@@YAPAPAKQAPAK0PAPAK@Z ; std::uninitialized_copy<unsigned long * *,unsigned long * *>
  0009e	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
  000a1	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1452 :         if (_Myboff <= _Count) { // increment greater than offset of initial block

  000a4	50		 push	 eax
  000a5	39 75 08	 cmp	 DWORD PTR $T1[ebp], esi
  000a8	77 22		 ja	 SHORT $LN6@Growmap

; 1453 :             _Myptr = _STD uninitialized_copy(_Map(), _Map() + _Myboff, _Myptr); // copy rest of old

  000aa	8b 45 fc	 mov	 eax, DWORD PTR tv483[ebp]
  000ad	03 c1		 add	 eax, ecx
  000af	50		 push	 eax
  000b0	51		 push	 ecx
  000b1	e8 00 00 00 00	 call	 ??$uninitialized_copy@PAPAKPAPAK@std@@YAPAPAKQAPAK0PAPAK@Z ; std::uninitialized_copy<unsigned long * *,unsigned long * *>

; 1454 :             _Uninitialized_value_construct_n_unchecked1(_Myptr, _Count - _Myboff); // clear suffix of new

  000b6	8b ce		 mov	 ecx, esi
  000b8	2b 4d 08	 sub	 ecx, DWORD PTR $T1[ebp]
  000bb	51		 push	 ecx
  000bc	50		 push	 eax
  000bd	e8 00 00 00 00	 call	 ??$_Uninitialized_value_construct_n_unchecked1@PAPAKI@std@@YAPAPAKPAPAKI@Z ; std::_Uninitialized_value_construct_n_unchecked1<unsigned long * *,unsigned int>

; 1455 :             _Uninitialized_value_construct_n_unchecked1(_Newmap, _Myboff); // clear prefix of new
; 1456 :         } else { // increment not greater than offset of initial block

  000c2	8b 45 08	 mov	 eax, DWORD PTR $T1[ebp]
  000c5	83 c4 14	 add	 esp, 20			; 00000014H
  000c8	8b cb		 mov	 ecx, ebx
  000ca	eb 24		 jmp	 SHORT $LN7@Growmap
$LN6@Growmap:

; 1457 :             _STD uninitialized_copy(_Map(), _Map() + _Count, _Myptr); // copy more old

  000cc	8d 04 b1	 lea	 eax, DWORD PTR [ecx+esi*4]
  000cf	50		 push	 eax
  000d0	51		 push	 ecx
  000d1	e8 00 00 00 00	 call	 ??$uninitialized_copy@PAPAKPAPAK@std@@YAPAPAKQAPAK0PAPAK@Z ; std::uninitialized_copy<unsigned long * *,unsigned long * *>

; 1458 :             _Myptr = _STD uninitialized_copy(_Map() + _Count, _Map() + _Myboff, _Newmap); // copy rest of old

  000d6	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
  000d9	8b 45 fc	 mov	 eax, DWORD PTR tv483[ebp]
  000dc	03 c1		 add	 eax, ecx
  000de	53		 push	 ebx
  000df	50		 push	 eax
  000e0	8d 04 b1	 lea	 eax, DWORD PTR [ecx+esi*4]
  000e3	50		 push	 eax
  000e4	e8 00 00 00 00	 call	 ??$uninitialized_copy@PAPAKPAPAK@std@@YAPAPAKQAPAK0PAPAK@Z ; std::uninitialized_copy<unsigned long * *,unsigned long * *>

; 1459 :             _Uninitialized_value_construct_n_unchecked1(_Myptr, _Count); // clear rest to initial block

  000e9	8b c8		 mov	 ecx, eax
  000eb	83 c4 18	 add	 esp, 24			; 00000018H
  000ee	8b c6		 mov	 eax, esi
$LN7@Growmap:

; 1460 :         }
; 1461 : 
; 1462 :         _Destroy_range(_Map() + _Myboff, _Map() + _Mapsize());
; 1463 :         if (_Map() != _Mapptr()) {

  000f0	50		 push	 eax
  000f1	51		 push	 ecx
  000f2	e8 00 00 00 00	 call	 ??$_Uninitialized_value_construct_n_unchecked1@PAPAKI@std@@YAPAPAKPAPAKI@Z ; std::_Uninitialized_value_construct_n_unchecked1<unsigned long * *,unsigned int>
  000f7	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  000fa	83 c4 08	 add	 esp, 8
  000fd	85 c0		 test	 eax, eax
  000ff	74 2a		 je	 SHORT $LN29@Growmap
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory

; 797  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00101	8b 4f 08	 mov	 ecx, DWORD PTR [edi+8]
  00104	c1 e1 02	 shl	 ecx, 2

; 251  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00107	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  0010d	72 12		 jb	 SHORT $LN39@Growmap

; 150  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  0010f	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  00112	83 c1 23	 add	 ecx, 35			; 00000023H

; 151  : 
; 152  :     // If the following asserts, it likely means that we are performing
; 153  :     // an aligned delete on memory coming from an unaligned allocation.
; 154  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 155  : 
; 156  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 157  :     // in range [_Min_back_shift, _Non_user_size]
; 158  : #ifdef _DEBUG
; 159  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 160  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 161  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 162  : #endif // _DEBUG
; 163  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  00115	2b c2		 sub	 eax, edx

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00117	83 c0 fc	 add	 eax, -4			; fffffffcH
  0011a	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  0011d	77 27		 ja	 SHORT $LN36@Growmap

; 165  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  0011f	8b c2		 mov	 eax, edx
$LN39@Growmap:

; 255  :         ::operator delete(_Ptr, _Bytes);

  00121	51		 push	 ecx
  00122	50		 push	 eax
  00123	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00128	83 c4 08	 add	 esp, 8
$LN29@Growmap:
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\deque

; 1468 :         _Mapsize() += _Count;

  0012b	01 77 08	 add	 DWORD PTR [edi+8], esi
  0012e	89 5f 04	 mov	 DWORD PTR [edi+4], ebx
  00131	5f		 pop	 edi
  00132	5e		 pop	 esi
  00133	5b		 pop	 ebx

; 1469 :     }

  00134	8b e5		 mov	 esp, ebp
  00136	5d		 pop	 ebp
  00137	c2 04 00	 ret	 4
$LN44@Growmap:

; 1440 :                 _Xlen(); // result too long

  0013a	8b cf		 mov	 ecx, edi
  0013c	e8 00 00 00 00	 call	 ?_Xlen@?$deque@KV?$allocator@K@std@@@std@@ABEXXZ ; std::deque<unsigned long,std::allocator<unsigned long> >::_Xlen
$LN51@Growmap:
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory

; 61   :             _Throw_bad_array_new_length(); // multiply overflow

  00141	e8 00 00 00 00	 call	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length
$LN36@Growmap:

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00146	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN49@Growmap:
  0014b	cc		 int	 3
?_Growmap@?$deque@KV?$allocator@K@std@@@std@@AAEXI@Z ENDP ; std::deque<unsigned long,std::allocator<unsigned long> >::_Growmap
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\deque
;	COMDAT ?_Xlen@?$deque@KV?$allocator@K@std@@@std@@ABEXXZ
_TEXT	SEGMENT
?_Xlen@?$deque@KV?$allocator@K@std@@@std@@ABEXXZ PROC	; std::deque<unsigned long,std::allocator<unsigned long> >::_Xlen, COMDAT
; _this$ = ecx

; 1425 :         _Xlength_error("deque<T> too long");

  00000	68 00 00 00 00	 push	 OFFSET ??_C@_0BC@KBDMBKEH@deque?$DMT?$DO?5too?5long@
  00005	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPBD@Z ; std::_Xlength_error
$LN3@Xlen:
  0000a	cc		 int	 3
?_Xlen@?$deque@KV?$allocator@K@std@@@std@@ABEXXZ ENDP	; std::deque<unsigned long,std::allocator<unsigned long> >::_Xlen
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xtree
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory
;	COMDAT ??1?$map@KV?$map@KUSStoreCoolDown@CSlotWindow@UI@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@5@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$map@KUSStoreCoolDown@CSlotWindow@UI@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@5@@std@@@std@@@2@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$map@KV?$map@KUSStoreCoolDown@CSlotWindow@UI@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@5@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$map@KUSStoreCoolDown@CSlotWindow@UI@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@5@@std@@@std@@@2@@std@@QAE@XZ PROC ; std::map<unsigned long,std::map<unsigned long,UI::CSlotWindow::SStoreCoolDown,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,UI::CSlotWindow::SStoreCoolDown> > >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::map<unsigned long,UI::CSlotWindow::SStoreCoolDown,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,UI::CSlotWindow::SStoreCoolDown> > > > > >::~map<unsigned long,std::map<unsigned long,UI::CSlotWindow::SStoreCoolDown,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,UI::CSlotWindow::SStoreCoolDown> > >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::map<unsigned long,UI::CSlotWindow::SStoreCoolDown,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,UI::CSlotWindow::SStoreCoolDown> > > > > >, COMDAT
; _this$ = ecx
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xtree

; 752  :         _Erase_tree(_Al, _Myhead->_Parent);

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	8b 06		 mov	 eax, DWORD PTR [esi]
  00005	ff 70 04	 push	 DWORD PTR [eax+4]
  00008	56		 push	 esi
  00009	e8 00 00 00 00	 call	 ??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBKV?$map@KUSStoreCoolDown@CSlotWindow@UI@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@5@@std@@@std@@PAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$map@KUSStoreCoolDown@CSlotWindow@UI@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@5@@std@@@std@@@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBKV?$map@KUSStoreCoolDown@CSlotWindow@UI@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@5@@std@@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBKV?$map@KUSStoreCoolDown@CSlotWindow@UI@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@5@@std@@@std@@PAX@1@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,std::map<unsigned long,UI::CSlotWindow::SStoreCoolDown,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,UI::CSlotWindow::SStoreCoolDown> > > > > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<unsigned long const ,std::map<unsigned long,UI::CSlotWindow::SStoreCoolDown,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,UI::CSlotWindow::SStoreCoolDown> > > >,void *> > >
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory

; 255  :         ::operator delete(_Ptr, _Bytes);

  0000e	6a 1c		 push	 28			; 0000001cH
  00010	ff 36		 push	 DWORD PTR [esi]
  00012	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00017	83 c4 08	 add	 esp, 8
  0001a	5e		 pop	 esi
  0001b	c3		 ret	 0
??1?$map@KV?$map@KUSStoreCoolDown@CSlotWindow@UI@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@5@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$map@KUSStoreCoolDown@CSlotWindow@UI@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@5@@std@@@std@@@2@@std@@QAE@XZ ENDP ; std::map<unsigned long,std::map<unsigned long,UI::CSlotWindow::SStoreCoolDown,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,UI::CSlotWindow::SStoreCoolDown> > >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::map<unsigned long,UI::CSlotWindow::SStoreCoolDown,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,UI::CSlotWindow::SStoreCoolDown> > > > > >::~map<unsigned long,std::map<unsigned long,UI::CSlotWindow::SStoreCoolDown,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,UI::CSlotWindow::SStoreCoolDown> > >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::map<unsigned long,UI::CSlotWindow::SStoreCoolDown,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,UI::CSlotWindow::SStoreCoolDown> > > > > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\map
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xtree
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xstddef
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xtree
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\map
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xtree
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\utility
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xtree
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\utility
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xtree
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\map
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xtree
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\map
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xtree
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\map
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xtree
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\map
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xtree
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\map
;	COMDAT ??A?$map@KV?$map@KUSStoreCoolDown@CSlotWindow@UI@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@5@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$map@KUSStoreCoolDown@CSlotWindow@UI@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@5@@std@@@std@@@2@@std@@QAEAAV?$map@KUSStoreCoolDown@CSlotWindow@UI@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@5@@1@ABK@Z
_TEXT	SEGMENT
__Loc$3 = -36						; size = 12
$T4 = -24						; size = 8
_this$1$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_this$5 = 8						; size = 4
__Keyval$ = 8						; size = 4
??A?$map@KV?$map@KUSStoreCoolDown@CSlotWindow@UI@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@5@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$map@KUSStoreCoolDown@CSlotWindow@UI@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@5@@std@@@std@@@2@@std@@QAEAAV?$map@KUSStoreCoolDown@CSlotWindow@UI@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@5@@1@ABK@Z PROC ; std::map<unsigned long,std::map<unsigned long,UI::CSlotWindow::SStoreCoolDown,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,UI::CSlotWindow::SStoreCoolDown> > >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::map<unsigned long,UI::CSlotWindow::SStoreCoolDown,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,UI::CSlotWindow::SStoreCoolDown> > > > > >::operator[], COMDAT
; _this$ = ecx

; 322  :     mapped_type& operator[](const key_type& _Keyval) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??A?$map@KV?$map@KUSStoreCoolDown@CSlotWindow@UI@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@5@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$map@KUSStoreCoolDown@CSlotWindow@UI@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@5@@std@@@std@@@2@@std@@QAEAAV?$map@KUSStoreCoolDown@CSlotWindow@UI@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@5@@1@ABK@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 18	 sub	 esp, 24			; 00000018H
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00028	8b f1		 mov	 esi, ecx
  0002a	89 75 f0	 mov	 DWORD PTR _this$1$[ebp], esi

; 174  :         const auto _Loc = _Mybase::_Find_lower_bound(_Keyval);

  0002d	8b 5d 08	 mov	 ebx, DWORD PTR __Keyval$[ebp]
  00030	8d 45 dc	 lea	 eax, DWORD PTR __Loc$3[ebp]
  00033	53		 push	 ebx
  00034	50		 push	 eax
  00035	e8 00 00 00 00	 call	 ??$_Find_lower_bound@K@?$_Tree@V?$_Tmap_traits@KV?$map@KUSStoreCoolDown@CSlotWindow@UI@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@5@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$map@KUSStoreCoolDown@CSlotWindow@UI@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@5@@std@@@std@@@2@$0A@@std@@@std@@IBE?AU?$_Tree_find_result@PAU?$_Tree_node@U?$pair@$$CBKV?$map@KUSStoreCoolDown@CSlotWindow@UI@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@5@@std@@@std@@PAX@std@@@1@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::map<unsigned long,UI::CSlotWindow::SStoreCoolDown,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,UI::CSlotWindow::SStoreCoolDown> > >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::map<unsigned long,UI::CSlotWindow::SStoreCoolDown,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,UI::CSlotWindow::SStoreCoolDown> > > > >,0> >::_Find_lower_bound<unsigned long>
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xtree

; 1591 :         return !_Bound->_Isnil && !_DEBUG_LT_PRED(_Getcomp(), _Keyval, _Traits::_Kfn(_Bound->_Myval));

  0003a	8b 55 e4	 mov	 edx, DWORD PTR __Loc$3[ebp+8]
  0003d	80 7a 0d 00	 cmp	 BYTE PTR [edx+13], 0
  00041	75 0b		 jne	 SHORT $LN4@operator
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xstddef

; 117  :         return _Left < _Right;

  00043	8b 03		 mov	 eax, DWORD PTR [ebx]
  00045	3b 42 10	 cmp	 eax, DWORD PTR [edx+16]
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xtree

; 1591 :         return !_Bound->_Isnil && !_DEBUG_LT_PRED(_Getcomp(), _Keyval, _Traits::_Kfn(_Bound->_Myval));

  00048	0f 83 87 00 00
	00		 jae	 $LN3@operator
$LN4@operator:

; 1615 :         if (max_size() == _Get_scary()->_Mysize) {

  0004e	81 7e 04 49 92
	24 09		 cmp	 DWORD PTR [esi+4], 153391689 ; 09249249H
  00055	0f 84 91 00 00
	00		 je	 $LN151@operator
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\map

; 182  :         const auto _Inserted = _Tree_temp_node<_Alnode>(_Mybase::_Getal(), _Scary->_Myhead, piecewise_construct,

  0005b	8b 1e		 mov	 ebx, DWORD PTR [esi]
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory

; 958  :     _CONSTEXPR20_DYNALLOC explicit _Alloc_construct_ptr(_Alloc& _Al_) : _Al(_Al_), _Ptr(nullptr) {}

  0005d	89 75 e8	 mov	 DWORD PTR $T4[ebp], esi

; 79   :         return ::operator new(_Bytes);

  00060	6a 1c		 push	 28			; 0000001cH
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xtree

; 783  :     explicit _Tree_temp_node_alloc(_Alnode& _Al_) : _Alloc_construct_ptr<_Alnode>(_Al_) {

  00062	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory

; 965  :         _Ptr = nullptr; // if allocate throws, prevents double-free

  00069	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR $T4[ebp+4], 0

; 79   :         return ::operator new(_Bytes);

  00070	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new

; 235  :         return _Traits::_Allocate(_Bytes);

  00075	8b f8		 mov	 edi, eax

; 966  :         _Ptr = _Al.allocate(1);

  00077	89 7d ec	 mov	 DWORD PTR $T4[ebp+4], edi
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\utility

; 263  :         : first(_Tuple_get<_Indexes1>(_STD move(_Val1))...), second(_Tuple_get<_Indexes2>(_STD move(_Val2))...) {}

  0007a	8b 45 08	 mov	 eax, DWORD PTR __Keyval$[ebp]
  0007d	8d 77 14	 lea	 esi, DWORD PTR [edi+20]
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory

; 79   :         return ::operator new(_Bytes);

  00080	6a 20		 push	 32			; 00000020H
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xtree

; 804  :         : _Tree_temp_node_alloc<_Alnode>(_Al_) {

  00082	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 1
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\utility

; 263  :         : first(_Tuple_get<_Indexes1>(_STD move(_Val1))...), second(_Tuple_get<_Indexes2>(_STD move(_Val2))...) {}

  00089	89 75 08	 mov	 DWORD PTR _this$5[ebp], esi
  0008c	8b 00		 mov	 eax, DWORD PTR [eax]
  0008e	89 47 10	 mov	 DWORD PTR [edi+16], eax
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xtree

; 435  :     _Tree_val() noexcept : _Myhead(), _Mysize(0) {}

  00091	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], 0
  00097	c7 46 04 00 00
	00 00		 mov	 DWORD PTR [esi+4], 0
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory

; 79   :         return ::operator new(_Bytes);

  0009e	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\map

; 188  :         return {_Scary->_Insert_node(_Loc._Location, _Inserted), true};

  000a3	8b 4d f0	 mov	 ecx, DWORD PTR _this$1$[ebp]
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory

; 79   :         return ::operator new(_Bytes);

  000a6	83 c4 08	 add	 esp, 8
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xtree

; 345  :         _Construct_in_place(_Pnode->_Left, _Pnode);

  000a9	89 00		 mov	 DWORD PTR [eax], eax

; 346  :         _Construct_in_place(_Pnode->_Parent, _Pnode);

  000ab	89 40 04	 mov	 DWORD PTR [eax+4], eax

; 347  :         _Construct_in_place(_Pnode->_Right, _Pnode);

  000ae	89 40 08	 mov	 DWORD PTR [eax+8], eax

; 348  :         _Pnode->_Color = _Black;

  000b1	66 c7 40 0c 01
	01		 mov	 WORD PTR [eax+12], 257	; 00000101H
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\map

; 188  :         return {_Scary->_Insert_node(_Loc._Location, _Inserted), true};

  000b7	57		 push	 edi
  000b8	ff 75 e0	 push	 DWORD PTR __Loc$3[ebp+4]
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xtree

; 1917 :         _Scary->_Myhead = _Node::_Buyheadnode(_Getal());

  000bb	89 06		 mov	 DWORD PTR [esi], eax
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\map

; 188  :         return {_Scary->_Insert_node(_Loc._Location, _Inserted), true};

  000bd	ff 75 dc	 push	 DWORD PTR __Loc$3[ebp]
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xtree

; 806  :         _Construct_in_place(this->_Ptr->_Left, _Myhead);

  000c0	89 1f		 mov	 DWORD PTR [edi], ebx

; 807  :         _Construct_in_place(this->_Ptr->_Parent, _Myhead);

  000c2	89 5f 04	 mov	 DWORD PTR [edi+4], ebx

; 808  :         _Construct_in_place(this->_Ptr->_Right, _Myhead);

  000c5	89 5f 08	 mov	 DWORD PTR [edi+8], ebx

; 809  :         this->_Ptr->_Color = _Red;

  000c8	66 c7 47 0c 00
	00		 mov	 WORD PTR [edi+12], 0
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\map

; 188  :         return {_Scary->_Insert_node(_Loc._Location, _Inserted), true};

  000ce	e8 00 00 00 00	 call	 ?_Insert_node@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$map@KUSStoreCoolDown@CSlotWindow@UI@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@5@@std@@@std@@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBKV?$map@KUSStoreCoolDown@CSlotWindow@UI@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@5@@std@@@std@@PAX@2@U?$_Tree_id@PAU?$_Tree_node@U?$pair@$$CBKV?$map@KUSStoreCoolDown@CSlotWindow@UI@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@5@@std@@@std@@PAX@std@@@2@QAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,std::map<unsigned long,UI::CSlotWindow::SStoreCoolDown,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,UI::CSlotWindow::SStoreCoolDown> > > > > >::_Insert_node
  000d3	8b d0		 mov	 edx, eax
$LN3@operator:

; 323  :         return _Try_emplace(_Keyval).first->_Myval.second;

  000d5	8d 42 14	 lea	 eax, DWORD PTR [edx+20]

; 324  :     }

  000d8	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000db	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000e2	59		 pop	 ecx
  000e3	5f		 pop	 edi
  000e4	5e		 pop	 esi
  000e5	5b		 pop	 ebx
  000e6	8b e5		 mov	 esp, ebp
  000e8	5d		 pop	 ebp
  000e9	c2 04 00	 ret	 4
$LN151@operator:
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xtree

; 1616 :             _Throw_tree_length_error();

  000ec	e8 00 00 00 00	 call	 ?_Throw_tree_length_error@std@@YAXXZ ; std::_Throw_tree_length_error
$LN149@operator:
  000f1	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??A?$map@KV?$map@KUSStoreCoolDown@CSlotWindow@UI@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@5@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$map@KUSStoreCoolDown@CSlotWindow@UI@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@5@@std@@@std@@@2@@std@@QAEAAV?$map@KUSStoreCoolDown@CSlotWindow@UI@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@5@@1@ABK@Z$2:
  00000	8d 4d e8	 lea	 ecx, DWORD PTR $T4[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBKV?$map@KUSStoreCoolDown@CSlotWindow@UI@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@5@@std@@@std@@PAX@std@@@std@@@std@@QAE@XZ ; std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<unsigned long const ,std::map<unsigned long,UI::CSlotWindow::SStoreCoolDown,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,UI::CSlotWindow::SStoreCoolDown> > > >,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<unsigned long const ,std::map<unsigned long,UI::CSlotWindow::SStoreCoolDown,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,UI::CSlotWindow::SStoreCoolDown> > > >,void *> > >
__unwindfunclet$??A?$map@KV?$map@KUSStoreCoolDown@CSlotWindow@UI@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@5@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$map@KUSStoreCoolDown@CSlotWindow@UI@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@5@@std@@@std@@@2@@std@@QAEAAV?$map@KUSStoreCoolDown@CSlotWindow@UI@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@5@@1@ABK@Z$1:
  00008	8d 4d e8	 lea	 ecx, DWORD PTR $T4[ebp]
  0000b	e9 00 00 00 00	 jmp	 ??1?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBKV?$map@KUSStoreCoolDown@CSlotWindow@UI@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@5@@std@@@std@@PAX@std@@@std@@@std@@QAE@XZ
  00010	cc		 int	 3
  00011	cc		 int	 3
  00012	cc		 int	 3
  00013	cc		 int	 3
  00014	cc		 int	 3
__ehhandler$??A?$map@KV?$map@KUSStoreCoolDown@CSlotWindow@UI@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@5@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$map@KUSStoreCoolDown@CSlotWindow@UI@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@5@@std@@@std@@@2@@std@@QAEAAV?$map@KUSStoreCoolDown@CSlotWindow@UI@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@5@@1@ABK@Z:
  00015	90		 npad	 1
  00016	90		 npad	 1
  00017	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0001b	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0001e	8b 4a d8	 mov	 ecx, DWORD PTR [edx-40]
  00021	33 c8		 xor	 ecx, eax
  00023	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00028	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??A?$map@KV?$map@KUSStoreCoolDown@CSlotWindow@UI@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@5@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$map@KUSStoreCoolDown@CSlotWindow@UI@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@5@@std@@@std@@@2@@std@@QAEAAV?$map@KUSStoreCoolDown@CSlotWindow@UI@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@5@@1@ABK@Z
  0002d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??A?$map@KV?$map@KUSStoreCoolDown@CSlotWindow@UI@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@5@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$map@KUSStoreCoolDown@CSlotWindow@UI@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@5@@std@@@std@@@2@@std@@QAEAAV?$map@KUSStoreCoolDown@CSlotWindow@UI@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@5@@1@ABK@Z ENDP ; std::map<unsigned long,std::map<unsigned long,UI::CSlotWindow::SStoreCoolDown,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,UI::CSlotWindow::SStoreCoolDown> > >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::map<unsigned long,UI::CSlotWindow::SStoreCoolDown,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,UI::CSlotWindow::SStoreCoolDown> > > > > >::operator[]
; Function compile flags: /Ogtp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\map
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xtree
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xstddef
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xtree
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\map
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xtree
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\utility
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xtree
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\utility
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xtree
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\map
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xtree
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\map
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xtree
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\map
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xtree
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\map
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xtree
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\map
;	COMDAT ??A?$map@KV?$map@KUSStoreCoolDown@CSlotWindow@UI@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@5@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$map@KUSStoreCoolDown@CSlotWindow@UI@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@5@@std@@@std@@@2@@std@@QAEAAV?$map@KUSStoreCoolDown@CSlotWindow@UI@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@5@@1@$$QAK@Z
_TEXT	SEGMENT
__Loc$3 = -36						; size = 12
$T4 = -24						; size = 8
_this$1$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_this$5 = 8						; size = 4
__Keyval$ = 8						; size = 4
??A?$map@KV?$map@KUSStoreCoolDown@CSlotWindow@UI@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@5@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$map@KUSStoreCoolDown@CSlotWindow@UI@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@5@@std@@@std@@@2@@std@@QAEAAV?$map@KUSStoreCoolDown@CSlotWindow@UI@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@5@@1@$$QAK@Z PROC ; std::map<unsigned long,std::map<unsigned long,UI::CSlotWindow::SStoreCoolDown,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,UI::CSlotWindow::SStoreCoolDown> > >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::map<unsigned long,UI::CSlotWindow::SStoreCoolDown,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,UI::CSlotWindow::SStoreCoolDown> > > > > >::operator[], COMDAT
; _this$ = ecx

; 151  :     mapped_type& operator[](key_type&& _Keyval) { // find element matching _Keyval or insert value-initialized value

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??A?$map@KV?$map@KUSStoreCoolDown@CSlotWindow@UI@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@5@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$map@KUSStoreCoolDown@CSlotWindow@UI@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@5@@std@@@std@@@2@@std@@QAEAAV?$map@KUSStoreCoolDown@CSlotWindow@UI@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@5@@1@$$QAK@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 18	 sub	 esp, 24			; 00000018H
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00028	8b f1		 mov	 esi, ecx
  0002a	89 75 f0	 mov	 DWORD PTR _this$1$[ebp], esi

; 174  :         const auto _Loc = _Mybase::_Find_lower_bound(_Keyval);

  0002d	8b 5d 08	 mov	 ebx, DWORD PTR __Keyval$[ebp]
  00030	8d 45 dc	 lea	 eax, DWORD PTR __Loc$3[ebp]
  00033	53		 push	 ebx
  00034	50		 push	 eax
  00035	e8 00 00 00 00	 call	 ??$_Find_lower_bound@K@?$_Tree@V?$_Tmap_traits@KV?$map@KUSStoreCoolDown@CSlotWindow@UI@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@5@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$map@KUSStoreCoolDown@CSlotWindow@UI@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@5@@std@@@std@@@2@$0A@@std@@@std@@IBE?AU?$_Tree_find_result@PAU?$_Tree_node@U?$pair@$$CBKV?$map@KUSStoreCoolDown@CSlotWindow@UI@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@5@@std@@@std@@PAX@std@@@1@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::map<unsigned long,UI::CSlotWindow::SStoreCoolDown,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,UI::CSlotWindow::SStoreCoolDown> > >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::map<unsigned long,UI::CSlotWindow::SStoreCoolDown,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,UI::CSlotWindow::SStoreCoolDown> > > > >,0> >::_Find_lower_bound<unsigned long>
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xtree

; 1591 :         return !_Bound->_Isnil && !_DEBUG_LT_PRED(_Getcomp(), _Keyval, _Traits::_Kfn(_Bound->_Myval));

  0003a	8b 55 e4	 mov	 edx, DWORD PTR __Loc$3[ebp+8]
  0003d	80 7a 0d 00	 cmp	 BYTE PTR [edx+13], 0
  00041	75 0b		 jne	 SHORT $LN4@operator
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xstddef

; 117  :         return _Left < _Right;

  00043	8b 03		 mov	 eax, DWORD PTR [ebx]
  00045	3b 42 10	 cmp	 eax, DWORD PTR [edx+16]
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xtree

; 1591 :         return !_Bound->_Isnil && !_DEBUG_LT_PRED(_Getcomp(), _Keyval, _Traits::_Kfn(_Bound->_Myval));

  00048	0f 83 87 00 00
	00		 jae	 $LN3@operator
$LN4@operator:

; 1615 :         if (max_size() == _Get_scary()->_Mysize) {

  0004e	81 7e 04 49 92
	24 09		 cmp	 DWORD PTR [esi+4], 153391689 ; 09249249H
  00055	0f 84 91 00 00
	00		 je	 $LN151@operator
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\map

; 182  :         const auto _Inserted = _Tree_temp_node<_Alnode>(_Mybase::_Getal(), _Scary->_Myhead, piecewise_construct,

  0005b	8b 1e		 mov	 ebx, DWORD PTR [esi]
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory

; 958  :     _CONSTEXPR20_DYNALLOC explicit _Alloc_construct_ptr(_Alloc& _Al_) : _Al(_Al_), _Ptr(nullptr) {}

  0005d	89 75 e8	 mov	 DWORD PTR $T4[ebp], esi

; 79   :         return ::operator new(_Bytes);

  00060	6a 1c		 push	 28			; 0000001cH
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xtree

; 783  :     explicit _Tree_temp_node_alloc(_Alnode& _Al_) : _Alloc_construct_ptr<_Alnode>(_Al_) {

  00062	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory

; 965  :         _Ptr = nullptr; // if allocate throws, prevents double-free

  00069	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR $T4[ebp+4], 0

; 79   :         return ::operator new(_Bytes);

  00070	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new

; 235  :         return _Traits::_Allocate(_Bytes);

  00075	8b f8		 mov	 edi, eax

; 966  :         _Ptr = _Al.allocate(1);

  00077	89 7d ec	 mov	 DWORD PTR $T4[ebp+4], edi
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\utility

; 263  :         : first(_Tuple_get<_Indexes1>(_STD move(_Val1))...), second(_Tuple_get<_Indexes2>(_STD move(_Val2))...) {}

  0007a	8b 45 08	 mov	 eax, DWORD PTR __Keyval$[ebp]
  0007d	8d 77 14	 lea	 esi, DWORD PTR [edi+20]
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory

; 79   :         return ::operator new(_Bytes);

  00080	6a 20		 push	 32			; 00000020H
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xtree

; 804  :         : _Tree_temp_node_alloc<_Alnode>(_Al_) {

  00082	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 1
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\utility

; 263  :         : first(_Tuple_get<_Indexes1>(_STD move(_Val1))...), second(_Tuple_get<_Indexes2>(_STD move(_Val2))...) {}

  00089	89 75 08	 mov	 DWORD PTR _this$5[ebp], esi
  0008c	8b 00		 mov	 eax, DWORD PTR [eax]
  0008e	89 47 10	 mov	 DWORD PTR [edi+16], eax
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xtree

; 435  :     _Tree_val() noexcept : _Myhead(), _Mysize(0) {}

  00091	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], 0
  00097	c7 46 04 00 00
	00 00		 mov	 DWORD PTR [esi+4], 0
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory

; 79   :         return ::operator new(_Bytes);

  0009e	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\map

; 188  :         return {_Scary->_Insert_node(_Loc._Location, _Inserted), true};

  000a3	8b 4d f0	 mov	 ecx, DWORD PTR _this$1$[ebp]
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory

; 79   :         return ::operator new(_Bytes);

  000a6	83 c4 08	 add	 esp, 8
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xtree

; 345  :         _Construct_in_place(_Pnode->_Left, _Pnode);

  000a9	89 00		 mov	 DWORD PTR [eax], eax

; 346  :         _Construct_in_place(_Pnode->_Parent, _Pnode);

  000ab	89 40 04	 mov	 DWORD PTR [eax+4], eax

; 347  :         _Construct_in_place(_Pnode->_Right, _Pnode);

  000ae	89 40 08	 mov	 DWORD PTR [eax+8], eax

; 348  :         _Pnode->_Color = _Black;

  000b1	66 c7 40 0c 01
	01		 mov	 WORD PTR [eax+12], 257	; 00000101H
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\map

; 188  :         return {_Scary->_Insert_node(_Loc._Location, _Inserted), true};

  000b7	57		 push	 edi
  000b8	ff 75 e0	 push	 DWORD PTR __Loc$3[ebp+4]
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xtree

; 1917 :         _Scary->_Myhead = _Node::_Buyheadnode(_Getal());

  000bb	89 06		 mov	 DWORD PTR [esi], eax
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\map

; 188  :         return {_Scary->_Insert_node(_Loc._Location, _Inserted), true};

  000bd	ff 75 dc	 push	 DWORD PTR __Loc$3[ebp]
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xtree

; 806  :         _Construct_in_place(this->_Ptr->_Left, _Myhead);

  000c0	89 1f		 mov	 DWORD PTR [edi], ebx

; 807  :         _Construct_in_place(this->_Ptr->_Parent, _Myhead);

  000c2	89 5f 04	 mov	 DWORD PTR [edi+4], ebx

; 808  :         _Construct_in_place(this->_Ptr->_Right, _Myhead);

  000c5	89 5f 08	 mov	 DWORD PTR [edi+8], ebx

; 809  :         this->_Ptr->_Color = _Red;

  000c8	66 c7 47 0c 00
	00		 mov	 WORD PTR [edi+12], 0
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\map

; 188  :         return {_Scary->_Insert_node(_Loc._Location, _Inserted), true};

  000ce	e8 00 00 00 00	 call	 ?_Insert_node@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$map@KUSStoreCoolDown@CSlotWindow@UI@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@5@@std@@@std@@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBKV?$map@KUSStoreCoolDown@CSlotWindow@UI@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@5@@std@@@std@@PAX@2@U?$_Tree_id@PAU?$_Tree_node@U?$pair@$$CBKV?$map@KUSStoreCoolDown@CSlotWindow@UI@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@5@@std@@@std@@PAX@std@@@2@QAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,std::map<unsigned long,UI::CSlotWindow::SStoreCoolDown,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,UI::CSlotWindow::SStoreCoolDown> > > > > >::_Insert_node
  000d3	8b d0		 mov	 edx, eax
$LN3@operator:

; 152  :         return _Try_emplace(_STD move(_Keyval)).first->_Myval.second;

  000d5	8d 42 14	 lea	 eax, DWORD PTR [edx+20]

; 153  :     }

  000d8	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000db	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000e2	59		 pop	 ecx
  000e3	5f		 pop	 edi
  000e4	5e		 pop	 esi
  000e5	5b		 pop	 ebx
  000e6	8b e5		 mov	 esp, ebp
  000e8	5d		 pop	 ebp
  000e9	c2 04 00	 ret	 4
$LN151@operator:
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xtree

; 1616 :             _Throw_tree_length_error();

  000ec	e8 00 00 00 00	 call	 ?_Throw_tree_length_error@std@@YAXXZ ; std::_Throw_tree_length_error
$LN149@operator:
  000f1	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??A?$map@KV?$map@KUSStoreCoolDown@CSlotWindow@UI@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@5@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$map@KUSStoreCoolDown@CSlotWindow@UI@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@5@@std@@@std@@@2@@std@@QAEAAV?$map@KUSStoreCoolDown@CSlotWindow@UI@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@5@@1@$$QAK@Z$2:
  00000	8d 4d e8	 lea	 ecx, DWORD PTR $T4[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBKV?$map@KUSStoreCoolDown@CSlotWindow@UI@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@5@@std@@@std@@PAX@std@@@std@@@std@@QAE@XZ ; std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<unsigned long const ,std::map<unsigned long,UI::CSlotWindow::SStoreCoolDown,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,UI::CSlotWindow::SStoreCoolDown> > > >,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<unsigned long const ,std::map<unsigned long,UI::CSlotWindow::SStoreCoolDown,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,UI::CSlotWindow::SStoreCoolDown> > > >,void *> > >
__unwindfunclet$??A?$map@KV?$map@KUSStoreCoolDown@CSlotWindow@UI@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@5@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$map@KUSStoreCoolDown@CSlotWindow@UI@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@5@@std@@@std@@@2@@std@@QAEAAV?$map@KUSStoreCoolDown@CSlotWindow@UI@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@5@@1@$$QAK@Z$1:
  00008	8d 4d e8	 lea	 ecx, DWORD PTR $T4[ebp]
  0000b	e9 00 00 00 00	 jmp	 ??1?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBKV?$map@KUSStoreCoolDown@CSlotWindow@UI@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@5@@std@@@std@@PAX@std@@@std@@@std@@QAE@XZ
  00010	cc		 int	 3
  00011	cc		 int	 3
  00012	cc		 int	 3
  00013	cc		 int	 3
  00014	cc		 int	 3
__ehhandler$??A?$map@KV?$map@KUSStoreCoolDown@CSlotWindow@UI@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@5@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$map@KUSStoreCoolDown@CSlotWindow@UI@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@5@@std@@@std@@@2@@std@@QAEAAV?$map@KUSStoreCoolDown@CSlotWindow@UI@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@5@@1@$$QAK@Z:
  00015	90		 npad	 1
  00016	90		 npad	 1
  00017	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0001b	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0001e	8b 4a d8	 mov	 ecx, DWORD PTR [edx-40]
  00021	33 c8		 xor	 ecx, eax
  00023	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00028	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??A?$map@KV?$map@KUSStoreCoolDown@CSlotWindow@UI@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@5@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$map@KUSStoreCoolDown@CSlotWindow@UI@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@5@@std@@@std@@@2@@std@@QAEAAV?$map@KUSStoreCoolDown@CSlotWindow@UI@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@5@@1@$$QAK@Z
  0002d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??A?$map@KV?$map@KUSStoreCoolDown@CSlotWindow@UI@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@5@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$map@KUSStoreCoolDown@CSlotWindow@UI@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@5@@std@@@std@@@2@@std@@QAEAAV?$map@KUSStoreCoolDown@CSlotWindow@UI@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@5@@1@$$QAK@Z ENDP ; std::map<unsigned long,std::map<unsigned long,UI::CSlotWindow::SStoreCoolDown,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,UI::CSlotWindow::SStoreCoolDown> > >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::map<unsigned long,UI::CSlotWindow::SStoreCoolDown,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,UI::CSlotWindow::SStoreCoolDown> > > > > >::operator[]
; Function compile flags: /Ogtp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xtree
;	COMDAT ?_Insert_node@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$map@KUSStoreCoolDown@CSlotWindow@UI@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@5@@std@@@std@@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBKV?$map@KUSStoreCoolDown@CSlotWindow@UI@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@5@@std@@@std@@PAX@2@U?$_Tree_id@PAU?$_Tree_node@U?$pair@$$CBKV?$map@KUSStoreCoolDown@CSlotWindow@UI@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@5@@std@@@std@@PAX@std@@@2@QAU32@@Z
_TEXT	SEGMENT
__Head$1$ = -8						; size = 4
_this$1$ = -4						; size = 4
__Loc$ = 8						; size = 8
__Newnode$ = 16						; size = 4
?_Insert_node@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$map@KUSStoreCoolDown@CSlotWindow@UI@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@5@@std@@@std@@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBKV?$map@KUSStoreCoolDown@CSlotWindow@UI@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@5@@std@@@std@@PAX@2@U?$_Tree_id@PAU?$_Tree_node@U?$pair@$$CBKV?$map@KUSStoreCoolDown@CSlotWindow@UI@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@5@@std@@@std@@PAX@std@@@2@QAU32@@Z PROC ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,std::map<unsigned long,UI::CSlotWindow::SStoreCoolDown,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,UI::CSlotWindow::SStoreCoolDown> > > > > >::_Insert_node, COMDAT
; _this$ = ecx

; 644  :     _Nodeptr _Insert_node(const _Tree_id<_Nodeptr> _Loc, const _Nodeptr _Newnode) noexcept {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8

; 645  :         ++_Mysize;
; 646  :         const auto _Head  = _Myhead;
; 647  :         _Newnode->_Parent = _Loc._Parent;

  00006	8b 55 08	 mov	 edx, DWORD PTR __Loc$[ebp]
  00009	8b c1		 mov	 eax, ecx
  0000b	89 45 fc	 mov	 DWORD PTR _this$1$[ebp], eax
  0000e	8b 08		 mov	 ecx, DWORD PTR [eax]
  00010	ff 40 04	 inc	 DWORD PTR [eax+4]
  00013	8b 45 10	 mov	 eax, DWORD PTR __Newnode$[ebp]
  00016	89 4d f8	 mov	 DWORD PTR __Head$1$[ebp], ecx
  00019	89 50 04	 mov	 DWORD PTR [eax+4], edx

; 648  :         if (_Loc._Parent == _Head) { // first node in tree, just set head values

  0001c	3b d1		 cmp	 edx, ecx
  0001e	75 12		 jne	 SHORT $LN5@Insert_nod

; 649  :             _Head->_Left     = _Newnode;

  00020	89 01		 mov	 DWORD PTR [ecx], eax

; 650  :             _Head->_Parent   = _Newnode;

  00022	89 41 04	 mov	 DWORD PTR [ecx+4], eax

; 651  :             _Head->_Right    = _Newnode;

  00025	89 41 08	 mov	 DWORD PTR [ecx+8], eax

; 652  :             _Newnode->_Color = _Black; // the root is black

  00028	c6 40 0c 01	 mov	 BYTE PTR [eax+12], 1

; 711  :     }

  0002c	8b e5		 mov	 esp, ebp
  0002e	5d		 pop	 ebp
  0002f	c2 0c 00	 ret	 12			; 0000000cH
$LN5@Insert_nod:

; 653  :             return _Newnode;
; 654  :         }
; 655  : 
; 656  :         _STL_INTERNAL_CHECK(_Loc._Child != _Tree_child::_Unused);
; 657  :         if (_Loc._Child == _Tree_child::_Right) { // add to right of _Loc._Parent

  00032	83 7d 0c 00	 cmp	 DWORD PTR __Loc$[ebp+4], 0
  00036	75 0d		 jne	 SHORT $LN6@Insert_nod

; 658  :             _STL_INTERNAL_CHECK(_Loc._Parent->_Right->_Isnil);
; 659  :             _Loc._Parent->_Right = _Newnode;

  00038	89 42 08	 mov	 DWORD PTR [edx+8], eax

; 660  :             if (_Loc._Parent == _Head->_Right) { // remember rightmost node

  0003b	3b 51 08	 cmp	 edx, DWORD PTR [ecx+8]
  0003e	75 0d		 jne	 SHORT $LN9@Insert_nod

; 661  :                 _Head->_Right = _Newnode;

  00040	89 41 08	 mov	 DWORD PTR [ecx+8], eax

; 662  :             }
; 663  :         } else { // add to left of _Loc._Parent

  00043	eb 08		 jmp	 SHORT $LN9@Insert_nod
$LN6@Insert_nod:

; 664  :             _STL_INTERNAL_CHECK(_Loc._Parent->_Left->_Isnil);
; 665  :             _Loc._Parent->_Left = _Newnode;

  00045	89 02		 mov	 DWORD PTR [edx], eax

; 666  :             if (_Loc._Parent == _Head->_Left) { // remember leftmost node

  00047	3b 11		 cmp	 edx, DWORD PTR [ecx]
  00049	75 02		 jne	 SHORT $LN9@Insert_nod

; 667  :                 _Head->_Left = _Newnode;

  0004b	89 01		 mov	 DWORD PTR [ecx], eax
$LN9@Insert_nod:

; 668  :             }
; 669  :         }
; 670  : 
; 671  :         for (_Nodeptr _Pnode = _Newnode; _Pnode->_Parent->_Color == _Red;) {

  0004d	8b d0		 mov	 edx, eax
  0004f	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00052	80 78 0c 00	 cmp	 BYTE PTR [eax+12], 0
  00056	0f 85 99 01 00
	00		 jne	 $LN3@Insert_nod
  0005c	53		 push	 ebx
  0005d	56		 push	 esi
  0005e	57		 push	 edi
  0005f	90		 npad	 1
$LL2@Insert_nod:

; 672  :             if (_Pnode->_Parent == _Pnode->_Parent->_Parent->_Left) { // fixup red-red in left subtree

  00060	8b 4a 04	 mov	 ecx, DWORD PTR [edx+4]
  00063	8d 7a 04	 lea	 edi, DWORD PTR [edx+4]
  00066	8b 71 04	 mov	 esi, DWORD PTR [ecx+4]
  00069	8d 59 04	 lea	 ebx, DWORD PTR [ecx+4]
  0006c	8b 06		 mov	 eax, DWORD PTR [esi]
  0006e	3b c8		 cmp	 ecx, eax
  00070	0f 85 ba 00 00
	00		 jne	 $LN10@Insert_nod

; 673  :                 const auto _Parent_sibling = _Pnode->_Parent->_Parent->_Right;

  00076	8b 46 08	 mov	 eax, DWORD PTR [esi+8]

; 674  :                 if (_Parent_sibling->_Color == _Red) { // parent's sibling has two red children, blacken both

  00079	80 78 0c 00	 cmp	 BYTE PTR [eax+12], 0
  0007d	0f 84 b3 00 00
	00		 je	 $LN53@Insert_nod

; 675  :                     _Pnode->_Parent->_Color          = _Black;
; 676  :                     _Parent_sibling->_Color          = _Black;
; 677  :                     _Pnode->_Parent->_Parent->_Color = _Red;
; 678  :                     _Pnode                           = _Pnode->_Parent->_Parent;
; 679  :                 } else { // parent's sibling has red and black children
; 680  :                     if (_Pnode == _Pnode->_Parent->_Right) { // rotate right child to left

  00083	8b 71 08	 mov	 esi, DWORD PTR [ecx+8]
  00086	3b d6		 cmp	 edx, esi
  00088	75 47		 jne	 SHORT $LN51@Insert_nod

; 460  :         _Wherenode->_Right = _Pnode->_Left;

  0008a	8b 06		 mov	 eax, DWORD PTR [esi]

; 681  :                         _Pnode = _Pnode->_Parent;

  0008c	8b d1		 mov	 edx, ecx

; 460  :         _Wherenode->_Right = _Pnode->_Left;

  0008e	89 42 08	 mov	 DWORD PTR [edx+8], eax

; 461  : 
; 462  :         if (!_Pnode->_Left->_Isnil) {

  00091	8b 06		 mov	 eax, DWORD PTR [esi]
  00093	80 78 0d 00	 cmp	 BYTE PTR [eax+13], 0
  00097	75 03		 jne	 SHORT $LN20@Insert_nod

; 463  :             _Pnode->_Left->_Parent = _Wherenode;

  00099	89 50 04	 mov	 DWORD PTR [eax+4], edx
$LN20@Insert_nod:

; 464  :         }
; 465  : 
; 466  :         _Pnode->_Parent = _Wherenode->_Parent;

  0009c	8b 03		 mov	 eax, DWORD PTR [ebx]
  0009e	89 46 04	 mov	 DWORD PTR [esi+4], eax

; 467  : 
; 468  :         if (_Wherenode == _Myhead->_Parent) {

  000a1	8b 45 fc	 mov	 eax, DWORD PTR _this$1$[ebp]
  000a4	8b 00		 mov	 eax, DWORD PTR [eax]
  000a6	3b 50 04	 cmp	 edx, DWORD PTR [eax+4]
  000a9	75 0b		 jne	 SHORT $LN21@Insert_nod

; 469  :             _Myhead->_Parent = _Pnode;

  000ab	89 70 04	 mov	 DWORD PTR [eax+4], esi

; 477  :         _Wherenode->_Parent = _Pnode;

  000ae	8b fb		 mov	 edi, ebx
  000b0	89 16		 mov	 DWORD PTR [esi], edx
  000b2	89 33		 mov	 DWORD PTR [ebx], esi
  000b4	eb 1d		 jmp	 SHORT $LN49@Insert_nod
$LN21@Insert_nod:

; 470  :         } else if (_Wherenode == _Wherenode->_Parent->_Left) {

  000b6	8b 03		 mov	 eax, DWORD PTR [ebx]
  000b8	3b 10		 cmp	 edx, DWORD PTR [eax]
  000ba	75 0a		 jne	 SHORT $LN23@Insert_nod

; 471  :             _Wherenode->_Parent->_Left = _Pnode;

  000bc	89 30		 mov	 DWORD PTR [eax], esi

; 477  :         _Wherenode->_Parent = _Pnode;

  000be	8b fb		 mov	 edi, ebx
  000c0	89 16		 mov	 DWORD PTR [esi], edx
  000c2	89 33		 mov	 DWORD PTR [ebx], esi
  000c4	eb 0d		 jmp	 SHORT $LN49@Insert_nod
$LN23@Insert_nod:

; 473  :             _Wherenode->_Parent->_Right = _Pnode;

  000c6	89 70 08	 mov	 DWORD PTR [eax+8], esi

; 477  :         _Wherenode->_Parent = _Pnode;

  000c9	8b fb		 mov	 edi, ebx
  000cb	89 16		 mov	 DWORD PTR [esi], edx
  000cd	89 33		 mov	 DWORD PTR [ebx], esi
  000cf	eb 02		 jmp	 SHORT $LN49@Insert_nod
$LN51@Insert_nod:
  000d1	8b f1		 mov	 esi, ecx
$LN49@Insert_nod:

; 682  :                         _Lrotate(_Pnode);
; 683  :                     }
; 684  : 
; 685  :                     _Pnode->_Parent->_Color          = _Black; // propagate red up

  000d3	c6 46 0c 01	 mov	 BYTE PTR [esi+12], 1

; 686  :                     _Pnode->_Parent->_Parent->_Color = _Red;

  000d7	8b 07		 mov	 eax, DWORD PTR [edi]
  000d9	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  000dc	c6 40 0c 00	 mov	 BYTE PTR [eax+12], 0

; 687  :                     _Rrotate(_Pnode->_Parent->_Parent);

  000e0	8b 07		 mov	 eax, DWORD PTR [edi]
  000e2	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]

; 481  :         _Nodeptr _Pnode   = _Wherenode->_Left;

  000e5	8b 31		 mov	 esi, DWORD PTR [ecx]

; 482  :         _Wherenode->_Left = _Pnode->_Right;

  000e7	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  000ea	89 01		 mov	 DWORD PTR [ecx], eax

; 483  : 
; 484  :         if (!_Pnode->_Right->_Isnil) {

  000ec	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  000ef	80 78 0d 00	 cmp	 BYTE PTR [eax+13], 0
  000f3	75 03		 jne	 SHORT $LN27@Insert_nod

; 485  :             _Pnode->_Right->_Parent = _Wherenode;

  000f5	89 48 04	 mov	 DWORD PTR [eax+4], ecx
$LN27@Insert_nod:

; 486  :         }
; 487  : 
; 488  :         _Pnode->_Parent = _Wherenode->_Parent;

  000f8	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  000fb	89 46 04	 mov	 DWORD PTR [esi+4], eax

; 489  : 
; 490  :         if (_Wherenode == _Myhead->_Parent) {

  000fe	8b 45 fc	 mov	 eax, DWORD PTR _this$1$[ebp]
  00101	8b 00		 mov	 eax, DWORD PTR [eax]
  00103	3b 48 04	 cmp	 ecx, DWORD PTR [eax+4]
  00106	75 0b		 jne	 SHORT $LN28@Insert_nod

; 491  :             _Myhead->_Parent = _Pnode;

  00108	89 70 04	 mov	 DWORD PTR [eax+4], esi

; 496  :         }
; 497  : 
; 498  :         _Pnode->_Right      = _Wherenode;

  0010b	89 4e 08	 mov	 DWORD PTR [esi+8], ecx

; 688  :                 }
; 689  :             } else { // fixup red-red in right subtree

  0010e	e9 cc 00 00 00	 jmp	 $LN52@Insert_nod
$LN28@Insert_nod:

; 492  :         } else if (_Wherenode == _Wherenode->_Parent->_Right) {

  00113	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00116	3b 48 08	 cmp	 ecx, DWORD PTR [eax+8]
  00119	75 0b		 jne	 SHORT $LN30@Insert_nod

; 493  :             _Wherenode->_Parent->_Right = _Pnode;

  0011b	89 70 08	 mov	 DWORD PTR [eax+8], esi

; 496  :         }
; 497  : 
; 498  :         _Pnode->_Right      = _Wherenode;

  0011e	89 4e 08	 mov	 DWORD PTR [esi+8], ecx

; 688  :                 }
; 689  :             } else { // fixup red-red in right subtree

  00121	e9 b9 00 00 00	 jmp	 $LN52@Insert_nod
$LN30@Insert_nod:

; 495  :             _Wherenode->_Parent->_Left = _Pnode;

  00126	89 30		 mov	 DWORD PTR [eax], esi

; 496  :         }
; 497  : 
; 498  :         _Pnode->_Right      = _Wherenode;

  00128	89 4e 08	 mov	 DWORD PTR [esi+8], ecx

; 688  :                 }
; 689  :             } else { // fixup red-red in right subtree

  0012b	e9 af 00 00 00	 jmp	 $LN52@Insert_nod
$LN10@Insert_nod:

; 690  :                 const auto _Parent_sibling = _Pnode->_Parent->_Parent->_Left;
; 691  :                 if (_Parent_sibling->_Color == _Red) { // parent's sibling has two red children, blacken both

  00130	80 78 0c 00	 cmp	 BYTE PTR [eax+12], 0
  00134	75 1b		 jne	 SHORT $LN15@Insert_nod
$LN53@Insert_nod:

; 668  :             }
; 669  :         }
; 670  : 
; 671  :         for (_Nodeptr _Pnode = _Newnode; _Pnode->_Parent->_Color == _Red;) {

  00136	c6 41 0c 01	 mov	 BYTE PTR [ecx+12], 1
  0013a	c6 40 0c 01	 mov	 BYTE PTR [eax+12], 1
  0013e	8b 07		 mov	 eax, DWORD PTR [edi]
  00140	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00143	c6 40 0c 00	 mov	 BYTE PTR [eax+12], 0
  00147	8b 07		 mov	 eax, DWORD PTR [edi]
  00149	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  0014c	e9 91 00 00 00	 jmp	 $LN46@Insert_nod
$LN15@Insert_nod:

; 692  :                     _Pnode->_Parent->_Color          = _Black;
; 693  :                     _Parent_sibling->_Color          = _Black;
; 694  :                     _Pnode->_Parent->_Parent->_Color = _Red;
; 695  :                     _Pnode                           = _Pnode->_Parent->_Parent;
; 696  :                 } else { // parent's sibling has red and black children
; 697  :                     if (_Pnode == _Pnode->_Parent->_Left) { // rotate left child to right

  00151	8b 01		 mov	 eax, DWORD PTR [ecx]
  00153	3b d0		 cmp	 edx, eax
  00155	75 3e		 jne	 SHORT $LN39@Insert_nod

; 698  :                         _Pnode = _Pnode->_Parent;

  00157	8b d1		 mov	 edx, ecx

; 481  :         _Nodeptr _Pnode   = _Wherenode->_Left;

  00159	8b c8		 mov	 ecx, eax

; 482  :         _Wherenode->_Left = _Pnode->_Right;

  0015b	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  0015e	89 02		 mov	 DWORD PTR [edx], eax

; 483  : 
; 484  :         if (!_Pnode->_Right->_Isnil) {

  00160	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  00163	80 78 0d 00	 cmp	 BYTE PTR [eax+13], 0
  00167	75 03		 jne	 SHORT $LN34@Insert_nod

; 485  :             _Pnode->_Right->_Parent = _Wherenode;

  00169	89 50 04	 mov	 DWORD PTR [eax+4], edx
$LN34@Insert_nod:

; 486  :         }
; 487  : 
; 488  :         _Pnode->_Parent = _Wherenode->_Parent;

  0016c	8b 03		 mov	 eax, DWORD PTR [ebx]
  0016e	89 41 04	 mov	 DWORD PTR [ecx+4], eax

; 489  : 
; 490  :         if (_Wherenode == _Myhead->_Parent) {

  00171	8b 45 fc	 mov	 eax, DWORD PTR _this$1$[ebp]
  00174	8b 00		 mov	 eax, DWORD PTR [eax]
  00176	3b 50 04	 cmp	 edx, DWORD PTR [eax+4]
  00179	75 05		 jne	 SHORT $LN35@Insert_nod

; 491  :             _Myhead->_Parent = _Pnode;

  0017b	89 48 04	 mov	 DWORD PTR [eax+4], ecx
  0017e	eb 0e		 jmp	 SHORT $LN38@Insert_nod
$LN35@Insert_nod:

; 492  :         } else if (_Wherenode == _Wherenode->_Parent->_Right) {

  00180	8b 03		 mov	 eax, DWORD PTR [ebx]
  00182	3b 50 08	 cmp	 edx, DWORD PTR [eax+8]
  00185	75 05		 jne	 SHORT $LN37@Insert_nod

; 493  :             _Wherenode->_Parent->_Right = _Pnode;

  00187	89 48 08	 mov	 DWORD PTR [eax+8], ecx

; 494  :         } else {

  0018a	eb 02		 jmp	 SHORT $LN38@Insert_nod
$LN37@Insert_nod:

; 495  :             _Wherenode->_Parent->_Left = _Pnode;

  0018c	89 08		 mov	 DWORD PTR [eax], ecx
$LN38@Insert_nod:

; 496  :         }
; 497  : 
; 498  :         _Pnode->_Right      = _Wherenode;

  0018e	89 51 08	 mov	 DWORD PTR [ecx+8], edx

; 499  :         _Wherenode->_Parent = _Pnode;

  00191	8b fb		 mov	 edi, ebx
  00193	89 0b		 mov	 DWORD PTR [ebx], ecx
$LN39@Insert_nod:

; 699  :                         _Rrotate(_Pnode);
; 700  :                     }
; 701  : 
; 702  :                     _Pnode->_Parent->_Color          = _Black; // propagate red up

  00195	c6 41 0c 01	 mov	 BYTE PTR [ecx+12], 1

; 703  :                     _Pnode->_Parent->_Parent->_Color = _Red;

  00199	8b 07		 mov	 eax, DWORD PTR [edi]
  0019b	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0019e	c6 40 0c 00	 mov	 BYTE PTR [eax+12], 0

; 704  :                     _Lrotate(_Pnode->_Parent->_Parent);

  001a2	8b 07		 mov	 eax, DWORD PTR [edi]
  001a4	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]

; 459  :         _Nodeptr _Pnode    = _Wherenode->_Right;

  001a7	8b 71 08	 mov	 esi, DWORD PTR [ecx+8]

; 460  :         _Wherenode->_Right = _Pnode->_Left;

  001aa	8b 06		 mov	 eax, DWORD PTR [esi]
  001ac	89 41 08	 mov	 DWORD PTR [ecx+8], eax

; 461  : 
; 462  :         if (!_Pnode->_Left->_Isnil) {

  001af	8b 06		 mov	 eax, DWORD PTR [esi]
  001b1	80 78 0d 00	 cmp	 BYTE PTR [eax+13], 0
  001b5	75 03		 jne	 SHORT $LN41@Insert_nod

; 463  :             _Pnode->_Left->_Parent = _Wherenode;

  001b7	89 48 04	 mov	 DWORD PTR [eax+4], ecx
$LN41@Insert_nod:

; 464  :         }
; 465  : 
; 466  :         _Pnode->_Parent = _Wherenode->_Parent;

  001ba	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  001bd	89 46 04	 mov	 DWORD PTR [esi+4], eax

; 467  : 
; 468  :         if (_Wherenode == _Myhead->_Parent) {

  001c0	8b 45 fc	 mov	 eax, DWORD PTR _this$1$[ebp]
  001c3	8b 00		 mov	 eax, DWORD PTR [eax]
  001c5	3b 48 04	 cmp	 ecx, DWORD PTR [eax+4]
  001c8	75 05		 jne	 SHORT $LN42@Insert_nod

; 469  :             _Myhead->_Parent = _Pnode;

  001ca	89 70 04	 mov	 DWORD PTR [eax+4], esi
  001cd	eb 0e		 jmp	 SHORT $LN45@Insert_nod
$LN42@Insert_nod:

; 470  :         } else if (_Wherenode == _Wherenode->_Parent->_Left) {

  001cf	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  001d2	3b 08		 cmp	 ecx, DWORD PTR [eax]
  001d4	75 04		 jne	 SHORT $LN44@Insert_nod

; 471  :             _Wherenode->_Parent->_Left = _Pnode;

  001d6	89 30		 mov	 DWORD PTR [eax], esi

; 472  :         } else {

  001d8	eb 03		 jmp	 SHORT $LN45@Insert_nod
$LN44@Insert_nod:

; 473  :             _Wherenode->_Parent->_Right = _Pnode;

  001da	89 70 08	 mov	 DWORD PTR [eax+8], esi
$LN45@Insert_nod:

; 474  :         }
; 475  : 
; 476  :         _Pnode->_Left       = _Wherenode;

  001dd	89 0e		 mov	 DWORD PTR [esi], ecx
$LN52@Insert_nod:

; 668  :             }
; 669  :         }
; 670  : 
; 671  :         for (_Nodeptr _Pnode = _Newnode; _Pnode->_Parent->_Color == _Red;) {

  001df	89 71 04	 mov	 DWORD PTR [ecx+4], esi
$LN46@Insert_nod:
  001e2	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  001e5	80 78 0c 00	 cmp	 BYTE PTR [eax+12], 0
  001e9	0f 84 71 fe ff
	ff		 je	 $LL2@Insert_nod
  001ef	8b 4d f8	 mov	 ecx, DWORD PTR __Head$1$[ebp]
  001f2	5f		 pop	 edi
  001f3	5e		 pop	 esi
  001f4	5b		 pop	 ebx
$LN3@Insert_nod:

; 705  :                 }
; 706  :             }
; 707  :         }
; 708  : 
; 709  :         _Head->_Parent->_Color = _Black; // root is always black

  001f5	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  001f8	c6 40 0c 01	 mov	 BYTE PTR [eax+12], 1

; 710  :         return _Newnode;

  001fc	8b 45 10	 mov	 eax, DWORD PTR __Newnode$[ebp]

; 711  :     }

  001ff	8b e5		 mov	 esp, ebp
  00201	5d		 pop	 ebp
  00202	c2 0c 00	 ret	 12			; 0000000cH
?_Insert_node@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$map@KUSStoreCoolDown@CSlotWindow@UI@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@5@@std@@@std@@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBKV?$map@KUSStoreCoolDown@CSlotWindow@UI@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@5@@std@@@std@@PAX@2@U?$_Tree_id@PAU?$_Tree_node@U?$pair@$$CBKV?$map@KUSStoreCoolDown@CSlotWindow@UI@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@5@@std@@@std@@PAX@std@@@2@QAU32@@Z ENDP ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,std::map<unsigned long,UI::CSlotWindow::SStoreCoolDown,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,UI::CSlotWindow::SStoreCoolDown> > > > > >::_Insert_node
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\list
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\list
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\list
;	COMDAT ??1?$list@KV?$allocator@K@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$list@KV?$allocator@K@std@@@std@@QAE@XZ PROC	; std::list<unsigned long,std::allocator<unsigned long> >::~list<unsigned long,std::allocator<unsigned long> >, COMDAT
; _this$ = ecx

; 1036 :     ~list() noexcept {

  00000	57		 push	 edi
  00001	8b f9		 mov	 edi, ecx

; 1431 :         _Node::_Free_non_head(_Al, _My_data._Myhead);

  00003	8b 17		 mov	 edx, DWORD PTR [edi]

; 323  :         _Head->_Prev->_Next = nullptr;

  00005	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00008	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 324  : 
; 325  :         auto _Pnode = _Head->_Next;

  0000e	8b 02		 mov	 eax, DWORD PTR [edx]

; 326  :         for (_Nodeptr _Pnext; _Pnode; _Pnode = _Pnext) {

  00010	85 c0		 test	 eax, eax
  00012	74 15		 je	 SHORT $LN7@list
  00014	56		 push	 esi
$LL8@list:

; 327  :             _Pnext = _Pnode->_Next;

  00015	8b 30		 mov	 esi, DWORD PTR [eax]
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory

; 255  :         ::operator delete(_Ptr, _Bytes);

  00017	6a 0c		 push	 12			; 0000000cH
  00019	50		 push	 eax
  0001a	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0001f	83 c4 08	 add	 esp, 8
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\list

; 326  :         for (_Nodeptr _Pnext; _Pnode; _Pnode = _Pnext) {

  00022	8b c6		 mov	 eax, esi
  00024	85 f6		 test	 esi, esi
  00026	75 ed		 jne	 SHORT $LL8@list
  00028	5e		 pop	 esi
$LN7@list:
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory

; 255  :         ::operator delete(_Ptr, _Bytes);

  00029	6a 0c		 push	 12			; 0000000cH
  0002b	ff 37		 push	 DWORD PTR [edi]
  0002d	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00032	83 c4 08	 add	 esp, 8
  00035	5f		 pop	 edi
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\list

; 1042 :     }

  00036	c3		 ret	 0
??1?$list@KV?$allocator@K@std@@@std@@QAE@XZ ENDP	; std::list<unsigned long,std::allocator<unsigned long> >::~list<unsigned long,std::allocator<unsigned long> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ?OnIsType@CSlotWindow@UI@@MAEHK@Z
_TEXT	SEGMENT
_dwType$ = 8						; size = 4
?OnIsType@CSlotWindow@UI@@MAEHK@Z PROC			; UI::CSlotWindow::OnIsType, COMDAT
; _this$ = ecx

; 1581 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 1582 : 	if (CSlotWindow::Type() == dwType)

  00006	e8 00 00 00 00	 call	 ?Type@CSlotWindow@UI@@SAKXZ ; UI::CSlotWindow::Type
  0000b	8b 55 08	 mov	 edx, DWORD PTR _dwType$[ebp]
  0000e	3b c2		 cmp	 eax, edx
  00010	75 0a		 jne	 SHORT $LN2@OnIsType

; 1583 : 		return TRUE;

  00012	b8 01 00 00 00	 mov	 eax, 1
  00017	5e		 pop	 esi

; 1586 : }

  00018	5d		 pop	 ebp
  00019	c2 04 00	 ret	 4
$LN2@OnIsType:

; 1584 : 
; 1585 : 	return CWindow::OnIsType(dwType);

  0001c	52		 push	 edx
  0001d	8b ce		 mov	 ecx, esi
  0001f	e8 00 00 00 00	 call	 ?OnIsType@CWindow@UI@@UAEHK@Z ; UI::CWindow::OnIsType
  00024	5e		 pop	 esi

; 1586 : }

  00025	5d		 pop	 ebp
  00026	c2 04 00	 ret	 4
?OnIsType@CSlotWindow@UI@@MAEHK@Z ENDP			; UI::CSlotWindow::OnIsType
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ?OnRefreshSlot@CSlotWindow@UI@@MAEXXZ
_TEXT	SEGMENT
?OnRefreshSlot@CSlotWindow@UI@@MAEXXZ PROC		; UI::CSlotWindow::OnRefreshSlot, COMDAT
; _this$ = ecx

; 735  : }

  00000	c2 00 00	 ret	 0
?OnRefreshSlot@CSlotWindow@UI@@MAEXXZ ENDP		; UI::CSlotWindow::OnRefreshSlot
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ?ClearSlot@CSlotWindow@UI@@IAEXPAUSSlot@12@@Z
_TEXT	SEGMENT
_pSlot$ = 8						; size = 4
?ClearSlot@CSlotWindow@UI@@IAEXPAUSSlot@12@@Z PROC	; UI::CSlotWindow::ClearSlot, COMDAT
; _this$ = ecx

; 665  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b 75 08	 mov	 esi, DWORD PTR _pSlot$[ebp]
  00007	57		 push	 edi

; 666  : 	pSlot->bActive = FALSE;
; 667  : 	pSlot->byxPlacedItemSize = 1;
; 668  : 	pSlot->byyPlacedItemSize = 1;
; 669  : 
; 670  : 	pSlot->isItem = FALSE;
; 671  : 	pSlot->dwState = 0;
; 672  : 	pSlot->fCoolTime = 0.0f;
; 673  : 	pSlot->fStartCoolTime = 0.0f;
; 674  : 	pSlot->bInverseCooltime = false;
; 675  : 	pSlot->cooltimeDiffuseColor.r = 0.0f;
; 676  : 	pSlot->cooltimeDiffuseColor.g = 0.0f;
; 677  : 	pSlot->cooltimeDiffuseColor.b = 0.0f;
; 678  : 	pSlot->cooltimeDiffuseColor.a = 0.5f;
; 679  : 	pSlot->dwCenterSlotNumber = 0xffffffff;
; 680  : 
; 681  : 	pSlot->dwItemIndex = 0;
; 682  : 	pSlot->bRenderBaseSlotImage = true;
; 683  : 
; 684  : 	if (pSlot->pInstance)

  00008	8b 46 54	 mov	 eax, DWORD PTR [esi+84]
  0000b	c7 46 3c 00 00
	00 00		 mov	 DWORD PTR [esi+60], 0
  00012	66 c7 46 50 01
	01		 mov	 WORD PTR [esi+80], 257	; 00000101H
  00018	c7 46 18 00 00
	00 00		 mov	 DWORD PTR [esi+24], 0
  0001f	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], 0
  00025	c7 46 20 00 00
	00 00		 mov	 DWORD PTR [esi+32], 0
  0002c	c7 46 24 00 00
	00 00		 mov	 DWORD PTR [esi+36], 0
  00033	c6 46 28 00	 mov	 BYTE PTR [esi+40], 0
  00037	c7 46 2c 00 00
	00 00		 mov	 DWORD PTR [esi+44], 0
  0003e	c7 46 30 00 00
	00 00		 mov	 DWORD PTR [esi+48], 0
  00045	c7 46 34 00 00
	00 00		 mov	 DWORD PTR [esi+52], 0
  0004c	c7 46 38 00 00
	00 3f		 mov	 DWORD PTR [esi+56], 1056964608 ; 3f000000H
  00053	c7 46 08 ff ff
	ff ff		 mov	 DWORD PTR [esi+8], -1
  0005a	c7 46 14 00 00
	00 00		 mov	 DWORD PTR [esi+20], 0
  00061	c6 46 5c 01	 mov	 BYTE PTR [esi+92], 1
  00065	85 c0		 test	 eax, eax
  00067	74 10		 je	 SHORT $LN5@ClearSlot

; 685  : 	{
; 686  : 		CGraphicImageInstance::Delete(pSlot->pInstance);

  00069	50		 push	 eax
  0006a	e8 00 00 00 00	 call	 ?Delete@CGraphicImageInstance@@SAXPAV1@@Z ; CGraphicImageInstance::Delete
  0006f	83 c4 04	 add	 esp, 4

; 687  : 		pSlot->pInstance = NULL;

  00072	c7 46 54 00 00
	00 00		 mov	 DWORD PTR [esi+84], 0
$LN5@ClearSlot:

; 688  : 	}
; 689  : 	if (pSlot->pCoverButton)

  00079	8b 4e 60	 mov	 ecx, DWORD PTR [esi+96]
  0007c	85 c9		 test	 ecx, ecx
  0007e	74 05		 je	 SHORT $LN6@ClearSlot

; 690  : 	{
; 691  : 		pSlot->pCoverButton->Hide();

  00080	e8 00 00 00 00	 call	 ?Hide@CWindow@UI@@QAEXXZ ; UI::CWindow::Hide
$LN6@ClearSlot:

; 692  : 	}
; 693  : 	if (pSlot->pSlotButton)

  00085	8b 4e 64	 mov	 ecx, DWORD PTR [esi+100]
  00088	85 c9		 test	 ecx, ecx
  0008a	74 05		 je	 SHORT $LN7@ClearSlot

; 694  : 	{
; 695  : 		pSlot->pSlotButton->Hide();

  0008c	e8 00 00 00 00	 call	 ?Hide@CWindow@UI@@QAEXXZ ; UI::CWindow::Hide
$LN7@ClearSlot:

; 696  : 	}
; 697  : 	if (pSlot->pSignImage)

  00091	8b 4e 68	 mov	 ecx, DWORD PTR [esi+104]
  00094	85 c9		 test	 ecx, ecx
  00096	74 05		 je	 SHORT $LN8@ClearSlot

; 698  : 	{
; 699  :  		pSlot->pSignImage->Hide();

  00098	e8 00 00 00 00	 call	 ?Hide@CWindow@UI@@QAEXXZ ; UI::CWindow::Hide
$LN8@ClearSlot:

; 700  : 	}
; 701  : 	if (pSlot->pFinishCoolTimeEffect)

  0009d	8b 4e 6c	 mov	 ecx, DWORD PTR [esi+108]
  000a0	85 c9		 test	 ecx, ecx
  000a2	74 05		 je	 SHORT $LN9@ClearSlot

; 702  : 	{
; 703  : 		pSlot->pFinishCoolTimeEffect->Hide();

  000a4	e8 00 00 00 00	 call	 ?Hide@CWindow@UI@@QAEXXZ ; UI::CWindow::Hide
$LN9@ClearSlot:

; 704  : 	}
; 705  : 
; 706  : #ifdef ENABLE_ACCE_SYSTEM
; 707  : 	for (auto& pEff : pSlot->pActiveSlotEffect)

  000a9	8d 7e 70	 lea	 edi, DWORD PTR [esi+112]
  000ac	83 c6 7c	 add	 esi, 124		; 0000007cH
  000af	3b fe		 cmp	 edi, esi
  000b1	74 12		 je	 SHORT $LN3@ClearSlot
$LL4@ClearSlot:

; 708  : 		if(pEff)

  000b3	8b 0f		 mov	 ecx, DWORD PTR [edi]
  000b5	85 c9		 test	 ecx, ecx
  000b7	74 05		 je	 SHORT $LN2@ClearSlot

; 709  : 			pEff->Hide();

  000b9	e8 00 00 00 00	 call	 ?Hide@CWindow@UI@@QAEXXZ ; UI::CWindow::Hide
$LN2@ClearSlot:

; 704  : 	}
; 705  : 
; 706  : #ifdef ENABLE_ACCE_SYSTEM
; 707  : 	for (auto& pEff : pSlot->pActiveSlotEffect)

  000be	83 c7 04	 add	 edi, 4
  000c1	3b fe		 cmp	 edi, esi
  000c3	75 ee		 jne	 SHORT $LL4@ClearSlot
$LN3@ClearSlot:
  000c5	5f		 pop	 edi

; 710  : #endif
; 711  : }

  000c6	5e		 pop	 esi
  000c7	5d		 pop	 ebp
  000c8	c2 04 00	 ret	 4
?ClearSlot@CSlotWindow@UI@@IAEXPAUSSlot@12@@Z ENDP	; UI::CSlotWindow::ClearSlot
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonSlotWindow.cpp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\list
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonSlotWindow.cpp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\list
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonSlotWindow.cpp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\list
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonSlotWindow.cpp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\list
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ?GetPickedSlotPointer@CSlotWindow@UI@@MAEHPAPAUSSlot@12@@Z
_TEXT	SEGMENT
_ly$ = -16						; size = 4
_lx$ = -12						; size = 4
_iyLocal$1$ = -8					; size = 4
_ixLocal$1$ = -4					; size = 4
_ppSlot$ = 8						; size = 4
?GetPickedSlotPointer@CSlotWindow@UI@@MAEHPAPAUSSlot@12@@Z PROC ; UI::CSlotWindow::GetPickedSlotPointer, COMDAT
; _this$ = ecx

; 1477 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1478 : 	long lx, ly;
; 1479 : 	CWindowManager::Instance().GetMousePosition(lx, ly);

  00009	8d 45 f0	 lea	 eax, DWORD PTR _ly$[ebp]
  0000c	8b f1		 mov	 esi, ecx
  0000e	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCWindowManager@UI@@@@0PAVCWindowManager@UI@@A ; CSingleton<UI::CWindowManager>::ms_singleton
  00014	50		 push	 eax
  00015	8d 45 f4	 lea	 eax, DWORD PTR _lx$[ebp]
  00018	50		 push	 eax
  00019	e8 00 00 00 00	 call	 ?GetMousePosition@CWindowManager@UI@@QAEXAAJ0@Z ; UI::CWindowManager::GetMousePosition

; 1481 : 	int ixLocal = lx - m_rect.left;

  0001e	8b 45 f4	 mov	 eax, DWORD PTR _lx$[ebp]
  00021	2b 46 34	 sub	 eax, DWORD PTR [esi+52]
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\list

; 1083 :         return iterator(_Mypair._Myval2._Myhead->_Next, _STD addressof(_Mypair._Myval2));

  00024	8b 8e 8c 00 00
	00		 mov	 ecx, DWORD PTR [esi+140]
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonSlotWindow.cpp

; 1481 : 	int ixLocal = lx - m_rect.left;

  0002a	89 45 fc	 mov	 DWORD PTR _ixLocal$1$[ebp], eax

; 1482 : 	int iyLocal = ly - m_rect.top;

  0002d	8b 45 f0	 mov	 eax, DWORD PTR _ly$[ebp]
  00030	2b 46 38	 sub	 eax, DWORD PTR [esi+56]
  00033	89 45 f8	 mov	 DWORD PTR _iyLocal$1$[ebp], eax
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\list

; 38   :     _List_unchecked_const_iterator(_Nodeptr _Pnode, const _Mylist* _Plist) noexcept : _Ptr(_Pnode) {

  00036	8b 01		 mov	 eax, DWORD PTR [ecx]
  00038	3b c1		 cmp	 eax, ecx
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonSlotWindow.cpp

; 1484 : 	for (TSlotListIterator itor = m_SlotList.begin(); itor != m_SlotList.end(); ++itor)

  0003a	74 56		 je	 SHORT $LN48@GetPickedS
  0003c	0f 1f 40 00	 npad	 4
$LL26@GetPickedS:

; 1490 : 
; 1491 : 		if (rSlot.isItem)

  00040	83 78 20 00	 cmp	 DWORD PTR [eax+32], 0
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\list

; 151  :         return this->_Ptr->_Myval;

  00044	8d 50 08	 lea	 edx, DWORD PTR [eax+8]
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonSlotWindow.cpp

; 1488 : 		int ixCellSize = rSlot.ixCellSize;

  00047	8b 7a 48	 mov	 edi, DWORD PTR [edx+72]

; 1489 : 		int iyCellSize = rSlot.iyCellSize;

  0004a	8b 5a 4c	 mov	 ebx, DWORD PTR [edx+76]

; 1490 : 
; 1491 : 		if (rSlot.isItem)

  0004d	74 19		 je	 SHORT $LN14@GetPickedS

; 1492 : 		{
; 1493 : 			ixCellSize = max(rSlot.ixCellSize, int(rSlot.byxPlacedItemSize * ITEM_WIDTH));

  0004f	0f b6 72 50	 movzx	 esi, BYTE PTR [edx+80]
  00053	c1 e6 05	 shl	 esi, 5

; 1494 : 			iyCellSize = max(rSlot.iyCellSize, int(rSlot.byyPlacedItemSize * ITEM_HEIGHT));

  00056	3b fe		 cmp	 edi, esi
  00058	0f 4e fe	 cmovle	 edi, esi
  0005b	0f b6 72 51	 movzx	 esi, BYTE PTR [edx+81]
  0005f	c1 e6 05	 shl	 esi, 5
  00062	3b de		 cmp	 ebx, esi
  00064	7f 02		 jg	 SHORT $LN14@GetPickedS
  00066	8b de		 mov	 ebx, esi
$LN14@GetPickedS:

; 1495 : 		}
; 1496 : 
; 1497 : 		if (ixLocal >= rSlot.ixPosition)

  00068	8b 72 40	 mov	 esi, DWORD PTR [edx+64]
  0006b	39 75 fc	 cmp	 DWORD PTR _ixLocal$1$[ebp], esi
  0006e	7c 1c		 jl	 SHORT $LN2@GetPickedS

; 1498 : 		if (iyLocal >= rSlot.iyPosition)

  00070	8b 75 f8	 mov	 esi, DWORD PTR _iyLocal$1$[ebp]
  00073	3b 72 44	 cmp	 esi, DWORD PTR [edx+68]
  00076	8b 72 40	 mov	 esi, DWORD PTR [edx+64]
  00079	7c 11		 jl	 SHORT $LN2@GetPickedS

; 1499 : 		if (ixLocal <= rSlot.ixPosition + ixCellSize)

  0007b	03 f7		 add	 esi, edi
  0007d	39 75 fc	 cmp	 DWORD PTR _ixLocal$1$[ebp], esi
  00080	7f 0a		 jg	 SHORT $LN2@GetPickedS

; 1500 : 		if (iyLocal <= rSlot.iyPosition + iyCellSize)

  00082	8b 72 44	 mov	 esi, DWORD PTR [edx+68]
  00085	03 f3		 add	 esi, ebx
  00087	39 75 f8	 cmp	 DWORD PTR _iyLocal$1$[ebp], esi
  0008a	7e 11		 jle	 SHORT $LN44@GetPickedS
$LN2@GetPickedS:
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\list

; 165  :         this->_Ptr = this->_Ptr->_Next;

  0008c	8b 00		 mov	 eax, DWORD PTR [eax]

; 198  :         return this->_Ptr == _Right._Ptr;

  0008e	3b c1		 cmp	 eax, ecx
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonSlotWindow.cpp

; 1484 : 	for (TSlotListIterator itor = m_SlotList.begin(); itor != m_SlotList.end(); ++itor)

  00090	75 ae		 jne	 SHORT $LL26@GetPickedS
$LN48@GetPickedS:
  00092	5f		 pop	 edi

; 1503 : 			return TRUE;
; 1504 : 		}
; 1505 : 	}
; 1506 : 
; 1507 : 	return FALSE;
; 1508 : }

  00093	5e		 pop	 esi
  00094	33 c0		 xor	 eax, eax
  00096	5b		 pop	 ebx
  00097	8b e5		 mov	 esp, ebp
  00099	5d		 pop	 ebp
  0009a	c2 04 00	 ret	 4
$LN44@GetPickedS:

; 1501 : 		{
; 1502 : 			*ppSlot = &rSlot;

  0009d	8b 45 08	 mov	 eax, DWORD PTR _ppSlot$[ebp]
  000a0	5f		 pop	 edi

; 1503 : 			return TRUE;
; 1504 : 		}
; 1505 : 	}
; 1506 : 
; 1507 : 	return FALSE;
; 1508 : }

  000a1	5e		 pop	 esi
  000a2	5b		 pop	 ebx
  000a3	89 10		 mov	 DWORD PTR [eax], edx
  000a5	b8 01 00 00 00	 mov	 eax, 1
  000aa	8b e5		 mov	 esp, ebp
  000ac	5d		 pop	 ebp
  000ad	c2 04 00	 ret	 4
?GetPickedSlotPointer@CSlotWindow@UI@@MAEHPAPAUSSlot@12@@Z ENDP ; UI::CSlotWindow::GetPickedSlotPointer
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonSlotWindow.cpp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\list
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonSlotWindow.cpp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\list
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonSlotWindow.cpp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\list
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ?GetSelectedSlotPointer@CSlotWindow@UI@@IAEHPAPAUSSlot@12@@Z
_TEXT	SEGMENT
_ly$ = -8						; size = 4
_lx$ = -4						; size = 4
_ppSlot$ = 8						; size = 4
?GetSelectedSlotPointer@CSlotWindow@UI@@IAEHPAPAUSSlot@12@@Z PROC ; UI::CSlotWindow::GetSelectedSlotPointer, COMDAT
; _this$ = ecx

; 1455 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8

; 1456 : 	long lx, ly;
; 1457 : 	GetMouseLocalPosition(lx, ly);

  00006	8d 45 f8	 lea	 eax, DWORD PTR _ly$[ebp]
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	50		 push	 eax
  0000d	8d 45 fc	 lea	 eax, DWORD PTR _lx$[ebp]
  00010	8b f1		 mov	 esi, ecx
  00012	50		 push	 eax
  00013	e8 00 00 00 00	 call	 ?GetMouseLocalPosition@CWindow@UI@@QAEXAAJ0@Z ; UI::CWindow::GetMouseLocalPosition
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\list

; 1083 :         return iterator(_Mypair._Myval2._Myhead->_Next, _STD addressof(_Mypair._Myval2));

  00018	8b 8e 8c 00 00
	00		 mov	 ecx, DWORD PTR [esi+140]

; 38   :     _List_unchecked_const_iterator(_Nodeptr _Pnode, const _Mylist* _Plist) noexcept : _Ptr(_Pnode) {

  0001e	8b 01		 mov	 eax, DWORD PTR [ecx]
  00020	3b c1		 cmp	 eax, ecx
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonSlotWindow.cpp

; 1459 : 	for (TSlotListIterator itor = m_SlotList.begin(); itor != m_SlotList.end(); ++itor)

  00022	74 2d		 je	 SHORT $LN43@GetSelecte
$LL21@GetSelecte:

; 1463 : 		if (lx >= rSlot.ixPosition)

  00024	8b 58 48	 mov	 ebx, DWORD PTR [eax+72]
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\list

; 151  :         return this->_Ptr->_Myval;

  00027	8d 70 08	 lea	 esi, DWORD PTR [eax+8]
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonSlotWindow.cpp

; 1463 : 		if (lx >= rSlot.ixPosition)

  0002a	39 5d fc	 cmp	 DWORD PTR _lx$[ebp], ebx
  0002d	7c 1c		 jl	 SHORT $LN2@GetSelecte

; 1464 : 		if (ly >= rSlot.iyPosition)

  0002f	8b 7e 44	 mov	 edi, DWORD PTR [esi+68]
  00032	39 7d f8	 cmp	 DWORD PTR _ly$[ebp], edi
  00035	7c 14		 jl	 SHORT $LN2@GetSelecte

; 1465 : 		if (lx <= rSlot.ixPosition + rSlot.ixCellSize)

  00037	8b 56 48	 mov	 edx, DWORD PTR [esi+72]
  0003a	03 d3		 add	 edx, ebx
  0003c	39 55 fc	 cmp	 DWORD PTR _lx$[ebp], edx
  0003f	7f 0a		 jg	 SHORT $LN2@GetSelecte

; 1466 : 		if (ly <= rSlot.iyPosition + rSlot.iyCellSize)

  00041	8b 56 4c	 mov	 edx, DWORD PTR [esi+76]
  00044	03 d7		 add	 edx, edi
  00046	39 55 f8	 cmp	 DWORD PTR _ly$[ebp], edx
  00049	7e 11		 jle	 SHORT $LN39@GetSelecte
$LN2@GetSelecte:
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\list

; 165  :         this->_Ptr = this->_Ptr->_Next;

  0004b	8b 00		 mov	 eax, DWORD PTR [eax]

; 198  :         return this->_Ptr == _Right._Ptr;

  0004d	3b c1		 cmp	 eax, ecx
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonSlotWindow.cpp

; 1459 : 	for (TSlotListIterator itor = m_SlotList.begin(); itor != m_SlotList.end(); ++itor)

  0004f	75 d3		 jne	 SHORT $LL21@GetSelecte
$LN43@GetSelecte:
  00051	5f		 pop	 edi

; 1470 : 		}
; 1471 : 	}
; 1472 : 
; 1473 : 	return FALSE;
; 1474 : }

  00052	5e		 pop	 esi
  00053	33 c0		 xor	 eax, eax
  00055	5b		 pop	 ebx
  00056	8b e5		 mov	 esp, ebp
  00058	5d		 pop	 ebp
  00059	c2 04 00	 ret	 4
$LN39@GetSelecte:

; 1467 : 		{
; 1468 : 			*ppSlot = &rSlot;

  0005c	8b 45 08	 mov	 eax, DWORD PTR _ppSlot$[ebp]
  0005f	5f		 pop	 edi
  00060	89 30		 mov	 DWORD PTR [eax], esi

; 1469 : 			return TRUE;

  00062	b8 01 00 00 00	 mov	 eax, 1

; 1470 : 		}
; 1471 : 	}
; 1472 : 
; 1473 : 	return FALSE;
; 1474 : }

  00067	5e		 pop	 esi
  00068	5b		 pop	 ebx
  00069	8b e5		 mov	 esp, ebp
  0006b	5d		 pop	 ebp
  0006c	c2 04 00	 ret	 4
?GetSelectedSlotPointer@CSlotWindow@UI@@IAEHPAPAUSSlot@12@@Z ENDP ; UI::CSlotWindow::GetSelectedSlotPointer
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonSlotWindow.cpp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\list
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonSlotWindow.cpp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\list
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonSlotWindow.cpp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\list
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonSlotWindow.cpp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\list
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ?GetSlotPointer@CSlotWindow@UI@@IAEHKPAPAUSSlot@12@@Z
_TEXT	SEGMENT
_dwIndex$ = 8						; size = 4
_ppSlot$ = 12						; size = 4
?GetSlotPointer@CSlotWindow@UI@@IAEHKPAPAUSSlot@12@@Z PROC ; UI::CSlotWindow::GetSlotPointer, COMDAT
; _this$ = ecx

; 1439 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\list

; 1083 :         return iterator(_Mypair._Myval2._Myhead->_Next, _STD addressof(_Mypair._Myval2));

  00003	8b 89 8c 00 00
	00		 mov	 ecx, DWORD PTR [ecx+140]
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonSlotWindow.cpp

; 1439 : {

  00009	56		 push	 esi
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\list

; 38   :     _List_unchecked_const_iterator(_Nodeptr _Pnode, const _Mylist* _Plist) noexcept : _Ptr(_Pnode) {

  0000a	8b 01		 mov	 eax, DWORD PTR [ecx]
  0000c	3b c1		 cmp	 eax, ecx
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonSlotWindow.cpp

; 1440 : 	for (TSlotListIterator itor = m_SlotList.begin(); itor != m_SlotList.end(); ++itor)

  0000e	74 11		 je	 SHORT $LN3@GetSlotPoi
  00010	8b 75 08	 mov	 esi, DWORD PTR _dwIndex$[ebp]
$LL18@GetSlotPoi:

; 1444 : 		if (dwIndex == rSlot.dwSlotNumber)

  00013	3b 70 0c	 cmp	 esi, DWORD PTR [eax+12]
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\list

; 151  :         return this->_Ptr->_Myval;

  00016	8d 50 08	 lea	 edx, DWORD PTR [eax+8]
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonSlotWindow.cpp

; 1444 : 		if (dwIndex == rSlot.dwSlotNumber)

  00019	74 0d		 je	 SHORT $LN36@GetSlotPoi
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\list

; 165  :         this->_Ptr = this->_Ptr->_Next;

  0001b	8b 00		 mov	 eax, DWORD PTR [eax]

; 198  :         return this->_Ptr == _Right._Ptr;

  0001d	3b c1		 cmp	 eax, ecx
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonSlotWindow.cpp

; 1440 : 	for (TSlotListIterator itor = m_SlotList.begin(); itor != m_SlotList.end(); ++itor)

  0001f	75 f2		 jne	 SHORT $LL18@GetSlotPoi
$LN3@GetSlotPoi:

; 1448 : 		}
; 1449 : 	}
; 1450 : 
; 1451 : 	return FALSE;

  00021	33 c0		 xor	 eax, eax
  00023	5e		 pop	 esi

; 1452 : }

  00024	5d		 pop	 ebp
  00025	c2 08 00	 ret	 8
$LN36@GetSlotPoi:

; 1445 : 		{
; 1446 : 			*ppSlot = &rSlot;

  00028	8b 45 0c	 mov	 eax, DWORD PTR _ppSlot$[ebp]
  0002b	5e		 pop	 esi
  0002c	89 10		 mov	 DWORD PTR [eax], edx

; 1447 : 			return TRUE;

  0002e	b8 01 00 00 00	 mov	 eax, 1

; 1452 : }

  00033	5d		 pop	 ebp
  00034	c2 08 00	 ret	 8
?GetSlotPointer@CSlotWindow@UI@@IAEHKPAPAUSSlot@12@@Z ENDP ; UI::CSlotWindow::GetSlotPointer
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ?OnUseSlot@CSlotWindow@UI@@IAEXXZ
_TEXT	SEGMENT
_pSlot$ = -4						; size = 4
?OnUseSlot@CSlotWindow@UI@@IAEXXZ PROC			; UI::CSlotWindow::OnUseSlot, COMDAT
; _this$ = ecx

; 1078 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	8b f1		 mov	 esi, ecx

; 1079 : 	TSlot * pSlot;
; 1080 : 	if (GetPickedSlotPointer(&pSlot))

  00007	8d 4d fc	 lea	 ecx, DWORD PTR _pSlot$[ebp]
  0000a	51		 push	 ecx
  0000b	8b ce		 mov	 ecx, esi
  0000d	8b 06		 mov	 eax, DWORD PTR [esi]
  0000f	ff 90 a8 00 00
	00		 call	 DWORD PTR [eax+168]
  00015	85 c0		 test	 eax, eax
  00017	74 28		 je	 SHORT $LN3@OnUseSlot

; 1081 : 	if (pSlot->isItem)

  00019	8b 45 fc	 mov	 eax, DWORD PTR _pSlot$[ebp]
  0001c	83 78 18 00	 cmp	 DWORD PTR [eax+24], 0
  00020	74 1f		 je	 SHORT $LN3@OnUseSlot

; 1082 : 	{
; 1083 : 		PyCallClassMemberFunc(m_poHandler, "OnUseSlot", Py_BuildValue("(i)", pSlot->dwSlotNumber));

  00022	ff 70 04	 push	 DWORD PTR [eax+4]
  00025	68 00 00 00 00	 push	 OFFSET ??_C@_03LIHNMIHG@?$CIi?$CJ@
  0002a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__Py_BuildValue
  00030	50		 push	 eax
  00031	68 00 00 00 00	 push	 OFFSET ??_C@_09HJIBPFCA@OnUseSlot@
  00036	ff 76 5c	 push	 DWORD PTR [esi+92]
  00039	e8 00 00 00 00	 call	 ?PyCallClassMemberFunc@@YA_NPAU_object@@PBD0@Z ; PyCallClassMemberFunc
  0003e	83 c4 14	 add	 esp, 20			; 00000014H
$LN3@OnUseSlot:
  00041	5e		 pop	 esi

; 1084 : 	}
; 1085 : }

  00042	8b e5		 mov	 esp, ebp
  00044	5d		 pop	 ebp
  00045	c3		 ret	 0
?OnUseSlot@CSlotWindow@UI@@IAEXXZ ENDP			; UI::CSlotWindow::OnUseSlot
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ?OnUnselectItemSlot@CSlotWindow@UI@@IAEXH@Z
_TEXT	SEGMENT
_iSlotNumber$ = 8					; size = 4
?OnUnselectItemSlot@CSlotWindow@UI@@IAEXH@Z PROC	; UI::CSlotWindow::OnUnselectItemSlot, COMDAT
; _this$ = ecx

; 1074 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 1075 : 	PyCallClassMemberFunc(m_poHandler, "OnUnselectItemSlot", Py_BuildValue("(i)", iSlotNumber));

  00004	ff 75 08	 push	 DWORD PTR _iSlotNumber$[ebp]
  00007	8b f1		 mov	 esi, ecx
  00009	68 00 00 00 00	 push	 OFFSET ??_C@_03LIHNMIHG@?$CIi?$CJ@
  0000e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__Py_BuildValue
  00014	50		 push	 eax
  00015	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@EONLJJMO@OnUnselectItemSlot@
  0001a	ff 76 5c	 push	 DWORD PTR [esi+92]
  0001d	e8 00 00 00 00	 call	 ?PyCallClassMemberFunc@@YA_NPAU_object@@PBD0@Z ; PyCallClassMemberFunc
  00022	83 c4 14	 add	 esp, 20			; 00000014H
  00025	5e		 pop	 esi

; 1076 : }

  00026	5d		 pop	 ebp
  00027	c2 04 00	 ret	 4
?OnUnselectItemSlot@CSlotWindow@UI@@IAEXH@Z ENDP	; UI::CSlotWindow::OnUnselectItemSlot
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ?OnUnselectEmptySlot@CSlotWindow@UI@@IAEXH@Z
_TEXT	SEGMENT
_iSlotNumber$ = 8					; size = 4
?OnUnselectEmptySlot@CSlotWindow@UI@@IAEXH@Z PROC	; UI::CSlotWindow::OnUnselectEmptySlot, COMDAT
; _this$ = ecx

; 1070 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 1071 : 	PyCallClassMemberFunc(m_poHandler, "OnUnselectEmptySlot", Py_BuildValue("(i)", iSlotNumber));

  00004	ff 75 08	 push	 DWORD PTR _iSlotNumber$[ebp]
  00007	8b f1		 mov	 esi, ecx
  00009	68 00 00 00 00	 push	 OFFSET ??_C@_03LIHNMIHG@?$CIi?$CJ@
  0000e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__Py_BuildValue
  00014	50		 push	 eax
  00015	68 00 00 00 00	 push	 OFFSET ??_C@_0BE@GMADJAFC@OnUnselectEmptySlot@
  0001a	ff 76 5c	 push	 DWORD PTR [esi+92]
  0001d	e8 00 00 00 00	 call	 ?PyCallClassMemberFunc@@YA_NPAU_object@@PBD0@Z ; PyCallClassMemberFunc
  00022	83 c4 14	 add	 esp, 20			; 00000014H
  00025	5e		 pop	 esi

; 1072 : }

  00026	5d		 pop	 ebp
  00027	c2 04 00	 ret	 4
?OnUnselectEmptySlot@CSlotWindow@UI@@IAEXH@Z ENDP	; UI::CSlotWindow::OnUnselectEmptySlot
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ?OnSelectItemSlot@CSlotWindow@UI@@IAEXH@Z
_TEXT	SEGMENT
_iSlotNumber$ = 8					; size = 4
?OnSelectItemSlot@CSlotWindow@UI@@IAEXH@Z PROC		; UI::CSlotWindow::OnSelectItemSlot, COMDAT
; _this$ = ecx

; 1062 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 1063 : //	OnOverOutItem();
; 1064 : 	PyCallClassMemberFunc(m_poHandler, "OnSelectItemSlot", Py_BuildValue("(i)", iSlotNumber));

  00004	ff 75 08	 push	 DWORD PTR _iSlotNumber$[ebp]
  00007	8b f1		 mov	 esi, ecx
  00009	68 00 00 00 00	 push	 OFFSET ??_C@_03LIHNMIHG@?$CIi?$CJ@
  0000e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__Py_BuildValue
  00014	50		 push	 eax
  00015	68 00 00 00 00	 push	 OFFSET ??_C@_0BB@PFHJJJ@OnSelectItemSlot@
  0001a	ff 76 5c	 push	 DWORD PTR [esi+92]
  0001d	e8 00 00 00 00	 call	 ?PyCallClassMemberFunc@@YA_NPAU_object@@PBD0@Z ; PyCallClassMemberFunc

; 1065 : 
; 1066 : 	if (UI::CWindowManager::Instance().IsAttaching())

  00022	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCWindowManager@UI@@@@0PAVCWindowManager@UI@@A ; CSingleton<UI::CWindowManager>::ms_singleton
  00028	83 c4 14	 add	 esp, 20			; 00000014H
  0002b	e8 00 00 00 00	 call	 ?IsAttaching@CWindowManager@UI@@QAEHXZ ; UI::CWindowManager::IsAttaching
  00030	85 c0		 test	 eax, eax
  00032	74 07		 je	 SHORT $LN2@OnSelectIt

; 1067 : 		OnOverOutItem();

  00034	8b ce		 mov	 ecx, esi
  00036	e8 00 00 00 00	 call	 ?OnOverOutItem@CSlotWindow@UI@@QAEXXZ ; UI::CSlotWindow::OnOverOutItem
$LN2@OnSelectIt:
  0003b	5e		 pop	 esi

; 1068 : }

  0003c	5d		 pop	 ebp
  0003d	c2 04 00	 ret	 4
?OnSelectItemSlot@CSlotWindow@UI@@IAEXH@Z ENDP		; UI::CSlotWindow::OnSelectItemSlot
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ?OnSelectEmptySlot@CSlotWindow@UI@@IAEXH@Z
_TEXT	SEGMENT
_iSlotNumber$ = 8					; size = 4
?OnSelectEmptySlot@CSlotWindow@UI@@IAEXH@Z PROC		; UI::CSlotWindow::OnSelectEmptySlot, COMDAT
; _this$ = ecx

; 1058 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 1059 : 	PyCallClassMemberFunc(m_poHandler, "OnSelectEmptySlot", Py_BuildValue("(i)", iSlotNumber));

  00004	ff 75 08	 push	 DWORD PTR _iSlotNumber$[ebp]
  00007	8b f1		 mov	 esi, ecx
  00009	68 00 00 00 00	 push	 OFFSET ??_C@_03LIHNMIHG@?$CIi?$CJ@
  0000e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__Py_BuildValue
  00014	50		 push	 eax
  00015	68 00 00 00 00	 push	 OFFSET ??_C@_0BC@JJECHKOF@OnSelectEmptySlot@
  0001a	ff 76 5c	 push	 DWORD PTR [esi+92]
  0001d	e8 00 00 00 00	 call	 ?PyCallClassMemberFunc@@YA_NPAU_object@@PBD0@Z ; PyCallClassMemberFunc
  00022	83 c4 14	 add	 esp, 20			; 00000014H
  00025	5e		 pop	 esi

; 1060 : }

  00026	5d		 pop	 ebp
  00027	c2 04 00	 ret	 4
?OnSelectEmptySlot@CSlotWindow@UI@@IAEXH@Z ENDP		; UI::CSlotWindow::OnSelectEmptySlot
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonSlotWindow.cpp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\list
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonSlotWindow.cpp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\list
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ?OnRenderSelectedSlot@CSlotWindow@UI@@MAEXXZ
_TEXT	SEGMENT
_this$1$ = -12						; size = 4
tv371 = -8						; size = 4
_pSlot$1 = -4						; size = 4
?OnRenderSelectedSlot@CSlotWindow@UI@@MAEXXZ PROC	; UI::CSlotWindow::OnRenderSelectedSlot, COMDAT
; _this$ = ecx

; 1400 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	53		 push	 ebx
  00007	8b d9		 mov	 ebx, ecx
  00009	56		 push	 esi
  0000a	89 5d f4	 mov	 DWORD PTR _this$1$[ebp], ebx
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\list

; 1083 :         return iterator(_Mypair._Myval2._Myhead->_Next, _STD addressof(_Mypair._Myval2));

  0000d	8b 83 84 00 00
	00		 mov	 eax, DWORD PTR [ebx+132]

; 38   :     _List_unchecked_const_iterator(_Nodeptr _Pnode, const _Mylist* _Plist) noexcept : _Ptr(_Pnode) {

  00013	8b 30		 mov	 esi, DWORD PTR [eax]
  00015	3b f0		 cmp	 esi, eax
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonSlotWindow.cpp

; 1402 : 	for (; itor != m_dwSelectedSlotIndexList.end(); ++itor)

  00017	0f 84 c4 00 00
	00		 je	 $LN3@OnRenderSe
  0001d	57		 push	 edi
  0001e	66 90		 npad	 2
$LL18@OnRenderSe:

; 1403 : 	{
; 1404 : 		TSlot * pSlot;
; 1405 : 		if (!GetSlotPointer(*itor, &pSlot))

  00020	8d 45 fc	 lea	 eax, DWORD PTR _pSlot$1[ebp]
  00023	8b cb		 mov	 ecx, ebx
  00025	50		 push	 eax
  00026	ff 76 08	 push	 DWORD PTR [esi+8]
  00029	e8 00 00 00 00	 call	 ?GetSlotPointer@CSlotWindow@UI@@IAEHKPAPAUSSlot@12@@Z ; UI::CSlotWindow::GetSlotPointer
  0002e	85 c0		 test	 eax, eax
  00030	0f 84 9c 00 00
	00		 je	 $LN2@OnRenderSe

; 1406 : 			continue;
; 1407 : 
; 1408 : 		CPythonGraphic::Instance().SetDiffuseColor(1.0f, 1.0f, 1.0f, 0.5f);

  00036	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCPythonGraphic@@@@0PAVCPythonGraphic@@A ; CSingleton<CPythonGraphic>::ms_singleton
  0003c	83 ec 10	 sub	 esp, 16			; 00000010H
  0003f	c7 44 24 0c 00
	00 00 3f	 mov	 DWORD PTR [esp+12], 1056964608 ; 3f000000H
  00047	c7 44 24 08 00
	00 80 3f	 mov	 DWORD PTR [esp+8], 1065353216 ; 3f800000H
  0004f	c7 44 24 04 00
	00 80 3f	 mov	 DWORD PTR [esp+4], 1065353216 ; 3f800000H
  00057	c7 04 24 00 00
	80 3f		 mov	 DWORD PTR [esp], 1065353216 ; 3f800000H
  0005e	e8 00 00 00 00	 call	 ?SetDiffuseColor@CScreen@@QAEXMMMM@Z ; CScreen::SetDiffuseColor

; 1409 : 		CPythonGraphic::Instance().RenderBar2d(m_rect.left + pSlot->ixPosition,

  00063	8b 4d fc	 mov	 ecx, DWORD PTR _pSlot$1[ebp]
  00066	83 ec 14	 sub	 esp, 20			; 00000014H
  00069	8b 53 38	 mov	 edx, DWORD PTR [ebx+56]
  0006c	8b 5b 34	 mov	 ebx, DWORD PTR [ebx+52]
  0006f	8b 41 4c	 mov	 eax, DWORD PTR [ecx+76]
  00072	8b 79 44	 mov	 edi, DWORD PTR [ecx+68]
  00075	03 c2		 add	 eax, edx
  00077	03 c7		 add	 eax, edi
  00079	c7 44 24 10 00
	00 00 00	 mov	 DWORD PTR [esp+16], 0
  00081	66 0f 6e c0	 movd	 xmm0, eax
  00085	8b 41 48	 mov	 eax, DWORD PTR [ecx+72]
  00088	8b 49 40	 mov	 ecx, DWORD PTR [ecx+64]
  0008b	03 c3		 add	 eax, ebx
  0008d	0f 5b c0	 cvtdq2ps xmm0, xmm0
  00090	03 c1		 add	 eax, ecx
  00092	f3 0f 11 44 24
	0c		 movss	 DWORD PTR [esp+12], xmm0
  00098	66 0f 6e c0	 movd	 xmm0, eax
  0009c	8d 04 3a	 lea	 eax, DWORD PTR [edx+edi]
  0009f	0f 5b c0	 cvtdq2ps xmm0, xmm0
  000a2	f3 0f 11 44 24
	08		 movss	 DWORD PTR [esp+8], xmm0
  000a8	66 0f 6e c0	 movd	 xmm0, eax
  000ac	8d 04 0b	 lea	 eax, DWORD PTR [ebx+ecx]
  000af	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCPythonGraphic@@@@0PAVCPythonGraphic@@A ; CSingleton<CPythonGraphic>::ms_singleton
  000b5	0f 5b c0	 cvtdq2ps xmm0, xmm0
  000b8	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  000be	66 0f 6e c0	 movd	 xmm0, eax
  000c2	0f 5b c0	 cvtdq2ps xmm0, xmm0
  000c5	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000ca	e8 00 00 00 00	 call	 ?RenderBar2d@CScreen@@QAEXMMMMM@Z ; CScreen::RenderBar2d
  000cf	8b 5d f4	 mov	 ebx, DWORD PTR _this$1$[ebp]
$LN2@OnRenderSe:
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\list

; 165  :         this->_Ptr = this->_Ptr->_Next;

  000d2	8b 36		 mov	 esi, DWORD PTR [esi]

; 198  :         return this->_Ptr == _Right._Ptr;

  000d4	3b b3 84 00 00
	00		 cmp	 esi, DWORD PTR [ebx+132]
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonSlotWindow.cpp

; 1402 : 	for (; itor != m_dwSelectedSlotIndexList.end(); ++itor)

  000da	0f 85 40 ff ff
	ff		 jne	 $LL18@OnRenderSe
  000e0	5f		 pop	 edi
$LN3@OnRenderSe:
  000e1	5e		 pop	 esi

; 1410 : 												m_rect.top + pSlot->iyPosition,
; 1411 : 												m_rect.left + pSlot->ixPosition + pSlot->ixCellSize,
; 1412 : 												m_rect.top + pSlot->iyPosition + pSlot->iyCellSize);
; 1413 : 	}
; 1414 : }

  000e2	5b		 pop	 ebx
  000e3	8b e5		 mov	 esp, ebp
  000e5	5d		 pop	 ebp
  000e6	c3		 ret	 0
?OnRenderSelectedSlot@CSlotWindow@UI@@MAEXXZ ENDP	; UI::CSlotWindow::OnRenderSelectedSlot
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ?OnRenderPickingSlot@CSlotWindow@UI@@MAEXXZ
_TEXT	SEGMENT
_pSlot$ = -4						; size = 4
?OnRenderPickingSlot@CSlotWindow@UI@@MAEXXZ PROC	; UI::CSlotWindow::OnRenderPickingSlot, COMDAT
; _this$ = ecx

; 1384 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	57		 push	 edi
  00005	8b f9		 mov	 edi, ecx

; 1385 : 	if (!UI::CWindowManager::Instance().IsAttaching())

  00007	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCWindowManager@UI@@@@0PAVCWindowManager@UI@@A ; CSingleton<UI::CWindowManager>::ms_singleton
  0000d	e8 00 00 00 00	 call	 ?IsAttaching@CWindowManager@UI@@QAEHXZ ; UI::CWindowManager::IsAttaching
  00012	85 c0		 test	 eax, eax
  00014	0f 84 b0 00 00
	00		 je	 $LN1@OnRenderPi

; 1386 : 		return;
; 1387 : 
; 1388 : 	TSlot * pSlot;
; 1389 : 	if (!GetSelectedSlotPointer(&pSlot))

  0001a	8d 45 fc	 lea	 eax, DWORD PTR _pSlot$[ebp]
  0001d	8b cf		 mov	 ecx, edi
  0001f	50		 push	 eax
  00020	e8 00 00 00 00	 call	 ?GetSelectedSlotPointer@CSlotWindow@UI@@IAEHPAPAUSSlot@12@@Z ; UI::CSlotWindow::GetSelectedSlotPointer
  00025	85 c0		 test	 eax, eax
  00027	0f 84 9d 00 00
	00		 je	 $LN1@OnRenderPi

; 1390 : 		return;
; 1391 : 
; 1392 : 	CPythonGraphic::Instance().SetDiffuseColor(1.0f, 1.0f, 1.0f, 0.5f);

  0002d	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCPythonGraphic@@@@0PAVCPythonGraphic@@A ; CSingleton<CPythonGraphic>::ms_singleton
  00033	53		 push	 ebx
  00034	56		 push	 esi
  00035	83 ec 10	 sub	 esp, 16			; 00000010H
  00038	c7 44 24 0c 00
	00 00 3f	 mov	 DWORD PTR [esp+12], 1056964608 ; 3f000000H
  00040	c7 44 24 08 00
	00 80 3f	 mov	 DWORD PTR [esp+8], 1065353216 ; 3f800000H
  00048	c7 44 24 04 00
	00 80 3f	 mov	 DWORD PTR [esp+4], 1065353216 ; 3f800000H
  00050	c7 04 24 00 00
	80 3f		 mov	 DWORD PTR [esp], 1065353216 ; 3f800000H
  00057	e8 00 00 00 00	 call	 ?SetDiffuseColor@CScreen@@QAEXMMMM@Z ; CScreen::SetDiffuseColor

; 1393 : 	CPythonGraphic::Instance().RenderBar2d(m_rect.left + pSlot->ixPosition,

  0005c	8b 4d fc	 mov	 ecx, DWORD PTR _pSlot$[ebp]
  0005f	83 ec 14	 sub	 esp, 20			; 00000014H
  00062	8b 57 38	 mov	 edx, DWORD PTR [edi+56]
  00065	8b 7f 34	 mov	 edi, DWORD PTR [edi+52]
  00068	8b 41 4c	 mov	 eax, DWORD PTR [ecx+76]
  0006b	8b 71 44	 mov	 esi, DWORD PTR [ecx+68]
  0006e	03 c2		 add	 eax, edx
  00070	8b 59 40	 mov	 ebx, DWORD PTR [ecx+64]
  00073	03 c6		 add	 eax, esi
  00075	c7 44 24 10 00
	00 00 00	 mov	 DWORD PTR [esp+16], 0
  0007d	66 0f 6e c0	 movd	 xmm0, eax
  00081	8b 41 48	 mov	 eax, DWORD PTR [ecx+72]
  00084	0f 5b c0	 cvtdq2ps xmm0, xmm0
  00087	03 c7		 add	 eax, edi
  00089	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCPythonGraphic@@@@0PAVCPythonGraphic@@A ; CSingleton<CPythonGraphic>::ms_singleton
  0008f	03 c3		 add	 eax, ebx
  00091	f3 0f 11 44 24
	0c		 movss	 DWORD PTR [esp+12], xmm0
  00097	66 0f 6e c0	 movd	 xmm0, eax
  0009b	8d 04 32	 lea	 eax, DWORD PTR [edx+esi]
  0009e	0f 5b c0	 cvtdq2ps xmm0, xmm0
  000a1	f3 0f 11 44 24
	08		 movss	 DWORD PTR [esp+8], xmm0
  000a7	66 0f 6e c0	 movd	 xmm0, eax
  000ab	8d 04 1f	 lea	 eax, DWORD PTR [edi+ebx]
  000ae	0f 5b c0	 cvtdq2ps xmm0, xmm0
  000b1	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  000b7	66 0f 6e c0	 movd	 xmm0, eax
  000bb	0f 5b c0	 cvtdq2ps xmm0, xmm0
  000be	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000c3	e8 00 00 00 00	 call	 ?RenderBar2d@CScreen@@QAEXMMMMM@Z ; CScreen::RenderBar2d
  000c8	5e		 pop	 esi
  000c9	5b		 pop	 ebx
$LN1@OnRenderPi:
  000ca	5f		 pop	 edi

; 1394 : 											m_rect.top + pSlot->iyPosition,
; 1395 : 											m_rect.left + pSlot->ixPosition + pSlot->ixCellSize,
; 1396 : 											m_rect.top + pSlot->iyPosition + pSlot->iyCellSize);
; 1397 : }

  000cb	8b e5		 mov	 esp, ebp
  000cd	5d		 pop	 ebp
  000ce	c3		 ret	 0
?OnRenderPickingSlot@CSlotWindow@UI@@MAEXXZ ENDP	; UI::CSlotWindow::OnRenderPickingSlot
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonSlotWindow.cpp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\list
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonSlotWindow.cpp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\list
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ?RenderLockedSlot@CSlotWindow@UI@@IAEXXZ
_TEXT	SEGMENT
_this$1$ = -4						; size = 4
?RenderLockedSlot@CSlotWindow@UI@@IAEXXZ PROC		; UI::CSlotWindow::RenderLockedSlot, COMDAT
; _this$ = ecx

; 1417 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	57		 push	 edi

; 1418 : 	CPythonGraphic::Instance().SetDiffuseColor(0.0f, 0.0f, 0.0f, 0.5f);

  00006	83 ec 10	 sub	 esp, 16			; 00000010H
  00009	8b f9		 mov	 edi, ecx
  0000b	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCPythonGraphic@@@@0PAVCPythonGraphic@@A ; CSingleton<CPythonGraphic>::ms_singleton
  00011	89 7d fc	 mov	 DWORD PTR _this$1$[ebp], edi
  00014	c7 44 24 0c 00
	00 00 3f	 mov	 DWORD PTR [esp+12], 1056964608 ; 3f000000H
  0001c	c7 44 24 08 00
	00 00 00	 mov	 DWORD PTR [esp+8], 0
  00024	c7 44 24 04 00
	00 00 00	 mov	 DWORD PTR [esp+4], 0
  0002c	c7 04 24 00 00
	00 00		 mov	 DWORD PTR [esp], 0
  00033	e8 00 00 00 00	 call	 ?SetDiffuseColor@CScreen@@QAEXMMMM@Z ; CScreen::SetDiffuseColor
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\list

; 1083 :         return iterator(_Mypair._Myval2._Myhead->_Next, _STD addressof(_Mypair._Myval2));

  00038	8b 87 8c 00 00
	00		 mov	 eax, DWORD PTR [edi+140]

; 38   :     _List_unchecked_const_iterator(_Nodeptr _Pnode, const _Mylist* _Plist) noexcept : _Ptr(_Pnode) {

  0003e	8b 30		 mov	 esi, DWORD PTR [eax]
  00040	3b f0		 cmp	 esi, eax
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonSlotWindow.cpp

; 1419 : 	for (TSlotListIterator itor = m_SlotList.begin(); itor != m_SlotList.end(); ++itor)

  00042	0f 84 8f 00 00
	00		 je	 $LN3@RenderLock
  00048	53		 push	 ebx
  00049	0f 1f 80 00 00
	00 00		 npad	 7
$LL19@RenderLock:

; 1420 : 	{
; 1421 : 		TSlot & rSlot = *itor;
; 1422 : 
; 1423 : 		if (!rSlot.isItem)

  00050	83 7e 20 00	 cmp	 DWORD PTR [esi+32], 0
  00054	74 72		 je	 SHORT $LN2@RenderLock

; 1424 : 			continue;
; 1425 : 
; 1426 : 		if (rSlot.dwState & SLOT_STATE_LOCK)

  00056	f6 46 08 01	 test	 BYTE PTR [esi+8], 1
  0005a	74 6c		 je	 SHORT $LN2@RenderLock

; 1427 : 		{
; 1428 : 			CPythonGraphic::Instance().RenderBar2d(m_rect.left + rSlot.ixPosition,

  0005c	8b 4f 38	 mov	 ecx, DWORD PTR [edi+56]
  0005f	83 ec 14	 sub	 esp, 20			; 00000014H
  00062	8b 46 54	 mov	 eax, DWORD PTR [esi+84]
  00065	8b 56 4c	 mov	 edx, DWORD PTR [esi+76]
  00068	03 c1		 add	 eax, ecx
  0006a	8b 7f 34	 mov	 edi, DWORD PTR [edi+52]
  0006d	03 c2		 add	 eax, edx
  0006f	8b 5e 48	 mov	 ebx, DWORD PTR [esi+72]
  00072	c7 44 24 10 00
	00 00 00	 mov	 DWORD PTR [esp+16], 0
  0007a	66 0f 6e c0	 movd	 xmm0, eax
  0007e	8b 46 50	 mov	 eax, DWORD PTR [esi+80]
  00081	0f 5b c0	 cvtdq2ps xmm0, xmm0
  00084	03 c7		 add	 eax, edi
  00086	03 c3		 add	 eax, ebx
  00088	f3 0f 11 44 24
	0c		 movss	 DWORD PTR [esp+12], xmm0
  0008e	66 0f 6e c0	 movd	 xmm0, eax
  00092	8d 04 11	 lea	 eax, DWORD PTR [ecx+edx]
  00095	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCPythonGraphic@@@@0PAVCPythonGraphic@@A ; CSingleton<CPythonGraphic>::ms_singleton
  0009b	0f 5b c0	 cvtdq2ps xmm0, xmm0
  0009e	f3 0f 11 44 24
	08		 movss	 DWORD PTR [esp+8], xmm0
  000a4	66 0f 6e c0	 movd	 xmm0, eax
  000a8	8d 04 1f	 lea	 eax, DWORD PTR [edi+ebx]
  000ab	0f 5b c0	 cvtdq2ps xmm0, xmm0
  000ae	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  000b4	66 0f 6e c0	 movd	 xmm0, eax
  000b8	0f 5b c0	 cvtdq2ps xmm0, xmm0
  000bb	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000c0	e8 00 00 00 00	 call	 ?RenderBar2d@CScreen@@QAEXMMMMM@Z ; CScreen::RenderBar2d
  000c5	8b 7d fc	 mov	 edi, DWORD PTR _this$1$[ebp]
$LN2@RenderLock:
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\list

; 165  :         this->_Ptr = this->_Ptr->_Next;

  000c8	8b 36		 mov	 esi, DWORD PTR [esi]

; 198  :         return this->_Ptr == _Right._Ptr;

  000ca	3b b7 8c 00 00
	00		 cmp	 esi, DWORD PTR [edi+140]
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonSlotWindow.cpp

; 1419 : 	for (TSlotListIterator itor = m_SlotList.begin(); itor != m_SlotList.end(); ++itor)

  000d0	0f 85 7a ff ff
	ff		 jne	 $LL19@RenderLock
  000d6	5b		 pop	 ebx
$LN3@RenderLock:
  000d7	5f		 pop	 edi

; 1429 : 												   m_rect.top  + rSlot.iyPosition,
; 1430 : 												   m_rect.left + rSlot.ixPosition + rSlot.ixCellSize,
; 1431 : 												   m_rect.top  + rSlot.iyPosition + rSlot.iyCellSize);
; 1432 : 		}
; 1433 : 	}
; 1434 : }

  000d8	5e		 pop	 esi
  000d9	8b e5		 mov	 esp, ebp
  000db	5d		 pop	 ebp
  000dc	c3		 ret	 0
?RenderLockedSlot@CSlotWindow@UI@@IAEXXZ ENDP		; UI::CSlotWindow::RenderLockedSlot
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonSlotWindow.cpp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\list
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonSlotWindow.cpp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\list
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ?RenderSlotBaseImage@CSlotWindow@UI@@IAEXXZ
_TEXT	SEGMENT
?RenderSlotBaseImage@CSlotWindow@UI@@IAEXXZ PROC	; UI::CSlotWindow::RenderSlotBaseImage, COMDAT
; _this$ = ecx

; 1367 : {

  00000	57		 push	 edi
  00001	8b f9		 mov	 edi, ecx

; 1368 : 	if (!m_pBaseImageInstance)

  00003	83 bf a8 00 00
	00 00		 cmp	 DWORD PTR [edi+168], 0
  0000a	74 63		 je	 SHORT $LN3@RenderSlot
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\list

; 1083 :         return iterator(_Mypair._Myval2._Myhead->_Next, _STD addressof(_Mypair._Myval2));

  0000c	8b 87 8c 00 00
	00		 mov	 eax, DWORD PTR [edi+140]
  00012	56		 push	 esi

; 38   :     _List_unchecked_const_iterator(_Nodeptr _Pnode, const _Mylist* _Plist) noexcept : _Ptr(_Pnode) {

  00013	8b 30		 mov	 esi, DWORD PTR [eax]
  00015	3b f0		 cmp	 esi, eax
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonSlotWindow.cpp

; 1371 : 	for (TSlotListIterator itor = m_SlotList.begin(); itor != m_SlotList.end(); ++itor)

  00017	74 55		 je	 SHORT $LN40@RenderSlot
  00019	0f 1f 80 00 00
	00 00		 npad	 7
$LL19@RenderSlot:

; 1372 : 	{
; 1373 : 		TSlot & rSlot = *itor;
; 1374 : 
; 1375 : 		if (!rSlot.bRenderBaseSlotImage)

  00020	80 7e 64 00	 cmp	 BYTE PTR [esi+100], 0
  00024	74 3e		 je	 SHORT $LN2@RenderSlot

; 1376 : 			continue;
; 1377 : 
; 1378 : 		m_pBaseImageInstance->SetPosition(m_rect.left + rSlot.ixPosition, m_rect.top + rSlot.iyPosition);

  00026	8b 46 4c	 mov	 eax, DWORD PTR [esi+76]
  00029	83 ec 08	 sub	 esp, 8
  0002c	03 47 38	 add	 eax, DWORD PTR [edi+56]
  0002f	8b 8f a8 00 00
	00		 mov	 ecx, DWORD PTR [edi+168]
  00035	66 0f 6e c0	 movd	 xmm0, eax
  00039	8b 46 48	 mov	 eax, DWORD PTR [esi+72]
  0003c	03 47 34	 add	 eax, DWORD PTR [edi+52]
  0003f	0f 5b c0	 cvtdq2ps xmm0, xmm0
  00042	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  00048	66 0f 6e c0	 movd	 xmm0, eax
  0004c	0f 5b c0	 cvtdq2ps xmm0, xmm0
  0004f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00054	e8 00 00 00 00	 call	 ?SetPosition@CGraphicImageInstance@@QAEXMM@Z ; CGraphicImageInstance::SetPosition

; 1379 : 		m_pBaseImageInstance->Render();

  00059	8b 8f a8 00 00
	00		 mov	 ecx, DWORD PTR [edi+168]
  0005f	e8 00 00 00 00	 call	 ?Render@CGraphicImageInstance@@QAEXXZ ; CGraphicImageInstance::Render
$LN2@RenderSlot:
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\list

; 165  :         this->_Ptr = this->_Ptr->_Next;

  00064	8b 36		 mov	 esi, DWORD PTR [esi]

; 198  :         return this->_Ptr == _Right._Ptr;

  00066	3b b7 8c 00 00
	00		 cmp	 esi, DWORD PTR [edi+140]
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonSlotWindow.cpp

; 1371 : 	for (TSlotListIterator itor = m_SlotList.begin(); itor != m_SlotList.end(); ++itor)

  0006c	75 b2		 jne	 SHORT $LL19@RenderSlot
$LN40@RenderSlot:
  0006e	5e		 pop	 esi
$LN3@RenderSlot:
  0006f	5f		 pop	 edi

; 1380 : 	}
; 1381 : }

  00070	c3		 ret	 0
?RenderSlotBaseImage@CSlotWindow@UI@@IAEXXZ ENDP	; UI::CSlotWindow::RenderSlotBaseImage
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ?OnMouseOver@CSlotWindow@UI@@MAEXXZ
_TEXT	SEGMENT
_pSlot$1 = -4						; size = 4
?OnMouseOver@CSlotWindow@UI@@MAEXXZ PROC		; UI::CSlotWindow::OnMouseOver, COMDAT
; _this$ = ecx

; 1038 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 1039 : //	if (UI::CWindowManager::Instance().IsCapture())
; 1040 : //	if (!UI::CWindowManager::Instance().IsAttaching())
; 1041 : //		return;
; 1042 : 
; 1043 : 	CWindow * pPointWindow = UI::CWindowManager::Instance().GetPointWindow();
; 1044 : 	if (this == pPointWindow)

  00004	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ms_singleton@?$CSingleton@VCWindowManager@UI@@@@0PAVCWindowManager@UI@@A ; CSingleton<UI::CWindowManager>::ms_singleton
  00009	56		 push	 esi
  0000a	8b f1		 mov	 esi, ecx
  0000c	3b 70 68	 cmp	 esi, DWORD PTR [eax+104]
  0000f	75 23		 jne	 SHORT $LN4@OnMouseOve

; 1045 : 	{
; 1046 : 		TSlot * pSlot;
; 1047 : 		if (GetPickedSlotPointer(&pSlot))

  00011	8b 06		 mov	 eax, DWORD PTR [esi]
  00013	8d 4d fc	 lea	 ecx, DWORD PTR _pSlot$1[ebp]
  00016	51		 push	 ecx
  00017	8b ce		 mov	 ecx, esi
  00019	ff 90 a8 00 00
	00		 call	 DWORD PTR [eax+168]
  0001f	85 c0		 test	 eax, eax
  00021	74 11		 je	 SHORT $LN4@OnMouseOve

; 1048 : 		{
; 1049 : 			if (OnOverInItem(pSlot->dwSlotNumber))

  00023	8b 45 fc	 mov	 eax, DWORD PTR _pSlot$1[ebp]
  00026	8b ce		 mov	 ecx, esi
  00028	ff 70 04	 push	 DWORD PTR [eax+4]
  0002b	e8 00 00 00 00	 call	 ?OnOverInItem@CSlotWindow@UI@@QAEHK@Z ; UI::CSlotWindow::OnOverInItem
  00030	85 c0		 test	 eax, eax
  00032	75 07		 jne	 SHORT $LN1@OnMouseOve
$LN4@OnMouseOve:

; 1050 : 				return;
; 1051 : 		}
; 1052 : 	}
; 1053 : 
; 1054 : 	OnOverOutItem();

  00034	8b ce		 mov	 ecx, esi
  00036	e8 00 00 00 00	 call	 ?OnOverOutItem@CSlotWindow@UI@@QAEXXZ ; UI::CSlotWindow::OnOverOutItem
$LN1@OnMouseOve:
  0003b	5e		 pop	 esi

; 1055 : }

  0003c	8b e5		 mov	 esp, ebp
  0003e	5d		 pop	 ebp
  0003f	c3		 ret	 0
?OnMouseOver@CSlotWindow@UI@@MAEXXZ ENDP		; UI::CSlotWindow::OnMouseOver
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ?OnMouseOverOut@CSlotWindow@UI@@MAEXXZ
_TEXT	SEGMENT
?OnMouseOverOut@CSlotWindow@UI@@MAEXXZ PROC		; UI::CSlotWindow::OnMouseOverOut, COMDAT
; _this$ = ecx

; 1034 : 	OnOverOutItem();

  00000	e9 00 00 00 00	 jmp	 ?OnOverOutItem@CSlotWindow@UI@@QAEXXZ ; UI::CSlotWindow::OnOverOutItem
?OnMouseOverOut@CSlotWindow@UI@@MAEXXZ ENDP		; UI::CSlotWindow::OnMouseOverOut
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ?OnMouseLeftButtonDoubleClick@CSlotWindow@UI@@MAEHXZ
_TEXT	SEGMENT
_pSlot$ = -4						; size = 4
?OnMouseLeftButtonDoubleClick@CSlotWindow@UI@@MAEHXZ PROC ; UI::CSlotWindow::OnMouseLeftButtonDoubleClick, COMDAT
; _this$ = ecx

; 1018 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	8b f1		 mov	 esi, ecx

; 1019 : 	TSlot * pSlot;
; 1020 : #ifdef WJ_ENABLE_TRADABLE_ICON
; 1021 : 	if (GetPickedSlotPointer(&pSlot))

  00007	8d 4d fc	 lea	 ecx, DWORD PTR _pSlot$[ebp]
  0000a	51		 push	 ecx
  0000b	8b ce		 mov	 ecx, esi
  0000d	8b 06		 mov	 eax, DWORD PTR [esi]
  0000f	ff 90 a8 00 00
	00		 call	 DWORD PTR [eax+168]
  00015	85 c0		 test	 eax, eax
  00017	74 0f		 je	 SHORT $LN6@OnMouseLef

; 1022 : 		if (!(pSlot->dwState & SLOT_STATE_CANT_MOUSE_EVENT))

  00019	8b 45 fc	 mov	 eax, DWORD PTR _pSlot$[ebp]
  0001c	f6 00 10	 test	 BYTE PTR [eax], 16	; 00000010H
  0001f	75 07		 jne	 SHORT $LN6@OnMouseLef

; 1023 : 			OnUseSlot();

  00021	8b ce		 mov	 ecx, esi
  00023	e8 00 00 00 00	 call	 ?OnUseSlot@CSlotWindow@UI@@IAEXXZ ; UI::CSlotWindow::OnUseSlot
$LN6@OnMouseLef:

; 1024 : #else
; 1025 : 	if (GetPickedSlotPointer(&pSlot))
; 1026 : 		OnUseSlot();
; 1027 : #endif
; 1028 : 
; 1029 : 	return TRUE;
; 1030 : }

  00028	b8 01 00 00 00	 mov	 eax, 1
  0002d	5e		 pop	 esi
  0002e	8b e5		 mov	 esp, ebp
  00030	5d		 pop	 ebp
  00031	c3		 ret	 0
?OnMouseLeftButtonDoubleClick@CSlotWindow@UI@@MAEHXZ ENDP ; UI::CSlotWindow::OnMouseLeftButtonDoubleClick
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ?OnMouseRightButtonDown@CSlotWindow@UI@@MAEHXZ
_TEXT	SEGMENT
_pSlot$ = -4						; size = 4
?OnMouseRightButtonDown@CSlotWindow@UI@@MAEHXZ PROC	; UI::CSlotWindow::OnMouseRightButtonDown, COMDAT
; _this$ = ecx

; 996  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	8b f1		 mov	 esi, ecx

; 997  : 	TSlot * pSlot;
; 998  : 	if (!GetPickedSlotPointer(&pSlot))

  00007	8d 4d fc	 lea	 ecx, DWORD PTR _pSlot$[ebp]
  0000a	51		 push	 ecx
  0000b	8b ce		 mov	 ecx, esi
  0000d	8b 06		 mov	 eax, DWORD PTR [esi]
  0000f	ff 90 a8 00 00
	00		 call	 DWORD PTR [eax+168]
  00015	85 c0		 test	 eax, eax
  00017	74 27		 je	 SHORT $LN8@OnMouseRig

; 999  : 		return TRUE;
; 1000 : 
; 1001 : #ifdef WJ_ENABLE_TRADABLE_ICON
; 1002 : 	if (!(pSlot->dwState & SLOT_STATE_CANT_MOUSE_EVENT))

  00019	8b 45 fc	 mov	 eax, DWORD PTR _pSlot$[ebp]
  0001c	f6 00 10	 test	 BYTE PTR [eax], 16	; 00000010H
  0001f	75 1f		 jne	 SHORT $LN8@OnMouseRig

; 1003 : 		if (pSlot->isItem)

  00021	83 78 18 00	 cmp	 DWORD PTR [eax+24], 0
  00025	8b ce		 mov	 ecx, esi
  00027	ff 70 04	 push	 DWORD PTR [eax+4]
  0002a	74 0f		 je	 SHORT $LN4@OnMouseRig

; 1004 : 			OnUnselectItemSlot(pSlot->dwSlotNumber);

  0002c	e8 00 00 00 00	 call	 ?OnUnselectItemSlot@CSlotWindow@UI@@IAEXH@Z ; UI::CSlotWindow::OnUnselectItemSlot

; 1007 : #else
; 1008 : 	if (pSlot->isItem)
; 1009 : 		OnUnselectItemSlot(pSlot->dwSlotNumber);
; 1010 : 	else
; 1011 : 		OnUnselectEmptySlot(pSlot->dwSlotNumber);
; 1012 : #endif
; 1013 : 
; 1014 : 	return TRUE;
; 1015 : }

  00031	b8 01 00 00 00	 mov	 eax, 1
  00036	5e		 pop	 esi
  00037	8b e5		 mov	 esp, ebp
  00039	5d		 pop	 ebp
  0003a	c3		 ret	 0
$LN4@OnMouseRig:

; 1005 : 		else
; 1006 : 			OnUnselectEmptySlot(pSlot->dwSlotNumber);

  0003b	e8 00 00 00 00	 call	 ?OnUnselectEmptySlot@CSlotWindow@UI@@IAEXH@Z ; UI::CSlotWindow::OnUnselectEmptySlot
$LN8@OnMouseRig:

; 1007 : #else
; 1008 : 	if (pSlot->isItem)
; 1009 : 		OnUnselectItemSlot(pSlot->dwSlotNumber);
; 1010 : 	else
; 1011 : 		OnUnselectEmptySlot(pSlot->dwSlotNumber);
; 1012 : #endif
; 1013 : 
; 1014 : 	return TRUE;
; 1015 : }

  00040	b8 01 00 00 00	 mov	 eax, 1
  00045	5e		 pop	 esi
  00046	8b e5		 mov	 esp, ebp
  00048	5d		 pop	 ebp
  00049	c3		 ret	 0
?OnMouseRightButtonDown@CSlotWindow@UI@@MAEHXZ ENDP	; UI::CSlotWindow::OnMouseRightButtonDown
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ?OnMouseLeftButtonUp@CSlotWindow@UI@@MAEHXZ
_TEXT	SEGMENT
_pSlot$1 = -4						; size = 4
?OnMouseLeftButtonUp@CSlotWindow@UI@@MAEHXZ PROC	; UI::CSlotWindow::OnMouseLeftButtonUp, COMDAT
; _this$ = ecx

; 937  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	8b f1		 mov	 esi, ecx

; 938  : 	if (UI::CWindowManager::Instance().IsAttaching())

  00007	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCWindowManager@UI@@@@0PAVCWindowManager@UI@@A ; CSingleton<UI::CWindowManager>::ms_singleton
  0000d	e8 00 00 00 00	 call	 ?IsAttaching@CWindowManager@UI@@QAEHXZ ; UI::CWindowManager::IsAttaching
  00012	85 c0		 test	 eax, eax
  00014	0f 84 93 00 00
	00		 je	 $LN4@OnMouseLef

; 939  : 	if (UI::CWindowManager::Instance().IsDragging())

  0001a	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCWindowManager@UI@@@@0PAVCWindowManager@UI@@A ; CSingleton<UI::CWindowManager>::ms_singleton
  00020	e8 00 00 00 00	 call	 ?IsDragging@CWindowManager@UI@@QAEHXZ ; UI::CWindowManager::IsDragging
  00025	85 c0		 test	 eax, eax
  00027	0f 84 80 00 00
	00		 je	 $LN4@OnMouseLef

; 940  : 	if (IsIn())

  0002d	8b ce		 mov	 ecx, esi
  0002f	e8 00 00 00 00	 call	 ?IsIn@CWindow@UI@@QAE_NXZ ; UI::CWindow::IsIn
  00034	84 c0		 test	 al, al
  00036	74 75		 je	 SHORT $LN4@OnMouseLef

; 941  : 	{
; 942  : 		UI::CWindow * pWin = UI::CWindowManager::Instance().GetPointWindow();

  00038	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ms_singleton@?$CSingleton@VCWindowManager@UI@@@@0PAVCWindowManager@UI@@A ; CSingleton<UI::CWindowManager>::ms_singleton
  0003d	8b 70 68	 mov	 esi, DWORD PTR [eax+104]

; 943  : 
; 944  : 		if (pWin)

  00040	85 f6		 test	 esi, esi
  00042	74 69		 je	 SHORT $LN4@OnMouseLef

; 945  : 		if (pWin->IsType(UI::CSlotWindow::Type()))

  00044	e8 00 00 00 00	 call	 ?Type@CSlotWindow@UI@@SAKXZ ; UI::CSlotWindow::Type
  00049	50		 push	 eax
  0004a	8b ce		 mov	 ecx, esi
  0004c	e8 00 00 00 00	 call	 ?IsType@CWindow@UI@@QAEHK@Z ; UI::CWindow::IsType
  00051	85 c0		 test	 eax, eax
  00053	74 58		 je	 SHORT $LN4@OnMouseLef

; 946  : 		{
; 947  : 			UI::CSlotWindow * pSlotWin = (UI::CSlotWindow *)pWin;
; 948  : 
; 949  : 			TSlot * pSlot;
; 950  : 			if (!pSlotWin->GetPickedSlotPointer(&pSlot))

  00055	8b 06		 mov	 eax, DWORD PTR [esi]
  00057	8d 4d fc	 lea	 ecx, DWORD PTR _pSlot$1[ebp]
  0005a	51		 push	 ecx
  0005b	8b ce		 mov	 ecx, esi
  0005d	ff 90 a8 00 00
	00		 call	 DWORD PTR [eax+168]
  00063	85 c0		 test	 eax, eax
  00065	75 15		 jne	 SHORT $LN7@OnMouseLef

; 951  : 			{
; 952  : 				UI::CWindowManager::Instance().DeattachIcon();

  00067	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCWindowManager@UI@@@@0PAVCWindowManager@UI@@A ; CSingleton<UI::CWindowManager>::ms_singleton
  0006d	e8 00 00 00 00	 call	 ?DeattachIcon@CWindowManager@UI@@QAEXXZ ; UI::CWindowManager::DeattachIcon

; 953  : 				return TRUE;

  00072	b8 01 00 00 00	 mov	 eax, 1
  00077	5e		 pop	 esi

; 976  : }

  00078	8b e5		 mov	 esp, ebp
  0007a	5d		 pop	 ebp
  0007b	c3		 ret	 0
$LN7@OnMouseLef:

; 954  : 			}
; 955  : 
; 956  : #ifdef WJ_ENABLE_TRADABLE_ICON
; 957  : 						if (!(pSlot->dwState & SLOT_STATE_CANT_MOUSE_EVENT))

  0007c	8b 45 fc	 mov	 eax, DWORD PTR _pSlot$1[ebp]
  0007f	f6 00 10	 test	 BYTE PTR [eax], 16	; 00000010H
  00082	75 1f		 jne	 SHORT $LN10@OnMouseLef

; 958  : 							if (pSlot->isItem)

  00084	83 78 18 00	 cmp	 DWORD PTR [eax+24], 0
  00088	8b ce		 mov	 ecx, esi
  0008a	ff 70 04	 push	 DWORD PTR [eax+4]
  0008d	74 0f		 je	 SHORT $LN9@OnMouseLef

; 959  : 								pSlotWin->OnSelectItemSlot(pSlot->dwSlotNumber);

  0008f	e8 00 00 00 00	 call	 ?OnSelectItemSlot@CSlotWindow@UI@@IAEXH@Z ; UI::CSlotWindow::OnSelectItemSlot

; 962  : #else
; 963  : 						if (pSlot->isItem)
; 964  : 							pSlotWin->OnSelectItemSlot(pSlot->dwSlotNumber);
; 965  : 						else
; 966  : 							pSlotWin->OnSelectEmptySlot(pSlot->dwSlotNumber);
; 967  : #endif
; 968  : 
; 969  : 			return TRUE;

  00094	b8 01 00 00 00	 mov	 eax, 1
  00099	5e		 pop	 esi

; 976  : }

  0009a	8b e5		 mov	 esp, ebp
  0009c	5d		 pop	 ebp
  0009d	c3		 ret	 0
$LN9@OnMouseLef:

; 960  : 							else
; 961  : 								pSlotWin->OnSelectEmptySlot(pSlot->dwSlotNumber);

  0009e	e8 00 00 00 00	 call	 ?OnSelectEmptySlot@CSlotWindow@UI@@IAEXH@Z ; UI::CSlotWindow::OnSelectEmptySlot
$LN10@OnMouseLef:

; 962  : #else
; 963  : 						if (pSlot->isItem)
; 964  : 							pSlotWin->OnSelectItemSlot(pSlot->dwSlotNumber);
; 965  : 						else
; 966  : 							pSlotWin->OnSelectEmptySlot(pSlot->dwSlotNumber);
; 967  : #endif
; 968  : 
; 969  : 			return TRUE;

  000a3	b8 01 00 00 00	 mov	 eax, 1
  000a8	5e		 pop	 esi

; 976  : }

  000a9	8b e5		 mov	 esp, ebp
  000ab	5d		 pop	 ebp
  000ac	c3		 ret	 0
$LN4@OnMouseLef:

; 970  : 		}
; 971  : 
; 972  : 		return FALSE;
; 973  : 	}
; 974  : 
; 975  : 	return FALSE;

  000ad	33 c0		 xor	 eax, eax
  000af	5e		 pop	 esi

; 976  : }

  000b0	8b e5		 mov	 esp, ebp
  000b2	5d		 pop	 ebp
  000b3	c3		 ret	 0
?OnMouseLeftButtonUp@CSlotWindow@UI@@MAEHXZ ENDP	; UI::CSlotWindow::OnMouseLeftButtonUp
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ?OnMouseLeftButtonDown@CSlotWindow@UI@@MAEHXZ
_TEXT	SEGMENT
_pSlot$ = -4						; size = 4
?OnMouseLeftButtonDown@CSlotWindow@UI@@MAEHXZ PROC	; UI::CSlotWindow::OnMouseLeftButtonDown, COMDAT
; _this$ = ecx

; 912  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	8b f1		 mov	 esi, ecx

; 913  : 	TSlot * pSlot;
; 914  : 	if (!GetPickedSlotPointer(&pSlot))

  00007	8d 4d fc	 lea	 ecx, DWORD PTR _pSlot$[ebp]
  0000a	51		 push	 ecx
  0000b	8b ce		 mov	 ecx, esi
  0000d	8b 06		 mov	 eax, DWORD PTR [esi]
  0000f	ff 90 a8 00 00
	00		 call	 DWORD PTR [eax+168]
  00015	85 c0		 test	 eax, eax
  00017	75 15		 jne	 SHORT $LN2@OnMouseLef

; 915  : 	{
; 916  : 		UI::CWindowManager::Instance().DeattachIcon();

  00019	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCWindowManager@UI@@@@0PAVCWindowManager@UI@@A ; CSingleton<UI::CWindowManager>::ms_singleton
  0001f	e8 00 00 00 00	 call	 ?DeattachIcon@CWindowManager@UI@@QAEXXZ ; UI::CWindowManager::DeattachIcon

; 926  : #else
; 927  : 	if (pSlot->isItem && !(pSlot->dwState & SLOT_STATE_LOCK))
; 928  : 		OnSelectItemSlot(pSlot->dwSlotNumber);
; 929  : 	else
; 930  : 		OnSelectEmptySlot(pSlot->dwSlotNumber);
; 931  : #endif
; 932  : 
; 933  : 	return TRUE;
; 934  : }

  00024	b8 01 00 00 00	 mov	 eax, 1
  00029	5e		 pop	 esi
  0002a	8b e5		 mov	 esp, ebp
  0002c	5d		 pop	 ebp
  0002d	c3		 ret	 0
$LN2@OnMouseLef:

; 917  : 		return TRUE;
; 918  : 	}
; 919  : 
; 920  : #ifdef WJ_ENABLE_TRADABLE_ICON
; 921  : 	if (!(pSlot->dwState & SLOT_STATE_CANT_MOUSE_EVENT))

  0002e	8b 45 fc	 mov	 eax, DWORD PTR _pSlot$[ebp]
  00031	8b 08		 mov	 ecx, DWORD PTR [eax]
  00033	f6 c1 10	 test	 cl, 16			; 00000010H
  00036	75 29		 jne	 SHORT $LN5@OnMouseLef

; 922  : 		if (pSlot->isItem && !(pSlot->dwState & SLOT_STATE_LOCK))

  00038	83 78 18 00	 cmp	 DWORD PTR [eax+24], 0
  0003c	74 19		 je	 SHORT $LN4@OnMouseLef
  0003e	f6 c1 01	 test	 cl, 1
  00041	75 14		 jne	 SHORT $LN4@OnMouseLef

; 923  : 			OnSelectItemSlot(pSlot->dwSlotNumber);

  00043	ff 70 04	 push	 DWORD PTR [eax+4]
  00046	8b ce		 mov	 ecx, esi
  00048	e8 00 00 00 00	 call	 ?OnSelectItemSlot@CSlotWindow@UI@@IAEXH@Z ; UI::CSlotWindow::OnSelectItemSlot

; 926  : #else
; 927  : 	if (pSlot->isItem && !(pSlot->dwState & SLOT_STATE_LOCK))
; 928  : 		OnSelectItemSlot(pSlot->dwSlotNumber);
; 929  : 	else
; 930  : 		OnSelectEmptySlot(pSlot->dwSlotNumber);
; 931  : #endif
; 932  : 
; 933  : 	return TRUE;
; 934  : }

  0004d	b8 01 00 00 00	 mov	 eax, 1
  00052	5e		 pop	 esi
  00053	8b e5		 mov	 esp, ebp
  00055	5d		 pop	 ebp
  00056	c3		 ret	 0
$LN4@OnMouseLef:

; 924  : 		else
; 925  : 			OnSelectEmptySlot(pSlot->dwSlotNumber);

  00057	ff 70 04	 push	 DWORD PTR [eax+4]
  0005a	8b ce		 mov	 ecx, esi
  0005c	e8 00 00 00 00	 call	 ?OnSelectEmptySlot@CSlotWindow@UI@@IAEXH@Z ; UI::CSlotWindow::OnSelectEmptySlot
$LN5@OnMouseLef:

; 926  : #else
; 927  : 	if (pSlot->isItem && !(pSlot->dwState & SLOT_STATE_LOCK))
; 928  : 		OnSelectItemSlot(pSlot->dwSlotNumber);
; 929  : 	else
; 930  : 		OnSelectEmptySlot(pSlot->dwSlotNumber);
; 931  : #endif
; 932  : 
; 933  : 	return TRUE;
; 934  : }

  00061	b8 01 00 00 00	 mov	 eax, 1
  00066	5e		 pop	 esi
  00067	8b e5		 mov	 esp, ebp
  00069	5d		 pop	 ebp
  0006a	c3		 ret	 0
?OnMouseLeftButtonDown@CSlotWindow@UI@@MAEHXZ ENDP	; UI::CSlotWindow::OnMouseLeftButtonDown
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonSlotWindow.cpp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\list
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\algorithm
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterBase\Stl.h
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\list
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\algorithm
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\list
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonSlotWindow.cpp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\list
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonSlotWindow.cpp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\list
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ?OnRender@CSlotWindow@UI@@MAEXXZ
_TEXT	SEGMENT
_fXCenter$1$ = -24					; size = 4
_iX$1$ = -24						; size = 4
tv1397 = -24						; size = 4
_fYCenter$1$ = -20					; size = 4
_iItemYSize$1$ = -20					; size = 4
_itor$1$ = -16						; size = 4
_i$1$ = -12						; size = 4
_fcurTime$1 = -12					; size = 4
_fRadius$1$ = -8					; size = 4
_iY$1$ = -8						; size = 4
_this$1$ = -4						; size = 4
?OnRender@CSlotWindow@UI@@MAEXXZ PROC			; UI::CSlotWindow::OnRender, COMDAT
; _this$ = ecx

; 1169 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 18	 sub	 esp, 24			; 00000018H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	8b f9		 mov	 edi, ecx
  0000b	89 7d fc	 mov	 DWORD PTR _this$1$[ebp], edi

; 1170 : 	RenderSlotBaseImage();

  0000e	e8 00 00 00 00	 call	 ?RenderSlotBaseImage@CSlotWindow@UI@@IAEXXZ ; UI::CSlotWindow::RenderSlotBaseImage

; 1171 : 
; 1172 : 	switch (m_dwSlotStyle)

  00013	8b 87 80 00 00
	00		 mov	 eax, DWORD PTR [edi+128]
  00019	83 e8 01	 sub	 eax, 1
  0001c	74 11		 je	 SHORT $LN10@OnRender
  0001e	83 e8 01	 sub	 eax, 1
  00021	75 16		 jne	 SHORT $LN2@OnRender

; 1176 : 			break;
; 1177 : 		case SLOT_STYLE_SELECT:
; 1178 : 			OnRenderSelectedSlot();

  00023	8b 07		 mov	 eax, DWORD PTR [edi]
  00025	8b cf		 mov	 ecx, edi
  00027	ff 90 a4 00 00
	00		 call	 DWORD PTR [eax+164]
  0002d	eb 0a		 jmp	 SHORT $LN2@OnRender
$LN10@OnRender:

; 1173 : 	{
; 1174 : 		case SLOT_STYLE_PICK_UP:
; 1175 : 			OnRenderPickingSlot();

  0002f	8b 07		 mov	 eax, DWORD PTR [edi]
  00031	8b cf		 mov	 ecx, edi
  00033	ff 90 a0 00 00
	00		 call	 DWORD PTR [eax+160]
$LN2@OnRender:
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\list

; 38   :     _List_unchecked_const_iterator(_Nodeptr _Pnode, const _Mylist* _Plist) noexcept : _Ptr(_Pnode) {

  00039	8b 5f 64	 mov	 ebx, DWORD PTR [edi+100]
  0003c	8b 33		 mov	 esi, DWORD PTR [ebx]

; 73   :         return _Ptr == _Right._Ptr;

  0003e	3b f3		 cmp	 esi, ebx
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\algorithm

; 232  :     for (; _UFirst != _ULast; ++_UFirst) {

  00040	74 0e		 je	 SHORT $LN57@OnRender
$LL79@OnRender:
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterBase\Stl.h

; 41   : 		{((_P->*_Ptr)()); }

  00042	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]
  00045	e8 00 00 00 00	 call	 ??_9CWindow@UI@@$B3AE	; UI::CWindow::`vcall'{4}'
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\list

; 51   :         _Ptr = _Ptr->_Next;

  0004a	8b 36		 mov	 esi, DWORD PTR [esi]

; 73   :         return _Ptr == _Right._Ptr;

  0004c	3b f3		 cmp	 esi, ebx
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\algorithm

; 232  :     for (; _UFirst != _ULast; ++_UFirst) {

  0004e	75 f2		 jne	 SHORT $LL79@OnRender
$LN57@OnRender:
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\list

; 1083 :         return iterator(_Mypair._Myval2._Myhead->_Next, _STD addressof(_Mypair._Myval2));

  00050	8b 87 8c 00 00
	00		 mov	 eax, DWORD PTR [edi+140]

; 38   :     _List_unchecked_const_iterator(_Nodeptr _Pnode, const _Mylist* _Plist) noexcept : _Ptr(_Pnode) {

  00056	8b 30		 mov	 esi, DWORD PTR [eax]
  00058	89 75 f0	 mov	 DWORD PTR _itor$1$[ebp], esi
  0005b	3b f0		 cmp	 esi, eax
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonSlotWindow.cpp

; 1203 : 	for (itor = m_SlotList.begin(); itor != m_SlotList.end(); ++itor)

  0005d	0f 84 46 05 00
	00		 je	 $LN5@OnRender
$LL107@OnRender:

; 1207 : 		if (rSlot.pSlotButton)

  00063	8b 4e 6c	 mov	 ecx, DWORD PTR [esi+108]
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\list

; 151  :         return this->_Ptr->_Myval;

  00066	8d 5e 08	 lea	 ebx, DWORD PTR [esi+8]
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonSlotWindow.cpp

; 1207 : 		if (rSlot.pSlotButton)

  00069	85 c9		 test	 ecx, ecx
  0006b	74 11		 je	 SHORT $LN12@OnRender

; 1208 : 		{
; 1209 : 			rSlot.pSlotButton->SetPosition(rSlot.ixPosition + 1, rSlot.iyPosition + 19);

  0006d	8b 43 44	 mov	 eax, DWORD PTR [ebx+68]
  00070	83 c0 13	 add	 eax, 19			; 00000013H
  00073	50		 push	 eax
  00074	8b 43 40	 mov	 eax, DWORD PTR [ebx+64]
  00077	40		 inc	 eax
  00078	50		 push	 eax
  00079	e8 00 00 00 00	 call	 ?SetPosition@CWindow@UI@@QAEXJJ@Z ; UI::CWindow::SetPosition
$LN12@OnRender:

; 1210 : 		}
; 1211 : 		if (rSlot.pSignImage)

  0007e	8b 4b 68	 mov	 ecx, DWORD PTR [ebx+104]
  00081	85 c9		 test	 ecx, ecx
  00083	74 13		 je	 SHORT $LN13@OnRender

; 1212 : 		{
; 1213 : 			rSlot.pSignImage->SetPosition(rSlot.ixPosition - 7, rSlot.iyPosition + 10);

  00085	8b 43 44	 mov	 eax, DWORD PTR [ebx+68]
  00088	83 c0 0a	 add	 eax, 10			; 0000000aH
  0008b	50		 push	 eax
  0008c	8b 43 40	 mov	 eax, DWORD PTR [ebx+64]
  0008f	83 e8 07	 sub	 eax, 7
  00092	50		 push	 eax
  00093	e8 00 00 00 00	 call	 ?SetPosition@CWindow@UI@@QAEXJJ@Z ; UI::CWindow::SetPosition
$LN13@OnRender:

; 1214 : 		}
; 1215 : 
; 1216 : 		if (rSlot.pInstance)

  00098	8b 4b 54	 mov	 ecx, DWORD PTR [ebx+84]
  0009b	85 c9		 test	 ecx, ecx
  0009d	74 35		 je	 SHORT $LN14@OnRender

; 1217 : 		{
; 1218 : 			rSlot.pInstance->SetPosition(m_rect.left + rSlot.ixPosition, m_rect.top + rSlot.iyPosition);

  0009f	8b 43 44	 mov	 eax, DWORD PTR [ebx+68]
  000a2	83 ec 08	 sub	 esp, 8
  000a5	03 47 38	 add	 eax, DWORD PTR [edi+56]
  000a8	66 0f 6e c0	 movd	 xmm0, eax
  000ac	8b 43 40	 mov	 eax, DWORD PTR [ebx+64]
  000af	03 47 34	 add	 eax, DWORD PTR [edi+52]
  000b2	0f 5b c0	 cvtdq2ps xmm0, xmm0
  000b5	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  000bb	66 0f 6e c0	 movd	 xmm0, eax
  000bf	0f 5b c0	 cvtdq2ps xmm0, xmm0
  000c2	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000c7	e8 00 00 00 00	 call	 ?SetPosition@CGraphicImageInstance@@QAEXMM@Z ; CGraphicImageInstance::SetPosition

; 1219 : 			rSlot.pInstance->Render();

  000cc	8b 4b 54	 mov	 ecx, DWORD PTR [ebx+84]
  000cf	e8 00 00 00 00	 call	 ?Render@CGraphicImageInstance@@QAEXXZ ; CGraphicImageInstance::Render
$LN14@OnRender:

; 1220 : 		}
; 1221 : 
; 1222 : 		if (!rSlot.isItem)

  000d4	83 7b 18 00	 cmp	 DWORD PTR [ebx+24], 0
  000d8	8b 03		 mov	 eax, DWORD PTR [ebx]
  000da	75 2b		 jne	 SHORT $LN15@OnRender

; 1223 : 		{
; 1224 : 			if (IS_SET(rSlot.dwState, SLOT_STATE_ALWAYS_RENDER_COVER))

  000dc	a8 08		 test	 al, 8
  000de	0f 84 b4 04 00
	00		 je	 $LN4@OnRender

; 1225 : 			{
; 1226 : 				rSlot.pCoverButton->Show();

  000e4	8b 4b 60	 mov	 ecx, DWORD PTR [ebx+96]
  000e7	e8 00 00 00 00	 call	 ?Show@CWindow@UI@@QAEXXZ ; UI::CWindow::Show

; 1227 : 				rSlot.pCoverButton->SetPosition(rSlot.ixPosition, rSlot.iyPosition);

  000ec	ff 73 44	 push	 DWORD PTR [ebx+68]
  000ef	8b 4b 60	 mov	 ecx, DWORD PTR [ebx+96]
  000f2	ff 73 40	 push	 DWORD PTR [ebx+64]
  000f5	e8 00 00 00 00	 call	 ?SetPosition@CWindow@UI@@QAEXJJ@Z ; UI::CWindow::SetPosition

; 115  : 			CButton::OnRender();

  000fa	8b 4b 60	 mov	 ecx, DWORD PTR [ebx+96]
  000fd	e8 00 00 00 00	 call	 ?OnRender@CButton@UI@@MAEXXZ ; UI::CButton::OnRender

; 1228 : 				rSlot.pCoverButton->RenderButton();
; 1229 : 			}
; 1230 : 
; 1231 : 			continue;

  00102	e9 91 04 00 00	 jmp	 $LN4@OnRender
$LN15@OnRender:

; 1232 : 		}
; 1233 : 
; 1234 : 		if (IS_SET(rSlot.dwState, SLOT_STATE_DISABLE))

  00107	a8 04		 test	 al, 4
  00109	0f 84 9f 00 00
	00		 je	 $LN17@OnRender

; 1235 : 		{
; 1236 : 			CPythonGraphic::Instance().SetDiffuseColor(1.0f, 0.0f, 0.0f, 0.3f);

  0010f	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCPythonGraphic@@@@0PAVCPythonGraphic@@A ; CSingleton<CPythonGraphic>::ms_singleton
  00115	83 ec 10	 sub	 esp, 16			; 00000010H
  00118	c7 44 24 0c 9a
	99 99 3e	 mov	 DWORD PTR [esp+12], 1050253722 ; 3e99999aH
  00120	c7 44 24 08 00
	00 00 00	 mov	 DWORD PTR [esp+8], 0
  00128	c7 44 24 04 00
	00 00 00	 mov	 DWORD PTR [esp+4], 0
  00130	c7 04 24 00 00
	80 3f		 mov	 DWORD PTR [esp], 1065353216 ; 3f800000H
  00137	e8 00 00 00 00	 call	 ?SetDiffuseColor@CScreen@@QAEXMMMM@Z ; CScreen::SetDiffuseColor

; 1237 : 			CPythonGraphic::Instance().RenderBar2d(m_rect.left + rSlot.ixPosition,

  0013c	8b 4f 38	 mov	 ecx, DWORD PTR [edi+56]
  0013f	83 ec 14	 sub	 esp, 20			; 00000014H
  00142	8b 46 54	 mov	 eax, DWORD PTR [esi+84]
  00145	8b 53 44	 mov	 edx, DWORD PTR [ebx+68]
  00148	03 c1		 add	 eax, ecx
  0014a	8b 7f 34	 mov	 edi, DWORD PTR [edi+52]
  0014d	03 c2		 add	 eax, edx
  0014f	8b 5b 40	 mov	 ebx, DWORD PTR [ebx+64]
  00152	c7 44 24 10 00
	00 00 00	 mov	 DWORD PTR [esp+16], 0
  0015a	66 0f 6e c0	 movd	 xmm0, eax
  0015e	8b 46 50	 mov	 eax, DWORD PTR [esi+80]
  00161	0f 5b c0	 cvtdq2ps xmm0, xmm0
  00164	03 c7		 add	 eax, edi
  00166	03 c3		 add	 eax, ebx
  00168	f3 0f 11 44 24
	0c		 movss	 DWORD PTR [esp+12], xmm0
  0016e	66 0f 6e c0	 movd	 xmm0, eax
  00172	8d 04 11	 lea	 eax, DWORD PTR [ecx+edx]
  00175	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCPythonGraphic@@@@0PAVCPythonGraphic@@A ; CSingleton<CPythonGraphic>::ms_singleton
  0017b	0f 5b c0	 cvtdq2ps xmm0, xmm0
  0017e	f3 0f 11 44 24
	08		 movss	 DWORD PTR [esp+8], xmm0
  00184	66 0f 6e c0	 movd	 xmm0, eax
  00188	8d 04 1f	 lea	 eax, DWORD PTR [edi+ebx]
  0018b	0f 5b c0	 cvtdq2ps xmm0, xmm0
  0018e	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  00194	66 0f 6e c0	 movd	 xmm0, eax
  00198	0f 5b c0	 cvtdq2ps xmm0, xmm0
  0019b	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001a0	e8 00 00 00 00	 call	 ?RenderBar2d@CScreen@@QAEXMMMMM@Z ; CScreen::RenderBar2d
  001a5	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  001a8	8d 5e 08	 lea	 ebx, DWORD PTR [esi+8]
  001ab	8b 7d fc	 mov	 edi, DWORD PTR _this$1$[ebp]
$LN17@OnRender:

; 1238 : 				m_rect.top + rSlot.iyPosition,
; 1239 : 				m_rect.left + rSlot.ixPosition + rSlot.ixCellSize,
; 1240 : 				m_rect.top + rSlot.iyPosition + rSlot.iyCellSize);
; 1241 : 		}
; 1242 : 
; 1243 : #ifdef WJ_ENABLE_TRADABLE_ICON
; 1244 : 		if (IS_SET(rSlot.dwState, SLOT_STATE_CANT_MOUSE_EVENT))

  001ae	a8 10		 test	 al, 16			; 00000010H
  001b0	0f 84 a4 00 00
	00		 je	 $LN18@OnRender

; 1245 : 		{
; 1246 : 			CPythonGraphic::Instance().SetDiffuseColor(1.0f, 0.0f, 0.0f, 0.3f);

  001b6	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCPythonGraphic@@@@0PAVCPythonGraphic@@A ; CSingleton<CPythonGraphic>::ms_singleton
  001bc	83 ec 10	 sub	 esp, 16			; 00000010H
  001bf	c7 44 24 0c 9a
	99 99 3e	 mov	 DWORD PTR [esp+12], 1050253722 ; 3e99999aH
  001c7	c7 44 24 08 00
	00 00 00	 mov	 DWORD PTR [esp+8], 0
  001cf	c7 44 24 04 00
	00 00 00	 mov	 DWORD PTR [esp+4], 0
  001d7	c7 04 24 00 00
	80 3f		 mov	 DWORD PTR [esp], 1065353216 ; 3f800000H
  001de	e8 00 00 00 00	 call	 ?SetDiffuseColor@CScreen@@QAEXMMMM@Z ; CScreen::SetDiffuseColor

; 1247 : 			CPythonGraphic::Instance().RenderBar2d(m_rect.left + rSlot.ixPosition,

  001e3	8b 4f 38	 mov	 ecx, DWORD PTR [edi+56]
  001e6	83 ec 14	 sub	 esp, 20			; 00000014H
  001e9	0f b6 46 59	 movzx	 eax, BYTE PTR [esi+89]
  001ed	8b 53 44	 mov	 edx, DWORD PTR [ebx+68]
  001f0	8b 7f 34	 mov	 edi, DWORD PTR [edi+52]
  001f3	8b 5b 40	 mov	 ebx, DWORD PTR [ebx+64]
  001f6	c1 e0 05	 shl	 eax, 5
  001f9	03 c1		 add	 eax, ecx
  001fb	c7 44 24 10 00
	00 00 00	 mov	 DWORD PTR [esp+16], 0
  00203	03 c2		 add	 eax, edx
  00205	66 0f 6e c0	 movd	 xmm0, eax
  00209	0f b6 46 58	 movzx	 eax, BYTE PTR [esi+88]
  0020d	0f 5b c0	 cvtdq2ps xmm0, xmm0
  00210	c1 e0 05	 shl	 eax, 5
  00213	03 c7		 add	 eax, edi
  00215	03 c3		 add	 eax, ebx
  00217	f3 0f 11 44 24
	0c		 movss	 DWORD PTR [esp+12], xmm0
  0021d	66 0f 6e c0	 movd	 xmm0, eax
  00221	8d 04 11	 lea	 eax, DWORD PTR [ecx+edx]
  00224	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCPythonGraphic@@@@0PAVCPythonGraphic@@A ; CSingleton<CPythonGraphic>::ms_singleton
  0022a	0f 5b c0	 cvtdq2ps xmm0, xmm0
  0022d	f3 0f 11 44 24
	08		 movss	 DWORD PTR [esp+8], xmm0
  00233	66 0f 6e c0	 movd	 xmm0, eax
  00237	8d 04 1f	 lea	 eax, DWORD PTR [edi+ebx]
  0023a	0f 5b c0	 cvtdq2ps xmm0, xmm0
  0023d	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  00243	66 0f 6e c0	 movd	 xmm0, eax
  00247	0f 5b c0	 cvtdq2ps xmm0, xmm0
  0024a	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0024f	e8 00 00 00 00	 call	 ?RenderBar2d@CScreen@@QAEXMMMMM@Z ; CScreen::RenderBar2d
  00254	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  00257	8d 5e 08	 lea	 ebx, DWORD PTR [esi+8]
$LN18@OnRender:

; 1248 : 				m_rect.top + rSlot.iyPosition,
; 1249 : 				m_rect.left + rSlot.ixPosition + rSlot.byxPlacedItemSize * ITEM_WIDTH,
; 1250 : 				m_rect.top + rSlot.iyPosition + rSlot.byyPlacedItemSize * ITEM_HEIGHT);
; 1251 : 		}
; 1252 : 
; 1253 : 		if (IS_SET(rSlot.dwState, SLOT_STATE_UNUSABLE))

  0025a	a8 20		 test	 al, 32			; 00000020H
  0025c	0f 84 a4 00 00
	00		 je	 $LN19@OnRender

; 1254 : 		{
; 1255 : 			CPythonGraphic::Instance().SetDiffuseColor(1.0f, 1.0f, 1.0f, 0.3f);

  00262	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCPythonGraphic@@@@0PAVCPythonGraphic@@A ; CSingleton<CPythonGraphic>::ms_singleton
  00268	83 ec 10	 sub	 esp, 16			; 00000010H
  0026b	c7 44 24 0c 9a
	99 99 3e	 mov	 DWORD PTR [esp+12], 1050253722 ; 3e99999aH
  00273	c7 44 24 08 00
	00 80 3f	 mov	 DWORD PTR [esp+8], 1065353216 ; 3f800000H
  0027b	c7 44 24 04 00
	00 80 3f	 mov	 DWORD PTR [esp+4], 1065353216 ; 3f800000H
  00283	c7 04 24 00 00
	80 3f		 mov	 DWORD PTR [esp], 1065353216 ; 3f800000H
  0028a	e8 00 00 00 00	 call	 ?SetDiffuseColor@CScreen@@QAEXMMMM@Z ; CScreen::SetDiffuseColor

; 1256 : 			CPythonGraphic::Instance().RenderBar2d(m_rect.left + rSlot.ixPosition,

  0028f	8b 7d fc	 mov	 edi, DWORD PTR _this$1$[ebp]
  00292	83 ec 14	 sub	 esp, 20			; 00000014H
  00295	0f b6 46 59	 movzx	 eax, BYTE PTR [esi+89]
  00299	8b 53 44	 mov	 edx, DWORD PTR [ebx+68]
  0029c	8b 5b 40	 mov	 ebx, DWORD PTR [ebx+64]
  0029f	8b 4f 38	 mov	 ecx, DWORD PTR [edi+56]
  002a2	8b 7f 34	 mov	 edi, DWORD PTR [edi+52]
  002a5	c1 e0 05	 shl	 eax, 5
  002a8	03 c1		 add	 eax, ecx
  002aa	c7 44 24 10 00
	00 00 00	 mov	 DWORD PTR [esp+16], 0
  002b2	03 c2		 add	 eax, edx
  002b4	66 0f 6e c0	 movd	 xmm0, eax
  002b8	0f b6 46 58	 movzx	 eax, BYTE PTR [esi+88]
  002bc	0f 5b c0	 cvtdq2ps xmm0, xmm0
  002bf	c1 e0 05	 shl	 eax, 5
  002c2	03 c7		 add	 eax, edi
  002c4	03 c3		 add	 eax, ebx
  002c6	f3 0f 11 44 24
	0c		 movss	 DWORD PTR [esp+12], xmm0
  002cc	66 0f 6e c0	 movd	 xmm0, eax
  002d0	8d 04 11	 lea	 eax, DWORD PTR [ecx+edx]
  002d3	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCPythonGraphic@@@@0PAVCPythonGraphic@@A ; CSingleton<CPythonGraphic>::ms_singleton
  002d9	0f 5b c0	 cvtdq2ps xmm0, xmm0
  002dc	f3 0f 11 44 24
	08		 movss	 DWORD PTR [esp+8], xmm0
  002e2	66 0f 6e c0	 movd	 xmm0, eax
  002e6	8d 04 1f	 lea	 eax, DWORD PTR [edi+ebx]
  002e9	0f 5b c0	 cvtdq2ps xmm0, xmm0
  002ec	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  002f2	66 0f 6e c0	 movd	 xmm0, eax
  002f6	0f 5b c0	 cvtdq2ps xmm0, xmm0
  002f9	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  002fe	e8 00 00 00 00	 call	 ?RenderBar2d@CScreen@@QAEXMMMMM@Z ; CScreen::RenderBar2d
  00303	8d 5e 08	 lea	 ebx, DWORD PTR [esi+8]
$LN19@OnRender:

; 1257 : 				m_rect.top + rSlot.iyPosition,
; 1258 : 				m_rect.left + rSlot.ixPosition + rSlot.byxPlacedItemSize * ITEM_WIDTH,
; 1259 : 				m_rect.top + rSlot.iyPosition + rSlot.byyPlacedItemSize * ITEM_HEIGHT);
; 1260 : 		}
; 1261 : #endif
; 1262 : 
; 1263 : 		if (rSlot.fCoolTime != 0.0f)

  00306	f3 0f 10 43 20	 movss	 xmm0, DWORD PTR [ebx+32]
  0030b	0f 57 c9	 xorps	 xmm1, xmm1
  0030e	0f 2e c1	 ucomiss xmm0, xmm1
  00311	9f		 lahf
  00312	f6 c4 44	 test	 ah, 68			; 00000044H
  00315	0f 8b 43 01 00
	00		 jnp	 $LN140@OnRender

; 1264 : 		{
; 1265 : 			float fScaleX = 1.0f, fScaleY = 1.0f;

  0031b	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000

; 1266 : 			if (rSlot.pInstance)

  00323	8b 4b 54	 mov	 ecx, DWORD PTR [ebx+84]
  00326	0f 28 c8	 movaps	 xmm1, xmm0
  00329	85 c9		 test	 ecx, ecx
  0032b	74 20		 je	 SHORT $LN21@OnRender

; 1267 : 			{
; 1268 : 				fScaleX = rSlot.pInstance->GetScale().x;

  0032d	e8 00 00 00 00	 call	 ?GetScale@CGraphicImageInstance@@QBEABUD3DXVECTOR2@@XZ ; CGraphicImageInstance::GetScale

; 1269 : 				fScaleY = rSlot.pInstance->GetScale().y;

  00332	8b 4b 54	 mov	 ecx, DWORD PTR [ebx+84]
  00335	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  00339	f3 0f 11 45 f8	 movss	 DWORD PTR _fRadius$1$[ebp], xmm0
  0033e	e8 00 00 00 00	 call	 ?GetScale@CGraphicImageInstance@@QBEABUD3DXVECTOR2@@XZ ; CGraphicImageInstance::GetScale
  00343	f3 0f 10 4d f8	 movss	 xmm1, DWORD PTR _fRadius$1$[ebp]
  00348	f3 0f 10 40 04	 movss	 xmm0, DWORD PTR [eax+4]
$LN21@OnRender:

; 1270 : 			}
; 1271 : 
; 1272 : 			float fXCenter = (m_rect.left + rSlot.ixPosition) + 16.0f * fScaleX;

  0034d	8b 7d fc	 mov	 edi, DWORD PTR _this$1$[ebp]
  00350	8b 43 40	 mov	 eax, DWORD PTR [ebx+64]
  00353	f3 0f 59 0d 00
	00 00 00	 mulss	 xmm1, DWORD PTR __real@41800000
  0035b	03 47 34	 add	 eax, DWORD PTR [edi+52]

; 1273 : 			float fYCenter = (m_rect.top + rSlot.iyPosition) + 16.0f * fScaleY;

  0035e	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@41800000
  00366	f3 0f 11 4d f8	 movss	 DWORD PTR _fRadius$1$[ebp], xmm1
  0036b	66 0f 6e d0	 movd	 xmm2, eax
  0036f	8b 43 44	 mov	 eax, DWORD PTR [ebx+68]
  00372	03 47 38	 add	 eax, DWORD PTR [edi+56]

; 1274 : 			float fRadius = 16.0f * fScaleX;
; 1275 : 
; 1276 : 			if (!rSlot.bInverseCooltime)

  00375	80 7b 28 00	 cmp	 BYTE PTR [ebx+40], 0
  00379	0f 5b d2	 cvtdq2ps xmm2, xmm2
  0037c	66 0f 6e d8	 movd	 xmm3, eax
  00380	0f 5b db	 cvtdq2ps xmm3, xmm3
  00383	f3 0f 58 d1	 addss	 xmm2, xmm1
  00387	f3 0f 58 d8	 addss	 xmm3, xmm0
  0038b	f3 0f 11 55 e8	 movss	 DWORD PTR _fXCenter$1$[ebp], xmm2
  00390	f3 0f 11 5d ec	 movss	 DWORD PTR _fYCenter$1$[ebp], xmm3
  00395	0f 85 92 00 00
	00		 jne	 $LN22@OnRender

; 1277 : 			{
; 1278 : 				float fcurTime = CTimer::Instance().GetCurrentSecond();

  0039b	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCTimer@@@@0PAVCTimer@@A ; CSingleton<CTimer>::ms_singleton
  003a1	e8 00 00 00 00	 call	 ?GetCurrentSecond@CTimer@@QAEMXZ ; CTimer::GetCurrentSecond
  003a6	d9 5d f4	 fstp	 DWORD PTR _fcurTime$1[ebp]

; 1279 : 				float fPercentage = (fcurTime - rSlot.fStartCoolTime) / rSlot.fCoolTime;

  003a9	f3 0f 10 45 f4	 movss	 xmm0, DWORD PTR _fcurTime$1[ebp]

; 1280 : 
; 1281 : 
; 1282 : 				CPythonGraphic::Instance().RenderCoolTimeBox(fXCenter, fYCenter, fRadius, fPercentage, rSlot.cooltimeDiffuseColor);

  003ae	8d 43 2c	 lea	 eax, DWORD PTR [ebx+44]
  003b1	f3 0f 5c 43 24	 subss	 xmm0, DWORD PTR [ebx+36]
  003b6	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCPythonGraphic@@@@0PAVCPythonGraphic@@A ; CSingleton<CPythonGraphic>::ms_singleton
  003bc	50		 push	 eax
  003bd	83 ec 10	 sub	 esp, 16			; 00000010H
  003c0	f3 0f 5e 43 20	 divss	 xmm0, DWORD PTR [ebx+32]
  003c5	f3 0f 11 44 24
	0c		 movss	 DWORD PTR [esp+12], xmm0
  003cb	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR _fRadius$1$[ebp]
  003d0	f3 0f 11 44 24
	08		 movss	 DWORD PTR [esp+8], xmm0
  003d6	f3 0f 10 45 ec	 movss	 xmm0, DWORD PTR _fYCenter$1$[ebp]
  003db	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  003e1	f3 0f 10 45 e8	 movss	 xmm0, DWORD PTR _fXCenter$1$[ebp]
  003e6	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  003eb	e8 00 00 00 00	 call	 ?RenderCoolTimeBox@CPythonGraphic@@QAEXMMMMAAUD3DXCOLOR@@@Z ; CPythonGraphic::RenderCoolTimeBox

; 1283 : 
; 1284 : 				if (fcurTime - rSlot.fStartCoolTime >= rSlot.fCoolTime)

  003f0	f3 0f 10 45 f4	 movss	 xmm0, DWORD PTR _fcurTime$1[ebp]
  003f5	f3 0f 5c 43 24	 subss	 xmm0, DWORD PTR [ebx+36]
  003fa	f3 0f 10 4b 20	 movss	 xmm1, DWORD PTR [ebx+32]
  003ff	0f 2f c1	 comiss	 xmm0, xmm1
  00402	72 5d		 jb	 SHORT $LN23@OnRender

; 1285 : 				{
; 1286 : 					if ((fcurTime - rSlot.fStartCoolTime) - rSlot.fCoolTime < 1.0f)

  00404	f3 0f 5c c1	 subss	 xmm0, xmm1
  00408	f3 0f 10 0d 00
	00 00 00	 movss	 xmm1, DWORD PTR __real@3f800000
  00410	0f 2f c8	 comiss	 xmm1, xmm0
  00413	76 08		 jbe	 SHORT $LN25@OnRender

; 1287 : 						__CreateFinishCoolTimeEffect(&rSlot);

  00415	53		 push	 ebx
  00416	8b cf		 mov	 ecx, edi
  00418	e8 00 00 00 00	 call	 ?__CreateFinishCoolTimeEffect@CSlotWindow@UI@@IAEXPAUSSlot@12@@Z ; UI::CSlotWindow::__CreateFinishCoolTimeEffect
$LN25@OnRender:

; 1288 : 
; 1289 : 					rSlot.fCoolTime = 0.0f;

  0041d	c7 43 20 00 00
	00 00		 mov	 DWORD PTR [ebx+32], 0

; 1290 : 					rSlot.fStartCoolTime = 0.0f;

  00424	c7 43 24 00 00
	00 00		 mov	 DWORD PTR [ebx+36], 0

; 1291 : 				}
; 1292 : 			}

  0042b	eb 34		 jmp	 SHORT $LN23@OnRender
$LN22@OnRender:

; 1293 : 			else
; 1294 : 			{
; 1295 : 				float fPercentage = rSlot.fStartCoolTime / rSlot.fCoolTime;

  0042d	f3 0f 10 43 24	 movss	 xmm0, DWORD PTR [ebx+36]

; 1296 : 				CPythonGraphic::Instance().RenderCoolTimeBoxInverse(fXCenter, fYCenter, fRadius, fPercentage);

  00432	83 ec 10	 sub	 esp, 16			; 00000010H
  00435	f3 0f 5e 43 20	 divss	 xmm0, DWORD PTR [ebx+32]
  0043a	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCPythonGraphic@@@@0PAVCPythonGraphic@@A ; CSingleton<CPythonGraphic>::ms_singleton
  00440	f3 0f 11 44 24
	0c		 movss	 DWORD PTR [esp+12], xmm0
  00446	f3 0f 11 4c 24
	08		 movss	 DWORD PTR [esp+8], xmm1
  0044c	f3 0f 11 5c 24
	04		 movss	 DWORD PTR [esp+4], xmm3
  00452	f3 0f 11 14 24	 movss	 DWORD PTR [esp], xmm2
  00457	e8 00 00 00 00	 call	 ?RenderCoolTimeBoxInverse@CPythonGraphic@@QAEXMMMM@Z ; CPythonGraphic::RenderCoolTimeBoxInverse
  0045c	eb 03		 jmp	 SHORT $LN23@OnRender
$LN140@OnRender:

; 1257 : 				m_rect.top + rSlot.iyPosition,
; 1258 : 				m_rect.left + rSlot.ixPosition + rSlot.byxPlacedItemSize * ITEM_WIDTH,
; 1259 : 				m_rect.top + rSlot.iyPosition + rSlot.byyPlacedItemSize * ITEM_HEIGHT);
; 1260 : 		}
; 1261 : #endif
; 1262 : 
; 1263 : 		if (rSlot.fCoolTime != 0.0f)

  0045e	8b 7d fc	 mov	 edi, DWORD PTR _this$1$[ebp]
$LN23@OnRender:

; 1297 : 			}
; 1298 : 		}
; 1299 : 
; 1300 : 		if (rSlot.pCoverButton)

  00461	8b 4b 60	 mov	 ecx, DWORD PTR [ebx+96]
  00464	85 c9		 test	 ecx, ecx
  00466	74 13		 je	 SHORT $LN26@OnRender

; 1301 : 		{
; 1302 : 			rSlot.pCoverButton->SetPosition(rSlot.ixPosition, rSlot.iyPosition);

  00468	ff 73 44	 push	 DWORD PTR [ebx+68]
  0046b	ff 73 40	 push	 DWORD PTR [ebx+64]
  0046e	e8 00 00 00 00	 call	 ?SetPosition@CWindow@UI@@QAEXJJ@Z ; UI::CWindow::SetPosition

; 115  : 			CButton::OnRender();

  00473	8b 4b 60	 mov	 ecx, DWORD PTR [ebx+96]
  00476	e8 00 00 00 00	 call	 ?OnRender@CButton@UI@@MAEXXZ ; UI::CButton::OnRender
$LN26@OnRender:

; 1303 : 			rSlot.pCoverButton->RenderButton();
; 1304 : 		}
; 1305 : 
; 1306 : 		if (rSlot.pNumberLine)

  0047b	8b 4b 58	 mov	 ecx, DWORD PTR [ebx+88]
  0047e	85 c9		 test	 ecx, ecx
  00480	74 35		 je	 SHORT $LN27@OnRender

; 1307 : 		{
; 1308 : 			int ix = rSlot.byxPlacedItemSize*ITEM_WIDTH + rSlot.ixPosition - 4;
; 1309 : 			int iy = rSlot.iyPosition + rSlot.byyPlacedItemSize*ITEM_HEIGHT - 12 + 2;

  00482	0f b6 53 51	 movzx	 edx, BYTE PTR [ebx+81]
  00486	8b 43 44	 mov	 eax, DWORD PTR [ebx+68]
  00489	c1 e2 05	 shl	 edx, 5
  0048c	83 c2 f6	 add	 edx, -10		; fffffff6H
  0048f	03 c2		 add	 eax, edx
  00491	0f b6 53 50	 movzx	 edx, BYTE PTR [ebx+80]

; 1310 : 			rSlot.pNumberLine->SetPosition(ix, iy);

  00495	50		 push	 eax
  00496	8b 43 40	 mov	 eax, DWORD PTR [ebx+64]
  00499	c1 e2 05	 shl	 edx, 5
  0049c	83 c2 fc	 add	 edx, -4			; fffffffcH
  0049f	03 c2		 add	 eax, edx
  004a1	50		 push	 eax
  004a2	e8 00 00 00 00	 call	 ?SetPosition@CWindow@UI@@QAEXJJ@Z ; UI::CWindow::SetPosition

; 1311 : 			rSlot.pNumberLine->Update();

  004a7	8b 4b 58	 mov	 ecx, DWORD PTR [ebx+88]
  004aa	e8 00 00 00 00	 call	 ?Update@CWindow@UI@@QAEXXZ ; UI::CWindow::Update

; 1312 : 			rSlot.pNumberLine->Render();

  004af	8b 4b 58	 mov	 ecx, DWORD PTR [ebx+88]
  004b2	e8 00 00 00 00	 call	 ?Render@CWindow@UI@@QAEXXZ ; UI::CWindow::Render
$LN27@OnRender:

; 1313 : 		}
; 1314 : 
; 1315 : 		if (rSlot.pFinishCoolTimeEffect)

  004b7	8b 4b 6c	 mov	 ecx, DWORD PTR [ebx+108]
  004ba	85 c9		 test	 ecx, ecx
  004bc	74 1b		 je	 SHORT $LN28@OnRender

; 1316 : 		{
; 1317 : 			rSlot.pFinishCoolTimeEffect->SetPosition(rSlot.ixPosition, rSlot.iyPosition);

  004be	ff 73 44	 push	 DWORD PTR [ebx+68]
  004c1	ff 73 40	 push	 DWORD PTR [ebx+64]
  004c4	e8 00 00 00 00	 call	 ?SetPosition@CWindow@UI@@QAEXJJ@Z ; UI::CWindow::SetPosition

; 1318 : 			rSlot.pFinishCoolTimeEffect->Update();

  004c9	8b 4b 6c	 mov	 ecx, DWORD PTR [ebx+108]
  004cc	e8 00 00 00 00	 call	 ?Update@CWindow@UI@@QAEXXZ ; UI::CWindow::Update

; 1319 : 			rSlot.pFinishCoolTimeEffect->Render();

  004d1	8b 4b 6c	 mov	 ecx, DWORD PTR [ebx+108]
  004d4	e8 00 00 00 00	 call	 ?Render@CWindow@UI@@QAEXXZ ; UI::CWindow::Render
$LN28@OnRender:

; 1320 : 		}
; 1321 : 
; 1322 : #ifdef ENABLE_ACCE_SYSTEM
; 1323 : 		{
; 1324 : 			int iX = m_rect.left + rSlot.ixPosition, iY = m_rect.top + rSlot.iyPosition, iItemYSize = rSlot.byyPlacedItemSize;

  004d9	8b 47 34	 mov	 eax, DWORD PTR [edi+52]
  004dc	03 43 40	 add	 eax, DWORD PTR [ebx+64]
  004df	89 45 e8	 mov	 DWORD PTR _iX$1$[ebp], eax
  004e2	8b 47 38	 mov	 eax, DWORD PTR [edi+56]
  004e5	8d 7b 70	 lea	 edi, DWORD PTR [ebx+112]
  004e8	03 43 44	 add	 eax, DWORD PTR [ebx+68]
  004eb	33 c9		 xor	 ecx, ecx
  004ed	8b 75 e8	 mov	 esi, DWORD PTR _iX$1$[ebp]
  004f0	89 45 f8	 mov	 DWORD PTR _iY$1$[ebp], eax
  004f3	0f b6 43 51	 movzx	 eax, BYTE PTR [ebx+81]
  004f7	89 45 ec	 mov	 DWORD PTR _iItemYSize$1$[ebp], eax
  004fa	89 4d f4	 mov	 DWORD PTR _i$1$[ebp], ecx
  004fd	0f 1f 00	 npad	 3
$LL9@OnRender:

; 1326 : 			{
; 1327 : 				auto& pEff = rSlot.pActiveSlotEffect[i];
; 1328 : 				if ((pEff) && (iItemYSize == i + 1))

  00500	8b 17		 mov	 edx, DWORD PTR [edi]
  00502	85 d2		 test	 edx, edx
  00504	74 2b		 je	 SHORT $LN7@OnRender
  00506	8d 41 01	 lea	 eax, DWORD PTR [ecx+1]
  00509	39 45 ec	 cmp	 DWORD PTR _iItemYSize$1$[ebp], eax
  0050c	75 23		 jne	 SHORT $LN7@OnRender

; 1329 : 				{
; 1330 : 					pEff->Show();

  0050e	8b ca		 mov	 ecx, edx
  00510	e8 00 00 00 00	 call	 ?Show@CWindow@UI@@QAEXXZ ; UI::CWindow::Show

; 1331 : 					pEff->SetPosition(iX, iY);

  00515	ff 75 f8	 push	 DWORD PTR _iY$1$[ebp]
  00518	8b 0f		 mov	 ecx, DWORD PTR [edi]
  0051a	56		 push	 esi
  0051b	e8 00 00 00 00	 call	 ?SetPosition@CWindow@UI@@QAEXJJ@Z ; UI::CWindow::SetPosition

; 1332 : 					pEff->Update();

  00520	8b 0f		 mov	 ecx, DWORD PTR [edi]
  00522	e8 00 00 00 00	 call	 ?Update@CWindow@UI@@QAEXXZ ; UI::CWindow::Update

; 1333 : 					pEff->Render();

  00527	8b 0f		 mov	 ecx, DWORD PTR [edi]
  00529	e8 00 00 00 00	 call	 ?Render@CWindow@UI@@QAEXXZ ; UI::CWindow::Render
  0052e	8b 4d f4	 mov	 ecx, DWORD PTR _i$1$[ebp]
$LN7@OnRender:

; 1325 : 			for (int i = 0; i < 3; ++i)

  00531	41		 inc	 ecx
  00532	83 c7 04	 add	 edi, 4
  00535	89 4d f4	 mov	 DWORD PTR _i$1$[ebp], ecx
  00538	83 f9 03	 cmp	 ecx, 3
  0053b	7c c3		 jl	 SHORT $LL9@OnRender

; 1334 : 				}
; 1335 : 			}
; 1336 : 		}
; 1337 : #endif
; 1338 : 
; 1339 : 		if (rSlot.bActive)

  0053d	83 7b 3c 00	 cmp	 DWORD PTR [ebx+60], 0
  00541	8b 75 f0	 mov	 esi, DWORD PTR _itor$1$[ebp]
  00544	74 4f		 je	 SHORT $LN141@OnRender

; 1340 : 		{
; 1341 : #ifdef WJ_ENABLE_PICKUP_ITEM_EFFECT
; 1342 : 			WORD slotSize = max(0, rSlot.byyPlacedItemSize - 1);

  00546	8a 4b 51	 mov	 cl, BYTE PTR [ebx+81]
  00549	0f b6 c1	 movzx	 eax, cl
  0054c	83 e8 01	 sub	 eax, 1
  0054f	79 04		 jns	 SHORT $LN33@OnRender
  00551	33 c0		 xor	 eax, eax
  00553	eb 08		 jmp	 SHORT $LN34@OnRender
$LN33@OnRender:
  00555	0f b6 c1	 movzx	 eax, cl
  00558	66 48		 dec	 ax
  0055a	0f b7 c0	 movzx	 eax, ax
$LN34@OnRender:

; 1343 : 
; 1344 : 			if (m_pSlotActiveEffect[slotSize])

  0055d	8b 7d fc	 mov	 edi, DWORD PTR _this$1$[ebp]
  00560	0f b7 c0	 movzx	 eax, ax
  00563	89 45 e8	 mov	 DWORD PTR tv1397[ebp], eax
  00566	8b 8c 87 b0 00
	00 00		 mov	 ecx, DWORD PTR [edi+eax*4+176]
  0056d	85 c9		 test	 ecx, ecx
  0056f	74 27		 je	 SHORT $LN4@OnRender

; 1345 : 			{
; 1346 : 				int ix = m_rect.left + rSlot.ixPosition;
; 1347 : 				int iy = m_rect.top + rSlot.iyPosition;

  00571	8b 47 38	 mov	 eax, DWORD PTR [edi+56]
  00574	03 43 44	 add	 eax, DWORD PTR [ebx+68]

; 1348 : 				m_pSlotActiveEffect[slotSize]->SetPosition(ix, iy);

  00577	50		 push	 eax
  00578	8b 47 34	 mov	 eax, DWORD PTR [edi+52]
  0057b	03 43 40	 add	 eax, DWORD PTR [ebx+64]
  0057e	50		 push	 eax
  0057f	e8 00 00 00 00	 call	 ?SetPosition@CWindow@UI@@QAEXJJ@Z ; UI::CWindow::SetPosition

; 1349 : 				m_pSlotActiveEffect[slotSize]->Render();

  00584	8b 4d e8	 mov	 ecx, DWORD PTR tv1397[ebp]
  00587	8b 8c 8f b0 00
	00 00		 mov	 ecx, DWORD PTR [edi+ecx*4+176]
  0058e	e8 00 00 00 00	 call	 ?Render@CWindow@UI@@QAEXXZ ; UI::CWindow::Render
  00593	eb 03		 jmp	 SHORT $LN4@OnRender
$LN141@OnRender:

; 1334 : 				}
; 1335 : 			}
; 1336 : 		}
; 1337 : #endif
; 1338 : 
; 1339 : 		if (rSlot.bActive)

  00595	8b 7d fc	 mov	 edi, DWORD PTR _this$1$[ebp]
$LN4@OnRender:
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\list

; 165  :         this->_Ptr = this->_Ptr->_Next;

  00598	8b 36		 mov	 esi, DWORD PTR [esi]
  0059a	89 75 f0	 mov	 DWORD PTR _itor$1$[ebp], esi

; 198  :         return this->_Ptr == _Right._Ptr;

  0059d	3b b7 8c 00 00
	00		 cmp	 esi, DWORD PTR [edi+140]
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonSlotWindow.cpp

; 1203 : 	for (itor = m_SlotList.begin(); itor != m_SlotList.end(); ++itor)

  005a3	0f 85 ba fa ff
	ff		 jne	 $LL107@OnRender
$LN5@OnRender:

; 1350 : 			}
; 1351 : #else
; 1352 : 			if (m_pSlotActiveEffect)
; 1353 : 			{
; 1354 : 				int ix = m_rect.left + rSlot.ixPosition;
; 1355 : 				int iy = m_rect.top + rSlot.iyPosition;
; 1356 : 				m_pSlotActiveEffect->SetPosition(ix, iy);
; 1357 : 				m_pSlotActiveEffect->Render();
; 1358 : 			}
; 1359 : #endif
; 1360 : 		}
; 1361 : 	}
; 1362 : 
; 1363 : 	RenderLockedSlot();

  005a9	8b cf		 mov	 ecx, edi
  005ab	e8 00 00 00 00	 call	 ?RenderLockedSlot@CSlotWindow@UI@@IAEXXZ ; UI::CSlotWindow::RenderLockedSlot
  005b0	5f		 pop	 edi
  005b1	5e		 pop	 esi
  005b2	5b		 pop	 ebx

; 1364 : }

  005b3	8b e5		 mov	 esp, ebp
  005b5	5d		 pop	 ebp
  005b6	c3		 ret	 0
?OnRender@CSlotWindow@UI@@MAEXXZ ENDP			; UI::CSlotWindow::OnRender
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonSlotWindow.cpp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\deque
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\deque
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonSlotWindow.cpp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonSlotWindow.cpp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\deque
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonSlotWindow.cpp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\deque
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonSlotWindow.cpp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\deque
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonSlotWindow.cpp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\deque
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ?OnUpdate@CSlotWindow@UI@@MAEXXZ
_TEXT	SEGMENT
_itor$1$sroa$219$1$ = -12				; size = 4
_pSlot$2 = -8						; size = 4
_this$1$ = -4						; size = 4
?OnUpdate@CSlotWindow@UI@@MAEXXZ PROC			; UI::CSlotWindow::OnUpdate, COMDAT
; _this$ = ecx

; 1130 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	8b f9		 mov	 edi, ecx
  0000b	89 7d fc	 mov	 DWORD PTR _this$1$[ebp], edi
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory

; 1099 :             _Myproxy = _Parent->_Myproxy;

  0000e	8b 8f c4 00 00
	00		 mov	 ecx, DWORD PTR [edi+196]
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\deque

; 253  :     _Deque_const_iterator(_Size_type _Off, const _Container_base12* _Pdeque) noexcept : _Myoff(_Off) {

  00014	8b 9f d0 00 00
	00		 mov	 ebx, DWORD PTR [edi+208]
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory

; 1099 :             _Myproxy = _Parent->_Myproxy;

  0001a	89 4d f4	 mov	 DWORD PTR _itor$1$sroa$219$1$[ebp], ecx
  0001d	0f 1f 00	 npad	 3
$LL86@OnUpdate:
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\deque

; 897  :         return iterator(_Myoff() + _Mysize(), _STD addressof(_Get_data()));

  00020	8b 87 d4 00 00
	00		 mov	 eax, DWORD PTR [edi+212]
  00026	03 87 d0 00 00
	00		 add	 eax, DWORD PTR [edi+208]

; 348  :         return this->_Myoff == _Right._Myoff;

  0002c	3b d8		 cmp	 ebx, eax
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonSlotWindow.cpp

; 1131 : 	for (std::deque<DWORD>::iterator itor = m_ReserveDestroyEffectDeque.begin(); itor != m_ReserveDestroyEffectDeque.end(); ++itor)

  0002e	74 69		 je	 SHORT $LN3@OnUpdate
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory

; 1107 :         return _Myproxy ? _Myproxy->_Mycont : nullptr;

  00030	85 c9		 test	 ecx, ecx
  00032	74 04		 je	 SHORT $LN59@OnUpdate
  00034	8b 09		 mov	 ecx, DWORD PTR [ecx]
  00036	eb 02		 jmp	 SHORT $LN60@OnUpdate
$LN59@OnUpdate:
  00038	33 c9		 xor	 ecx, ecx
$LN60@OnUpdate:
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonSlotWindow.cpp

; 1136 : 		if (!GetSlotPointer(dwSlotIndex, &pSlot))

  0003a	8d 45 f8	 lea	 eax, DWORD PTR _pSlot$2[ebp]
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\deque

; 559  :         return (_Off / _Block_size) & (_Mapsize - 1);

  0003d	8b d3		 mov	 edx, ebx
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonSlotWindow.cpp

; 1136 : 		if (!GetSlotPointer(dwSlotIndex, &pSlot))

  0003f	50		 push	 eax
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\deque

; 559  :         return (_Off / _Block_size) & (_Mapsize - 1);

  00040	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  00043	48		 dec	 eax
  00044	c1 ea 02	 shr	 edx, 2
  00047	23 d0		 and	 edx, eax
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonSlotWindow.cpp

; 1136 : 		if (!GetSlotPointer(dwSlotIndex, &pSlot))

  00049	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\deque

; 266  :         _Size_type _Off   = _Myoff % _Block_size;

  0004c	8b cb		 mov	 ecx, ebx
  0004e	83 e1 03	 and	 ecx, 3
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonSlotWindow.cpp

; 1136 : 		if (!GetSlotPointer(dwSlotIndex, &pSlot))

  00051	8b 04 90	 mov	 eax, DWORD PTR [eax+edx*4]
  00054	ff 34 88	 push	 DWORD PTR [eax+ecx*4]
  00057	8b cf		 mov	 ecx, edi
  00059	e8 00 00 00 00	 call	 ?GetSlotPointer@CSlotWindow@UI@@IAEHKPAPAUSSlot@12@@Z ; UI::CSlotWindow::GetSlotPointer
  0005e	85 c0		 test	 eax, eax
  00060	74 31		 je	 SHORT $LN2@OnUpdate

; 1137 : 			continue;
; 1138 : 
; 1139 : 		__DestroyFinishCoolTimeEffect(pSlot);

  00062	8b 75 f8	 mov	 esi, DWORD PTR _pSlot$2[ebp]
  00065	8b cf		 mov	 ecx, edi
  00067	56		 push	 esi
  00068	e8 00 00 00 00	 call	 ?__DestroyFinishCoolTimeEffect@CSlotWindow@UI@@IAEXPAUSSlot@12@@Z ; UI::CSlotWindow::__DestroyFinishCoolTimeEffect

; 1140 : 
; 1141 : #ifdef ENABLE_ACCE_SYSTEM
; 1142 : 		for (auto& pEff : pSlot->pActiveSlotEffect)

  0006d	83 c6 70	 add	 esi, 112		; 00000070H
  00070	8d 7e 0c	 lea	 edi, DWORD PTR [esi+12]
  00073	3b f7		 cmp	 esi, edi
  00075	74 19		 je	 SHORT $LN93@OnUpdate
$LL7@OnUpdate:

; 1143 : 		{
; 1144 : 			if (pEff)

  00077	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00079	85 c9		 test	 ecx, ecx
  0007b	74 0c		 je	 SHORT $LN5@OnUpdate

; 1145 : 			{
; 1146 : 				delete pEff;

  0007d	8b 01		 mov	 eax, DWORD PTR [ecx]
  0007f	6a 01		 push	 1
  00081	ff 10		 call	 DWORD PTR [eax]

; 1147 : 				pEff = NULL;

  00083	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], 0
$LN5@OnUpdate:

; 1140 : 
; 1141 : #ifdef ENABLE_ACCE_SYSTEM
; 1142 : 		for (auto& pEff : pSlot->pActiveSlotEffect)

  00089	83 c6 04	 add	 esi, 4
  0008c	3b f7		 cmp	 esi, edi
  0008e	75 e7		 jne	 SHORT $LL7@OnUpdate
$LN93@OnUpdate:
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\deque

; 281  :         ++_Myoff;

  00090	8b 7d fc	 mov	 edi, DWORD PTR _this$1$[ebp]
$LN2@OnUpdate:
  00093	8b 4d f4	 mov	 ecx, DWORD PTR _itor$1$sroa$219$1$[ebp]
  00096	43		 inc	 ebx
  00097	eb 87		 jmp	 SHORT $LL86@OnUpdate
$LN3@OnUpdate:

; 1332 :         _Tidy();

  00099	8d 8f c4 00 00
	00		 lea	 ecx, DWORD PTR [edi+196]
  0009f	e8 00 00 00 00	 call	 ?_Tidy@?$deque@KV?$allocator@K@std@@@std@@AAEXXZ ; std::deque<unsigned long,std::allocator<unsigned long> >::_Tidy
  000a4	8d b7 b0 00 00
	00		 lea	 esi, DWORD PTR [edi+176]
  000aa	bf 03 00 00 00	 mov	 edi, 3
  000af	90		 npad	 1
$LL10@OnUpdate:
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonSlotWindow.cpp

; 1157 : 		if (m_pSlotActiveEffect[effectSize])

  000b0	8b 0e		 mov	 ecx, DWORD PTR [esi]
  000b2	85 c9		 test	 ecx, ecx
  000b4	74 05		 je	 SHORT $LN8@OnUpdate

; 1158 : 		{
; 1159 : 			m_pSlotActiveEffect[effectSize]->Update();

  000b6	e8 00 00 00 00	 call	 ?Update@CWindow@UI@@QAEXXZ ; UI::CWindow::Update
$LN8@OnUpdate:

; 1148 : 			}
; 1149 : 		}
; 1150 : #endif
; 1151 : 	}
; 1152 : 	m_ReserveDestroyEffectDeque.clear();
; 1153 : 
; 1154 : #ifdef WJ_ENABLE_PICKUP_ITEM_EFFECT
; 1155 : 	for (int effectSize = 0; effectSize < 3; ++effectSize)

  000bb	83 c6 04	 add	 esi, 4
  000be	83 ef 01	 sub	 edi, 1
  000c1	75 ed		 jne	 SHORT $LL10@OnUpdate

; 1160 : 		}
; 1161 : 	}
; 1162 : #else
; 1163 : 	if (m_pSlotActiveEffect)
; 1164 : 		m_pSlotActiveEffect->Update();
; 1165 : #endif
; 1166 : }

  000c3	5f		 pop	 edi
  000c4	5e		 pop	 esi
  000c5	5b		 pop	 ebx
  000c6	8b e5		 mov	 esp, ebp
  000c8	5d		 pop	 ebp
  000c9	c3		 ret	 0
?OnUpdate@CSlotWindow@UI@@MAEXXZ ENDP			; UI::CSlotWindow::OnUpdate
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ?__DestroyBaseImage@CSlotWindow@UI@@IAEXXZ
_TEXT	SEGMENT
?__DestroyBaseImage@CSlotWindow@UI@@IAEXXZ PROC		; UI::CSlotWindow::__DestroyBaseImage, COMDAT
; _this$ = ecx

; 1808 : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 1809 : 	if (m_pBaseImageInstance)

  00003	8b 86 a8 00 00
	00		 mov	 eax, DWORD PTR [esi+168]
  00009	85 c0		 test	 eax, eax
  0000b	74 13		 je	 SHORT $LN2@DestroyBas

; 1810 : 	{
; 1811 : 		CGraphicImageInstance::Delete(m_pBaseImageInstance);

  0000d	50		 push	 eax
  0000e	e8 00 00 00 00	 call	 ?Delete@CGraphicImageInstance@@SAXPAV1@@Z ; CGraphicImageInstance::Delete
  00013	83 c4 04	 add	 esp, 4

; 1812 : 		m_pBaseImageInstance = NULL;

  00016	c7 86 a8 00 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+168], 0
$LN2@DestroyBas:

; 1813 : 	}
; 1814 : }

  00020	5e		 pop	 esi
  00021	c3		 ret	 0
?__DestroyBaseImage@CSlotWindow@UI@@IAEXXZ ENDP		; UI::CSlotWindow::__DestroyBaseImage
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ?__DestroyFinishCoolTimeEffect@CSlotWindow@UI@@IAEXPAUSSlot@12@@Z
_TEXT	SEGMENT
_pSlot$ = 8						; size = 4
?__DestroyFinishCoolTimeEffect@CSlotWindow@UI@@IAEXPAUSSlot@12@@Z PROC ; UI::CSlotWindow::__DestroyFinishCoolTimeEffect, COMDAT
; _this$ = ecx

; 1799 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 1800 : 	if (pSlot->pFinishCoolTimeEffect)

  00004	8b 75 08	 mov	 esi, DWORD PTR _pSlot$[ebp]
  00007	8b 4e 6c	 mov	 ecx, DWORD PTR [esi+108]
  0000a	85 c9		 test	 ecx, ecx
  0000c	74 0d		 je	 SHORT $LN2@DestroyFin

; 1801 : 	{
; 1802 : 		delete pSlot->pFinishCoolTimeEffect;

  0000e	8b 01		 mov	 eax, DWORD PTR [ecx]
  00010	6a 01		 push	 1
  00012	ff 10		 call	 DWORD PTR [eax]

; 1803 : 		pSlot->pFinishCoolTimeEffect = NULL;

  00014	c7 46 6c 00 00
	00 00		 mov	 DWORD PTR [esi+108], 0
$LN2@DestroyFin:
  0001b	5e		 pop	 esi

; 1804 : 	}
; 1805 : }

  0001c	5d		 pop	 ebp
  0001d	c2 04 00	 ret	 4
?__DestroyFinishCoolTimeEffect@CSlotWindow@UI@@IAEXPAUSSlot@12@@Z ENDP ; UI::CSlotWindow::__DestroyFinishCoolTimeEffect
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ?__DestroySlotEnableEffect@CSlotWindow@UI@@IAEXH@Z
_TEXT	SEGMENT
_activeSlot$ = 8					; size = 4
?__DestroySlotEnableEffect@CSlotWindow@UI@@IAEXH@Z PROC	; UI::CSlotWindow::__DestroySlotEnableEffect, COMDAT
; _this$ = ecx

; 1782 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1783 : #ifdef WJ_ENABLE_PICKUP_ITEM_EFFECT
; 1784 : 	if (m_pSlotActiveEffect[activeSlot])

  00003	8b 45 08	 mov	 eax, DWORD PTR _activeSlot$[ebp]
  00006	56		 push	 esi
  00007	8d 34 81	 lea	 esi, DWORD PTR [ecx+eax*4]
  0000a	8b 8e b0 00 00
	00		 mov	 ecx, DWORD PTR [esi+176]
  00010	85 c9		 test	 ecx, ecx
  00012	74 10		 je	 SHORT $LN2@DestroySlo

; 1785 : 	{
; 1786 : 		delete m_pSlotActiveEffect[activeSlot];

  00014	8b 01		 mov	 eax, DWORD PTR [ecx]
  00016	6a 01		 push	 1
  00018	ff 10		 call	 DWORD PTR [eax]

; 1787 : 		m_pSlotActiveEffect[activeSlot] = NULL;

  0001a	c7 86 b0 00 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+176], 0
$LN2@DestroySlo:
  00024	5e		 pop	 esi

; 1788 : 	}
; 1789 : #else
; 1790 : 	if (m_pSlotActiveEffect)
; 1791 : 	{
; 1792 : 		delete m_pSlotActiveEffect;
; 1793 : 		m_pSlotActiveEffect = NULL;
; 1794 : 	}
; 1795 : #endif
; 1796 : }

  00025	5d		 pop	 ebp
  00026	c2 04 00	 ret	 4
?__DestroySlotEnableEffect@CSlotWindow@UI@@IAEXH@Z ENDP	; UI::CSlotWindow::__DestroySlotEnableEffect
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ?__DestroyToggleSlotImage@CSlotWindow@UI@@IAEXXZ
_TEXT	SEGMENT
?__DestroyToggleSlotImage@CSlotWindow@UI@@IAEXXZ PROC	; UI::CSlotWindow::__DestroyToggleSlotImage, COMDAT
; _this$ = ecx

; 1769 : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 1770 : 	if (m_pToggleSlotImage)

  00003	8b 8e ac 00 00
	00		 mov	 ecx, DWORD PTR [esi+172]
  00009	85 c9		 test	 ecx, ecx
  0000b	74 10		 je	 SHORT $LN2@DestroyTog

; 1771 : 	{
; 1772 : 		delete m_pToggleSlotImage;

  0000d	8b 01		 mov	 eax, DWORD PTR [ecx]
  0000f	6a 01		 push	 1
  00011	ff 10		 call	 DWORD PTR [eax]

; 1773 : 		m_pToggleSlotImage = NULL;

  00013	c7 86 ac 00 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+172], 0
$LN2@DestroyTog:

; 1774 : 	}
; 1775 : }

  0001d	5e		 pop	 esi
  0001e	c3		 ret	 0
?__DestroyToggleSlotImage@CSlotWindow@UI@@IAEXXZ ENDP	; UI::CSlotWindow::__DestroyToggleSlotImage
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ?__CreateBaseImage@CSlotWindow@UI@@IAEXPBDMMMM@Z
_TEXT	SEGMENT
_c_szFileName$ = 8					; size = 4
_fr$ = 12						; size = 4
_fg$ = 16						; size = 4
_fb$ = 20						; size = 4
_fa$ = 24						; size = 4
?__CreateBaseImage@CSlotWindow@UI@@IAEXPBDMMMM@Z PROC	; UI::CSlotWindow::__CreateBaseImage, COMDAT
; _this$ = ecx

; 1716 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	57		 push	 edi
  00005	8b f9		 mov	 edi, ecx

; 1717 : 	__DestroyBaseImage();

  00007	e8 00 00 00 00	 call	 ?__DestroyBaseImage@CSlotWindow@UI@@IAEXXZ ; UI::CSlotWindow::__DestroyBaseImage

; 1718 : 
; 1719 : 	CGraphicImage * pImage = (CGraphicImage *)CResourceManager::Instance().GetResourcePointer(c_szFileName);

  0000c	ff 75 08	 push	 DWORD PTR _c_szFileName$[ebp]
  0000f	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCResourceManager@@@@0PAVCResourceManager@@A ; CSingleton<CResourceManager>::ms_singleton
  00015	e8 00 00 00 00	 call	 ?GetResourcePointer@CResourceManager@@QAEPAVCResource@@PBD@Z ; CResourceManager::GetResourcePointer
  0001a	8b f0		 mov	 esi, eax

; 1720 : 	m_pBaseImageInstance = CGraphicImageInstance::New();

  0001c	e8 00 00 00 00	 call	 ?New@CGraphicImageInstance@@SAPAV1@XZ ; CGraphicImageInstance::New

; 1721 : 	m_pBaseImageInstance->SetImagePointer(pImage);

  00021	56		 push	 esi
  00022	8b c8		 mov	 ecx, eax
  00024	89 87 a8 00 00
	00		 mov	 DWORD PTR [edi+168], eax
  0002a	e8 00 00 00 00	 call	 ?SetImagePointer@CGraphicImageInstance@@QAEXPAVCGraphicImage@@@Z ; CGraphicImageInstance::SetImagePointer

; 1722 : 	m_pBaseImageInstance->SetDiffuseColor(fr, fg, fb, fa);

  0002f	f3 0f 10 45 18	 movss	 xmm0, DWORD PTR _fa$[ebp]
  00034	83 ec 10	 sub	 esp, 16			; 00000010H
  00037	8b 8f a8 00 00
	00		 mov	 ecx, DWORD PTR [edi+168]
  0003d	f3 0f 11 44 24
	0c		 movss	 DWORD PTR [esp+12], xmm0
  00043	f3 0f 10 45 14	 movss	 xmm0, DWORD PTR _fb$[ebp]
  00048	f3 0f 11 44 24
	08		 movss	 DWORD PTR [esp+8], xmm0
  0004e	f3 0f 10 45 10	 movss	 xmm0, DWORD PTR _fg$[ebp]
  00053	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  00059	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR _fr$[ebp]
  0005e	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00063	e8 00 00 00 00	 call	 ?SetDiffuseColor@CGraphicImageInstance@@QAEXMMMM@Z ; CGraphicImageInstance::SetDiffuseColor

; 1723 : 	m_pBaseImageInstance->SetScale(m_fScaleX, m_fScaleY);

  00068	f3 0f 10 87 c0
	00 00 00	 movss	 xmm0, DWORD PTR [edi+192]
  00070	83 ec 08	 sub	 esp, 8
  00073	8b 8f a8 00 00
	00		 mov	 ecx, DWORD PTR [edi+168]
  00079	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  0007f	f3 0f 10 87 bc
	00 00 00	 movss	 xmm0, DWORD PTR [edi+188]
  00087	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0008c	e8 00 00 00 00	 call	 ?SetScale@CGraphicImageInstance@@QAEXMM@Z ; CGraphicImageInstance::SetScale
  00091	5f		 pop	 edi
  00092	5e		 pop	 esi

; 1724 : }

  00093	5d		 pop	 ebp
  00094	c2 14 00	 ret	 20			; 00000014H
?__CreateBaseImage@CSlotWindow@UI@@IAEXPBDMMMM@Z ENDP	; UI::CSlotWindow::__CreateBaseImage
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ?__CreateFinishCoolTimeEffect@CSlotWindow@UI@@IAEXPAUSSlot@12@@Z
_TEXT	SEGMENT
_this$1$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
$T2 = 8							; size = 4
_pSlot$ = 8						; size = 4
?__CreateFinishCoolTimeEffect@CSlotWindow@UI@@IAEXPAUSSlot@12@@Z PROC ; UI::CSlotWindow::__CreateFinishCoolTimeEffect, COMDAT
; _this$ = ecx

; 1692 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?__CreateFinishCoolTimeEffect@CSlotWindow@UI@@IAEXPAUSSlot@12@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	53		 push	 ebx
  00013	56		 push	 esi
  00014	57		 push	 edi
  00015	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001a	33 c5		 xor	 eax, ebp
  0001c	50		 push	 eax
  0001d	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00020	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00026	8b c1		 mov	 eax, ecx
  00028	89 45 f0	 mov	 DWORD PTR _this$1$[ebp], eax

; 1693 : 	__DestroyFinishCoolTimeEffect(pSlot);

  0002b	8b 5d 08	 mov	 ebx, DWORD PTR _pSlot$[ebp]
  0002e	53		 push	 ebx
  0002f	e8 00 00 00 00	 call	 ?__DestroyFinishCoolTimeEffect@CSlotWindow@UI@@IAEXPAUSSlot@12@@Z ; UI::CSlotWindow::__DestroyFinishCoolTimeEffect

; 1694 : 
; 1695 : 	CAniImageBox * pFinishCoolTimeEffect = new CCoolTimeFinishEffect(this, pSlot->dwSlotNumber);

  00034	68 98 00 00 00	 push	 152			; 00000098H
  00039	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0003e	8b f8		 mov	 edi, eax
  00040	83 c4 04	 add	 esp, 4
  00043	89 7d 08	 mov	 DWORD PTR $T2[ebp], edi
  00046	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0004d	85 ff		 test	 edi, edi
  0004f	74 20		 je	 SHORT $LN3@CreateFini
  00051	8b 73 04	 mov	 esi, DWORD PTR [ebx+4]

; 178  : 		CCoolTimeFinishEffect(CSlotWindow * pParent, DWORD dwSlotIndex) : CAniImageBox(NULL)

  00054	8b cf		 mov	 ecx, edi
  00056	6a 00		 push	 0
  00058	e8 00 00 00 00	 call	 ??0CAniImageBox@UI@@QAE@PAU_object@@@Z ; UI::CAniImageBox::CAniImageBox

; 179  : 		{
; 180  : 			m_pParent = pParent;

  0005d	8b 45 f0	 mov	 eax, DWORD PTR _this$1$[ebp]
  00060	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], OFFSET ??_7CCoolTimeFinishEffect@CSlotWindow@UI@@6B@
  00066	89 47 60	 mov	 DWORD PTR [edi+96], eax

; 181  : 			m_dwSlotIndex = dwSlotIndex;

  00069	89 b7 94 00 00
	00		 mov	 DWORD PTR [edi+148], esi

; 1694 : 
; 1695 : 	CAniImageBox * pFinishCoolTimeEffect = new CCoolTimeFinishEffect(this, pSlot->dwSlotNumber);

  0006f	eb 02		 jmp	 SHORT $LN4@CreateFini
$LN3@CreateFini:
  00071	33 ff		 xor	 edi, edi
$LN4@CreateFini:

; 1696 : 	pFinishCoolTimeEffect->AppendImage("d:/ymir work/ui/public/slotfinishcooltimeeffect/00.sub");

  00073	83 ec 10	 sub	 esp, 16			; 00000010H
  00076	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0007d	8b cf		 mov	 ecx, edi
  0007f	c7 44 24 0c 00
	00 80 3f	 mov	 DWORD PTR [esp+12], 1065353216 ; 3f800000H
  00087	c7 44 24 08 00
	00 80 3f	 mov	 DWORD PTR [esp+8], 1065353216 ; 3f800000H
  0008f	c7 44 24 04 00
	00 80 3f	 mov	 DWORD PTR [esp+4], 1065353216 ; 3f800000H
  00097	c7 04 24 00 00
	80 3f		 mov	 DWORD PTR [esp], 1065353216 ; 3f800000H
  0009e	68 00 00 00 00	 push	 OFFSET ??_C@_0DH@EECLJILE@d?3?1ymir?5work?1ui?1public?1slotfini@
  000a3	e8 00 00 00 00	 call	 ?AppendImage@CAniImageBox@UI@@QAEXPBDMMMM@Z ; UI::CAniImageBox::AppendImage

; 1697 : 	pFinishCoolTimeEffect->AppendImage("d:/ymir work/ui/public/slotfinishcooltimeeffect/01.sub");

  000a8	83 ec 10	 sub	 esp, 16			; 00000010H
  000ab	8b cf		 mov	 ecx, edi
  000ad	c7 44 24 0c 00
	00 80 3f	 mov	 DWORD PTR [esp+12], 1065353216 ; 3f800000H
  000b5	c7 44 24 08 00
	00 80 3f	 mov	 DWORD PTR [esp+8], 1065353216 ; 3f800000H
  000bd	c7 44 24 04 00
	00 80 3f	 mov	 DWORD PTR [esp+4], 1065353216 ; 3f800000H
  000c5	c7 04 24 00 00
	80 3f		 mov	 DWORD PTR [esp], 1065353216 ; 3f800000H
  000cc	68 00 00 00 00	 push	 OFFSET ??_C@_0DH@IPHHELBB@d?3?1ymir?5work?1ui?1public?1slotfini@
  000d1	e8 00 00 00 00	 call	 ?AppendImage@CAniImageBox@UI@@QAEXPBDMMMM@Z ; UI::CAniImageBox::AppendImage

; 1698 : 	pFinishCoolTimeEffect->AppendImage("d:/ymir work/ui/public/slotfinishcooltimeeffect/02.sub");

  000d6	83 ec 10	 sub	 esp, 16			; 00000010H
  000d9	8b cf		 mov	 ecx, edi
  000db	c7 44 24 0c 00
	00 80 3f	 mov	 DWORD PTR [esp+12], 1065353216 ; 3f800000H
  000e3	c7 44 24 08 00
	00 80 3f	 mov	 DWORD PTR [esp+8], 1065353216 ; 3f800000H
  000eb	c7 44 24 04 00
	00 80 3f	 mov	 DWORD PTR [esp+4], 1065353216 ; 3f800000H
  000f3	c7 04 24 00 00
	80 3f		 mov	 DWORD PTR [esp], 1065353216 ; 3f800000H
  000fa	68 00 00 00 00	 push	 OFFSET ??_C@_0DH@JODDJLP@d?3?1ymir?5work?1ui?1public?1slotfini@
  000ff	e8 00 00 00 00	 call	 ?AppendImage@CAniImageBox@UI@@QAEXPBDMMMM@Z ; UI::CAniImageBox::AppendImage

; 1699 : 	pFinishCoolTimeEffect->AppendImage("d:/ymir work/ui/public/slotfinishcooltimeeffect/03.sub");

  00104	83 ec 10	 sub	 esp, 16			; 00000010H
  00107	8b cf		 mov	 ecx, edi
  00109	c7 44 24 0c 00
	00 80 3f	 mov	 DWORD PTR [esp+12], 1065353216 ; 3f800000H
  00111	c7 44 24 08 00
	00 80 3f	 mov	 DWORD PTR [esp+8], 1065353216 ; 3f800000H
  00119	c7 44 24 04 00
	00 80 3f	 mov	 DWORD PTR [esp+4], 1065353216 ; 3f800000H
  00121	c7 04 24 00 00
	80 3f		 mov	 DWORD PTR [esp], 1065353216 ; 3f800000H
  00128	68 00 00 00 00	 push	 OFFSET ??_C@_0DH@MCLPOKBK@d?3?1ymir?5work?1ui?1public?1slotfini@
  0012d	e8 00 00 00 00	 call	 ?AppendImage@CAniImageBox@UI@@QAEXPBDMMMM@Z ; UI::CAniImageBox::AppendImage

; 1700 : 	pFinishCoolTimeEffect->AppendImage("d:/ymir work/ui/public/slotfinishcooltimeeffect/04.sub");

  00132	83 ec 10	 sub	 esp, 16			; 00000010H
  00135	8b cf		 mov	 ecx, edi
  00137	c7 44 24 0c 00
	00 80 3f	 mov	 DWORD PTR [esp+12], 1065353216 ; 3f800000H
  0013f	c7 44 24 08 00
	00 80 3f	 mov	 DWORD PTR [esp+8], 1065353216 ; 3f800000H
  00147	c7 44 24 04 00
	00 80 3f	 mov	 DWORD PTR [esp+4], 1065353216 ; 3f800000H
  0014f	c7 04 24 00 00
	80 3f		 mov	 DWORD PTR [esp], 1065353216 ; 3f800000H
  00156	68 00 00 00 00	 push	 OFFSET ??_C@_0DH@NPLKNKKC@d?3?1ymir?5work?1ui?1public?1slotfini@
  0015b	e8 00 00 00 00	 call	 ?AppendImage@CAniImageBox@UI@@QAEXPBDMMMM@Z ; UI::CAniImageBox::AppendImage

; 1701 : 	pFinishCoolTimeEffect->AppendImage("d:/ymir work/ui/public/slotfinishcooltimeeffect/05.sub");

  00160	83 ec 10	 sub	 esp, 16			; 00000010H
  00163	8b cf		 mov	 ecx, edi
  00165	c7 44 24 0c 00
	00 80 3f	 mov	 DWORD PTR [esp+12], 1065353216 ; 3f800000H
  0016d	c7 44 24 08 00
	00 80 3f	 mov	 DWORD PTR [esp+8], 1065353216 ; 3f800000H
  00175	c7 44 24 04 00
	00 80 3f	 mov	 DWORD PTR [esp+4], 1065353216 ; 3f800000H
  0017d	c7 04 24 00 00
	80 3f		 mov	 DWORD PTR [esp], 1065353216 ; 3f800000H
  00184	68 00 00 00 00	 push	 OFFSET ??_C@_0DH@BEOGAJAH@d?3?1ymir?5work?1ui?1public?1slotfini@
  00189	e8 00 00 00 00	 call	 ?AppendImage@CAniImageBox@UI@@QAEXPBDMMMM@Z ; UI::CAniImageBox::AppendImage

; 1702 : 	pFinishCoolTimeEffect->AppendImage("d:/ymir work/ui/public/slotfinishcooltimeeffect/06.sub");

  0018e	83 ec 10	 sub	 esp, 16			; 00000010H
  00191	8b cf		 mov	 ecx, edi
  00193	c7 44 24 0c 00
	00 80 3f	 mov	 DWORD PTR [esp+12], 1065353216 ; 3f800000H
  0019b	c7 44 24 08 00
	00 80 3f	 mov	 DWORD PTR [esp+8], 1065353216 ; 3f800000H
  001a3	c7 44 24 04 00
	00 80 3f	 mov	 DWORD PTR [esp+4], 1065353216 ; 3f800000H
  001ab	c7 04 24 00 00
	80 3f		 mov	 DWORD PTR [esp], 1065353216 ; 3f800000H
  001b2	68 00 00 00 00	 push	 OFFSET ??_C@_0DH@JCHCHLKJ@d?3?1ymir?5work?1ui?1public?1slotfini@
  001b7	e8 00 00 00 00	 call	 ?AppendImage@CAniImageBox@UI@@QAEXPBDMMMM@Z ; UI::CAniImageBox::AppendImage

; 1703 : 	pFinishCoolTimeEffect->AppendImage("d:/ymir work/ui/public/slotfinishcooltimeeffect/07.sub");

  001bc	83 ec 10	 sub	 esp, 16			; 00000010H
  001bf	8b cf		 mov	 ecx, edi
  001c1	c7 44 24 0c 00
	00 80 3f	 mov	 DWORD PTR [esp+12], 1065353216 ; 3f800000H
  001c9	c7 44 24 08 00
	00 80 3f	 mov	 DWORD PTR [esp+8], 1065353216 ; 3f800000H
  001d1	c7 44 24 04 00
	00 80 3f	 mov	 DWORD PTR [esp+4], 1065353216 ; 3f800000H
  001d9	c7 04 24 00 00
	80 3f		 mov	 DWORD PTR [esp], 1065353216 ; 3f800000H
  001e0	68 00 00 00 00	 push	 OFFSET ??_C@_0DH@FJCOKIAM@d?3?1ymir?5work?1ui?1public?1slotfini@
  001e5	e8 00 00 00 00	 call	 ?AppendImage@CAniImageBox@UI@@QAEXPBDMMMM@Z ; UI::CAniImageBox::AppendImage

; 1704 : 	pFinishCoolTimeEffect->AppendImage("d:/ymir work/ui/public/slotfinishcooltimeeffect/08.sub");

  001ea	83 ec 10	 sub	 esp, 16			; 00000010H
  001ed	8b cf		 mov	 ecx, edi
  001ef	c7 44 24 0c 00
	00 80 3f	 mov	 DWORD PTR [esp+12], 1065353216 ; 3f800000H
  001f7	c7 44 24 08 00
	00 80 3f	 mov	 DWORD PTR [esp+8], 1065353216 ; 3f800000H
  001ff	c7 44 24 04 00
	00 80 3f	 mov	 DWORD PTR [esp+4], 1065353216 ; 3f800000H
  00207	c7 04 24 00 00
	80 3f		 mov	 DWORD PTR [esp], 1065353216 ; 3f800000H
  0020e	68 00 00 00 00	 push	 OFFSET ??_C@_0DH@KIHIBKNJ@d?3?1ymir?5work?1ui?1public?1slotfini@
  00213	e8 00 00 00 00	 call	 ?AppendImage@CAniImageBox@UI@@QAEXPBDMMMM@Z ; UI::CAniImageBox::AppendImage

; 1705 : 	pFinishCoolTimeEffect->AppendImage("d:/ymir work/ui/public/slotfinishcooltimeeffect/09.sub");

  00218	83 ec 10	 sub	 esp, 16			; 00000010H
  0021b	8b cf		 mov	 ecx, edi
  0021d	c7 44 24 0c 00
	00 80 3f	 mov	 DWORD PTR [esp+12], 1065353216 ; 3f800000H
  00225	c7 44 24 08 00
	00 80 3f	 mov	 DWORD PTR [esp+8], 1065353216 ; 3f800000H
  0022d	c7 44 24 04 00
	00 80 3f	 mov	 DWORD PTR [esp+4], 1065353216 ; 3f800000H
  00235	c7 04 24 00 00
	80 3f		 mov	 DWORD PTR [esp], 1065353216 ; 3f800000H
  0023c	68 00 00 00 00	 push	 OFFSET ??_C@_0DH@GDCEMJHM@d?3?1ymir?5work?1ui?1public?1slotfini@
  00241	e8 00 00 00 00	 call	 ?AppendImage@CAniImageBox@UI@@QAEXPBDMMMM@Z ; UI::CAniImageBox::AppendImage

; 1706 : 	pFinishCoolTimeEffect->AppendImage("d:/ymir work/ui/public/slotfinishcooltimeeffect/10.sub");

  00246	83 ec 10	 sub	 esp, 16			; 00000010H
  00249	8b cf		 mov	 ecx, edi
  0024b	c7 44 24 0c 00
	00 80 3f	 mov	 DWORD PTR [esp+12], 1065353216 ; 3f800000H
  00253	c7 44 24 08 00
	00 80 3f	 mov	 DWORD PTR [esp+8], 1065353216 ; 3f800000H
  0025b	c7 44 24 04 00
	00 80 3f	 mov	 DWORD PTR [esp+4], 1065353216 ; 3f800000H
  00263	c7 04 24 00 00
	80 3f		 mov	 DWORD PTR [esp], 1065353216 ; 3f800000H
  0026a	68 00 00 00 00	 push	 OFFSET ??_C@_0DH@OCFMJDAA@d?3?1ymir?5work?1ui?1public?1slotfini@
  0026f	e8 00 00 00 00	 call	 ?AppendImage@CAniImageBox@UI@@QAEXPBDMMMM@Z ; UI::CAniImageBox::AppendImage

; 1707 : 	pFinishCoolTimeEffect->SetRenderingMode(CGraphicExpandedImageInstance::RENDERING_MODE_SCREEN);

  00274	6a 01		 push	 1
  00276	8b cf		 mov	 ecx, edi
  00278	e8 00 00 00 00	 call	 ?SetRenderingMode@CAniImageBox@UI@@QAEXH@Z ; UI::CAniImageBox::SetRenderingMode

; 1708 : 	pFinishCoolTimeEffect->ResetFrame();

  0027d	8b cf		 mov	 ecx, edi
  0027f	e8 00 00 00 00	 call	 ?ResetFrame@CAniImageBox@UI@@QAEXXZ ; UI::CAniImageBox::ResetFrame

; 1709 : 	pFinishCoolTimeEffect->SetDelay(2);

  00284	6a 02		 push	 2
  00286	8b cf		 mov	 ecx, edi
  00288	e8 00 00 00 00	 call	 ?SetDelay@CAniImageBox@UI@@QAEXH@Z ; UI::CAniImageBox::SetDelay

; 1710 : 	pFinishCoolTimeEffect->Show();

  0028d	8b cf		 mov	 ecx, edi
  0028f	e8 00 00 00 00	 call	 ?Show@CWindow@UI@@QAEXXZ ; UI::CWindow::Show

; 1711 : 
; 1712 : 	pSlot->pFinishCoolTimeEffect = pFinishCoolTimeEffect;

  00294	89 7b 6c	 mov	 DWORD PTR [ebx+108], edi

; 1713 : }

  00297	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0029a	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  002a1	59		 pop	 ecx
  002a2	5f		 pop	 edi
  002a3	5e		 pop	 esi
  002a4	5b		 pop	 ebx
  002a5	8b e5		 mov	 esp, ebp
  002a7	5d		 pop	 ebp
  002a8	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?__CreateFinishCoolTimeEffect@CSlotWindow@UI@@IAEXPAUSSlot@12@@Z$0:
  00000	68 98 00 00 00	 push	 152			; 00000098H
  00005	8b 45 08	 mov	 eax, DWORD PTR $T2[ebp]
  00008	50		 push	 eax
  00009	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0000e	83 c4 08	 add	 esp, 8
  00011	c3		 ret	 0
  00012	cc		 int	 3
  00013	cc		 int	 3
  00014	cc		 int	 3
  00015	cc		 int	 3
  00016	cc		 int	 3
__ehhandler$?__CreateFinishCoolTimeEffect@CSlotWindow@UI@@IAEXPAUSSlot@12@@Z:
  00017	90		 npad	 1
  00018	90		 npad	 1
  00019	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0001d	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00020	8b 4a ec	 mov	 ecx, DWORD PTR [edx-20]
  00023	33 c8		 xor	 ecx, eax
  00025	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0002a	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?__CreateFinishCoolTimeEffect@CSlotWindow@UI@@IAEXPAUSSlot@12@@Z
  0002f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?__CreateFinishCoolTimeEffect@CSlotWindow@UI@@IAEXPAUSSlot@12@@Z ENDP ; UI::CSlotWindow::__CreateFinishCoolTimeEffect
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ?__CreateSlotEnableEffect@CSlotWindow@UI@@IAEXH@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
$T2 = 8							; size = 4
$T3 = 8							; size = 4
$T4 = 8							; size = 4
_activeSlot$ = 8					; size = 4
?__CreateSlotEnableEffect@CSlotWindow@UI@@IAEXH@Z PROC	; UI::CSlotWindow::__CreateSlotEnableEffect, COMDAT
; _this$ = ecx

; 1602 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?__CreateSlotEnableEffect@CSlotWindow@UI@@IAEXH@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	56		 push	 esi
  00012	57		 push	 edi
  00013	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00018	33 c5		 xor	 eax, ebp
  0001a	50		 push	 eax
  0001b	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001e	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00024	8b f1		 mov	 esi, ecx

; 1603 : #ifdef WJ_ENABLE_PICKUP_ITEM_EFFECT
; 1604 : 	if (activeSlot < 0 || activeSlot > 2)

  00026	8b 7d 08	 mov	 edi, DWORD PTR _activeSlot$[ebp]
  00029	83 ff 02	 cmp	 edi, 2
  0002c	0f 87 39 08 00
	00		 ja	 $LN3@CreateSlot

; 1605 : 	{
; 1606 : 		return;
; 1607 : 	}
; 1608 : 
; 1609 : 	if (activeSlot == 1)

  00032	83 ff 01	 cmp	 edi, 1
  00035	0f 85 9f 02 00
	00		 jne	 $LN4@CreateSlot

; 1610 : 	{
; 1611 : 		__DestroySlotEnableEffect(activeSlot);

  0003b	57		 push	 edi
  0003c	e8 00 00 00 00	 call	 ?__DestroySlotEnableEffect@CSlotWindow@UI@@IAEXH@Z ; UI::CSlotWindow::__DestroySlotEnableEffect

; 1612 : 
; 1613 : 		m_pSlotActiveEffect[1] = new CAniImageBox(NULL);

  00041	68 94 00 00 00	 push	 148			; 00000094H
  00046	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0004b	83 c4 04	 add	 esp, 4
  0004e	89 45 08	 mov	 DWORD PTR $T4[ebp], eax
  00051	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00058	85 c0		 test	 eax, eax
  0005a	74 0b		 je	 SHORT $LN9@CreateSlot
  0005c	6a 00		 push	 0
  0005e	8b c8		 mov	 ecx, eax
  00060	e8 00 00 00 00	 call	 ??0CAniImageBox@UI@@QAE@PAU_object@@@Z ; UI::CAniImageBox::CAniImageBox
  00065	eb 02		 jmp	 SHORT $LN10@CreateSlot
$LN9@CreateSlot:
  00067	33 c0		 xor	 eax, eax
$LN10@CreateSlot:

; 1614 : 		m_pSlotActiveEffect[1]->AppendImage("d:/ymir work/ui/public/slotactiveeffect/slot2/00.sub");

  00069	83 ec 10	 sub	 esp, 16			; 00000010H
  0006c	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00073	8b c8		 mov	 ecx, eax
  00075	89 86 b4 00 00
	00		 mov	 DWORD PTR [esi+180], eax
  0007b	c7 44 24 0c 00
	00 80 3f	 mov	 DWORD PTR [esp+12], 1065353216 ; 3f800000H
  00083	c7 44 24 08 00
	00 80 3f	 mov	 DWORD PTR [esp+8], 1065353216 ; 3f800000H
  0008b	c7 44 24 04 00
	00 80 3f	 mov	 DWORD PTR [esp+4], 1065353216 ; 3f800000H
  00093	c7 04 24 00 00
	80 3f		 mov	 DWORD PTR [esp], 1065353216 ; 3f800000H
  0009a	68 00 00 00 00	 push	 OFFSET ??_C@_0DF@FHBGNIHM@d?3?1ymir?5work?1ui?1public?1slotacti@
  0009f	e8 00 00 00 00	 call	 ?AppendImage@CAniImageBox@UI@@QAEXPBDMMMM@Z ; UI::CAniImageBox::AppendImage

; 1615 : 		m_pSlotActiveEffect[1]->AppendImage("d:/ymir work/ui/public/slotactiveeffect/slot2/01.sub");

  000a4	8b 8e b4 00 00
	00		 mov	 ecx, DWORD PTR [esi+180]
  000aa	83 ec 10	 sub	 esp, 16			; 00000010H
  000ad	c7 44 24 0c 00
	00 80 3f	 mov	 DWORD PTR [esp+12], 1065353216 ; 3f800000H
  000b5	c7 44 24 08 00
	00 80 3f	 mov	 DWORD PTR [esp+8], 1065353216 ; 3f800000H
  000bd	c7 44 24 04 00
	00 80 3f	 mov	 DWORD PTR [esp+4], 1065353216 ; 3f800000H
  000c5	c7 04 24 00 00
	80 3f		 mov	 DWORD PTR [esp], 1065353216 ; 3f800000H
  000cc	68 00 00 00 00	 push	 OFFSET ??_C@_0DF@JMEKALNJ@d?3?1ymir?5work?1ui?1public?1slotacti@
  000d1	e8 00 00 00 00	 call	 ?AppendImage@CAniImageBox@UI@@QAEXPBDMMMM@Z ; UI::CAniImageBox::AppendImage

; 1616 : 		m_pSlotActiveEffect[1]->AppendImage("d:/ymir work/ui/public/slotactiveeffect/slot2/02.sub");

  000d6	8b 8e b4 00 00
	00		 mov	 ecx, DWORD PTR [esi+180]
  000dc	83 ec 10	 sub	 esp, 16			; 00000010H
  000df	c7 44 24 0c 00
	00 80 3f	 mov	 DWORD PTR [esp+12], 1065353216 ; 3f800000H
  000e7	c7 44 24 08 00
	00 80 3f	 mov	 DWORD PTR [esp+8], 1065353216 ; 3f800000H
  000ef	c7 44 24 04 00
	00 80 3f	 mov	 DWORD PTR [esp+4], 1065353216 ; 3f800000H
  000f7	c7 04 24 00 00
	80 3f		 mov	 DWORD PTR [esp], 1065353216 ; 3f800000H
  000fe	68 00 00 00 00	 push	 OFFSET ??_C@_0DF@BKNOHJHH@d?3?1ymir?5work?1ui?1public?1slotacti@
  00103	e8 00 00 00 00	 call	 ?AppendImage@CAniImageBox@UI@@QAEXPBDMMMM@Z ; UI::CAniImageBox::AppendImage

; 1617 : 		m_pSlotActiveEffect[1]->AppendImage("d:/ymir work/ui/public/slotactiveeffect/slot2/03.sub");

  00108	8b 8e b4 00 00
	00		 mov	 ecx, DWORD PTR [esi+180]
  0010e	83 ec 10	 sub	 esp, 16			; 00000010H
  00111	c7 44 24 0c 00
	00 80 3f	 mov	 DWORD PTR [esp+12], 1065353216 ; 3f800000H
  00119	c7 44 24 08 00
	00 80 3f	 mov	 DWORD PTR [esp+8], 1065353216 ; 3f800000H
  00121	c7 44 24 04 00
	00 80 3f	 mov	 DWORD PTR [esp+4], 1065353216 ; 3f800000H
  00129	c7 04 24 00 00
	80 3f		 mov	 DWORD PTR [esp], 1065353216 ; 3f800000H
  00130	68 00 00 00 00	 push	 OFFSET ??_C@_0DF@NBICKKNC@d?3?1ymir?5work?1ui?1public?1slotacti@
  00135	e8 00 00 00 00	 call	 ?AppendImage@CAniImageBox@UI@@QAEXPBDMMMM@Z ; UI::CAniImageBox::AppendImage

; 1618 : 		m_pSlotActiveEffect[1]->AppendImage("d:/ymir work/ui/public/slotactiveeffect/slot2/04.sub");

  0013a	8b 8e b4 00 00
	00		 mov	 ecx, DWORD PTR [esi+180]
  00140	83 ec 10	 sub	 esp, 16			; 00000010H
  00143	c7 44 24 0c 00
	00 80 3f	 mov	 DWORD PTR [esp+12], 1065353216 ; 3f800000H
  0014b	c7 44 24 08 00
	00 80 3f	 mov	 DWORD PTR [esp+8], 1065353216 ; 3f800000H
  00153	c7 44 24 04 00
	00 80 3f	 mov	 DWORD PTR [esp+4], 1065353216 ; 3f800000H
  0015b	c7 04 24 00 00
	80 3f		 mov	 DWORD PTR [esp], 1065353216 ; 3f800000H
  00162	68 00 00 00 00	 push	 OFFSET ??_C@_0DF@MMIHJKGK@d?3?1ymir?5work?1ui?1public?1slotacti@
  00167	e8 00 00 00 00	 call	 ?AppendImage@CAniImageBox@UI@@QAEXPBDMMMM@Z ; UI::CAniImageBox::AppendImage

; 1619 : 		m_pSlotActiveEffect[1]->AppendImage("d:/ymir work/ui/public/slotactiveeffect/slot2/05.sub");

  0016c	8b 8e b4 00 00
	00		 mov	 ecx, DWORD PTR [esi+180]
  00172	83 ec 10	 sub	 esp, 16			; 00000010H
  00175	c7 44 24 0c 00
	00 80 3f	 mov	 DWORD PTR [esp+12], 1065353216 ; 3f800000H
  0017d	c7 44 24 08 00
	00 80 3f	 mov	 DWORD PTR [esp+8], 1065353216 ; 3f800000H
  00185	c7 44 24 04 00
	00 80 3f	 mov	 DWORD PTR [esp+4], 1065353216 ; 3f800000H
  0018d	c7 04 24 00 00
	80 3f		 mov	 DWORD PTR [esp], 1065353216 ; 3f800000H
  00194	68 00 00 00 00	 push	 OFFSET ??_C@_0DF@HNLEJMP@d?3?1ymir?5work?1ui?1public?1slotacti@
  00199	e8 00 00 00 00	 call	 ?AppendImage@CAniImageBox@UI@@QAEXPBDMMMM@Z ; UI::CAniImageBox::AppendImage

; 1620 : 		m_pSlotActiveEffect[1]->AppendImage("d:/ymir work/ui/public/slotactiveeffect/slot2/06.sub");

  0019e	8b 8e b4 00 00
	00		 mov	 ecx, DWORD PTR [esi+180]
  001a4	83 ec 10	 sub	 esp, 16			; 00000010H
  001a7	c7 44 24 0c 00
	00 80 3f	 mov	 DWORD PTR [esp+12], 1065353216 ; 3f800000H
  001af	c7 44 24 08 00
	00 80 3f	 mov	 DWORD PTR [esp+8], 1065353216 ; 3f800000H
  001b7	c7 44 24 04 00
	00 80 3f	 mov	 DWORD PTR [esp+4], 1065353216 ; 3f800000H
  001bf	c7 04 24 00 00
	80 3f		 mov	 DWORD PTR [esp], 1065353216 ; 3f800000H
  001c6	68 00 00 00 00	 push	 OFFSET ??_C@_0DF@IBEPDLGB@d?3?1ymir?5work?1ui?1public?1slotacti@
  001cb	e8 00 00 00 00	 call	 ?AppendImage@CAniImageBox@UI@@QAEXPBDMMMM@Z ; UI::CAniImageBox::AppendImage

; 1621 : 		m_pSlotActiveEffect[1]->AppendImage("d:/ymir work/ui/public/slotactiveeffect/slot2/07.sub");

  001d0	8b 8e b4 00 00
	00		 mov	 ecx, DWORD PTR [esi+180]
  001d6	83 ec 10	 sub	 esp, 16			; 00000010H
  001d9	c7 44 24 0c 00
	00 80 3f	 mov	 DWORD PTR [esp+12], 1065353216 ; 3f800000H
  001e1	c7 44 24 08 00
	00 80 3f	 mov	 DWORD PTR [esp+8], 1065353216 ; 3f800000H
  001e9	c7 44 24 04 00
	00 80 3f	 mov	 DWORD PTR [esp+4], 1065353216 ; 3f800000H
  001f1	c7 04 24 00 00
	80 3f		 mov	 DWORD PTR [esp], 1065353216 ; 3f800000H
  001f8	68 00 00 00 00	 push	 OFFSET ??_C@_0DF@EKBDOIME@d?3?1ymir?5work?1ui?1public?1slotacti@
  001fd	e8 00 00 00 00	 call	 ?AppendImage@CAniImageBox@UI@@QAEXPBDMMMM@Z ; UI::CAniImageBox::AppendImage

; 1622 : 		m_pSlotActiveEffect[1]->AppendImage("d:/ymir work/ui/public/slotactiveeffect/slot2/08.sub");

  00202	8b 8e b4 00 00
	00		 mov	 ecx, DWORD PTR [esi+180]
  00208	83 ec 10	 sub	 esp, 16			; 00000010H
  0020b	c7 44 24 0c 00
	00 80 3f	 mov	 DWORD PTR [esp+12], 1065353216 ; 3f800000H
  00213	c7 44 24 08 00
	00 80 3f	 mov	 DWORD PTR [esp+8], 1065353216 ; 3f800000H
  0021b	c7 44 24 04 00
	00 80 3f	 mov	 DWORD PTR [esp+4], 1065353216 ; 3f800000H
  00223	c7 04 24 00 00
	80 3f		 mov	 DWORD PTR [esp], 1065353216 ; 3f800000H
  0022a	68 00 00 00 00	 push	 OFFSET ??_C@_0DF@LLEFFKBB@d?3?1ymir?5work?1ui?1public?1slotacti@
  0022f	e8 00 00 00 00	 call	 ?AppendImage@CAniImageBox@UI@@QAEXPBDMMMM@Z ; UI::CAniImageBox::AppendImage

; 1623 : 		m_pSlotActiveEffect[1]->AppendImage("d:/ymir work/ui/public/slotactiveeffect/slot2/09.sub");

  00234	8b 8e b4 00 00
	00		 mov	 ecx, DWORD PTR [esi+180]
  0023a	83 ec 10	 sub	 esp, 16			; 00000010H
  0023d	c7 44 24 0c 00
	00 80 3f	 mov	 DWORD PTR [esp+12], 1065353216 ; 3f800000H
  00245	c7 44 24 08 00
	00 80 3f	 mov	 DWORD PTR [esp+8], 1065353216 ; 3f800000H
  0024d	c7 44 24 04 00
	00 80 3f	 mov	 DWORD PTR [esp+4], 1065353216 ; 3f800000H
  00255	c7 04 24 00 00
	80 3f		 mov	 DWORD PTR [esp], 1065353216 ; 3f800000H
  0025c	68 00 00 00 00	 push	 OFFSET ??_C@_0DF@HABJIJLE@d?3?1ymir?5work?1ui?1public?1slotacti@
  00261	e8 00 00 00 00	 call	 ?AppendImage@CAniImageBox@UI@@QAEXPBDMMMM@Z ; UI::CAniImageBox::AppendImage

; 1624 : 		m_pSlotActiveEffect[1]->AppendImage("d:/ymir work/ui/public/slotactiveeffect/slot2/10.sub");

  00266	8b 8e b4 00 00
	00		 mov	 ecx, DWORD PTR [esi+180]
  0026c	83 ec 10	 sub	 esp, 16			; 00000010H
  0026f	c7 44 24 0c 00
	00 80 3f	 mov	 DWORD PTR [esp+12], 1065353216 ; 3f800000H
  00277	c7 44 24 08 00
	00 80 3f	 mov	 DWORD PTR [esp+8], 1065353216 ; 3f800000H
  0027f	c7 44 24 04 00
	00 80 3f	 mov	 DWORD PTR [esp+4], 1065353216 ; 3f800000H
  00287	c7 04 24 00 00
	80 3f		 mov	 DWORD PTR [esp], 1065353216 ; 3f800000H
  0028e	68 00 00 00 00	 push	 OFFSET ??_C@_0DF@PBGBNDMI@d?3?1ymir?5work?1ui?1public?1slotacti@
  00293	e8 00 00 00 00	 call	 ?AppendImage@CAniImageBox@UI@@QAEXPBDMMMM@Z ; UI::CAniImageBox::AppendImage

; 1625 : 		m_pSlotActiveEffect[1]->AppendImage("d:/ymir work/ui/public/slotactiveeffect/slot2/11.sub");

  00298	8b 8e b4 00 00
	00		 mov	 ecx, DWORD PTR [esi+180]
  0029e	83 ec 10	 sub	 esp, 16			; 00000010H
  002a1	c7 44 24 0c 00
	00 80 3f	 mov	 DWORD PTR [esp+12], 1065353216 ; 3f800000H
  002a9	c7 44 24 08 00
	00 80 3f	 mov	 DWORD PTR [esp+8], 1065353216 ; 3f800000H
  002b1	c7 44 24 04 00
	00 80 3f	 mov	 DWORD PTR [esp+4], 1065353216 ; 3f800000H
  002b9	c7 04 24 00 00
	80 3f		 mov	 DWORD PTR [esp], 1065353216 ; 3f800000H
  002c0	68 00 00 00 00	 push	 OFFSET ??_C@_0DF@DKDNAAGN@d?3?1ymir?5work?1ui?1public?1slotacti@
  002c5	e8 00 00 00 00	 call	 ?AppendImage@CAniImageBox@UI@@QAEXPBDMMMM@Z ; UI::CAniImageBox::AppendImage

; 1626 : 		m_pSlotActiveEffect[1]->AppendImage("d:/ymir work/ui/public/slotactiveeffect/slot2/12.sub");

  002ca	8b 8e b4 00 00
	00		 mov	 ecx, DWORD PTR [esi+180]
  002d0	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0DF@LMKJHCMD@d?3?1ymir?5work?1ui?1public?1slotacti@

; 1627 : 	}

  002d5	e9 4f 05 00 00	 jmp	 $LN7@CreateSlot
$LN4@CreateSlot:

; 1628 : 	else if (activeSlot == 2)

  002da	83 ff 02	 cmp	 edi, 2
  002dd	0f 85 9f 02 00
	00		 jne	 $LN6@CreateSlot

; 1629 : 	{
; 1630 : 		__DestroySlotEnableEffect(activeSlot);

  002e3	57		 push	 edi
  002e4	e8 00 00 00 00	 call	 ?__DestroySlotEnableEffect@CSlotWindow@UI@@IAEXH@Z ; UI::CSlotWindow::__DestroySlotEnableEffect

; 1631 : 
; 1632 : 		m_pSlotActiveEffect[2] = new CAniImageBox(NULL);

  002e9	68 94 00 00 00	 push	 148			; 00000094H
  002ee	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  002f3	83 c4 04	 add	 esp, 4
  002f6	89 45 08	 mov	 DWORD PTR $T3[ebp], eax
  002f9	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 1
  00300	85 c0		 test	 eax, eax
  00302	74 0b		 je	 SHORT $LN11@CreateSlot
  00304	6a 00		 push	 0
  00306	8b c8		 mov	 ecx, eax
  00308	e8 00 00 00 00	 call	 ??0CAniImageBox@UI@@QAE@PAU_object@@@Z ; UI::CAniImageBox::CAniImageBox
  0030d	eb 02		 jmp	 SHORT $LN12@CreateSlot
$LN11@CreateSlot:
  0030f	33 c0		 xor	 eax, eax
$LN12@CreateSlot:

; 1633 : 		m_pSlotActiveEffect[2]->AppendImage("d:/ymir work/ui/public/slotactiveeffect/slot3/00.sub");

  00311	83 ec 10	 sub	 esp, 16			; 00000010H
  00314	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0031b	8b c8		 mov	 ecx, eax
  0031d	89 86 b8 00 00
	00		 mov	 DWORD PTR [esi+184], eax
  00323	c7 44 24 0c 00
	00 80 3f	 mov	 DWORD PTR [esp+12], 1065353216 ; 3f800000H
  0032b	c7 44 24 08 00
	00 80 3f	 mov	 DWORD PTR [esp+8], 1065353216 ; 3f800000H
  00333	c7 44 24 04 00
	00 80 3f	 mov	 DWORD PTR [esp+4], 1065353216 ; 3f800000H
  0033b	c7 04 24 00 00
	80 3f		 mov	 DWORD PTR [esp], 1065353216 ; 3f800000H
  00342	68 00 00 00 00	 push	 OFFSET ??_C@_0DF@EAGNMMDP@d?3?1ymir?5work?1ui?1public?1slotacti@
  00347	e8 00 00 00 00	 call	 ?AppendImage@CAniImageBox@UI@@QAEXPBDMMMM@Z ; UI::CAniImageBox::AppendImage

; 1634 : 		m_pSlotActiveEffect[2]->AppendImage("d:/ymir work/ui/public/slotactiveeffect/slot3/01.sub");

  0034c	8b 8e b8 00 00
	00		 mov	 ecx, DWORD PTR [esi+184]
  00352	83 ec 10	 sub	 esp, 16			; 00000010H
  00355	c7 44 24 0c 00
	00 80 3f	 mov	 DWORD PTR [esp+12], 1065353216 ; 3f800000H
  0035d	c7 44 24 08 00
	00 80 3f	 mov	 DWORD PTR [esp+8], 1065353216 ; 3f800000H
  00365	c7 44 24 04 00
	00 80 3f	 mov	 DWORD PTR [esp+4], 1065353216 ; 3f800000H
  0036d	c7 04 24 00 00
	80 3f		 mov	 DWORD PTR [esp], 1065353216 ; 3f800000H
  00374	68 00 00 00 00	 push	 OFFSET ??_C@_0DF@ILDBBPJK@d?3?1ymir?5work?1ui?1public?1slotacti@
  00379	e8 00 00 00 00	 call	 ?AppendImage@CAniImageBox@UI@@QAEXPBDMMMM@Z ; UI::CAniImageBox::AppendImage

; 1635 : 		m_pSlotActiveEffect[2]->AppendImage("d:/ymir work/ui/public/slotactiveeffect/slot3/02.sub");

  0037e	8b 8e b8 00 00
	00		 mov	 ecx, DWORD PTR [esi+184]
  00384	83 ec 10	 sub	 esp, 16			; 00000010H
  00387	c7 44 24 0c 00
	00 80 3f	 mov	 DWORD PTR [esp+12], 1065353216 ; 3f800000H
  0038f	c7 44 24 08 00
	00 80 3f	 mov	 DWORD PTR [esp+8], 1065353216 ; 3f800000H
  00397	c7 44 24 04 00
	00 80 3f	 mov	 DWORD PTR [esp+4], 1065353216 ; 3f800000H
  0039f	c7 04 24 00 00
	80 3f		 mov	 DWORD PTR [esp], 1065353216 ; 3f800000H
  003a6	68 00 00 00 00	 push	 OFFSET ??_C@_0DF@NKFGNDE@d?3?1ymir?5work?1ui?1public?1slotacti@
  003ab	e8 00 00 00 00	 call	 ?AppendImage@CAniImageBox@UI@@QAEXPBDMMMM@Z ; UI::CAniImageBox::AppendImage

; 1636 : 		m_pSlotActiveEffect[2]->AppendImage("d:/ymir work/ui/public/slotactiveeffect/slot3/03.sub");

  003b0	8b 8e b8 00 00
	00		 mov	 ecx, DWORD PTR [esi+184]
  003b6	83 ec 10	 sub	 esp, 16			; 00000010H
  003b9	c7 44 24 0c 00
	00 80 3f	 mov	 DWORD PTR [esp+12], 1065353216 ; 3f800000H
  003c1	c7 44 24 08 00
	00 80 3f	 mov	 DWORD PTR [esp+8], 1065353216 ; 3f800000H
  003c9	c7 44 24 04 00
	00 80 3f	 mov	 DWORD PTR [esp+4], 1065353216 ; 3f800000H
  003d1	c7 04 24 00 00
	80 3f		 mov	 DWORD PTR [esp], 1065353216 ; 3f800000H
  003d8	68 00 00 00 00	 push	 OFFSET ??_C@_0DF@MGPJLOJB@d?3?1ymir?5work?1ui?1public?1slotacti@
  003dd	e8 00 00 00 00	 call	 ?AppendImage@CAniImageBox@UI@@QAEXPBDMMMM@Z ; UI::CAniImageBox::AppendImage

; 1637 : 		m_pSlotActiveEffect[2]->AppendImage("d:/ymir work/ui/public/slotactiveeffect/slot3/04.sub");

  003e2	8b 8e b8 00 00
	00		 mov	 ecx, DWORD PTR [esi+184]
  003e8	83 ec 10	 sub	 esp, 16			; 00000010H
  003eb	c7 44 24 0c 00
	00 80 3f	 mov	 DWORD PTR [esp+12], 1065353216 ; 3f800000H
  003f3	c7 44 24 08 00
	00 80 3f	 mov	 DWORD PTR [esp+8], 1065353216 ; 3f800000H
  003fb	c7 44 24 04 00
	00 80 3f	 mov	 DWORD PTR [esp+4], 1065353216 ; 3f800000H
  00403	c7 04 24 00 00
	80 3f		 mov	 DWORD PTR [esp], 1065353216 ; 3f800000H
  0040a	68 00 00 00 00	 push	 OFFSET ??_C@_0DF@NLPMIOCJ@d?3?1ymir?5work?1ui?1public?1slotacti@
  0040f	e8 00 00 00 00	 call	 ?AppendImage@CAniImageBox@UI@@QAEXPBDMMMM@Z ; UI::CAniImageBox::AppendImage

; 1638 : 		m_pSlotActiveEffect[2]->AppendImage("d:/ymir work/ui/public/slotactiveeffect/slot3/05.sub");

  00414	8b 8e b8 00 00
	00		 mov	 ecx, DWORD PTR [esi+184]
  0041a	83 ec 10	 sub	 esp, 16			; 00000010H
  0041d	c7 44 24 0c 00
	00 80 3f	 mov	 DWORD PTR [esp+12], 1065353216 ; 3f800000H
  00425	c7 44 24 08 00
	00 80 3f	 mov	 DWORD PTR [esp+8], 1065353216 ; 3f800000H
  0042d	c7 44 24 04 00
	00 80 3f	 mov	 DWORD PTR [esp+4], 1065353216 ; 3f800000H
  00435	c7 04 24 00 00
	80 3f		 mov	 DWORD PTR [esp], 1065353216 ; 3f800000H
  0043c	68 00 00 00 00	 push	 OFFSET ??_C@_0DF@BAKAFNIM@d?3?1ymir?5work?1ui?1public?1slotacti@
  00441	e8 00 00 00 00	 call	 ?AppendImage@CAniImageBox@UI@@QAEXPBDMMMM@Z ; UI::CAniImageBox::AppendImage

; 1639 : 		m_pSlotActiveEffect[2]->AppendImage("d:/ymir work/ui/public/slotactiveeffect/slot3/06.sub");

  00446	8b 8e b8 00 00
	00		 mov	 ecx, DWORD PTR [esi+184]
  0044c	83 ec 10	 sub	 esp, 16			; 00000010H
  0044f	c7 44 24 0c 00
	00 80 3f	 mov	 DWORD PTR [esp+12], 1065353216 ; 3f800000H
  00457	c7 44 24 08 00
	00 80 3f	 mov	 DWORD PTR [esp+8], 1065353216 ; 3f800000H
  0045f	c7 44 24 04 00
	00 80 3f	 mov	 DWORD PTR [esp+4], 1065353216 ; 3f800000H
  00467	c7 04 24 00 00
	80 3f		 mov	 DWORD PTR [esp], 1065353216 ; 3f800000H
  0046e	68 00 00 00 00	 push	 OFFSET ??_C@_0DF@JGDECPCC@d?3?1ymir?5work?1ui?1public?1slotacti@
  00473	e8 00 00 00 00	 call	 ?AppendImage@CAniImageBox@UI@@QAEXPBDMMMM@Z ; UI::CAniImageBox::AppendImage

; 1640 : 		m_pSlotActiveEffect[2]->AppendImage("d:/ymir work/ui/public/slotactiveeffect/slot3/07.sub");

  00478	8b 8e b8 00 00
	00		 mov	 ecx, DWORD PTR [esi+184]
  0047e	83 ec 10	 sub	 esp, 16			; 00000010H
  00481	c7 44 24 0c 00
	00 80 3f	 mov	 DWORD PTR [esp+12], 1065353216 ; 3f800000H
  00489	c7 44 24 08 00
	00 80 3f	 mov	 DWORD PTR [esp+8], 1065353216 ; 3f800000H
  00491	c7 44 24 04 00
	00 80 3f	 mov	 DWORD PTR [esp+4], 1065353216 ; 3f800000H
  00499	c7 04 24 00 00
	80 3f		 mov	 DWORD PTR [esp], 1065353216 ; 3f800000H
  004a0	68 00 00 00 00	 push	 OFFSET ??_C@_0DF@FNGIPMIH@d?3?1ymir?5work?1ui?1public?1slotacti@
  004a5	e8 00 00 00 00	 call	 ?AppendImage@CAniImageBox@UI@@QAEXPBDMMMM@Z ; UI::CAniImageBox::AppendImage

; 1641 : 		m_pSlotActiveEffect[2]->AppendImage("d:/ymir work/ui/public/slotactiveeffect/slot3/08.sub");

  004aa	8b 8e b8 00 00
	00		 mov	 ecx, DWORD PTR [esi+184]
  004b0	83 ec 10	 sub	 esp, 16			; 00000010H
  004b3	c7 44 24 0c 00
	00 80 3f	 mov	 DWORD PTR [esp+12], 1065353216 ; 3f800000H
  004bb	c7 44 24 08 00
	00 80 3f	 mov	 DWORD PTR [esp+8], 1065353216 ; 3f800000H
  004c3	c7 44 24 04 00
	00 80 3f	 mov	 DWORD PTR [esp+4], 1065353216 ; 3f800000H
  004cb	c7 04 24 00 00
	80 3f		 mov	 DWORD PTR [esp], 1065353216 ; 3f800000H
  004d2	68 00 00 00 00	 push	 OFFSET ??_C@_0DF@KMDOEOFC@d?3?1ymir?5work?1ui?1public?1slotacti@
  004d7	e8 00 00 00 00	 call	 ?AppendImage@CAniImageBox@UI@@QAEXPBDMMMM@Z ; UI::CAniImageBox::AppendImage

; 1642 : 		m_pSlotActiveEffect[2]->AppendImage("d:/ymir work/ui/public/slotactiveeffect/slot3/09.sub");

  004dc	8b 8e b8 00 00
	00		 mov	 ecx, DWORD PTR [esi+184]
  004e2	83 ec 10	 sub	 esp, 16			; 00000010H
  004e5	c7 44 24 0c 00
	00 80 3f	 mov	 DWORD PTR [esp+12], 1065353216 ; 3f800000H
  004ed	c7 44 24 08 00
	00 80 3f	 mov	 DWORD PTR [esp+8], 1065353216 ; 3f800000H
  004f5	c7 44 24 04 00
	00 80 3f	 mov	 DWORD PTR [esp+4], 1065353216 ; 3f800000H
  004fd	c7 04 24 00 00
	80 3f		 mov	 DWORD PTR [esp], 1065353216 ; 3f800000H
  00504	68 00 00 00 00	 push	 OFFSET ??_C@_0DF@GHGCJNPH@d?3?1ymir?5work?1ui?1public?1slotacti@
  00509	e8 00 00 00 00	 call	 ?AppendImage@CAniImageBox@UI@@QAEXPBDMMMM@Z ; UI::CAniImageBox::AppendImage

; 1643 : 		m_pSlotActiveEffect[2]->AppendImage("d:/ymir work/ui/public/slotactiveeffect/slot3/10.sub");

  0050e	8b 8e b8 00 00
	00		 mov	 ecx, DWORD PTR [esi+184]
  00514	83 ec 10	 sub	 esp, 16			; 00000010H
  00517	c7 44 24 0c 00
	00 80 3f	 mov	 DWORD PTR [esp+12], 1065353216 ; 3f800000H
  0051f	c7 44 24 08 00
	00 80 3f	 mov	 DWORD PTR [esp+8], 1065353216 ; 3f800000H
  00527	c7 44 24 04 00
	00 80 3f	 mov	 DWORD PTR [esp+4], 1065353216 ; 3f800000H
  0052f	c7 04 24 00 00
	80 3f		 mov	 DWORD PTR [esp], 1065353216 ; 3f800000H
  00536	68 00 00 00 00	 push	 OFFSET ??_C@_0DF@OGBKMHIL@d?3?1ymir?5work?1ui?1public?1slotacti@
  0053b	e8 00 00 00 00	 call	 ?AppendImage@CAniImageBox@UI@@QAEXPBDMMMM@Z ; UI::CAniImageBox::AppendImage

; 1644 : 		m_pSlotActiveEffect[2]->AppendImage("d:/ymir work/ui/public/slotactiveeffect/slot3/11.sub");

  00540	8b 8e b8 00 00
	00		 mov	 ecx, DWORD PTR [esi+184]
  00546	83 ec 10	 sub	 esp, 16			; 00000010H
  00549	c7 44 24 0c 00
	00 80 3f	 mov	 DWORD PTR [esp+12], 1065353216 ; 3f800000H
  00551	c7 44 24 08 00
	00 80 3f	 mov	 DWORD PTR [esp+8], 1065353216 ; 3f800000H
  00559	c7 44 24 04 00
	00 80 3f	 mov	 DWORD PTR [esp+4], 1065353216 ; 3f800000H
  00561	c7 04 24 00 00
	80 3f		 mov	 DWORD PTR [esp], 1065353216 ; 3f800000H
  00568	68 00 00 00 00	 push	 OFFSET ??_C@_0DF@CNEGBECO@d?3?1ymir?5work?1ui?1public?1slotacti@
  0056d	e8 00 00 00 00	 call	 ?AppendImage@CAniImageBox@UI@@QAEXPBDMMMM@Z ; UI::CAniImageBox::AppendImage

; 1645 : 		m_pSlotActiveEffect[2]->AppendImage("d:/ymir work/ui/public/slotactiveeffect/slot3/12.sub");

  00572	8b 8e b8 00 00
	00		 mov	 ecx, DWORD PTR [esi+184]
  00578	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0DF@KLNCGGIA@d?3?1ymir?5work?1ui?1public?1slotacti@

; 1646 : 	}

  0057d	e9 a7 02 00 00	 jmp	 $LN7@CreateSlot
$LN6@CreateSlot:

; 1647 : 	else
; 1648 : 	{
; 1649 : 		__DestroySlotEnableEffect(activeSlot);

  00582	57		 push	 edi
  00583	e8 00 00 00 00	 call	 ?__DestroySlotEnableEffect@CSlotWindow@UI@@IAEXH@Z ; UI::CSlotWindow::__DestroySlotEnableEffect

; 1650 : 
; 1651 : 		m_pSlotActiveEffect[activeSlot] = new CAniImageBox(NULL);

  00588	68 94 00 00 00	 push	 148			; 00000094H
  0058d	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00592	83 c4 04	 add	 esp, 4
  00595	89 45 08	 mov	 DWORD PTR $T2[ebp], eax
  00598	c7 45 fc 02 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 2
  0059f	85 c0		 test	 eax, eax
  005a1	74 0b		 je	 SHORT $LN13@CreateSlot
  005a3	6a 00		 push	 0
  005a5	8b c8		 mov	 ecx, eax
  005a7	e8 00 00 00 00	 call	 ??0CAniImageBox@UI@@QAE@PAU_object@@@Z ; UI::CAniImageBox::CAniImageBox
  005ac	eb 02		 jmp	 SHORT $LN14@CreateSlot
$LN13@CreateSlot:
  005ae	33 c0		 xor	 eax, eax
$LN14@CreateSlot:

; 1652 : 		m_pSlotActiveEffect[activeSlot]->AppendImage("d:/ymir work/ui/public/slotactiveeffect/00.sub");

  005b0	83 ec 10	 sub	 esp, 16			; 00000010H
  005b3	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  005ba	8b c8		 mov	 ecx, eax
  005bc	89 84 be b0 00
	00 00		 mov	 DWORD PTR [esi+edi*4+176], eax
  005c3	c7 44 24 0c 00
	00 80 3f	 mov	 DWORD PTR [esp+12], 1065353216 ; 3f800000H
  005cb	c7 44 24 08 00
	00 80 3f	 mov	 DWORD PTR [esp+8], 1065353216 ; 3f800000H
  005d3	c7 44 24 04 00
	00 80 3f	 mov	 DWORD PTR [esp+4], 1065353216 ; 3f800000H
  005db	c7 04 24 00 00
	80 3f		 mov	 DWORD PTR [esp], 1065353216 ; 3f800000H
  005e2	68 00 00 00 00	 push	 OFFSET ??_C@_0CP@LLEDDNBJ@d?3?1ymir?5work?1ui?1public?1slotacti@
  005e7	e8 00 00 00 00	 call	 ?AppendImage@CAniImageBox@UI@@QAEXPBDMMMM@Z ; UI::CAniImageBox::AppendImage

; 1653 : 		m_pSlotActiveEffect[activeSlot]->AppendImage("d:/ymir work/ui/public/slotactiveeffect/01.sub");

  005ec	8b 8c be b0 00
	00 00		 mov	 ecx, DWORD PTR [esi+edi*4+176]
  005f3	83 ec 10	 sub	 esp, 16			; 00000010H
  005f6	c7 44 24 0c 00
	00 80 3f	 mov	 DWORD PTR [esp+12], 1065353216 ; 3f800000H
  005fe	c7 44 24 08 00
	00 80 3f	 mov	 DWORD PTR [esp+8], 1065353216 ; 3f800000H
  00606	c7 44 24 04 00
	00 80 3f	 mov	 DWORD PTR [esp+4], 1065353216 ; 3f800000H
  0060e	c7 04 24 00 00
	80 3f		 mov	 DWORD PTR [esp], 1065353216 ; 3f800000H
  00615	68 00 00 00 00	 push	 OFFSET ??_C@_0CP@HABPOOLM@d?3?1ymir?5work?1ui?1public?1slotacti@
  0061a	e8 00 00 00 00	 call	 ?AppendImage@CAniImageBox@UI@@QAEXPBDMMMM@Z ; UI::CAniImageBox::AppendImage

; 1654 : 		m_pSlotActiveEffect[activeSlot]->AppendImage("d:/ymir work/ui/public/slotactiveeffect/02.sub");

  0061f	8b 8c be b0 00
	00 00		 mov	 ecx, DWORD PTR [esi+edi*4+176]
  00626	83 ec 10	 sub	 esp, 16			; 00000010H
  00629	c7 44 24 0c 00
	00 80 3f	 mov	 DWORD PTR [esp+12], 1065353216 ; 3f800000H
  00631	c7 44 24 08 00
	00 80 3f	 mov	 DWORD PTR [esp+8], 1065353216 ; 3f800000H
  00639	c7 44 24 04 00
	00 80 3f	 mov	 DWORD PTR [esp+4], 1065353216 ; 3f800000H
  00641	c7 04 24 00 00
	80 3f		 mov	 DWORD PTR [esp], 1065353216 ; 3f800000H
  00648	68 00 00 00 00	 push	 OFFSET ??_C@_0CP@PGILJMBC@d?3?1ymir?5work?1ui?1public?1slotacti@
  0064d	e8 00 00 00 00	 call	 ?AppendImage@CAniImageBox@UI@@QAEXPBDMMMM@Z ; UI::CAniImageBox::AppendImage

; 1655 : 		m_pSlotActiveEffect[activeSlot]->AppendImage("d:/ymir work/ui/public/slotactiveeffect/03.sub");

  00652	8b 8c be b0 00
	00 00		 mov	 ecx, DWORD PTR [esi+edi*4+176]
  00659	83 ec 10	 sub	 esp, 16			; 00000010H
  0065c	c7 44 24 0c 00
	00 80 3f	 mov	 DWORD PTR [esp+12], 1065353216 ; 3f800000H
  00664	c7 44 24 08 00
	00 80 3f	 mov	 DWORD PTR [esp+8], 1065353216 ; 3f800000H
  0066c	c7 44 24 04 00
	00 80 3f	 mov	 DWORD PTR [esp+4], 1065353216 ; 3f800000H
  00674	c7 04 24 00 00
	80 3f		 mov	 DWORD PTR [esp], 1065353216 ; 3f800000H
  0067b	68 00 00 00 00	 push	 OFFSET ??_C@_0CP@DNNHEPLH@d?3?1ymir?5work?1ui?1public?1slotacti@
  00680	e8 00 00 00 00	 call	 ?AppendImage@CAniImageBox@UI@@QAEXPBDMMMM@Z ; UI::CAniImageBox::AppendImage

; 1656 : 		m_pSlotActiveEffect[activeSlot]->AppendImage("d:/ymir work/ui/public/slotactiveeffect/04.sub");

  00685	8b 8c be b0 00
	00 00		 mov	 ecx, DWORD PTR [esi+edi*4+176]
  0068c	83 ec 10	 sub	 esp, 16			; 00000010H
  0068f	c7 44 24 0c 00
	00 80 3f	 mov	 DWORD PTR [esp+12], 1065353216 ; 3f800000H
  00697	c7 44 24 08 00
	00 80 3f	 mov	 DWORD PTR [esp+8], 1065353216 ; 3f800000H
  0069f	c7 44 24 04 00
	00 80 3f	 mov	 DWORD PTR [esp+4], 1065353216 ; 3f800000H
  006a7	c7 04 24 00 00
	80 3f		 mov	 DWORD PTR [esp], 1065353216 ; 3f800000H
  006ae	68 00 00 00 00	 push	 OFFSET ??_C@_0CP@CANCHPAP@d?3?1ymir?5work?1ui?1public?1slotacti@
  006b3	e8 00 00 00 00	 call	 ?AppendImage@CAniImageBox@UI@@QAEXPBDMMMM@Z ; UI::CAniImageBox::AppendImage

; 1657 : 		m_pSlotActiveEffect[activeSlot]->AppendImage("d:/ymir work/ui/public/slotactiveeffect/05.sub");

  006b8	8b 8c be b0 00
	00 00		 mov	 ecx, DWORD PTR [esi+edi*4+176]
  006bf	83 ec 10	 sub	 esp, 16			; 00000010H
  006c2	c7 44 24 0c 00
	00 80 3f	 mov	 DWORD PTR [esp+12], 1065353216 ; 3f800000H
  006ca	c7 44 24 08 00
	00 80 3f	 mov	 DWORD PTR [esp+8], 1065353216 ; 3f800000H
  006d2	c7 44 24 04 00
	00 80 3f	 mov	 DWORD PTR [esp+4], 1065353216 ; 3f800000H
  006da	c7 04 24 00 00
	80 3f		 mov	 DWORD PTR [esp], 1065353216 ; 3f800000H
  006e1	68 00 00 00 00	 push	 OFFSET ??_C@_0CP@OLIOKMKK@d?3?1ymir?5work?1ui?1public?1slotacti@
  006e6	e8 00 00 00 00	 call	 ?AppendImage@CAniImageBox@UI@@QAEXPBDMMMM@Z ; UI::CAniImageBox::AppendImage

; 1658 : 		m_pSlotActiveEffect[activeSlot]->AppendImage("d:/ymir work/ui/public/slotactiveeffect/06.sub");

  006eb	8b 8c be b0 00
	00 00		 mov	 ecx, DWORD PTR [esi+edi*4+176]
  006f2	83 ec 10	 sub	 esp, 16			; 00000010H
  006f5	c7 44 24 0c 00
	00 80 3f	 mov	 DWORD PTR [esp+12], 1065353216 ; 3f800000H
  006fd	c7 44 24 08 00
	00 80 3f	 mov	 DWORD PTR [esp+8], 1065353216 ; 3f800000H
  00705	c7 44 24 04 00
	00 80 3f	 mov	 DWORD PTR [esp+4], 1065353216 ; 3f800000H
  0070d	c7 04 24 00 00
	80 3f		 mov	 DWORD PTR [esp], 1065353216 ; 3f800000H
  00714	68 00 00 00 00	 push	 OFFSET ??_C@_0CP@GNBKNOAE@d?3?1ymir?5work?1ui?1public?1slotacti@
  00719	e8 00 00 00 00	 call	 ?AppendImage@CAniImageBox@UI@@QAEXPBDMMMM@Z ; UI::CAniImageBox::AppendImage

; 1659 : 		m_pSlotActiveEffect[activeSlot]->AppendImage("d:/ymir work/ui/public/slotactiveeffect/07.sub");

  0071e	8b 8c be b0 00
	00 00		 mov	 ecx, DWORD PTR [esi+edi*4+176]
  00725	83 ec 10	 sub	 esp, 16			; 00000010H
  00728	c7 44 24 0c 00
	00 80 3f	 mov	 DWORD PTR [esp+12], 1065353216 ; 3f800000H
  00730	c7 44 24 08 00
	00 80 3f	 mov	 DWORD PTR [esp+8], 1065353216 ; 3f800000H
  00738	c7 44 24 04 00
	00 80 3f	 mov	 DWORD PTR [esp+4], 1065353216 ; 3f800000H
  00740	c7 04 24 00 00
	80 3f		 mov	 DWORD PTR [esp], 1065353216 ; 3f800000H
  00747	68 00 00 00 00	 push	 OFFSET ??_C@_0CP@KGEGANKB@d?3?1ymir?5work?1ui?1public?1slotacti@
  0074c	e8 00 00 00 00	 call	 ?AppendImage@CAniImageBox@UI@@QAEXPBDMMMM@Z ; UI::CAniImageBox::AppendImage

; 1660 : 		m_pSlotActiveEffect[activeSlot]->AppendImage("d:/ymir work/ui/public/slotactiveeffect/08.sub");

  00751	8b 8c be b0 00
	00 00		 mov	 ecx, DWORD PTR [esi+edi*4+176]
  00758	83 ec 10	 sub	 esp, 16			; 00000010H
  0075b	c7 44 24 0c 00
	00 80 3f	 mov	 DWORD PTR [esp+12], 1065353216 ; 3f800000H
  00763	c7 44 24 08 00
	00 80 3f	 mov	 DWORD PTR [esp+8], 1065353216 ; 3f800000H
  0076b	c7 44 24 04 00
	00 80 3f	 mov	 DWORD PTR [esp+4], 1065353216 ; 3f800000H
  00773	c7 04 24 00 00
	80 3f		 mov	 DWORD PTR [esp], 1065353216 ; 3f800000H
  0077a	68 00 00 00 00	 push	 OFFSET ??_C@_0CP@FHBALPHE@d?3?1ymir?5work?1ui?1public?1slotacti@
  0077f	e8 00 00 00 00	 call	 ?AppendImage@CAniImageBox@UI@@QAEXPBDMMMM@Z ; UI::CAniImageBox::AppendImage

; 1661 : 		m_pSlotActiveEffect[activeSlot]->AppendImage("d:/ymir work/ui/public/slotactiveeffect/09.sub");

  00784	8b 8c be b0 00
	00 00		 mov	 ecx, DWORD PTR [esi+edi*4+176]
  0078b	83 ec 10	 sub	 esp, 16			; 00000010H
  0078e	c7 44 24 0c 00
	00 80 3f	 mov	 DWORD PTR [esp+12], 1065353216 ; 3f800000H
  00796	c7 44 24 08 00
	00 80 3f	 mov	 DWORD PTR [esp+8], 1065353216 ; 3f800000H
  0079e	c7 44 24 04 00
	00 80 3f	 mov	 DWORD PTR [esp+4], 1065353216 ; 3f800000H
  007a6	c7 04 24 00 00
	80 3f		 mov	 DWORD PTR [esp], 1065353216 ; 3f800000H
  007ad	68 00 00 00 00	 push	 OFFSET ??_C@_0CP@JMEMGMNB@d?3?1ymir?5work?1ui?1public?1slotacti@
  007b2	e8 00 00 00 00	 call	 ?AppendImage@CAniImageBox@UI@@QAEXPBDMMMM@Z ; UI::CAniImageBox::AppendImage

; 1662 : 		m_pSlotActiveEffect[activeSlot]->AppendImage("d:/ymir work/ui/public/slotactiveeffect/10.sub");

  007b7	8b 8c be b0 00
	00 00		 mov	 ecx, DWORD PTR [esi+edi*4+176]
  007be	83 ec 10	 sub	 esp, 16			; 00000010H
  007c1	c7 44 24 0c 00
	00 80 3f	 mov	 DWORD PTR [esp+12], 1065353216 ; 3f800000H
  007c9	c7 44 24 08 00
	00 80 3f	 mov	 DWORD PTR [esp+8], 1065353216 ; 3f800000H
  007d1	c7 44 24 04 00
	00 80 3f	 mov	 DWORD PTR [esp+4], 1065353216 ; 3f800000H
  007d9	c7 04 24 00 00
	80 3f		 mov	 DWORD PTR [esp], 1065353216 ; 3f800000H
  007e0	68 00 00 00 00	 push	 OFFSET ??_C@_0CP@BNDEDGKN@d?3?1ymir?5work?1ui?1public?1slotacti@
  007e5	e8 00 00 00 00	 call	 ?AppendImage@CAniImageBox@UI@@QAEXPBDMMMM@Z ; UI::CAniImageBox::AppendImage

; 1663 : 		m_pSlotActiveEffect[activeSlot]->AppendImage("d:/ymir work/ui/public/slotactiveeffect/11.sub");

  007ea	8b 8c be b0 00
	00 00		 mov	 ecx, DWORD PTR [esi+edi*4+176]
  007f1	83 ec 10	 sub	 esp, 16			; 00000010H
  007f4	c7 44 24 0c 00
	00 80 3f	 mov	 DWORD PTR [esp+12], 1065353216 ; 3f800000H
  007fc	c7 44 24 08 00
	00 80 3f	 mov	 DWORD PTR [esp+8], 1065353216 ; 3f800000H
  00804	c7 44 24 04 00
	00 80 3f	 mov	 DWORD PTR [esp+4], 1065353216 ; 3f800000H
  0080c	c7 04 24 00 00
	80 3f		 mov	 DWORD PTR [esp], 1065353216 ; 3f800000H
  00813	68 00 00 00 00	 push	 OFFSET ??_C@_0CP@NGGIOFAI@d?3?1ymir?5work?1ui?1public?1slotacti@
  00818	e8 00 00 00 00	 call	 ?AppendImage@CAniImageBox@UI@@QAEXPBDMMMM@Z ; UI::CAniImageBox::AppendImage

; 1664 : 		m_pSlotActiveEffect[activeSlot]->AppendImage("d:/ymir work/ui/public/slotactiveeffect/12.sub");

  0081d	8b 8c be b0 00
	00 00		 mov	 ecx, DWORD PTR [esi+edi*4+176]
  00824	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0CP@FAPMJHKG@d?3?1ymir?5work?1ui?1public?1slotacti@
$LN7@CreateSlot:

; 1665 : 	}
; 1666 : 
; 1667 : 	m_pSlotActiveEffect[activeSlot]->SetRenderingMode(CGraphicExpandedImageInstance::RENDERING_MODE_SCREEN);

  00829	83 ec 10	 sub	 esp, 16			; 00000010H
  0082c	c7 44 24 0c 00
	00 80 3f	 mov	 DWORD PTR [esp+12], 1065353216 ; 3f800000H
  00834	c7 44 24 08 00
	00 80 3f	 mov	 DWORD PTR [esp+8], 1065353216 ; 3f800000H
  0083c	c7 44 24 04 00
	00 80 3f	 mov	 DWORD PTR [esp+4], 1065353216 ; 3f800000H
  00844	c7 04 24 00 00
	80 3f		 mov	 DWORD PTR [esp], 1065353216 ; 3f800000H
  0084b	50		 push	 eax
  0084c	e8 00 00 00 00	 call	 ?AppendImage@CAniImageBox@UI@@QAEXPBDMMMM@Z ; UI::CAniImageBox::AppendImage
  00851	8b 8c be b0 00
	00 00		 mov	 ecx, DWORD PTR [esi+edi*4+176]
  00858	6a 01		 push	 1
  0085a	e8 00 00 00 00	 call	 ?SetRenderingMode@CAniImageBox@UI@@QAEXH@Z ; UI::CAniImageBox::SetRenderingMode

; 1668 : 	m_pSlotActiveEffect[activeSlot]->Show();

  0085f	8b 8c be b0 00
	00 00		 mov	 ecx, DWORD PTR [esi+edi*4+176]
  00866	e8 00 00 00 00	 call	 ?Show@CWindow@UI@@QAEXXZ ; UI::CWindow::Show
$LN3@CreateSlot:

; 1669 : #else
; 1670 : 	__DestroySlotEnableEffect();
; 1671 : 
; 1672 : 	m_pSlotActiveEffect = new CAniImageBox(NULL);
; 1673 : 	m_pSlotActiveEffect->AppendImage("d:/ymir work/ui/public/slotactiveeffect/00.sub");
; 1674 : 	m_pSlotActiveEffect->AppendImage("d:/ymir work/ui/public/slotactiveeffect/01.sub");
; 1675 : 	m_pSlotActiveEffect->AppendImage("d:/ymir work/ui/public/slotactiveeffect/02.sub");
; 1676 : 	m_pSlotActiveEffect->AppendImage("d:/ymir work/ui/public/slotactiveeffect/03.sub");
; 1677 : 	m_pSlotActiveEffect->AppendImage("d:/ymir work/ui/public/slotactiveeffect/04.sub");
; 1678 : 	m_pSlotActiveEffect->AppendImage("d:/ymir work/ui/public/slotactiveeffect/05.sub");
; 1679 : 	m_pSlotActiveEffect->AppendImage("d:/ymir work/ui/public/slotactiveeffect/06.sub");
; 1680 : 	m_pSlotActiveEffect->AppendImage("d:/ymir work/ui/public/slotactiveeffect/07.sub");
; 1681 : 	m_pSlotActiveEffect->AppendImage("d:/ymir work/ui/public/slotactiveeffect/08.sub");
; 1682 : 	m_pSlotActiveEffect->AppendImage("d:/ymir work/ui/public/slotactiveeffect/09.sub");
; 1683 : 	m_pSlotActiveEffect->AppendImage("d:/ymir work/ui/public/slotactiveeffect/10.sub");
; 1684 : 	m_pSlotActiveEffect->AppendImage("d:/ymir work/ui/public/slotactiveeffect/11.sub");
; 1685 : 	m_pSlotActiveEffect->AppendImage("d:/ymir work/ui/public/slotactiveeffect/12.sub");
; 1686 : 	m_pSlotActiveEffect->SetRenderingMode(CGraphicExpandedImageInstance::RENDERING_MODE_SCREEN);
; 1687 : 	m_pSlotActiveEffect->Show();
; 1688 : #endif
; 1689 : }

  0086b	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0086e	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00875	59		 pop	 ecx
  00876	5f		 pop	 edi
  00877	5e		 pop	 esi
  00878	8b e5		 mov	 esp, ebp
  0087a	5d		 pop	 ebp
  0087b	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?__CreateSlotEnableEffect@CSlotWindow@UI@@IAEXH@Z$0:
  00000	68 94 00 00 00	 push	 148			; 00000094H
  00005	8b 45 08	 mov	 eax, DWORD PTR $T4[ebp]
  00008	50		 push	 eax
  00009	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0000e	83 c4 08	 add	 esp, 8
  00011	c3		 ret	 0
__unwindfunclet$?__CreateSlotEnableEffect@CSlotWindow@UI@@IAEXH@Z$1:
  00012	68 94 00 00 00	 push	 148			; 00000094H
  00017	8b 45 08	 mov	 eax, DWORD PTR $T3[ebp]
  0001a	50		 push	 eax
  0001b	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00020	83 c4 08	 add	 esp, 8
  00023	c3		 ret	 0
__unwindfunclet$?__CreateSlotEnableEffect@CSlotWindow@UI@@IAEXH@Z$2:
  00024	68 94 00 00 00	 push	 148			; 00000094H
  00029	8b 45 08	 mov	 eax, DWORD PTR $T2[ebp]
  0002c	50		 push	 eax
  0002d	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00032	83 c4 08	 add	 esp, 8
  00035	c3		 ret	 0
  00036	cc		 int	 3
  00037	cc		 int	 3
  00038	cc		 int	 3
  00039	cc		 int	 3
  0003a	cc		 int	 3
__ehhandler$?__CreateSlotEnableEffect@CSlotWindow@UI@@IAEXH@Z:
  0003b	90		 npad	 1
  0003c	90		 npad	 1
  0003d	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00041	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00044	8b 4a f4	 mov	 ecx, DWORD PTR [edx-12]
  00047	33 c8		 xor	 ecx, eax
  00049	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0004e	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?__CreateSlotEnableEffect@CSlotWindow@UI@@IAEXH@Z
  00053	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?__CreateSlotEnableEffect@CSlotWindow@UI@@IAEXH@Z ENDP	; UI::CSlotWindow::__CreateSlotEnableEffect
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ?__CreateToggleSlotImage@CSlotWindow@UI@@IAEXXZ
_TEXT	SEGMENT
$T2 = -16						; size = 4
__$EHRec$ = -12						; size = 12
?__CreateToggleSlotImage@CSlotWindow@UI@@IAEXXZ PROC	; UI::CSlotWindow::__CreateToggleSlotImage, COMDAT
; _this$ = ecx

; 1589 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?__CreateToggleSlotImage@CSlotWindow@UI@@IAEXXZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	56		 push	 esi
  00013	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00018	33 c5		 xor	 eax, ebp
  0001a	50		 push	 eax
  0001b	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001e	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00024	8b f1		 mov	 esi, ecx

; 1590 : 	__DestroyToggleSlotImage();

  00026	e8 00 00 00 00	 call	 ?__DestroyToggleSlotImage@CSlotWindow@UI@@IAEXXZ ; UI::CSlotWindow::__DestroyToggleSlotImage

; 1591 : 
; 1592 : 	m_pToggleSlotImage = new CImageBox(NULL);

  0002b	68 80 00 00 00	 push	 128			; 00000080H
  00030	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00035	83 c4 04	 add	 esp, 4
  00038	89 45 f0	 mov	 DWORD PTR $T2[ebp], eax
  0003b	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00042	85 c0		 test	 eax, eax
  00044	74 0b		 je	 SHORT $LN3@CreateTogg
  00046	6a 00		 push	 0
  00048	8b c8		 mov	 ecx, eax
  0004a	e8 00 00 00 00	 call	 ??0CImageBox@UI@@QAE@PAU_object@@@Z ; UI::CImageBox::CImageBox
  0004f	eb 02		 jmp	 SHORT $LN4@CreateTogg
$LN3@CreateTogg:
  00051	33 c0		 xor	 eax, eax
$LN4@CreateTogg:

; 1593 : 	m_pToggleSlotImage->LoadImage("d:/ymir work/ui/public/slot_toggle.sub");

  00053	68 00 00 00 00	 push	 OFFSET ??_C@_0CH@JJGPDFBJ@d?3?1ymir?5work?1ui?1public?1slot_tog@
  00058	8b c8		 mov	 ecx, eax
  0005a	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00061	89 86 ac 00 00
	00		 mov	 DWORD PTR [esi+172], eax
  00067	e8 00 00 00 00	 call	 ?LoadImageA@CImageBox@UI@@QAEHPBD@Z ; UI::CImageBox::LoadImageA

; 1594 : 	m_pToggleSlotImage->Show();

  0006c	8b 8e ac 00 00
	00		 mov	 ecx, DWORD PTR [esi+172]
  00072	e8 00 00 00 00	 call	 ?Show@CWindow@UI@@QAEXXZ ; UI::CWindow::Show

; 1595 : }

  00077	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0007a	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00081	59		 pop	 ecx
  00082	5e		 pop	 esi
  00083	8b e5		 mov	 esp, ebp
  00085	5d		 pop	 ebp
  00086	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?__CreateToggleSlotImage@CSlotWindow@UI@@IAEXXZ$0:
  00000	68 80 00 00 00	 push	 128			; 00000080H
  00005	8b 45 f0	 mov	 eax, DWORD PTR $T2[ebp]
  00008	50		 push	 eax
  00009	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0000e	83 c4 08	 add	 esp, 8
  00011	c3		 ret	 0
  00012	cc		 int	 3
  00013	cc		 int	 3
  00014	cc		 int	 3
  00015	cc		 int	 3
  00016	cc		 int	 3
__ehhandler$?__CreateToggleSlotImage@CSlotWindow@UI@@IAEXXZ:
  00017	90		 npad	 1
  00018	90		 npad	 1
  00019	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0001d	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00020	8b 4a f4	 mov	 ecx, DWORD PTR [edx-12]
  00023	33 c8		 xor	 ecx, eax
  00025	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0002a	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?__CreateToggleSlotImage@CSlotWindow@UI@@IAEXXZ
  0002f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?__CreateToggleSlotImage@CSlotWindow@UI@@IAEXXZ ENDP	; UI::CSlotWindow::__CreateToggleSlotImage
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ?__Initialize@CSlotWindow@UI@@IAEXXZ
_TEXT	SEGMENT
?__Initialize@CSlotWindow@UI@@IAEXXZ PROC		; UI::CSlotWindow::__Initialize, COMDAT
; _this$ = ecx

; 1818 : 	m_dwSlotType = 0;

  00000	c7 41 7c 00 00
	00 00		 mov	 DWORD PTR [ecx+124], 0

; 1819 : 	m_dwSlotStyle = SLOT_STYLE_PICK_UP;

  00007	c7 81 80 00 00
	00 01 00 00 00	 mov	 DWORD PTR [ecx+128], 1

; 1820 : 	m_dwToolTipSlotNumber = SLOT_NUMBER_NONE;

  00011	c7 81 94 00 00
	00 ff ff ff ff	 mov	 DWORD PTR [ecx+148], -1

; 1821 : 
; 1822 : 	m_isUseMode = FALSE;

  0001b	c7 81 a0 00 00
	00 00 00 00 00	 mov	 DWORD PTR [ecx+160], 0

; 1823 : 	m_isUsableItem = FALSE;

  00025	c7 81 a4 00 00
	00 00 00 00 00	 mov	 DWORD PTR [ecx+164], 0

; 1824 : 
; 1825 : 	m_pToggleSlotImage = NULL;

  0002f	c7 81 ac 00 00
	00 00 00 00 00	 mov	 DWORD PTR [ecx+172], 0

; 1826 : #ifdef WJ_ENABLE_PICKUP_ITEM_EFFECT
; 1827 : 	m_pSlotActiveEffect[0] = NULL;

  00039	c7 81 b0 00 00
	00 00 00 00 00	 mov	 DWORD PTR [ecx+176], 0

; 1828 : 	m_pSlotActiveEffect[1] = NULL;

  00043	c7 81 b4 00 00
	00 00 00 00 00	 mov	 DWORD PTR [ecx+180], 0

; 1829 : 	m_pSlotActiveEffect[2] = NULL;

  0004d	c7 81 b8 00 00
	00 00 00 00 00	 mov	 DWORD PTR [ecx+184], 0

; 1830 : #else
; 1831 : 	m_pSlotActiveEffect = NULL;
; 1832 : #endif
; 1833 : 	m_pBaseImageInstance = NULL;

  00057	c7 81 a8 00 00
	00 00 00 00 00	 mov	 DWORD PTR [ecx+168], 0

; 1834 : 	
; 1835 : 	m_fScaleX = 1.0f;

  00061	c7 81 bc 00 00
	00 00 00 80 3f	 mov	 DWORD PTR [ecx+188], 1065353216 ; 3f800000H

; 1836 : 	m_fScaleY = 1.0f;

  0006b	c7 81 c0 00 00
	00 00 00 80 3f	 mov	 DWORD PTR [ecx+192], 1065353216 ; 3f800000H

; 1837 : }

  00075	c3		 ret	 0
?__Initialize@CSlotWindow@UI@@IAEXXZ ENDP		; UI::CSlotWindow::__Initialize
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ?DeactivateEffect@CSlotWindow@UI@@QAEXK@Z
_TEXT	SEGMENT
_pSlot$ = -4						; size = 4
_dwSlotIndex$ = 8					; size = 4
?DeactivateEffect@CSlotWindow@UI@@QAEXK@Z PROC		; UI::CSlotWindow::DeactivateEffect, COMDAT
; _this$ = ecx

; 1563 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 1564 : 	TSlot * pSlot;
; 1565 : 	if (!GetSlotPointer(dwSlotIndex, &pSlot))

  00004	8d 45 fc	 lea	 eax, DWORD PTR _pSlot$[ebp]
  00007	50		 push	 eax
  00008	ff 75 08	 push	 DWORD PTR _dwSlotIndex$[ebp]
  0000b	e8 00 00 00 00	 call	 ?GetSlotPointer@CSlotWindow@UI@@IAEHKPAPAUSSlot@12@@Z ; UI::CSlotWindow::GetSlotPointer
  00010	85 c0		 test	 eax, eax
  00012	74 2a		 je	 SHORT $LN3@Deactivate

; 1566 : 		return;
; 1567 : 
; 1568 : 	for (auto& pActiveEff : pSlot->pActiveSlotEffect)

  00014	56		 push	 esi
  00015	8b 75 fc	 mov	 esi, DWORD PTR _pSlot$[ebp]
  00018	83 c6 70	 add	 esi, 112		; 00000070H
  0001b	57		 push	 edi
  0001c	8d 7e 0c	 lea	 edi, DWORD PTR [esi+12]
  0001f	3b f7		 cmp	 esi, edi
  00021	74 19		 je	 SHORT $LN16@Deactivate
$LL4@Deactivate:

; 1569 : 	{
; 1570 : 		if (pActiveEff)

  00023	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00025	85 c9		 test	 ecx, ecx
  00027	74 0c		 je	 SHORT $LN2@Deactivate

; 1571 : 		{
; 1572 : 			delete pActiveEff;

  00029	8b 01		 mov	 eax, DWORD PTR [ecx]
  0002b	6a 01		 push	 1
  0002d	ff 10		 call	 DWORD PTR [eax]

; 1573 : 			pActiveEff = NULL;

  0002f	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], 0
$LN2@Deactivate:

; 1566 : 		return;
; 1567 : 
; 1568 : 	for (auto& pActiveEff : pSlot->pActiveSlotEffect)

  00035	83 c6 04	 add	 esi, 4
  00038	3b f7		 cmp	 esi, edi
  0003a	75 e7		 jne	 SHORT $LL4@Deactivate
$LN16@Deactivate:
  0003c	5f		 pop	 edi
  0003d	5e		 pop	 esi
$LN3@Deactivate:

; 1574 : 		}
; 1575 : 	}
; 1576 : }

  0003e	8b e5		 mov	 esp, ebp
  00040	5d		 pop	 ebp
  00041	c2 04 00	 ret	 4
?DeactivateEffect@CSlotWindow@UI@@QAEXK@Z ENDP		; UI::CSlotWindow::DeactivateEffect
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ?ActivateEffect@CSlotWindow@UI@@QAEXKMMMM@Z
_TEXT	SEGMENT
$T2 = -92						; size = 4
_pSlot$ = -92						; size = 4
_cBuf$3 = -88						; size = 72
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_dwSlotIndex$ = 8					; size = 4
_r$ = 12						; size = 4
_g$ = 16						; size = 4
_b$ = 20						; size = 4
_a$ = 24						; size = 4
?ActivateEffect@CSlotWindow@UI@@QAEXKMMMM@Z PROC	; UI::CSlotWindow::ActivateEffect, COMDAT
; _this$ = ecx

; 1533 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?ActivateEffect@CSlotWindow@UI@@QAEXKMMMM@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 50	 sub	 esp, 80			; 00000050H
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	89 45 f0	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  0001e	53		 push	 ebx
  0001f	56		 push	 esi
  00020	57		 push	 edi
  00021	50		 push	 eax
  00022	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00025	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax

; 1534 : 	TSlot * pSlot;
; 1535 : 	if (!GetSlotPointer(dwSlotIndex, &pSlot))

  0002b	8d 45 a4	 lea	 eax, DWORD PTR _pSlot$[ebp]
  0002e	50		 push	 eax
  0002f	ff 75 08	 push	 DWORD PTR _dwSlotIndex$[ebp]
  00032	e8 00 00 00 00	 call	 ?GetSlotPointer@CSlotWindow@UI@@IAEHKPAPAUSSlot@12@@Z ; UI::CSlotWindow::GetSlotPointer
  00037	85 c0		 test	 eax, eax
  00039	0f 84 bb 00 00
	00		 je	 $LN3@ActivateEf

; 1536 : 		return;
; 1537 : 
; 1538 : 	for (int i = 0; i < 3; ++i)

  0003f	8b 75 a4	 mov	 esi, DWORD PTR _pSlot$[ebp]
  00042	33 db		 xor	 ebx, ebx
  00044	83 c6 70	 add	 esi, 112		; 00000070H
$LL4@ActivateEf:

; 1539 : 	{
; 1540 : 		auto& pActiveEff = pSlot->pActiveSlotEffect[i];
; 1541 : 
; 1542 : 		if (pActiveEff)

  00047	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00049	85 c9		 test	 ecx, ecx
  0004b	74 0c		 je	 SHORT $LN9@ActivateEf

; 1543 : 		{
; 1544 : 			delete pActiveEff;

  0004d	8b 01		 mov	 eax, DWORD PTR [ecx]
  0004f	6a 01		 push	 1
  00051	ff 10		 call	 DWORD PTR [eax]

; 1545 : 			pActiveEff = NULL;

  00053	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], 0
$LN9@ActivateEf:

; 1546 : 		}
; 1547 : 
; 1548 : 		const int ciImageCount = 12;
; 1549 : 
; 1550 : 		pActiveEff = new CAniImageBox(NULL);

  00059	68 94 00 00 00	 push	 148			; 00000094H
  0005e	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00063	83 c4 04	 add	 esp, 4
  00066	89 45 a4	 mov	 DWORD PTR $T2[ebp], eax
  00069	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00070	85 c0		 test	 eax, eax
  00072	74 0b		 je	 SHORT $LN13@ActivateEf
  00074	6a 00		 push	 0
  00076	8b c8		 mov	 ecx, eax
  00078	e8 00 00 00 00	 call	 ??0CAniImageBox@UI@@QAE@PAU_object@@@Z ; UI::CAniImageBox::CAniImageBox
  0007d	eb 02		 jmp	 SHORT $LN14@ActivateEf
$LN13@ActivateEf:
  0007f	33 c0		 xor	 eax, eax
$LN14@ActivateEf:
  00081	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00088	33 ff		 xor	 edi, edi
  0008a	89 06		 mov	 DWORD PTR [esi], eax
  0008c	0f 1f 40 00	 npad	 4
$LL7@ActivateEf:

; 1551 : 		for (int j = 0; j <= ciImageCount ; ++j)
; 1552 : 		{
; 1553 : 			char cBuf[72];
; 1554 : 			snprintf(cBuf, sizeof(cBuf), "d:/ymir work/ui/public/slotactiveeffect/slot%d/%02d.sub", (i + 1), j);

  00090	57		 push	 edi
  00091	8d 43 01	 lea	 eax, DWORD PTR [ebx+1]
  00094	50		 push	 eax
  00095	68 00 00 00 00	 push	 OFFSET ??_C@_0DI@PPHKLJOI@d?3?1ymir?5work?1ui?1public?1slotacti@
  0009a	8d 45 a8	 lea	 eax, DWORD PTR _cBuf$3[ebp]
  0009d	6a 48		 push	 72			; 00000048H
  0009f	50		 push	 eax
  000a0	e8 00 00 00 00	 call	 __snprintf

; 1555 : 			pActiveEff->AppendImage(cBuf, r, g, b, a);

  000a5	f3 0f 10 45 18	 movss	 xmm0, DWORD PTR _a$[ebp]
  000aa	8d 45 a8	 lea	 eax, DWORD PTR _cBuf$3[ebp]
  000ad	8b 0e		 mov	 ecx, DWORD PTR [esi]
  000af	83 c4 04	 add	 esp, 4
  000b2	f3 0f 11 44 24
	0c		 movss	 DWORD PTR [esp+12], xmm0
  000b8	f3 0f 10 45 14	 movss	 xmm0, DWORD PTR _b$[ebp]
  000bd	f3 0f 11 44 24
	08		 movss	 DWORD PTR [esp+8], xmm0
  000c3	f3 0f 10 45 10	 movss	 xmm0, DWORD PTR _g$[ebp]
  000c8	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  000ce	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR _r$[ebp]
  000d3	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000d8	50		 push	 eax
  000d9	e8 00 00 00 00	 call	 ?AppendImage@CAniImageBox@UI@@QAEXPBDMMMM@Z ; UI::CAniImageBox::AppendImage
  000de	47		 inc	 edi
  000df	83 ff 0c	 cmp	 edi, 12			; 0000000cH
  000e2	7e ac		 jle	 SHORT $LL7@ActivateEf

; 1556 : 		}
; 1557 : 
; 1558 : 		pActiveEff->SetRenderingMode(CGraphicExpandedImageInstance::RENDERING_MODE_SCREEN);

  000e4	8b 0e		 mov	 ecx, DWORD PTR [esi]
  000e6	6a 01		 push	 1
  000e8	e8 00 00 00 00	 call	 ?SetRenderingMode@CAniImageBox@UI@@QAEXH@Z ; UI::CAniImageBox::SetRenderingMode
  000ed	43		 inc	 ebx
  000ee	83 c6 04	 add	 esi, 4
  000f1	83 fb 03	 cmp	 ebx, 3
  000f4	0f 8c 4d ff ff
	ff		 jl	 $LL4@ActivateEf
$LN3@ActivateEf:

; 1559 : 	}
; 1560 : }

  000fa	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000fd	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00104	59		 pop	 ecx
  00105	5f		 pop	 edi
  00106	5e		 pop	 esi
  00107	5b		 pop	 ebx
  00108	8b 4d f0	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0010b	33 cd		 xor	 ecx, ebp
  0010d	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00112	8b e5		 mov	 esp, ebp
  00114	5d		 pop	 ebp
  00115	c2 14 00	 ret	 20			; 00000014H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?ActivateEffect@CSlotWindow@UI@@QAEXKMMMM@Z$0:
  00000	68 94 00 00 00	 push	 148			; 00000094H
  00005	8b 45 a4	 mov	 eax, DWORD PTR $T2[ebp]
  00008	50		 push	 eax
  00009	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0000e	83 c4 08	 add	 esp, 8
  00011	c3		 ret	 0
  00012	cc		 int	 3
  00013	cc		 int	 3
  00014	cc		 int	 3
  00015	cc		 int	 3
  00016	cc		 int	 3
__ehhandler$?ActivateEffect@CSlotWindow@UI@@QAEXKMMMM@Z:
  00017	90		 npad	 1
  00018	90		 npad	 1
  00019	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0001d	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00020	8b 4a a0	 mov	 ecx, DWORD PTR [edx-96]
  00023	33 c8		 xor	 ecx, eax
  00025	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0002a	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  0002d	33 c8		 xor	 ecx, eax
  0002f	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00034	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?ActivateEffect@CSlotWindow@UI@@QAEXKMMMM@Z
  00039	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?ActivateEffect@CSlotWindow@UI@@QAEXKMMMM@Z ENDP	; UI::CSlotWindow::ActivateEffect
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonSlotWindow.cpp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\deque
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonSlotWindow.cpp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\deque
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonSlotWindow.cpp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\deque
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\deque
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\deque
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ?ReserveDestroyCoolTimeFinishEffect@CSlotWindow@UI@@QAEXK@Z
_TEXT	SEGMENT
_dwSlotIndex$ = 8					; size = 4
?ReserveDestroyCoolTimeFinishEffect@CSlotWindow@UI@@QAEXK@Z PROC ; UI::CSlotWindow::ReserveDestroyCoolTimeFinishEffect, COMDAT
; _this$ = ecx

; 1521 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\deque

; 1106 :         if ((_Myoff() + _Mysize()) % _Block_size == 0 && _Mapsize() <= (_Mysize() + _Block_size) / _Block_size) {

  00003	8b 91 d0 00 00
	00		 mov	 edx, DWORD PTR [ecx+208]
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonSlotWindow.cpp

; 1521 : {

  00009	53		 push	 ebx
  0000a	56		 push	 esi

; 1522 : 	m_ReserveDestroyEffectDeque.push_back(dwSlotIndex);

  0000b	8d b1 c4 00 00
	00		 lea	 esi, DWORD PTR [ecx+196]
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\deque

; 1106 :         if ((_Myoff() + _Mysize()) % _Block_size == 0 && _Mapsize() <= (_Mysize() + _Block_size) / _Block_size) {

  00011	8b 4e 10	 mov	 ecx, DWORD PTR [esi+16]
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonSlotWindow.cpp

; 1521 : {

  00014	57		 push	 edi
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\deque

; 1106 :         if ((_Myoff() + _Mysize()) % _Block_size == 0 && _Mapsize() <= (_Mysize() + _Block_size) / _Block_size) {

  00015	8b f9		 mov	 edi, ecx
  00017	8d 04 0a	 lea	 eax, DWORD PTR [edx+ecx]
  0001a	a8 03		 test	 al, 3
  0001c	75 1a		 jne	 SHORT $LN6@ReserveDes
  0001e	8d 41 04	 lea	 eax, DWORD PTR [ecx+4]
  00021	c1 e8 02	 shr	 eax, 2
  00024	39 46 08	 cmp	 DWORD PTR [esi+8], eax
  00027	77 0f		 ja	 SHORT $LN6@ReserveDes

; 1107 :             _Growmap(1);

  00029	6a 01		 push	 1
  0002b	8b ce		 mov	 ecx, esi
  0002d	e8 00 00 00 00	 call	 ?_Growmap@?$deque@KV?$allocator@K@std@@@std@@AAEXI@Z ; std::deque<unsigned long,std::allocator<unsigned long> >::_Growmap
  00032	8b 56 0c	 mov	 edx, DWORD PTR [esi+12]
  00035	8b 7e 10	 mov	 edi, DWORD PTR [esi+16]
$LN6@ReserveDes:

; 1108 :         }
; 1109 :         _Myoff() &= _Mapsize() * _Block_size - 1;

  00038	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]
  0003b	8d 04 8d ff ff
	ff ff		 lea	 eax, DWORD PTR [ecx*4-1]

; 559  :         return (_Off / _Block_size) & (_Mapsize - 1);

  00042	49		 dec	 ecx

; 1109 :         _Myoff() &= _Mapsize() * _Block_size - 1;

  00043	23 c2		 and	 eax, edx
  00045	89 46 0c	 mov	 DWORD PTR [esi+12], eax

; 1110 :         size_type _Newoff = _Myoff() + _Mysize();

  00048	03 f8		 add	 edi, eax

; 559  :         return (_Off / _Block_size) & (_Mapsize - 1);

  0004a	8b c7		 mov	 eax, edi
  0004c	c1 e8 02	 shr	 eax, 2
  0004f	23 c8		 and	 ecx, eax

; 1112 :         if (_Map()[_Block] == nullptr) {

  00051	8d 1c 8d 00 00
	00 00		 lea	 ebx, DWORD PTR [ecx*4]
  00058	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  0005b	83 3c 19 00	 cmp	 DWORD PTR [ecx+ebx], 0
  0005f	75 13		 jne	 SHORT $LN7@ReserveDes
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory

; 79   :         return ::operator new(_Bytes);

  00061	6a 10		 push	 16			; 00000010H
  00063	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\deque

; 1113 :             _Map()[_Block] = _Getal().allocate(_Block_size);

  00068	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory

; 79   :         return ::operator new(_Bytes);

  0006b	83 c4 04	 add	 esp, 4
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\deque

; 1113 :             _Map()[_Block] = _Getal().allocate(_Block_size);

  0006e	89 04 0b	 mov	 DWORD PTR [ebx+ecx], eax
  00071	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
$LN7@ReserveDes:

; 1114 :         }
; 1115 : 
; 1116 :         _Alty_traits::construct(

  00074	8b 0c 0b	 mov	 ecx, DWORD PTR [ebx+ecx]
  00077	83 e7 03	 and	 edi, 3
  0007a	8b 45 08	 mov	 eax, DWORD PTR _dwSlotIndex$[ebp]
  0007d	89 04 b9	 mov	 DWORD PTR [ecx+edi*4], eax

; 1117 :             _Getal(), _Unfancy(_Map()[_Block] + _Newoff % _Block_size), _STD forward<_Tys>(_Vals)...);
; 1118 : 
; 1119 :         ++_Mysize();

  00080	ff 46 10	 inc	 DWORD PTR [esi+16]
  00083	5f		 pop	 edi
  00084	5e		 pop	 esi
  00085	5b		 pop	 ebx
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonSlotWindow.cpp

; 1523 : }

  00086	5d		 pop	 ebp
  00087	c2 04 00	 ret	 4
?ReserveDestroyCoolTimeFinishEffect@CSlotWindow@UI@@QAEXK@Z ENDP ; UI::CSlotWindow::ReserveDestroyCoolTimeFinishEffect
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ?SetUsableItem@CSlotWindow@UI@@QAEXH@Z
_TEXT	SEGMENT
_bFlag$ = 8						; size = 4
?SetUsableItem@CSlotWindow@UI@@QAEXH@Z PROC		; UI::CSlotWindow::SetUsableItem, COMDAT
; _this$ = ecx

; 1516 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1517 : 	m_isUsableItem = bFlag;

  00003	8b 45 08	 mov	 eax, DWORD PTR _bFlag$[ebp]
  00006	89 81 a4 00 00
	00		 mov	 DWORD PTR [ecx+164], eax

; 1518 : }

  0000c	5d		 pop	 ebp
  0000d	c2 04 00	 ret	 4
?SetUsableItem@CSlotWindow@UI@@QAEXH@Z ENDP		; UI::CSlotWindow::SetUsableItem
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ?SetUseMode@CSlotWindow@UI@@QAEXH@Z
_TEXT	SEGMENT
_bFlag$ = 8						; size = 4
?SetUseMode@CSlotWindow@UI@@QAEXH@Z PROC		; UI::CSlotWindow::SetUseMode, COMDAT
; _this$ = ecx

; 1511 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1512 : 	m_isUseMode = bFlag;

  00003	8b 45 08	 mov	 eax, DWORD PTR _bFlag$[ebp]
  00006	89 81 a0 00 00
	00		 mov	 DWORD PTR [ecx+160], eax

; 1513 : }

  0000c	5d		 pop	 ebp
  0000d	c2 04 00	 ret	 4
?SetUseMode@CSlotWindow@UI@@QAEXH@Z ENDP		; UI::CSlotWindow::SetUseMode
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ?OnOverOutItem@CSlotWindow@UI@@QAEXXZ
_TEXT	SEGMENT
?OnOverOutItem@CSlotWindow@UI@@QAEXXZ PROC		; UI::CSlotWindow::OnOverOutItem, COMDAT
; _this$ = ecx

; 1106 : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 1107 : 	if (SLOT_NUMBER_NONE == m_dwToolTipSlotNumber)

  00003	83 be 94 00 00
	00 ff		 cmp	 DWORD PTR [esi+148], -1
  0000a	74 26		 je	 SHORT $LN1@OnOverOutI

; 1108 : 		return;
; 1109 : 
; 1110 : 	m_dwToolTipSlotNumber = SLOT_NUMBER_NONE;
; 1111 : 	PyCallClassMemberFunc(m_poHandler, "OnOverOutItem", Py_BuildValue("()"));

  0000c	68 00 00 00 00	 push	 OFFSET ??_C@_02HCKGKOFO@?$CI?$CJ@
  00011	c7 86 94 00 00
	00 ff ff ff ff	 mov	 DWORD PTR [esi+148], -1
  0001b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__Py_BuildValue
  00021	50		 push	 eax
  00022	68 00 00 00 00	 push	 OFFSET ??_C@_0O@IBCIPGEP@OnOverOutItem@
  00027	ff 76 5c	 push	 DWORD PTR [esi+92]
  0002a	e8 00 00 00 00	 call	 ?PyCallClassMemberFunc@@YA_NPAU_object@@PBD0@Z ; PyCallClassMemberFunc
  0002f	83 c4 10	 add	 esp, 16			; 00000010H
$LN1@OnOverOutI:

; 1112 : }

  00032	5e		 pop	 esi
  00033	c3		 ret	 0
?OnOverOutItem@CSlotWindow@UI@@QAEXXZ ENDP		; UI::CSlotWindow::OnOverOutItem
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ?OnOverInItem@CSlotWindow@UI@@QAEHK@Z
_TEXT	SEGMENT
_pSlot$ = -4						; size = 4
_dwSlotNumber$ = 8					; size = 4
?OnOverInItem@CSlotWindow@UI@@QAEHK@Z PROC		; UI::CSlotWindow::OnOverInItem, COMDAT
; _this$ = ecx

; 1088 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	57		 push	 edi

; 1089 : 	TSlot * pSlot;
; 1090 : 	if (!GetSlotPointer(dwSlotNumber, &pSlot))

  00006	8b 7d 08	 mov	 edi, DWORD PTR _dwSlotNumber$[ebp]
  00009	8d 45 fc	 lea	 eax, DWORD PTR _pSlot$[ebp]
  0000c	50		 push	 eax
  0000d	57		 push	 edi
  0000e	8b f1		 mov	 esi, ecx
  00010	e8 00 00 00 00	 call	 ?GetSlotPointer@CSlotWindow@UI@@IAEHKPAPAUSSlot@12@@Z ; UI::CSlotWindow::GetSlotPointer
  00015	85 c0		 test	 eax, eax
  00017	74 4a		 je	 SHORT $LN6@OnOverInIt

; 1091 : 		return FALSE;
; 1092 : 
; 1093 : 	if (!pSlot->isItem)

  00019	8b 4d fc	 mov	 ecx, DWORD PTR _pSlot$[ebp]
  0001c	83 79 18 00	 cmp	 DWORD PTR [ecx+24], 0
  00020	74 41		 je	 SHORT $LN6@OnOverInIt

; 1095 : 
; 1096 : 	if (pSlot->dwSlotNumber == m_dwToolTipSlotNumber)

  00022	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00025	3b 86 94 00 00
	00		 cmp	 eax, DWORD PTR [esi+148]
  0002b	74 29		 je	 SHORT $LN7@OnOverInIt

; 1097 : 		return TRUE;
; 1098 : 
; 1099 : 	m_dwToolTipSlotNumber = dwSlotNumber;

  0002d	89 be 94 00 00
	00		 mov	 DWORD PTR [esi+148], edi

; 1100 : 	PyCallClassMemberFunc(m_poHandler, "OnOverInItem", Py_BuildValue("(iii)", dwSlotNumber,pSlot->dwItemIndex,pSlot->dwItemID));

  00033	ff 71 1c	 push	 DWORD PTR [ecx+28]
  00036	ff 71 14	 push	 DWORD PTR [ecx+20]
  00039	57		 push	 edi
  0003a	68 00 00 00 00	 push	 OFFSET ??_C@_05HEIOBLPG@?$CIiii?$CJ@
  0003f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__Py_BuildValue
  00045	50		 push	 eax
  00046	68 00 00 00 00	 push	 OFFSET ??_C@_0N@CBOPEHFH@OnOverInItem@
  0004b	ff 76 5c	 push	 DWORD PTR [esi+92]
  0004e	e8 00 00 00 00	 call	 ?PyCallClassMemberFunc@@YA_NPAU_object@@PBD0@Z ; PyCallClassMemberFunc
  00053	83 c4 1c	 add	 esp, 28			; 0000001cH
$LN7@OnOverInIt:

; 1101 : 
; 1102 : 	return TRUE;
; 1103 : }

  00056	5f		 pop	 edi
  00057	b8 01 00 00 00	 mov	 eax, 1
  0005c	5e		 pop	 esi
  0005d	8b e5		 mov	 esp, ebp
  0005f	5d		 pop	 ebp
  00060	c2 04 00	 ret	 4
$LN6@OnOverInIt:
  00063	5f		 pop	 edi

; 1094 : 		return FALSE;

  00064	33 c0		 xor	 eax, eax

; 1101 : 
; 1102 : 	return TRUE;
; 1103 : }

  00066	5e		 pop	 esi
  00067	8b e5		 mov	 esp, ebp
  00069	5d		 pop	 ebp
  0006a	c2 04 00	 ret	 4
?OnOverInItem@CSlotWindow@UI@@QAEHK@Z ENDP		; UI::CSlotWindow::OnOverInItem
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ?HideRequirementSign@CSlotWindow@UI@@QAEXK@Z
_TEXT	SEGMENT
_pSlot$ = -4						; size = 4
_dwSlotNumber$ = 8					; size = 4
?HideRequirementSign@CSlotWindow@UI@@QAEXK@Z PROC	; UI::CSlotWindow::HideRequirementSign, COMDAT
; _this$ = ecx

; 898  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 899  : 	TSlot * pSlot;
; 900  : 	if (!GetSlotPointer(dwSlotNumber, &pSlot))

  00004	8d 45 fc	 lea	 eax, DWORD PTR _pSlot$[ebp]
  00007	50		 push	 eax
  00008	ff 75 08	 push	 DWORD PTR _dwSlotNumber$[ebp]
  0000b	e8 00 00 00 00	 call	 ?GetSlotPointer@CSlotWindow@UI@@IAEHKPAPAUSSlot@12@@Z ; UI::CSlotWindow::GetSlotPointer
  00010	85 c0		 test	 eax, eax
  00012	74 0f		 je	 SHORT $LN1@HideRequir

; 901  : 		return;
; 902  : 
; 903  : 	if (!pSlot->pSignImage)

  00014	8b 45 fc	 mov	 eax, DWORD PTR _pSlot$[ebp]
  00017	8b 48 68	 mov	 ecx, DWORD PTR [eax+104]
  0001a	85 c9		 test	 ecx, ecx
  0001c	74 05		 je	 SHORT $LN1@HideRequir

; 904  : 		return;
; 905  : 
; 906  : 	pSlot->pSignImage->Hide();

  0001e	e8 00 00 00 00	 call	 ?Hide@CWindow@UI@@QAEXXZ ; UI::CWindow::Hide
$LN1@HideRequir:

; 907  : }

  00023	8b e5		 mov	 esp, ebp
  00025	5d		 pop	 ebp
  00026	c2 04 00	 ret	 4
?HideRequirementSign@CSlotWindow@UI@@QAEXK@Z ENDP	; UI::CSlotWindow::HideRequirementSign
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ?ShowRequirementSign@CSlotWindow@UI@@QAEXK@Z
_TEXT	SEGMENT
_pSlot$ = -4						; size = 4
_dwSlotNumber$ = 8					; size = 4
?ShowRequirementSign@CSlotWindow@UI@@QAEXK@Z PROC	; UI::CSlotWindow::ShowRequirementSign, COMDAT
; _this$ = ecx

; 886  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 887  : 	TSlot * pSlot;
; 888  : 	if (!GetSlotPointer(dwSlotNumber, &pSlot))

  00004	8d 45 fc	 lea	 eax, DWORD PTR _pSlot$[ebp]
  00007	50		 push	 eax
  00008	ff 75 08	 push	 DWORD PTR _dwSlotNumber$[ebp]
  0000b	e8 00 00 00 00	 call	 ?GetSlotPointer@CSlotWindow@UI@@IAEHKPAPAUSSlot@12@@Z ; UI::CSlotWindow::GetSlotPointer
  00010	85 c0		 test	 eax, eax
  00012	74 0f		 je	 SHORT $LN1@ShowRequir

; 889  : 		return;
; 890  : 
; 891  : 	if (!pSlot->pSignImage)

  00014	8b 45 fc	 mov	 eax, DWORD PTR _pSlot$[ebp]
  00017	8b 48 68	 mov	 ecx, DWORD PTR [eax+104]
  0001a	85 c9		 test	 ecx, ecx
  0001c	74 05		 je	 SHORT $LN1@ShowRequir

; 892  : 		return;
; 893  : 
; 894  : 	pSlot->pSignImage->Show();

  0001e	e8 00 00 00 00	 call	 ?Show@CWindow@UI@@QAEXXZ ; UI::CWindow::Show
$LN1@ShowRequir:

; 895  : }

  00023	8b e5		 mov	 esp, ebp
  00025	5d		 pop	 ebp
  00026	c2 04 00	 ret	 4
?ShowRequirementSign@CSlotWindow@UI@@QAEXK@Z ENDP	; UI::CSlotWindow::ShowRequirementSign
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ?OnPressedSlotButton@CSlotWindow@UI@@QAEXKKH@Z
_TEXT	SEGMENT
_dwType$ = 8						; size = 4
_dwSlotNumber$ = 12					; size = 4
_isLeft$ = 16						; size = 4
?OnPressedSlotButton@CSlotWindow@UI@@QAEXKKH@Z PROC	; UI::CSlotWindow::OnPressedSlotButton, COMDAT
; _this$ = ecx

; 1115 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1116 : 	if (CSlotButton::SLOT_BUTTON_TYPE_PLUS == dwType)

  00003	8b 45 08	 mov	 eax, DWORD PTR _dwType$[ebp]
  00006	56		 push	 esi
  00007	8b f1		 mov	 esi, ecx
  00009	85 c0		 test	 eax, eax
  0000b	75 24		 jne	 SHORT $LN2@OnPressedS

; 1117 : 	{
; 1118 : 		PyCallClassMemberFunc(m_poHandler, "OnPressedSlotButton", Py_BuildValue("(i)", dwSlotNumber));

  0000d	ff 75 0c	 push	 DWORD PTR _dwSlotNumber$[ebp]
  00010	68 00 00 00 00	 push	 OFFSET ??_C@_03LIHNMIHG@?$CIi?$CJ@
  00015	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__Py_BuildValue
  0001b	50		 push	 eax
  0001c	68 00 00 00 00	 push	 OFFSET ??_C@_0BE@MBGDMPNF@OnPressedSlotButton@
  00021	ff 76 5c	 push	 DWORD PTR [esi+92]
  00024	e8 00 00 00 00	 call	 ?PyCallClassMemberFunc@@YA_NPAU_object@@PBD0@Z ; PyCallClassMemberFunc
  00029	83 c4 14	 add	 esp, 20			; 00000014H
  0002c	5e		 pop	 esi

; 1125 : 		}
; 1126 : 	}
; 1127 : }

  0002d	5d		 pop	 ebp
  0002e	c2 0c 00	 ret	 12			; 0000000cH
$LN2@OnPressedS:

; 1119 : 	}
; 1120 : 	else if (CSlotButton::SLOT_BUTTON_TYPE_COVER == dwType)

  00031	83 f8 01	 cmp	 eax, 1
  00034	75 0b		 jne	 SHORT $LN5@OnPressedS

; 1121 : 	{
; 1122 : 		if (isLeft)

  00036	83 7d 10 00	 cmp	 DWORD PTR _isLeft$[ebp], 0
  0003a	74 05		 je	 SHORT $LN5@OnPressedS

; 1123 : 		{
; 1124 : 			OnMouseLeftButtonDown();

  0003c	8b 06		 mov	 eax, DWORD PTR [esi]
  0003e	ff 50 58	 call	 DWORD PTR [eax+88]
$LN5@OnPressedS:
  00041	5e		 pop	 esi

; 1125 : 		}
; 1126 : 	}
; 1127 : }

  00042	5d		 pop	 ebp
  00043	c2 0c 00	 ret	 12			; 0000000cH
?OnPressedSlotButton@CSlotWindow@UI@@QAEXKKH@Z ENDP	; UI::CSlotWindow::OnPressedSlotButton
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonSlotWindow.cpp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\list
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonSlotWindow.cpp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\list
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ?HideAllSlotButton@CSlotWindow@UI@@QAEXXZ
_TEXT	SEGMENT
?HideAllSlotButton@CSlotWindow@UI@@QAEXXZ PROC		; UI::CSlotWindow::HideAllSlotButton, COMDAT
; _this$ = ecx

; 873  : {

  00000	56		 push	 esi
  00001	57		 push	 edi
  00002	8b f9		 mov	 edi, ecx
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\list

; 1083 :         return iterator(_Mypair._Myval2._Myhead->_Next, _STD addressof(_Mypair._Myval2));

  00004	8b 87 8c 00 00
	00		 mov	 eax, DWORD PTR [edi+140]

; 38   :     _List_unchecked_const_iterator(_Nodeptr _Pnode, const _Mylist* _Plist) noexcept : _Ptr(_Pnode) {

  0000a	8b 30		 mov	 esi, DWORD PTR [eax]
  0000c	3b f0		 cmp	 esi, eax
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonSlotWindow.cpp

; 874  : 	for (TSlotListIterator itor = m_SlotList.begin(); itor != m_SlotList.end(); ++itor)

  0000e	74 16		 je	 SHORT $LN3@HideAllSlo
$LL18@HideAllSlo:

; 875  : 	{
; 876  : 		TSlot & rSlot = *itor;
; 877  : 
; 878  : 		if (rSlot.pSlotButton)

  00010	8b 4e 6c	 mov	 ecx, DWORD PTR [esi+108]
  00013	85 c9		 test	 ecx, ecx
  00015	74 05		 je	 SHORT $LN2@HideAllSlo

; 879  : 		{
; 880  : 			rSlot.pSlotButton->Hide();

  00017	e8 00 00 00 00	 call	 ?Hide@CWindow@UI@@QAEXXZ ; UI::CWindow::Hide
$LN2@HideAllSlo:
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\list

; 165  :         this->_Ptr = this->_Ptr->_Next;

  0001c	8b 36		 mov	 esi, DWORD PTR [esi]

; 198  :         return this->_Ptr == _Right._Ptr;

  0001e	3b b7 8c 00 00
	00		 cmp	 esi, DWORD PTR [edi+140]
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonSlotWindow.cpp

; 874  : 	for (TSlotListIterator itor = m_SlotList.begin(); itor != m_SlotList.end(); ++itor)

  00024	75 ea		 jne	 SHORT $LL18@HideAllSlo
$LN3@HideAllSlo:
  00026	5f		 pop	 edi

; 881  : 		}
; 882  : 	}
; 883  : }

  00027	5e		 pop	 esi
  00028	c3		 ret	 0
?HideAllSlotButton@CSlotWindow@UI@@QAEXXZ ENDP		; UI::CSlotWindow::HideAllSlotButton
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ?ShowSlotButton@CSlotWindow@UI@@QAEXK@Z
_TEXT	SEGMENT
_pSlot$ = -4						; size = 4
_dwSlotNumber$ = 8					; size = 4
?ShowSlotButton@CSlotWindow@UI@@QAEXK@Z PROC		; UI::CSlotWindow::ShowSlotButton, COMDAT
; _this$ = ecx

; 861  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 862  : 	TSlot * pSlot;
; 863  : 	if (!GetSlotPointer(dwSlotNumber, &pSlot))

  00004	8d 45 fc	 lea	 eax, DWORD PTR _pSlot$[ebp]
  00007	50		 push	 eax
  00008	ff 75 08	 push	 DWORD PTR _dwSlotNumber$[ebp]
  0000b	e8 00 00 00 00	 call	 ?GetSlotPointer@CSlotWindow@UI@@IAEHKPAPAUSSlot@12@@Z ; UI::CSlotWindow::GetSlotPointer
  00010	85 c0		 test	 eax, eax
  00012	74 0f		 je	 SHORT $LN3@ShowSlotBu

; 864  : 		return;
; 865  : 
; 866  : 	if (pSlot->pSlotButton)

  00014	8b 45 fc	 mov	 eax, DWORD PTR _pSlot$[ebp]
  00017	8b 48 64	 mov	 ecx, DWORD PTR [eax+100]
  0001a	85 c9		 test	 ecx, ecx
  0001c	74 05		 je	 SHORT $LN3@ShowSlotBu

; 867  : 	{
; 868  : 		pSlot->pSlotButton->Show();

  0001e	e8 00 00 00 00	 call	 ?Show@CWindow@UI@@QAEXXZ ; UI::CWindow::Show
$LN3@ShowSlotBu:

; 869  : 	}
; 870  : }

  00023	8b e5		 mov	 esp, ebp
  00025	5d		 pop	 ebp
  00026	c2 04 00	 ret	 4
?ShowSlotButton@CSlotWindow@UI@@QAEXK@Z ENDP		; UI::CSlotWindow::ShowSlotButton
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonSlotWindow.cpp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\list
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonSlotWindow.cpp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\list
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonSlotWindow.cpp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\list
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonSlotWindow.cpp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\list
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ?GetSelectedSlotNumber@CSlotWindow@UI@@QAEKK@Z
_TEXT	SEGMENT
_dwIndex$ = 8						; size = 4
?GetSelectedSlotNumber@CSlotWindow@UI@@QAEKK@Z PROC	; UI::CSlotWindow::GetSelectedSlotNumber, COMDAT
; _this$ = ecx

; 843  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 844  : 	if (dwIndex >= m_dwSelectedSlotIndexList.size())

  00004	8b 75 08	 mov	 esi, DWORD PTR _dwIndex$[ebp]
  00007	3b b1 88 00 00
	00		 cmp	 esi, DWORD PTR [ecx+136]
  0000d	72 08		 jb	 SHORT $LN5@GetSelecte

; 845  : 		return DWORD(-1);

  0000f	83 c8 ff	 or	 eax, -1
  00012	5e		 pop	 esi

; 858  : }

  00013	5d		 pop	 ebp
  00014	c2 04 00	 ret	 4
$LN5@GetSelecte:
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\list

; 1083 :         return iterator(_Mypair._Myval2._Myhead->_Next, _STD addressof(_Mypair._Myval2));

  00017	8b 89 84 00 00
	00		 mov	 ecx, DWORD PTR [ecx+132]
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonSlotWindow.cpp

; 847  : 	DWORD dwCount = 0;

  0001d	33 d2		 xor	 edx, edx
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\list

; 38   :     _List_unchecked_const_iterator(_Nodeptr _Pnode, const _Mylist* _Plist) noexcept : _Ptr(_Pnode) {

  0001f	8b 01		 mov	 eax, DWORD PTR [ecx]
  00021	3b c1		 cmp	 eax, ecx
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonSlotWindow.cpp

; 849  : 	for (; itor != m_dwSelectedSlotIndexList.end(); ++itor)

  00023	74 0b		 je	 SHORT $LN41@GetSelecte
$LL19@GetSelecte:

; 850  : 	{
; 851  : 		if (dwIndex == dwCount)

  00025	3b f2		 cmp	 esi, edx
  00027	74 07		 je	 SHORT $LN41@GetSelecte
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\list

; 165  :         this->_Ptr = this->_Ptr->_Next;

  00029	8b 00		 mov	 eax, DWORD PTR [eax]
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonSlotWindow.cpp

; 854  : 		++dwCount;

  0002b	42		 inc	 edx
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\list

; 198  :         return this->_Ptr == _Right._Ptr;

  0002c	3b c1		 cmp	 eax, ecx
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonSlotWindow.cpp

; 849  : 	for (; itor != m_dwSelectedSlotIndexList.end(); ++itor)

  0002e	75 f5		 jne	 SHORT $LL19@GetSelecte
$LN41@GetSelecte:

; 855  : 	}
; 856  : 
; 857  : 	return *itor;

  00030	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  00033	5e		 pop	 esi

; 858  : }

  00034	5d		 pop	 ebp
  00035	c2 04 00	 ret	 4
?GetSelectedSlotNumber@CSlotWindow@UI@@QAEKK@Z ENDP	; UI::CSlotWindow::GetSelectedSlotNumber
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ?GetSelectedSlotCount@CSlotWindow@UI@@QAEKXZ
_TEXT	SEGMENT
?GetSelectedSlotCount@CSlotWindow@UI@@QAEKXZ PROC	; UI::CSlotWindow::GetSelectedSlotCount, COMDAT
; _this$ = ecx

; 839  : 	return m_dwSelectedSlotIndexList.size();

  00000	8b 81 88 00 00
	00		 mov	 eax, DWORD PTR [ecx+136]

; 840  : }

  00006	c3		 ret	 0
?GetSelectedSlotCount@CSlotWindow@UI@@QAEKXZ ENDP	; UI::CSlotWindow::GetSelectedSlotCount
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonSlotWindow.cpp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\list
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonSlotWindow.cpp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\list
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ?isSelectedSlot@CSlotWindow@UI@@QAEHK@Z
_TEXT	SEGMENT
_dwIndex$ = 8						; size = 4
?isSelectedSlot@CSlotWindow@UI@@QAEHK@Z PROC		; UI::CSlotWindow::isSelectedSlot, COMDAT
; _this$ = ecx

; 821  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\list

; 1083 :         return iterator(_Mypair._Myval2._Myhead->_Next, _STD addressof(_Mypair._Myval2));

  00003	8b 89 84 00 00
	00		 mov	 ecx, DWORD PTR [ecx+132]

; 38   :     _List_unchecked_const_iterator(_Nodeptr _Pnode, const _Mylist* _Plist) noexcept : _Ptr(_Pnode) {

  00009	8b 01		 mov	 eax, DWORD PTR [ecx]
  0000b	3b c1		 cmp	 eax, ecx
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonSlotWindow.cpp

; 823  : 	for (; itor != m_dwSelectedSlotIndexList.end(); ++itor)

  0000d	74 0e		 je	 SHORT $LN3@isSelected
  0000f	8b 55 08	 mov	 edx, DWORD PTR _dwIndex$[ebp]
$LL18@isSelected:

; 824  : 	{
; 825  : 		if (dwIndex == *itor)

  00012	3b 50 08	 cmp	 edx, DWORD PTR [eax+8]
  00015	74 0c		 je	 SHORT $LN36@isSelected
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\list

; 165  :         this->_Ptr = this->_Ptr->_Next;

  00017	8b 00		 mov	 eax, DWORD PTR [eax]

; 198  :         return this->_Ptr == _Right._Ptr;

  00019	3b c1		 cmp	 eax, ecx
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonSlotWindow.cpp

; 823  : 	for (; itor != m_dwSelectedSlotIndexList.end(); ++itor)

  0001b	75 f5		 jne	 SHORT $LL18@isSelected
$LN3@isSelected:

; 827  : 	}
; 828  : 
; 829  : 	return FALSE;

  0001d	33 c0		 xor	 eax, eax

; 830  : }

  0001f	5d		 pop	 ebp
  00020	c2 04 00	 ret	 4
$LN36@isSelected:

; 826  : 			return TRUE;

  00023	b8 01 00 00 00	 mov	 eax, 1

; 830  : }

  00028	5d		 pop	 ebp
  00029	c2 04 00	 ret	 4
?isSelectedSlot@CSlotWindow@UI@@QAEHK@Z ENDP		; UI::CSlotWindow::isSelectedSlot
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonSlotWindow.cpp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\list
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonSlotWindow.cpp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\list
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonSlotWindow.cpp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\list
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonSlotWindow.cpp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\list
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\list
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonSlotWindow.cpp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\list
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\list
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonSlotWindow.cpp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\list
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ?SelectSlot@CSlotWindow@UI@@QAEXK@Z
_TEXT	SEGMENT
__Op$2 = -20						; size = 8
_this$1$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pSlot$ = 8						; size = 4
_dwSelectingIndex$ = 8					; size = 4
?SelectSlot@CSlotWindow@UI@@QAEXK@Z PROC		; UI::CSlotWindow::SelectSlot, COMDAT
; _this$ = ecx

; 795  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?SelectSlot@CSlotWindow@UI@@QAEXK@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 08	 sub	 esp, 8
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00028	8b d1		 mov	 edx, ecx
  0002a	89 55 f0	 mov	 DWORD PTR _this$1$[ebp], edx
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\list

; 1083 :         return iterator(_Mypair._Myval2._Myhead->_Next, _STD addressof(_Mypair._Myval2));

  0002d	8b b2 84 00 00
	00		 mov	 esi, DWORD PTR [edx+132]
  00033	8d 9a 84 00 00
	00		 lea	 ebx, DWORD PTR [edx+132]
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonSlotWindow.cpp

; 797  : 	for (; itor != m_dwSelectedSlotIndexList.end();)

  00039	8b 7d 08	 mov	 edi, DWORD PTR _dwSelectingIndex$[ebp]
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\list

; 38   :     _List_unchecked_const_iterator(_Nodeptr _Pnode, const _Mylist* _Plist) noexcept : _Ptr(_Pnode) {

  0003c	8b 06		 mov	 eax, DWORD PTR [esi]
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonSlotWindow.cpp

; 797  : 	for (; itor != m_dwSelectedSlotIndexList.end();)

  0003e	3b c6		 cmp	 eax, esi
  00040	74 0d		 je	 SHORT $LN3@SelectSlot
$LL2@SelectSlot:

; 798  : 	{
; 799  : 		if (dwSelectingIndex == *itor)

  00042	8b 08		 mov	 ecx, DWORD PTR [eax]
  00044	3b 78 08	 cmp	 edi, DWORD PTR [eax+8]
  00047	74 2a		 je	 SHORT $LN133@SelectSlot
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\list

; 165  :         this->_Ptr = this->_Ptr->_Next;

  00049	8b c1		 mov	 eax, ecx
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonSlotWindow.cpp

; 797  : 	for (; itor != m_dwSelectedSlotIndexList.end();)

  0004b	3b ce		 cmp	 ecx, esi
  0004d	75 f3		 jne	 SHORT $LL2@SelectSlot
$LN3@SelectSlot:

; 800  : 		{
; 801  : 			itor = m_dwSelectedSlotIndexList.erase(itor);
; 802  : 			return;
; 803  : 		}
; 804  : 		else
; 805  : 		{
; 806  : 			++itor;
; 807  : 		}
; 808  : 	}
; 809  : 
; 810  : 	TSlot * pSlot;
; 811  : 	if (GetSlotPointer(dwSelectingIndex, &pSlot))

  0004f	8d 45 08	 lea	 eax, DWORD PTR _pSlot$[ebp]
  00052	8b ca		 mov	 ecx, edx
  00054	50		 push	 eax
  00055	57		 push	 edi
  00056	e8 00 00 00 00	 call	 ?GetSlotPointer@CSlotWindow@UI@@IAEHKPAPAUSSlot@12@@Z ; UI::CSlotWindow::GetSlotPointer
  0005b	85 c0		 test	 eax, eax
  0005d	74 77		 je	 SHORT $LN116@SelectSlot

; 812  : 	{
; 813  : 		if (!pSlot->isItem)

  0005f	8b 45 08	 mov	 eax, DWORD PTR _pSlot$[ebp]
  00062	83 78 18 00	 cmp	 DWORD PTR [eax+24], 0
  00066	74 6e		 je	 SHORT $LN116@SelectSlot
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\list

; 1005 :         if (_Mysize == max_size()) {

  00068	81 7b 04 55 55
	55 15		 cmp	 DWORD PTR [ebx+4], 357913941 ; 15555555H
  0006f	74 79		 je	 SHORT $LN140@SelectSlot
  00071	eb 35		 jmp	 SHORT $LN78@SelectSlot
$LN133@SelectSlot:

; 394  :         _Pnode->_Prev->_Next = _Pnode->_Next;

  00073	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory

; 255  :         ::operator delete(_Ptr, _Bytes);

  00076	6a 0c		 push	 12			; 0000000cH
  00078	50		 push	 eax
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\list

; 394  :         _Pnode->_Prev->_Next = _Pnode->_Next;

  00079	89 0a		 mov	 DWORD PTR [edx], ecx

; 395  :         _Pnode->_Next->_Prev = _Pnode->_Prev;

  0007b	8b 10		 mov	 edx, DWORD PTR [eax]
  0007d	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00080	89 4a 04	 mov	 DWORD PTR [edx+4], ecx

; 396  :         --_Mysize;

  00083	8b 4d f0	 mov	 ecx, DWORD PTR _this$1$[ebp]
  00086	ff 89 88 00 00
	00		 dec	 DWORD PTR [ecx+136]
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory

; 255  :         ::operator delete(_Ptr, _Bytes);

  0008c	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00091	83 c4 08	 add	 esp, 8
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonSlotWindow.cpp

; 818  : }

  00094	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00097	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0009e	59		 pop	 ecx
  0009f	5f		 pop	 edi
  000a0	5e		 pop	 esi
  000a1	5b		 pop	 ebx
  000a2	8b e5		 mov	 esp, ebp
  000a4	5d		 pop	 ebp
  000a5	c2 04 00	 ret	 4
$LN78@SelectSlot:
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory

; 958  :     _CONSTEXPR20_DYNALLOC explicit _Alloc_construct_ptr(_Alloc& _Al_) : _Al(_Al_), _Ptr(nullptr) {}

  000a8	89 5d ec	 mov	 DWORD PTR __Op$2[ebp], ebx

; 79   :         return ::operator new(_Bytes);

  000ab	6a 0c		 push	 12			; 0000000cH
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\list

; 582  :     explicit _List_node_emplace_op2(_Alnode& _Al_, _Valtys&&... _Vals) : _Alloc_construct_ptr<_Alnode>(_Al_) {

  000ad	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory

; 965  :         _Ptr = nullptr; // if allocate throws, prevents double-free

  000b4	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR __Op$2[ebp+4], 0

; 79   :         return ::operator new(_Bytes);

  000bb	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  000c0	83 c4 04	 add	 esp, 4
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\list

; 584  :         _Alnode_traits::construct(this->_Al, _STD addressof(this->_Ptr->_Myval), _STD forward<_Valtys>(_Vals)...);

  000c3	89 78 08	 mov	 DWORD PTR [eax+8], edi

; 1010 :         ++_Mysize;

  000c6	ff 43 04	 inc	 DWORD PTR [ebx+4]

; 597  :         const pointer _Insert_after = _Insert_before->_Prev;

  000c9	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]

; 598  :         _Construct_in_place(this->_Ptr->_Next, _Insert_before);

  000cc	89 30		 mov	 DWORD PTR [eax], esi

; 599  :         _Construct_in_place(this->_Ptr->_Prev, _Insert_after);

  000ce	89 48 04	 mov	 DWORD PTR [eax+4], ecx

; 600  :         const auto _Result    = this->_Ptr;
; 601  :         this->_Ptr            = pointer{};
; 602  :         _Insert_before->_Prev = _Result;

  000d1	89 46 04	 mov	 DWORD PTR [esi+4], eax

; 603  :         _Insert_after->_Next  = _Result;

  000d4	89 01		 mov	 DWORD PTR [ecx], eax
$LN116@SelectSlot:
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonSlotWindow.cpp

; 818  : }

  000d6	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000d9	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000e0	59		 pop	 ecx
  000e1	5f		 pop	 edi
  000e2	5e		 pop	 esi
  000e3	5b		 pop	 ebx
  000e4	8b e5		 mov	 esp, ebp
  000e6	5d		 pop	 ebp
  000e7	c2 04 00	 ret	 4
$LN140@SelectSlot:
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\list

; 1006 :             _Xlength_error("list too long");

  000ea	68 00 00 00 00	 push	 OFFSET ??_C@_0O@NKNMEGII@list?5too?5long@
  000ef	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPBD@Z ; std::_Xlength_error
$LN138@SelectSlot:
  000f4	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?SelectSlot@CSlotWindow@UI@@QAEXK@Z$1:
  00000	8d 4d ec	 lea	 ecx, DWORD PTR __Op$2[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@KPAX@std@@@std@@@std@@QAE@XZ ; std::_Alloc_construct_ptr<std::allocator<std::_List_node<unsigned long,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_List_node<unsigned long,void *> > >
  00008	cc		 int	 3
  00009	cc		 int	 3
  0000a	cc		 int	 3
  0000b	cc		 int	 3
  0000c	cc		 int	 3
__ehhandler$?SelectSlot@CSlotWindow@UI@@QAEXK@Z:
  0000d	90		 npad	 1
  0000e	90		 npad	 1
  0000f	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00013	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00016	8b 4a e8	 mov	 ecx, DWORD PTR [edx-24]
  00019	33 c8		 xor	 ecx, eax
  0001b	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00020	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?SelectSlot@CSlotWindow@UI@@QAEXK@Z
  00025	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?SelectSlot@CSlotWindow@UI@@QAEXK@Z ENDP		; UI::CSlotWindow::SelectSlot
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonSlotWindow.cpp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\list
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\list
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ?ClearSelected@CSlotWindow@UI@@QAEXXZ
_TEXT	SEGMENT
?ClearSelected@CSlotWindow@UI@@QAEXXZ PROC		; UI::CSlotWindow::ClearSelected, COMDAT
; _this$ = ecx

; 833  : {

  00000	57		 push	 edi
  00001	8b f9		 mov	 edi, ecx
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\list

; 1420 :         _Node::_Free_non_head(_Getal(), _My_data._Myhead);

  00003	8b 97 84 00 00
	00		 mov	 edx, DWORD PTR [edi+132]

; 323  :         _Head->_Prev->_Next = nullptr;

  00009	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  0000c	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 324  : 
; 325  :         auto _Pnode = _Head->_Next;

  00012	8b 02		 mov	 eax, DWORD PTR [edx]

; 326  :         for (_Nodeptr _Pnext; _Pnode; _Pnode = _Pnext) {

  00014	85 c0		 test	 eax, eax
  00016	74 1c		 je	 SHORT $LN7@ClearSelec
  00018	56		 push	 esi
  00019	0f 1f 80 00 00
	00 00		 npad	 7
$LL8@ClearSelec:

; 327  :             _Pnext = _Pnode->_Next;

  00020	8b 30		 mov	 esi, DWORD PTR [eax]
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory

; 255  :         ::operator delete(_Ptr, _Bytes);

  00022	6a 0c		 push	 12			; 0000000cH
  00024	50		 push	 eax
  00025	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0002a	83 c4 08	 add	 esp, 8
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\list

; 326  :         for (_Nodeptr _Pnext; _Pnode; _Pnode = _Pnext) {

  0002d	8b c6		 mov	 eax, esi
  0002f	85 f6		 test	 esi, esi
  00031	75 ed		 jne	 SHORT $LL8@ClearSelec
  00033	5e		 pop	 esi
$LN7@ClearSelec:

; 1421 :         _My_data._Myhead->_Next = _My_data._Myhead;

  00034	8b 87 84 00 00
	00		 mov	 eax, DWORD PTR [edi+132]
  0003a	89 00		 mov	 DWORD PTR [eax], eax

; 1422 :         _My_data._Myhead->_Prev = _My_data._Myhead;

  0003c	8b 87 84 00 00
	00		 mov	 eax, DWORD PTR [edi+132]
  00042	89 40 04	 mov	 DWORD PTR [eax+4], eax

; 1423 :         _My_data._Mysize        = 0;

  00045	c7 87 88 00 00
	00 00 00 00 00	 mov	 DWORD PTR [edi+136], 0
  0004f	5f		 pop	 edi
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonSlotWindow.cpp

; 835  : }

  00050	c3		 ret	 0
?ClearSelected@CSlotWindow@UI@@QAEXXZ ENDP		; UI::CSlotWindow::ClearSelected
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ?SetUnusableSlotOnTopWnd@CSlotWindow@UI@@QAEXK@Z
_TEXT	SEGMENT
_pSlot$ = -4						; size = 4
_dwIndex$ = 8						; size = 4
?SetUnusableSlotOnTopWnd@CSlotWindow@UI@@QAEXK@Z PROC	; UI::CSlotWindow::SetUnusableSlotOnTopWnd, COMDAT
; _this$ = ecx

; 1758 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 1759 : 	TSlot * pSlot;
; 1760 : 	if (!GetSlotPointer(dwIndex, &pSlot))

  00004	8d 45 fc	 lea	 eax, DWORD PTR _pSlot$[ebp]
  00007	50		 push	 eax
  00008	ff 75 08	 push	 DWORD PTR _dwIndex$[ebp]
  0000b	e8 00 00 00 00	 call	 ?GetSlotPointer@CSlotWindow@UI@@IAEHKPAPAUSSlot@12@@Z ; UI::CSlotWindow::GetSlotPointer
  00010	85 c0		 test	 eax, eax
  00012	74 06		 je	 SHORT $LN1@SetUnusabl

; 1761 : 		return;
; 1762 : 
; 1763 : 	SET_BIT(pSlot->dwState, SLOT_STATE_UNUSABLE);

  00014	8b 45 fc	 mov	 eax, DWORD PTR _pSlot$[ebp]
  00017	83 08 20	 or	 DWORD PTR [eax], 32	; 00000020H
$LN1@SetUnusabl:

; 1764 : 	//pSlot->dwState ^= SLOT_STATE_UNUSABLE;
; 1765 : }

  0001a	8b e5		 mov	 esp, ebp
  0001c	5d		 pop	 ebp
  0001d	c2 04 00	 ret	 4
?SetUnusableSlotOnTopWnd@CSlotWindow@UI@@QAEXK@Z ENDP	; UI::CSlotWindow::SetUnusableSlotOnTopWnd
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ?SetUsableSlotOnTopWnd@CSlotWindow@UI@@QAEXK@Z
_TEXT	SEGMENT
_pSlot$ = -4						; size = 4
_dwIndex$ = 8						; size = 4
?SetUsableSlotOnTopWnd@CSlotWindow@UI@@QAEXK@Z PROC	; UI::CSlotWindow::SetUsableSlotOnTopWnd, COMDAT
; _this$ = ecx

; 1748 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 1749 : 	TSlot * pSlot;
; 1750 : 	if (!GetSlotPointer(dwIndex, &pSlot))

  00004	8d 45 fc	 lea	 eax, DWORD PTR _pSlot$[ebp]
  00007	50		 push	 eax
  00008	ff 75 08	 push	 DWORD PTR _dwIndex$[ebp]
  0000b	e8 00 00 00 00	 call	 ?GetSlotPointer@CSlotWindow@UI@@IAEHKPAPAUSSlot@12@@Z ; UI::CSlotWindow::GetSlotPointer
  00010	85 c0		 test	 eax, eax
  00012	74 06		 je	 SHORT $LN1@SetUsableS

; 1751 : 		return;
; 1752 : 
; 1753 : 	REMOVE_BIT(pSlot->dwState, SLOT_STATE_UNUSABLE);

  00014	8b 45 fc	 mov	 eax, DWORD PTR _pSlot$[ebp]
  00017	83 20 df	 and	 DWORD PTR [eax], -33	; ffffffdfH
$LN1@SetUsableS:

; 1754 : 	//pSlot->dwState |= SLOT_STATE_UNUSABLE;
; 1755 : }

  0001a	8b e5		 mov	 esp, ebp
  0001c	5d		 pop	 ebp
  0001d	c2 04 00	 ret	 4
?SetUsableSlotOnTopWnd@CSlotWindow@UI@@QAEXK@Z ENDP	; UI::CSlotWindow::SetUsableSlotOnTopWnd
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ?SetCantMouseEventSlot@CSlotWindow@UI@@QAEXK@Z
_TEXT	SEGMENT
_pSlot$ = -4						; size = 4
_dwIndex$ = 8						; size = 4
?SetCantMouseEventSlot@CSlotWindow@UI@@QAEXK@Z PROC	; UI::CSlotWindow::SetCantMouseEventSlot, COMDAT
; _this$ = ecx

; 1738 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 1739 : 	TSlot * pSlot;
; 1740 : 	if (!GetSlotPointer(dwIndex, &pSlot))

  00004	8d 45 fc	 lea	 eax, DWORD PTR _pSlot$[ebp]
  00007	50		 push	 eax
  00008	ff 75 08	 push	 DWORD PTR _dwIndex$[ebp]
  0000b	e8 00 00 00 00	 call	 ?GetSlotPointer@CSlotWindow@UI@@IAEHKPAPAUSSlot@12@@Z ; UI::CSlotWindow::GetSlotPointer
  00010	85 c0		 test	 eax, eax
  00012	74 06		 je	 SHORT $LN1@SetCantMou

; 1741 : 		return;
; 1742 : 
; 1743 : 	SET_BIT(pSlot->dwState, SLOT_STATE_CANT_MOUSE_EVENT);

  00014	8b 45 fc	 mov	 eax, DWORD PTR _pSlot$[ebp]
  00017	83 08 10	 or	 DWORD PTR [eax], 16	; 00000010H
$LN1@SetCantMou:

; 1744 : 	//pSlot->dwState ^= SLOT_STATE_CANT_MOUSE_EVENT;
; 1745 : }

  0001a	8b e5		 mov	 esp, ebp
  0001c	5d		 pop	 ebp
  0001d	c2 04 00	 ret	 4
?SetCantMouseEventSlot@CSlotWindow@UI@@QAEXK@Z ENDP	; UI::CSlotWindow::SetCantMouseEventSlot
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ?SetCanMouseEventSlot@CSlotWindow@UI@@QAEXK@Z
_TEXT	SEGMENT
_pSlot$ = -4						; size = 4
_dwIndex$ = 8						; size = 4
?SetCanMouseEventSlot@CSlotWindow@UI@@QAEXK@Z PROC	; UI::CSlotWindow::SetCanMouseEventSlot, COMDAT
; _this$ = ecx

; 1728 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 1729 : 	TSlot * pSlot;
; 1730 : 	if (!GetSlotPointer(dwIndex, &pSlot))

  00004	8d 45 fc	 lea	 eax, DWORD PTR _pSlot$[ebp]
  00007	50		 push	 eax
  00008	ff 75 08	 push	 DWORD PTR _dwIndex$[ebp]
  0000b	e8 00 00 00 00	 call	 ?GetSlotPointer@CSlotWindow@UI@@IAEHKPAPAUSSlot@12@@Z ; UI::CSlotWindow::GetSlotPointer
  00010	85 c0		 test	 eax, eax
  00012	74 06		 je	 SHORT $LN1@SetCanMous

; 1731 : 		return;
; 1732 : 
; 1733 : 	REMOVE_BIT(pSlot->dwState, SLOT_STATE_CANT_MOUSE_EVENT);

  00014	8b 45 fc	 mov	 eax, DWORD PTR _pSlot$[ebp]
  00017	83 20 ef	 and	 DWORD PTR [eax], -17	; ffffffefH
$LN1@SetCanMous:

; 1734 : 	//pSlot->dwState |= SLOT_STATE_CANT_MOUSE_EVENT;
; 1735 : }

  0001a	8b e5		 mov	 esp, ebp
  0001c	5d		 pop	 ebp
  0001d	c2 04 00	 ret	 4
?SetCanMouseEventSlot@CSlotWindow@UI@@QAEXK@Z ENDP	; UI::CSlotWindow::SetCanMouseEventSlot
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ?DisableSlot@CSlotWindow@UI@@QAEXK@Z
_TEXT	SEGMENT
_pSlot$ = -4						; size = 4
_dwIndex$ = 8						; size = 4
?DisableSlot@CSlotWindow@UI@@QAEXK@Z PROC		; UI::CSlotWindow::DisableSlot, COMDAT
; _this$ = ecx

; 784  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 785  : 	TSlot * pSlot;
; 786  : 	if (!GetSlotPointer(dwIndex, &pSlot))

  00004	8d 45 fc	 lea	 eax, DWORD PTR _pSlot$[ebp]
  00007	50		 push	 eax
  00008	ff 75 08	 push	 DWORD PTR _dwIndex$[ebp]
  0000b	e8 00 00 00 00	 call	 ?GetSlotPointer@CSlotWindow@UI@@IAEHKPAPAUSSlot@12@@Z ; UI::CSlotWindow::GetSlotPointer
  00010	85 c0		 test	 eax, eax
  00012	74 06		 je	 SHORT $LN1@DisableSlo

; 787  : 		return;
; 788  : 	SET_BIT(pSlot->dwState, SLOT_STATE_DISABLE);

  00014	8b 45 fc	 mov	 eax, DWORD PTR _pSlot$[ebp]
  00017	83 08 04	 or	 DWORD PTR [eax], 4
$LN1@DisableSlo:

; 789  : 	//pSlot->dwState ^= SLOT_STATE_DISABLE;
; 790  : }

  0001a	8b e5		 mov	 esp, ebp
  0001c	5d		 pop	 ebp
  0001d	c2 04 00	 ret	 4
?DisableSlot@CSlotWindow@UI@@QAEXK@Z ENDP		; UI::CSlotWindow::DisableSlot
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ?EnableSlot@CSlotWindow@UI@@QAEXK@Z
_TEXT	SEGMENT
_pSlot$ = -4						; size = 4
_dwIndex$ = 8						; size = 4
?EnableSlot@CSlotWindow@UI@@QAEXK@Z PROC		; UI::CSlotWindow::EnableSlot, COMDAT
; _this$ = ecx

; 775  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 776  : 	TSlot * pSlot;
; 777  : 	if (!GetSlotPointer(dwIndex, &pSlot))

  00004	8d 45 fc	 lea	 eax, DWORD PTR _pSlot$[ebp]
  00007	50		 push	 eax
  00008	ff 75 08	 push	 DWORD PTR _dwIndex$[ebp]
  0000b	e8 00 00 00 00	 call	 ?GetSlotPointer@CSlotWindow@UI@@IAEHKPAPAUSSlot@12@@Z ; UI::CSlotWindow::GetSlotPointer
  00010	85 c0		 test	 eax, eax
  00012	74 06		 je	 SHORT $LN1@EnableSlot

; 778  : 		return;
; 779  : 
; 780  : 	REMOVE_BIT(pSlot->dwState, SLOT_STATE_DISABLE);

  00014	8b 45 fc	 mov	 eax, DWORD PTR _pSlot$[ebp]
  00017	83 20 fb	 and	 DWORD PTR [eax], -5	; fffffffbH
$LN1@EnableSlot:

; 781  : 	//pSlot->dwState |= SLOT_STATE_DISABLE;
; 782  : }

  0001a	8b e5		 mov	 esp, ebp
  0001c	5d		 pop	 ebp
  0001d	c2 04 00	 ret	 4
?EnableSlot@CSlotWindow@UI@@QAEXK@Z ENDP		; UI::CSlotWindow::EnableSlot
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ?SetUseSlot@CSlotWindow@UI@@QAEXK@Z
_TEXT	SEGMENT
_pSlot$ = -4						; size = 4
_dwIndex$ = 8						; size = 4
?SetUseSlot@CSlotWindow@UI@@QAEXK@Z PROC		; UI::CSlotWindow::SetUseSlot, COMDAT
; _this$ = ecx

; 767  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 768  : 	TSlot * pSlot;
; 769  : 	if (!GetSlotPointer(dwIndex, &pSlot))

  00004	8d 45 fc	 lea	 eax, DWORD PTR _pSlot$[ebp]
  00007	50		 push	 eax
  00008	ff 75 08	 push	 DWORD PTR _dwIndex$[ebp]
  0000b	e8 00 00 00 00	 call	 ?GetSlotPointer@CSlotWindow@UI@@IAEHKPAPAUSSlot@12@@Z ; UI::CSlotWindow::GetSlotPointer
  00010	85 c0		 test	 eax, eax
  00012	74 06		 je	 SHORT $LN1@SetUseSlot

; 770  : 		return;
; 771  : 
; 772  : 	pSlot->dwState ^= SLOT_STATE_CANT_USE;

  00014	8b 45 fc	 mov	 eax, DWORD PTR _pSlot$[ebp]
  00017	83 30 02	 xor	 DWORD PTR [eax], 2
$LN1@SetUseSlot:

; 773  : }

  0001a	8b e5		 mov	 esp, ebp
  0001c	5d		 pop	 ebp
  0001d	c2 04 00	 ret	 4
?SetUseSlot@CSlotWindow@UI@@QAEXK@Z ENDP		; UI::CSlotWindow::SetUseSlot
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ?SetCantUseSlot@CSlotWindow@UI@@QAEXK@Z
_TEXT	SEGMENT
_pSlot$ = -4						; size = 4
_dwIndex$ = 8						; size = 4
?SetCantUseSlot@CSlotWindow@UI@@QAEXK@Z PROC		; UI::CSlotWindow::SetCantUseSlot, COMDAT
; _this$ = ecx

; 759  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 760  : 	TSlot * pSlot;
; 761  : 	if (!GetSlotPointer(dwIndex, &pSlot))

  00004	8d 45 fc	 lea	 eax, DWORD PTR _pSlot$[ebp]
  00007	50		 push	 eax
  00008	ff 75 08	 push	 DWORD PTR _dwIndex$[ebp]
  0000b	e8 00 00 00 00	 call	 ?GetSlotPointer@CSlotWindow@UI@@IAEHKPAPAUSSlot@12@@Z ; UI::CSlotWindow::GetSlotPointer
  00010	85 c0		 test	 eax, eax
  00012	74 06		 je	 SHORT $LN1@SetCantUse

; 762  : 		return;
; 763  : 
; 764  : 	pSlot->dwState |= SLOT_STATE_CANT_USE;

  00014	8b 45 fc	 mov	 eax, DWORD PTR _pSlot$[ebp]
  00017	83 08 02	 or	 DWORD PTR [eax], 2
$LN1@SetCantUse:

; 765  : }

  0001a	8b e5		 mov	 esp, ebp
  0001c	5d		 pop	 ebp
  0001d	c2 04 00	 ret	 4
?SetCantUseSlot@CSlotWindow@UI@@QAEXK@Z ENDP		; UI::CSlotWindow::SetCantUseSlot
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ?UnlockSlot@CSlotWindow@UI@@QAEXK@Z
_TEXT	SEGMENT
_pSlot$ = -4						; size = 4
_dwIndex$ = 8						; size = 4
?UnlockSlot@CSlotWindow@UI@@QAEXK@Z PROC		; UI::CSlotWindow::UnlockSlot, COMDAT
; _this$ = ecx

; 751  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 752  : 	TSlot * pSlot;
; 753  : 	if (!GetSlotPointer(dwIndex, &pSlot))

  00004	8d 45 fc	 lea	 eax, DWORD PTR _pSlot$[ebp]
  00007	50		 push	 eax
  00008	ff 75 08	 push	 DWORD PTR _dwIndex$[ebp]
  0000b	e8 00 00 00 00	 call	 ?GetSlotPointer@CSlotWindow@UI@@IAEHKPAPAUSSlot@12@@Z ; UI::CSlotWindow::GetSlotPointer
  00010	85 c0		 test	 eax, eax
  00012	74 06		 je	 SHORT $LN1@UnlockSlot

; 754  : 		return;
; 755  : 
; 756  : 	pSlot->dwState ^= SLOT_STATE_LOCK;

  00014	8b 45 fc	 mov	 eax, DWORD PTR _pSlot$[ebp]
  00017	83 30 01	 xor	 DWORD PTR [eax], 1
$LN1@UnlockSlot:

; 757  : }

  0001a	8b e5		 mov	 esp, ebp
  0001c	5d		 pop	 ebp
  0001d	c2 04 00	 ret	 4
?UnlockSlot@CSlotWindow@UI@@QAEXK@Z ENDP		; UI::CSlotWindow::UnlockSlot
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ?LockSlot@CSlotWindow@UI@@QAEXK@Z
_TEXT	SEGMENT
_pSlot$ = -4						; size = 4
_dwIndex$ = 8						; size = 4
?LockSlot@CSlotWindow@UI@@QAEXK@Z PROC			; UI::CSlotWindow::LockSlot, COMDAT
; _this$ = ecx

; 743  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 744  : 	TSlot * pSlot;
; 745  : 	if (!GetSlotPointer(dwIndex, &pSlot))

  00004	8d 45 fc	 lea	 eax, DWORD PTR _pSlot$[ebp]
  00007	50		 push	 eax
  00008	ff 75 08	 push	 DWORD PTR _dwIndex$[ebp]
  0000b	e8 00 00 00 00	 call	 ?GetSlotPointer@CSlotWindow@UI@@IAEHKPAPAUSSlot@12@@Z ; UI::CSlotWindow::GetSlotPointer
  00010	85 c0		 test	 eax, eax
  00012	74 06		 je	 SHORT $LN1@LockSlot

; 746  : 		return;
; 747  : 
; 748  : 	pSlot->dwState |= SLOT_STATE_LOCK;

  00014	8b 45 fc	 mov	 eax, DWORD PTR _pSlot$[ebp]
  00017	83 08 01	 or	 DWORD PTR [eax], 1
$LN1@LockSlot:

; 749  : }

  0001a	8b e5		 mov	 esp, ebp
  0001c	5d		 pop	 ebp
  0001d	c2 04 00	 ret	 4
?LockSlot@CSlotWindow@UI@@QAEXK@Z ENDP			; UI::CSlotWindow::LockSlot
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ?GetSlotCount@CSlotWindow@UI@@QAEKXZ
_TEXT	SEGMENT
?GetSlotCount@CSlotWindow@UI@@QAEKXZ PROC		; UI::CSlotWindow::GetSlotCount, COMDAT
; _this$ = ecx

; 739  : 	return m_SlotList.size();

  00000	8b 81 90 00 00
	00		 mov	 eax, DWORD PTR [ecx+144]

; 740  : }

  00006	c3		 ret	 0
?GetSlotCount@CSlotWindow@UI@@QAEKXZ ENDP		; UI::CSlotWindow::GetSlotCount
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ?IsActivatedSlot@CSlotWindow@UI@@QAE_NK@Z
_TEXT	SEGMENT
_pSlot$ = -4						; size = 4
_dwIndex$ = 8						; size = 4
?IsActivatedSlot@CSlotWindow@UI@@QAE_NK@Z PROC		; UI::CSlotWindow::IsActivatedSlot, COMDAT
; _this$ = ecx

; 647  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 648  : 	TSlot * pSlot;
; 649  : 	if (!GetSlotPointer(dwIndex, &pSlot))

  00004	8d 45 fc	 lea	 eax, DWORD PTR _pSlot$[ebp]
  00007	50		 push	 eax
  00008	ff 75 08	 push	 DWORD PTR _dwIndex$[ebp]
  0000b	e8 00 00 00 00	 call	 ?GetSlotPointer@CSlotWindow@UI@@IAEHKPAPAUSSlot@12@@Z ; UI::CSlotWindow::GetSlotPointer
  00010	85 c0		 test	 eax, eax
  00012	75 08		 jne	 SHORT $LN2@IsActivate

; 650  : 		return false;

  00014	32 c0		 xor	 al, al

; 652  : }

  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c2 04 00	 ret	 4
$LN2@IsActivate:

; 651  : 	return pSlot->bActive;

  0001c	8b 45 fc	 mov	 eax, DWORD PTR _pSlot$[ebp]
  0001f	83 78 3c 00	 cmp	 DWORD PTR [eax+60], 0
  00023	0f 95 c0	 setne	 al

; 652  : }

  00026	8b e5		 mov	 esp, ebp
  00028	5d		 pop	 ebp
  00029	c2 04 00	 ret	 4
?IsActivatedSlot@CSlotWindow@UI@@QAE_NK@Z ENDP		; UI::CSlotWindow::IsActivatedSlot
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ?GetSlotCoolTime@CSlotWindow@UI@@QAEMKPAM@Z
_TEXT	SEGMENT
_pSlot$ = -4						; size = 4
_dwIndex$ = 8						; size = 4
_fElapsedTime$ = 12					; size = 4
?GetSlotCoolTime@CSlotWindow@UI@@QAEMKPAM@Z PROC	; UI::CSlotWindow::GetSlotCoolTime, COMDAT
; _this$ = ecx

; 637  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 638  : 	TSlot * pSlot;
; 639  : 	if (!GetSlotPointer(dwIndex, &pSlot))

  00004	8d 45 fc	 lea	 eax, DWORD PTR _pSlot$[ebp]
  00007	50		 push	 eax
  00008	ff 75 08	 push	 DWORD PTR _dwIndex$[ebp]
  0000b	e8 00 00 00 00	 call	 ?GetSlotPointer@CSlotWindow@UI@@IAEHKPAPAUSSlot@12@@Z ; UI::CSlotWindow::GetSlotPointer
  00010	85 c0		 test	 eax, eax
  00012	75 08		 jne	 SHORT $LN2@GetSlotCoo

; 640  : 		return 0.0;

  00014	d9 ee		 fldz

; 644  : }

  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c2 08 00	 ret	 8
$LN2@GetSlotCoo:

; 641  : 
; 642  : 	*fElapsedTime = CTimer::Instance().GetCurrentSecond() - pSlot->fStartCoolTime;

  0001c	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCTimer@@@@0PAVCTimer@@A ; CSingleton<CTimer>::ms_singleton
  00022	e8 00 00 00 00	 call	 ?GetCurrentSecond@CTimer@@QAEMXZ ; CTimer::GetCurrentSecond
  00027	8b 4d fc	 mov	 ecx, DWORD PTR _pSlot$[ebp]
  0002a	8b 45 0c	 mov	 eax, DWORD PTR _fElapsedTime$[ebp]
  0002d	d8 61 24	 fsub	 DWORD PTR [ecx+36]
  00030	d9 18		 fstp	 DWORD PTR [eax]

; 643  : 	return pSlot->fCoolTime;

  00032	d9 41 20	 fld	 DWORD PTR [ecx+32]

; 644  : }

  00035	8b e5		 mov	 esp, ebp
  00037	5d		 pop	 ebp
  00038	c2 08 00	 ret	 8
?GetSlotCoolTime@CSlotWindow@UI@@QAEMKPAM@Z ENDP	; UI::CSlotWindow::GetSlotCoolTime
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ?RefreshSlot@CSlotWindow@UI@@QAEXXZ
_TEXT	SEGMENT
_pSlot$1 = -4						; size = 4
?RefreshSlot@CSlotWindow@UI@@QAEXXZ PROC		; UI::CSlotWindow::RefreshSlot, COMDAT
; _this$ = ecx

; 719  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	8b f1		 mov	 esi, ecx

; 720  : 	OnRefreshSlot();

  00007	8b 06		 mov	 eax, DWORD PTR [esi]
  00009	ff 90 ac 00 00
	00		 call	 DWORD PTR [eax+172]

; 721  : 
; 722  : 	if (IsRendering())

  0000f	8b ce		 mov	 ecx, esi
  00011	e8 00 00 00 00	 call	 ?IsRendering@CWindow@UI@@QAE_NXZ ; UI::CWindow::IsRendering
  00016	84 c0		 test	 al, al
  00018	74 26		 je	 SHORT $LN3@RefreshSlo

; 723  : 	{
; 724  : 		TSlot * pSlot;
; 725  : 		if (GetPickedSlotPointer(&pSlot))

  0001a	8b 06		 mov	 eax, DWORD PTR [esi]
  0001c	8d 4d fc	 lea	 ecx, DWORD PTR _pSlot$1[ebp]
  0001f	51		 push	 ecx
  00020	8b ce		 mov	 ecx, esi
  00022	ff 90 a8 00 00
	00		 call	 DWORD PTR [eax+168]
  00028	85 c0		 test	 eax, eax
  0002a	74 14		 je	 SHORT $LN3@RefreshSlo

; 726  : 		{
; 727  : 			OnOverOutItem();

  0002c	8b ce		 mov	 ecx, esi
  0002e	e8 00 00 00 00	 call	 ?OnOverOutItem@CSlotWindow@UI@@QAEXXZ ; UI::CSlotWindow::OnOverOutItem

; 728  : 			OnOverInItem(pSlot->dwSlotNumber);

  00033	8b 45 fc	 mov	 eax, DWORD PTR _pSlot$1[ebp]
  00036	8b ce		 mov	 ecx, esi
  00038	ff 70 04	 push	 DWORD PTR [eax+4]
  0003b	e8 00 00 00 00	 call	 ?OnOverInItem@CSlotWindow@UI@@QAEHK@Z ; UI::CSlotWindow::OnOverInItem
$LN3@RefreshSlo:
  00040	5e		 pop	 esi

; 729  : 		}
; 730  : 	}
; 731  : }

  00041	8b e5		 mov	 esp, ebp
  00043	5d		 pop	 ebp
  00044	c3		 ret	 0
?RefreshSlot@CSlotWindow@UI@@QAEXXZ ENDP		; UI::CSlotWindow::RefreshSlot
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonSlotWindow.cpp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xtree
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xstddef
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xtree
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonSlotWindow.cpp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xtree
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ?DeactivateSlot@CSlotWindow@UI@@QAEXK@Z
_TEXT	SEGMENT
__Loc$1 = -20						; size = 12
tv308 = -8						; size = 4
$T2 = -4						; size = 4
_pSlot$ = -4						; size = 4
$T3 = 8							; size = 4
_dwIndex$ = 8						; size = 4
?DeactivateSlot@CSlotWindow@UI@@QAEXK@Z PROC		; UI::CSlotWindow::DeactivateSlot, COMDAT
; _this$ = ecx

; 623  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H

; 624  : 	TSlot* pSlot;
; 625  : 	if (!GetSlotPointer(dwIndex, &pSlot))

  00006	8d 45 fc	 lea	 eax, DWORD PTR _pSlot$[ebp]
  00009	56		 push	 esi
  0000a	57		 push	 edi
  0000b	8b 7d 08	 mov	 edi, DWORD PTR _dwIndex$[ebp]
  0000e	8b f1		 mov	 esi, ecx
  00010	50		 push	 eax
  00011	57		 push	 edi
  00012	e8 00 00 00 00	 call	 ?GetSlotPointer@CSlotWindow@UI@@IAEHKPAPAUSSlot@12@@Z ; UI::CSlotWindow::GetSlotPointer
  00017	85 c0		 test	 eax, eax
  00019	74 63		 je	 SHORT $LN3@Deactivate

; 626  : 		return;
; 627  : 
; 628  : 	pSlot->bActive = FALSE;

  0001b	8b 45 fc	 mov	 eax, DWORD PTR _pSlot$[ebp]

; 629  : 
; 630  : 	std::map<DWORD, SStoreCoolDown>::iterator it = m_CoolDownStore[1].find(dwIndex);

  0001e	8d 4d fc	 lea	 ecx, DWORD PTR $T2[ebp]
  00021	53		 push	 ebx
  00022	51		 push	 ecx
  00023	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR $T2[ebp], 1
  0002a	c7 40 3c 00 00
	00 00		 mov	 DWORD PTR [eax+60], 0
  00031	8d 86 98 00 00
	00		 lea	 eax, DWORD PTR [esi+152]
  00037	8b c8		 mov	 ecx, eax
  00039	89 45 f8	 mov	 DWORD PTR tv308[ebp], eax
  0003c	e8 00 00 00 00	 call	 ??A?$map@KV?$map@KUSStoreCoolDown@CSlotWindow@UI@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@5@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$map@KUSStoreCoolDown@CSlotWindow@UI@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@5@@std@@@std@@@2@@std@@QAEAAV?$map@KUSStoreCoolDown@CSlotWindow@UI@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@5@@1@$$QAK@Z ; std::map<unsigned long,std::map<unsigned long,UI::CSlotWindow::SStoreCoolDown,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,UI::CSlotWindow::SStoreCoolDown> > >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::map<unsigned long,UI::CSlotWindow::SStoreCoolDown,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,UI::CSlotWindow::SStoreCoolDown> > > > > >::operator[]
  00041	8b d8		 mov	 ebx, eax
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xtree

; 1353 :         const _Tree_find_result<_Nodeptr> _Loc = _Find_lower_bound(_Keyval);

  00043	8d 45 08	 lea	 eax, DWORD PTR _dwIndex$[ebp]
  00046	50		 push	 eax
  00047	8d 45 ec	 lea	 eax, DWORD PTR __Loc$1[ebp]
  0004a	8b cb		 mov	 ecx, ebx
  0004c	50		 push	 eax
  0004d	e8 00 00 00 00	 call	 ??$_Find_lower_bound@K@?$_Tree@V?$_Tmap_traits@KUSStoreCoolDown@CSlotWindow@UI@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@5@$0A@@std@@@std@@IBE?AU?$_Tree_find_result@PAU?$_Tree_node@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@PAX@std@@@1@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,UI::CSlotWindow::SStoreCoolDown,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,UI::CSlotWindow::SStoreCoolDown> >,0> >::_Find_lower_bound<unsigned long>

; 1591 :         return !_Bound->_Isnil && !_DEBUG_LT_PRED(_Getcomp(), _Keyval, _Traits::_Kfn(_Bound->_Myval));

  00052	8b 75 f4	 mov	 esi, DWORD PTR __Loc$1[ebp+8]
  00055	80 7e 0d 00	 cmp	 BYTE PTR [esi+13], 0
  00059	75 05		 jne	 SHORT $LN8@Deactivate
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xstddef

; 117  :         return _Left < _Right;

  0005b	3b 7e 10	 cmp	 edi, DWORD PTR [esi+16]
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xtree

; 1591 :         return !_Bound->_Isnil && !_DEBUG_LT_PRED(_Getcomp(), _Keyval, _Traits::_Kfn(_Bound->_Myval));

  0005e	73 02		 jae	 SHORT $LN7@Deactivate
$LN8@Deactivate:

; 1358 :         return _Get_scary()->_Myhead;

  00060	8b 33		 mov	 esi, DWORD PTR [ebx]
$LN7@Deactivate:
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonSlotWindow.cpp

; 631  : 	if (it != m_CoolDownStore[1].end())

  00062	8b 4d f8	 mov	 ecx, DWORD PTR tv308[ebp]
  00065	8d 45 08	 lea	 eax, DWORD PTR $T3[ebp]
  00068	50		 push	 eax
  00069	c7 45 08 01 00
	00 00		 mov	 DWORD PTR $T3[ebp], 1
  00070	e8 00 00 00 00	 call	 ??A?$map@KV?$map@KUSStoreCoolDown@CSlotWindow@UI@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@5@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$map@KUSStoreCoolDown@CSlotWindow@UI@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@5@@std@@@std@@@2@@std@@QAEAAV?$map@KUSStoreCoolDown@CSlotWindow@UI@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@5@@1@$$QAK@Z ; std::map<unsigned long,std::map<unsigned long,UI::CSlotWindow::SStoreCoolDown,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,UI::CSlotWindow::SStoreCoolDown> > >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::map<unsigned long,UI::CSlotWindow::SStoreCoolDown,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,UI::CSlotWindow::SStoreCoolDown> > > > > >::operator[]
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xtree

; 233  :         return this->_Ptr == _Right._Ptr;

  00075	5b		 pop	 ebx
  00076	3b 30		 cmp	 esi, DWORD PTR [eax]
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonSlotWindow.cpp

; 631  : 	if (it != m_CoolDownStore[1].end())

  00078	74 04		 je	 SHORT $LN3@Deactivate

; 632  : 		it->second.bActive = false;

  0007a	c6 46 1c 00	 mov	 BYTE PTR [esi+28], 0
$LN3@Deactivate:
  0007e	5f		 pop	 edi

; 633  : }

  0007f	5e		 pop	 esi
  00080	8b e5		 mov	 esp, ebp
  00082	5d		 pop	 ebp
  00083	c2 04 00	 ret	 4
?DeactivateSlot@CSlotWindow@UI@@QAEXK@Z ENDP		; UI::CSlotWindow::DeactivateSlot
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonSlotWindow.cpp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xtree
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xstddef
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xtree
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonSlotWindow.cpp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xtree
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ?ActivateSlot@CSlotWindow@UI@@QAEXK@Z
_TEXT	SEGMENT
__Loc$1 = -20						; size = 12
tv392 = -8						; size = 4
$T2 = -4						; size = 4
_pSlot$ = -4						; size = 4
$T3 = 8							; size = 4
_dwIndex$ = 8						; size = 4
?ActivateSlot@CSlotWindow@UI@@QAEXK@Z PROC		; UI::CSlotWindow::ActivateSlot, COMDAT
; _this$ = ecx

; 592  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H

; 593  : 	TSlot* pSlot;
; 594  : 	if (!GetSlotPointer(dwIndex, &pSlot))

  00006	8d 45 fc	 lea	 eax, DWORD PTR _pSlot$[ebp]
  00009	56		 push	 esi
  0000a	57		 push	 edi
  0000b	8b 7d 08	 mov	 edi, DWORD PTR _dwIndex$[ebp]
  0000e	8b f1		 mov	 esi, ecx
  00010	50		 push	 eax
  00011	57		 push	 edi
  00012	e8 00 00 00 00	 call	 ?GetSlotPointer@CSlotWindow@UI@@IAEHKPAPAUSSlot@12@@Z ; UI::CSlotWindow::GetSlotPointer
  00017	85 c0		 test	 eax, eax
  00019	0f 84 86 00 00
	00		 je	 $LN5@ActivateSl

; 595  : 		return;
; 596  : 
; 597  : 	pSlot->bActive = TRUE;

  0001f	8b 45 fc	 mov	 eax, DWORD PTR _pSlot$[ebp]

; 598  : 
; 599  : #ifdef WJ_ENABLE_PICKUP_ITEM_EFFECT
; 600  : 	int itemSize = pSlot->byyPlacedItemSize - 1;
; 601  : 	if (itemSize < 0)
; 602  : 	{
; 603  : 		itemSize = 1;
; 604  : 	}
; 605  : 
; 606  : 	if (!m_pSlotActiveEffect[itemSize])

  00022	ba 01 00 00 00	 mov	 edx, 1
  00027	c7 40 3c 01 00
	00 00		 mov	 DWORD PTR [eax+60], 1
  0002e	0f b6 40 51	 movzx	 eax, BYTE PTR [eax+81]
  00032	3b c2		 cmp	 eax, edx
  00034	8d 48 ff	 lea	 ecx, DWORD PTR [eax-1]
  00037	0f 43 d1	 cmovae	 edx, ecx
  0003a	83 bc 96 b0 00
	00 00 00	 cmp	 DWORD PTR [esi+edx*4+176], 0
  00042	75 08		 jne	 SHORT $LN4@ActivateSl

; 607  : 	{
; 608  : 		__CreateSlotEnableEffect(itemSize);

  00044	52		 push	 edx
  00045	8b ce		 mov	 ecx, esi
  00047	e8 00 00 00 00	 call	 ?__CreateSlotEnableEffect@CSlotWindow@UI@@IAEXH@Z ; UI::CSlotWindow::__CreateSlotEnableEffect
$LN4@ActivateSl:

; 609  : 	}
; 610  : #else
; 611  : 	if (!m_pSlotActiveEffect)
; 612  : 	{
; 613  : 		__CreateSlotEnableEffect();
; 614  : 	}
; 615  : #endif
; 616  : 
; 617  : 	std::map<DWORD, SStoreCoolDown>::iterator it = m_CoolDownStore[1].find(dwIndex);

  0004c	53		 push	 ebx
  0004d	8d 86 98 00 00
	00		 lea	 eax, DWORD PTR [esi+152]
  00053	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR $T2[ebp], 1
  0005a	8d 4d fc	 lea	 ecx, DWORD PTR $T2[ebp]
  0005d	89 45 f8	 mov	 DWORD PTR tv392[ebp], eax
  00060	51		 push	 ecx
  00061	8b c8		 mov	 ecx, eax
  00063	e8 00 00 00 00	 call	 ??A?$map@KV?$map@KUSStoreCoolDown@CSlotWindow@UI@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@5@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$map@KUSStoreCoolDown@CSlotWindow@UI@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@5@@std@@@std@@@2@@std@@QAEAAV?$map@KUSStoreCoolDown@CSlotWindow@UI@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@5@@1@$$QAK@Z ; std::map<unsigned long,std::map<unsigned long,UI::CSlotWindow::SStoreCoolDown,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,UI::CSlotWindow::SStoreCoolDown> > >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::map<unsigned long,UI::CSlotWindow::SStoreCoolDown,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,UI::CSlotWindow::SStoreCoolDown> > > > > >::operator[]
  00068	8b d8		 mov	 ebx, eax
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xtree

; 1353 :         const _Tree_find_result<_Nodeptr> _Loc = _Find_lower_bound(_Keyval);

  0006a	8d 45 08	 lea	 eax, DWORD PTR _dwIndex$[ebp]
  0006d	50		 push	 eax
  0006e	8d 45 ec	 lea	 eax, DWORD PTR __Loc$1[ebp]
  00071	8b cb		 mov	 ecx, ebx
  00073	50		 push	 eax
  00074	e8 00 00 00 00	 call	 ??$_Find_lower_bound@K@?$_Tree@V?$_Tmap_traits@KUSStoreCoolDown@CSlotWindow@UI@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@5@$0A@@std@@@std@@IBE?AU?$_Tree_find_result@PAU?$_Tree_node@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@PAX@std@@@1@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,UI::CSlotWindow::SStoreCoolDown,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,UI::CSlotWindow::SStoreCoolDown> >,0> >::_Find_lower_bound<unsigned long>

; 1591 :         return !_Bound->_Isnil && !_DEBUG_LT_PRED(_Getcomp(), _Keyval, _Traits::_Kfn(_Bound->_Myval));

  00079	8b 75 f4	 mov	 esi, DWORD PTR __Loc$1[ebp+8]
  0007c	80 7e 0d 00	 cmp	 BYTE PTR [esi+13], 0
  00080	75 05		 jne	 SHORT $LN10@ActivateSl
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xstddef

; 117  :         return _Left < _Right;

  00082	3b 7e 10	 cmp	 edi, DWORD PTR [esi+16]
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xtree

; 1591 :         return !_Bound->_Isnil && !_DEBUG_LT_PRED(_Getcomp(), _Keyval, _Traits::_Kfn(_Bound->_Myval));

  00085	73 02		 jae	 SHORT $LN9@ActivateSl
$LN10@ActivateSl:

; 1358 :         return _Get_scary()->_Myhead;

  00087	8b 33		 mov	 esi, DWORD PTR [ebx]
$LN9@ActivateSl:
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonSlotWindow.cpp

; 618  : 	if (it != m_CoolDownStore[1].end())

  00089	8b 4d f8	 mov	 ecx, DWORD PTR tv392[ebp]
  0008c	8d 45 08	 lea	 eax, DWORD PTR $T3[ebp]
  0008f	50		 push	 eax
  00090	c7 45 08 01 00
	00 00		 mov	 DWORD PTR $T3[ebp], 1
  00097	e8 00 00 00 00	 call	 ??A?$map@KV?$map@KUSStoreCoolDown@CSlotWindow@UI@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@5@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$map@KUSStoreCoolDown@CSlotWindow@UI@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@5@@std@@@std@@@2@@std@@QAEAAV?$map@KUSStoreCoolDown@CSlotWindow@UI@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@5@@1@$$QAK@Z ; std::map<unsigned long,std::map<unsigned long,UI::CSlotWindow::SStoreCoolDown,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,UI::CSlotWindow::SStoreCoolDown> > >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::map<unsigned long,UI::CSlotWindow::SStoreCoolDown,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,UI::CSlotWindow::SStoreCoolDown> > > > > >::operator[]
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xtree

; 233  :         return this->_Ptr == _Right._Ptr;

  0009c	5b		 pop	 ebx
  0009d	3b 30		 cmp	 esi, DWORD PTR [eax]
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonSlotWindow.cpp

; 618  : 	if (it != m_CoolDownStore[1].end())

  0009f	74 04		 je	 SHORT $LN5@ActivateSl

; 619  : 		it->second.bActive = true;

  000a1	c6 46 1c 01	 mov	 BYTE PTR [esi+28], 1
$LN5@ActivateSl:
  000a5	5f		 pop	 edi

; 620  : }

  000a6	5e		 pop	 esi
  000a7	8b e5		 mov	 esp, ebp
  000a9	5d		 pop	 ebp
  000aa	c2 04 00	 ret	 4
?ActivateSlot@CSlotWindow@UI@@QAEXK@Z ENDP		; UI::CSlotWindow::ActivateSlot
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonSlotWindow.cpp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xtree
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\map
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xtree
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xstddef
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xtree
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\map
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xtree
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\utility
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xtree
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\utility
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xtree
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xtree
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\utility
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xtree
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\map
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xtree
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\map
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xtree
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\map
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xtree
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\map
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xtree
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonSlotWindow.cpp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xtree
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonSlotWindow.cpp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xtree
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ?RestoreSlotCoolTime@CSlotWindow@UI@@QAEXK@Z
_TEXT	SEGMENT
__Loc$3 = -48						; size = 12
$T4 = -36						; size = 8
_this$5 = -28						; size = 4
_pSlot$6 = -24						; size = 4
_this$1$ = -20						; size = 4
__Myhead$1$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_dwKey$ = 8						; size = 4
?RestoreSlotCoolTime@CSlotWindow@UI@@QAEXK@Z PROC	; UI::CSlotWindow::RestoreSlotCoolTime, COMDAT
; _this$ = ecx

; 575  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?RestoreSlotCoolTime@CSlotWindow@UI@@QAEXK@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 24	 sub	 esp, 36			; 00000024H
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00028	8b f9		 mov	 edi, ecx
  0002a	89 7d ec	 mov	 DWORD PTR _this$1$[ebp], edi

; 576  : 	for (std::map<DWORD, SStoreCoolDown>::iterator it = m_CoolDownStore[dwKey].begin(); it != m_CoolDownStore[dwKey].end(); it++)

  0002d	8d 45 08	 lea	 eax, DWORD PTR _dwKey$[ebp]
  00030	8d 9f 98 00 00
	00		 lea	 ebx, DWORD PTR [edi+152]
  00036	50		 push	 eax
  00037	8b cb		 mov	 ecx, ebx
  00039	e8 00 00 00 00	 call	 ??A?$map@KV?$map@KUSStoreCoolDown@CSlotWindow@UI@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@5@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$map@KUSStoreCoolDown@CSlotWindow@UI@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@5@@std@@@std@@@2@@std@@QAEAAV?$map@KUSStoreCoolDown@CSlotWindow@UI@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@5@@1@ABK@Z ; std::map<unsigned long,std::map<unsigned long,UI::CSlotWindow::SStoreCoolDown,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,UI::CSlotWindow::SStoreCoolDown> > >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::map<unsigned long,UI::CSlotWindow::SStoreCoolDown,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,UI::CSlotWindow::SStoreCoolDown> > > > > >::operator[]
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xtree

; 1135 :         return iterator(_Scary->_Myhead->_Left, _Scary);

  0003e	8b 30		 mov	 esi, DWORD PTR [eax]

; 38   :     _Tree_unchecked_const_iterator(_Nodeptr _Pnode, const _Mytree* _Plist) noexcept : _Ptr(_Pnode) {

  00040	8b 36		 mov	 esi, DWORD PTR [esi]
$LL25@RestoreSlo:
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\map

; 174  :         const auto _Loc = _Mybase::_Find_lower_bound(_Keyval);

  00042	8d 45 08	 lea	 eax, DWORD PTR _dwKey$[ebp]
  00045	8b cb		 mov	 ecx, ebx
  00047	50		 push	 eax
  00048	8d 45 d0	 lea	 eax, DWORD PTR __Loc$3[ebp]
  0004b	50		 push	 eax
  0004c	e8 00 00 00 00	 call	 ??$_Find_lower_bound@K@?$_Tree@V?$_Tmap_traits@KV?$map@KUSStoreCoolDown@CSlotWindow@UI@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@5@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$map@KUSStoreCoolDown@CSlotWindow@UI@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@5@@std@@@std@@@2@$0A@@std@@@std@@IBE?AU?$_Tree_find_result@PAU?$_Tree_node@U?$pair@$$CBKV?$map@KUSStoreCoolDown@CSlotWindow@UI@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@5@@std@@@std@@PAX@std@@@1@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::map<unsigned long,UI::CSlotWindow::SStoreCoolDown,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,UI::CSlotWindow::SStoreCoolDown> > >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::map<unsigned long,UI::CSlotWindow::SStoreCoolDown,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,UI::CSlotWindow::SStoreCoolDown> > > > >,0> >::_Find_lower_bound<unsigned long>
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xtree

; 1591 :         return !_Bound->_Isnil && !_DEBUG_LT_PRED(_Getcomp(), _Keyval, _Traits::_Kfn(_Bound->_Myval));

  00051	8b 4d d8	 mov	 ecx, DWORD PTR __Loc$3[ebp+8]
  00054	80 79 0d 00	 cmp	 BYTE PTR [ecx+13], 0
  00058	75 0c		 jne	 SHORT $LN34@RestoreSlo
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xstddef

; 117  :         return _Left < _Right;

  0005a	8b 45 08	 mov	 eax, DWORD PTR _dwKey$[ebp]
  0005d	3b 41 10	 cmp	 eax, DWORD PTR [ecx+16]
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xtree

; 1591 :         return !_Bound->_Isnil && !_DEBUG_LT_PRED(_Getcomp(), _Keyval, _Traits::_Kfn(_Bound->_Myval));

  00060	0f 83 a1 00 00
	00		 jae	 $LN33@RestoreSlo
$LN34@RestoreSlo:

; 1615 :         if (max_size() == _Get_scary()->_Mysize) {

  00066	81 7b 04 49 92
	24 09		 cmp	 DWORD PTR [ebx+4], 153391689 ; 09249249H
  0006d	0f 84 37 01 00
	00		 je	 $LN226@RestoreSlo
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\map

; 182  :         const auto _Inserted = _Tree_temp_node<_Alnode>(_Mybase::_Getal(), _Scary->_Myhead, piecewise_construct,

  00073	8b 03		 mov	 eax, DWORD PTR [ebx]
  00075	89 45 f0	 mov	 DWORD PTR __Myhead$1$[ebp], eax
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory

; 958  :     _CONSTEXPR20_DYNALLOC explicit _Alloc_construct_ptr(_Alloc& _Al_) : _Al(_Al_), _Ptr(nullptr) {}

  00078	89 5d dc	 mov	 DWORD PTR $T4[ebp], ebx

; 79   :         return ::operator new(_Bytes);

  0007b	6a 1c		 push	 28			; 0000001cH
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xtree

; 783  :     explicit _Tree_temp_node_alloc(_Alnode& _Al_) : _Alloc_construct_ptr<_Alnode>(_Al_) {

  0007d	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory

; 965  :         _Ptr = nullptr; // if allocate throws, prevents double-free

  00084	c7 45 e0 00 00
	00 00		 mov	 DWORD PTR $T4[ebp+4], 0

; 79   :         return ::operator new(_Bytes);

  0008b	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new

; 235  :         return _Traits::_Allocate(_Bytes);

  00090	8b d8		 mov	 ebx, eax

; 966  :         _Ptr = _Al.allocate(1);

  00092	89 5d e0	 mov	 DWORD PTR $T4[ebp+4], ebx
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\utility

; 263  :         : first(_Tuple_get<_Indexes1>(_STD move(_Val1))...), second(_Tuple_get<_Indexes2>(_STD move(_Val2))...) {}

  00095	8b 4d 08	 mov	 ecx, DWORD PTR _dwKey$[ebp]
  00098	8d 7b 14	 lea	 edi, DWORD PTR [ebx+20]
  0009b	89 4b 10	 mov	 DWORD PTR [ebx+16], ecx
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory

; 79   :         return ::operator new(_Bytes);

  0009e	6a 20		 push	 32			; 00000020H
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xtree

; 804  :         : _Tree_temp_node_alloc<_Alnode>(_Al_) {

  000a0	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 1
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\utility

; 263  :         : first(_Tuple_get<_Indexes1>(_STD move(_Val1))...), second(_Tuple_get<_Indexes2>(_STD move(_Val2))...) {}

  000a7	89 7d e4	 mov	 DWORD PTR _this$5[ebp], edi
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xtree

; 435  :     _Tree_val() noexcept : _Myhead(), _Mysize(0) {}

  000aa	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], 0
  000b0	c7 47 04 00 00
	00 00		 mov	 DWORD PTR [edi+4], 0
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory

; 79   :         return ::operator new(_Bytes);

  000b7	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  000bc	83 c4 08	 add	 esp, 8
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xtree

; 811  :     }

  000bf	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\utility

; 603  :     _Val         = static_cast<_Other&&>(_New_val);

  000c6	c7 45 e0 00 00
	00 00		 mov	 DWORD PTR $T4[ebp+4], 0
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xtree

; 345  :         _Construct_in_place(_Pnode->_Left, _Pnode);

  000cd	89 00		 mov	 DWORD PTR [eax], eax

; 346  :         _Construct_in_place(_Pnode->_Parent, _Pnode);

  000cf	89 40 04	 mov	 DWORD PTR [eax+4], eax

; 347  :         _Construct_in_place(_Pnode->_Right, _Pnode);

  000d2	89 40 08	 mov	 DWORD PTR [eax+8], eax

; 348  :         _Pnode->_Color = _Black;

  000d5	66 c7 40 0c 01
	01		 mov	 WORD PTR [eax+12], 257	; 00000101H

; 1917 :         _Scary->_Myhead = _Node::_Buyheadnode(_Getal());

  000db	89 07		 mov	 DWORD PTR [edi], eax

; 806  :         _Construct_in_place(this->_Ptr->_Left, _Myhead);

  000dd	8b 45 f0	 mov	 eax, DWORD PTR __Myhead$1$[ebp]
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\map

; 188  :         return {_Scary->_Insert_node(_Loc._Location, _Inserted), true};

  000e0	8b 7d ec	 mov	 edi, DWORD PTR _this$1$[ebp]
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xtree

; 806  :         _Construct_in_place(this->_Ptr->_Left, _Myhead);

  000e3	89 03		 mov	 DWORD PTR [ebx], eax
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\map

; 188  :         return {_Scary->_Insert_node(_Loc._Location, _Inserted), true};

  000e5	53		 push	 ebx
  000e6	ff 75 d4	 push	 DWORD PTR __Loc$3[ebp+4]
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xtree

; 807  :         _Construct_in_place(this->_Ptr->_Parent, _Myhead);

  000e9	89 43 04	 mov	 DWORD PTR [ebx+4], eax
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\map

; 188  :         return {_Scary->_Insert_node(_Loc._Location, _Inserted), true};

  000ec	ff 75 d0	 push	 DWORD PTR __Loc$3[ebp]
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xtree

; 808  :         _Construct_in_place(this->_Ptr->_Right, _Myhead);

  000ef	89 43 08	 mov	 DWORD PTR [ebx+8], eax

; 809  :         this->_Ptr->_Color = _Red;

  000f2	66 c7 43 0c 00
	00		 mov	 WORD PTR [ebx+12], 0
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\map

; 188  :         return {_Scary->_Insert_node(_Loc._Location, _Inserted), true};

  000f8	8d 9f 98 00 00
	00		 lea	 ebx, DWORD PTR [edi+152]
  000fe	8b cb		 mov	 ecx, ebx
  00100	e8 00 00 00 00	 call	 ?_Insert_node@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$map@KUSStoreCoolDown@CSlotWindow@UI@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@5@@std@@@std@@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBKV?$map@KUSStoreCoolDown@CSlotWindow@UI@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@5@@std@@@std@@PAX@2@U?$_Tree_id@PAU?$_Tree_node@U?$pair@$$CBKV?$map@KUSStoreCoolDown@CSlotWindow@UI@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@5@@std@@@std@@PAX@std@@@2@QAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,std::map<unsigned long,UI::CSlotWindow::SStoreCoolDown,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,UI::CSlotWindow::SStoreCoolDown> > > > > >::_Insert_node
  00105	8b c8		 mov	 ecx, eax
$LN33@RestoreSlo:
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xtree

; 38   :     _Tree_unchecked_const_iterator(_Nodeptr _Pnode, const _Mytree* _Plist) noexcept : _Ptr(_Pnode) {

  00107	3b 71 14	 cmp	 esi, DWORD PTR [ecx+20]
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonSlotWindow.cpp

; 576  : 	for (std::map<DWORD, SStoreCoolDown>::iterator it = m_CoolDownStore[dwKey].begin(); it != m_CoolDownStore[dwKey].end(); it++)

  0010a	0f 84 86 00 00
	00		 je	 $LN227@RestoreSlo

; 577  : 	{
; 578  : 		TSlot* pSlot;
; 579  : 		if (!GetSlotPointer(it->first, &pSlot))

  00110	8d 45 e8	 lea	 eax, DWORD PTR _pSlot$6[ebp]
  00113	8b cf		 mov	 ecx, edi
  00115	50		 push	 eax
  00116	ff 76 10	 push	 DWORD PTR [esi+16]
  00119	e8 00 00 00 00	 call	 ?GetSlotPointer@CSlotWindow@UI@@IAEHKPAPAUSSlot@12@@Z ; UI::CSlotWindow::GetSlotPointer
  0011e	85 c0		 test	 eax, eax
  00120	74 74		 je	 SHORT $LN227@RestoreSlo

; 580  : 			return;
; 581  : 
; 582  : 		pSlot->fCoolTime = it->second.fCoolTime;

  00122	8b 4d e8	 mov	 ecx, DWORD PTR _pSlot$6[ebp]
  00125	8b 46 14	 mov	 eax, DWORD PTR [esi+20]
  00128	89 41 20	 mov	 DWORD PTR [ecx+32], eax

; 583  : 		pSlot->fStartCoolTime = it->second.fElapsedTime;

  0012b	8b 46 18	 mov	 eax, DWORD PTR [esi+24]
  0012e	89 41 24	 mov	 DWORD PTR [ecx+36], eax

; 584  : 		if (it->second.bActive)

  00131	8b cf		 mov	 ecx, edi
  00133	80 7e 1c 00	 cmp	 BYTE PTR [esi+28], 0
  00137	8b 46 10	 mov	 eax, DWORD PTR [esi+16]
  0013a	50		 push	 eax
  0013b	74 07		 je	 SHORT $LN6@RestoreSlo

; 585  : 			ActivateSlot(it->first);

  0013d	e8 00 00 00 00	 call	 ?ActivateSlot@CSlotWindow@UI@@QAEXK@Z ; UI::CSlotWindow::ActivateSlot
  00142	eb 05		 jmp	 SHORT $LN2@RestoreSlo
$LN6@RestoreSlo:

; 586  : 		else
; 587  : 			DeactivateSlot(it->first);

  00144	e8 00 00 00 00	 call	 ?DeactivateSlot@CSlotWindow@UI@@QAEXK@Z ; UI::CSlotWindow::DeactivateSlot
$LN2@RestoreSlo:
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xtree

; 51   :         if (_Ptr->_Right->_Isnil) { // climb looking for right subtree

  00149	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  0014c	80 78 0d 00	 cmp	 BYTE PTR [eax+13], 0
  00150	74 25		 je	 SHORT $LN24@RestoreSlo

; 52   :             _Nodeptr _Pnode;
; 53   :             while (!(_Pnode = _Ptr->_Parent)->_Isnil && _Ptr == _Pnode->_Right) {

  00152	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00155	80 78 0d 00	 cmp	 BYTE PTR [eax+13], 0
  00159	75 15		 jne	 SHORT $LN239@RestoreSlo
  0015b	0f 1f 44 00 00	 npad	 5
$LL22@RestoreSlo:
  00160	3b 70 08	 cmp	 esi, DWORD PTR [eax+8]
  00163	75 0b		 jne	 SHORT $LN239@RestoreSlo

; 54   :                 _Ptr = _Pnode; // ==> parent while right subtree

  00165	8b f0		 mov	 esi, eax
  00167	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0016a	80 78 0d 00	 cmp	 BYTE PTR [eax+13], 0
  0016e	74 f0		 je	 SHORT $LL22@RestoreSlo
$LN239@RestoreSlo:

; 55   :             }
; 56   : 
; 57   :             _Ptr = _Pnode; // ==> parent (head if end())

  00170	8b f0		 mov	 esi, eax

; 58   :         } else {

  00172	e9 cb fe ff ff	 jmp	 $LL25@RestoreSlo
$LN24@RestoreSlo:

; 59   :             _Ptr = _Mytree::_Min(_Ptr->_Right); // ==> smallest of right subtree

  00177	8b f0		 mov	 esi, eax

; 451  :         while (!_Pnode->_Left->_Isnil) {

  00179	8b 0e		 mov	 ecx, DWORD PTR [esi]
  0017b	80 79 0d 00	 cmp	 BYTE PTR [ecx+13], 0
  0017f	0f 85 bd fe ff
	ff		 jne	 $LL25@RestoreSlo
$LL28@RestoreSlo:
  00185	8b 01		 mov	 eax, DWORD PTR [ecx]

; 452  :             _Pnode = _Pnode->_Left;

  00187	8b f1		 mov	 esi, ecx
  00189	8b c8		 mov	 ecx, eax
  0018b	80 78 0d 00	 cmp	 BYTE PTR [eax+13], 0
  0018f	74 f4		 je	 SHORT $LL28@RestoreSlo

; 59   :             _Ptr = _Mytree::_Min(_Ptr->_Right); // ==> smallest of right subtree

  00191	e9 ac fe ff ff	 jmp	 $LL25@RestoreSlo
$LN227@RestoreSlo:
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonSlotWindow.cpp

; 589  : }

  00196	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00199	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  001a0	59		 pop	 ecx
  001a1	5f		 pop	 edi
  001a2	5e		 pop	 esi
  001a3	5b		 pop	 ebx
  001a4	8b e5		 mov	 esp, ebp
  001a6	5d		 pop	 ebp
  001a7	c2 04 00	 ret	 4
$LN226@RestoreSlo:
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xtree

; 1616 :             _Throw_tree_length_error();

  001aa	e8 00 00 00 00	 call	 ?_Throw_tree_length_error@std@@YAXXZ ; std::_Throw_tree_length_error
$LN241@RestoreSlo:
  001af	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?RestoreSlotCoolTime@CSlotWindow@UI@@QAEXK@Z$2:
  00000	8d 4d dc	 lea	 ecx, DWORD PTR $T4[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBKV?$map@KUSStoreCoolDown@CSlotWindow@UI@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@5@@std@@@std@@PAX@std@@@std@@@std@@QAE@XZ ; std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<unsigned long const ,std::map<unsigned long,UI::CSlotWindow::SStoreCoolDown,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,UI::CSlotWindow::SStoreCoolDown> > > >,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<unsigned long const ,std::map<unsigned long,UI::CSlotWindow::SStoreCoolDown,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,UI::CSlotWindow::SStoreCoolDown> > > >,void *> > >
__unwindfunclet$?RestoreSlotCoolTime@CSlotWindow@UI@@QAEXK@Z$1:
  00008	8d 4d dc	 lea	 ecx, DWORD PTR $T4[ebp]
  0000b	e9 00 00 00 00	 jmp	 ??1?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBKV?$map@KUSStoreCoolDown@CSlotWindow@UI@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@5@@std@@@std@@PAX@std@@@std@@@std@@QAE@XZ
  00010	cc		 int	 3
  00011	cc		 int	 3
  00012	cc		 int	 3
  00013	cc		 int	 3
  00014	cc		 int	 3
__ehhandler$?RestoreSlotCoolTime@CSlotWindow@UI@@QAEXK@Z:
  00015	90		 npad	 1
  00016	90		 npad	 1
  00017	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0001b	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0001e	8b 4a cc	 mov	 ecx, DWORD PTR [edx-52]
  00021	33 c8		 xor	 ecx, eax
  00023	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00028	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?RestoreSlotCoolTime@CSlotWindow@UI@@QAEXK@Z
  0002d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?RestoreSlotCoolTime@CSlotWindow@UI@@QAEXK@Z ENDP	; UI::CSlotWindow::RestoreSlotCoolTime
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonSlotWindow.cpp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xtree
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonSlotWindow.cpp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xtree
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xstddef
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xtree
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonSlotWindow.cpp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\utility
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonSlotWindow.cpp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\utility
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonSlotWindow.cpp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\utility
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonSlotWindow.cpp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\utility
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonSlotWindow.cpp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xtree
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xstddef
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xtree
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xtree
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xtree
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xtree
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonSlotWindow.cpp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xtree
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ?StoreSlotCoolTime@CSlotWindow@UI@@QAEXKKMM@Z
_TEXT	SEGMENT
__Loc$2 = -56						; size = 12
__Loc$3 = -56						; size = 12
$T4 = -44						; size = 12
_m_storeCoolDown$5 = -44				; size = 12
$T6 = -40						; size = 8
_this$1$ = -36						; size = 4
$T7 = -32						; size = 16
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_dwKey$ = 8						; size = 4
_dwSlotIndex$ = 12					; size = 4
_fCoolTime$ = 16					; size = 4
_fElapsedTime$ = 20					; size = 4
?StoreSlotCoolTime@CSlotWindow@UI@@QAEXKKMM@Z PROC	; UI::CSlotWindow::StoreSlotCoolTime, COMDAT
; _this$ = ecx

; 556  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?StoreSlotCoolTime@CSlotWindow@UI@@QAEXKKMM@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 2c	 sub	 esp, 44			; 0000002cH
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	89 45 f0	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  0001e	56		 push	 esi
  0001f	57		 push	 edi
  00020	50		 push	 eax
  00021	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00024	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax

; 557  : 	std::map<DWORD, SStoreCoolDown>::iterator it = m_CoolDownStore[dwKey].find(dwSlotIndex);

  0002a	8d b9 98 00 00
	00		 lea	 edi, DWORD PTR [ecx+152]
  00030	8d 45 08	 lea	 eax, DWORD PTR _dwKey$[ebp]
  00033	8b cf		 mov	 ecx, edi
  00035	50		 push	 eax
  00036	e8 00 00 00 00	 call	 ??A?$map@KV?$map@KUSStoreCoolDown@CSlotWindow@UI@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@5@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$map@KUSStoreCoolDown@CSlotWindow@UI@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@5@@std@@@std@@@2@@std@@QAEAAV?$map@KUSStoreCoolDown@CSlotWindow@UI@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@5@@1@ABK@Z ; std::map<unsigned long,std::map<unsigned long,UI::CSlotWindow::SStoreCoolDown,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,UI::CSlotWindow::SStoreCoolDown> > >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::map<unsigned long,UI::CSlotWindow::SStoreCoolDown,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,UI::CSlotWindow::SStoreCoolDown> > > > > >::operator[]
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xtree

; 1353 :         const _Tree_find_result<_Nodeptr> _Loc = _Find_lower_bound(_Keyval);

  0003b	8d 4d 0c	 lea	 ecx, DWORD PTR _dwSlotIndex$[ebp]
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonSlotWindow.cpp

; 557  : 	std::map<DWORD, SStoreCoolDown>::iterator it = m_CoolDownStore[dwKey].find(dwSlotIndex);

  0003e	89 45 dc	 mov	 DWORD PTR _this$1$[ebp], eax
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xtree

; 1353 :         const _Tree_find_result<_Nodeptr> _Loc = _Find_lower_bound(_Keyval);

  00041	51		 push	 ecx
  00042	8d 4d c8	 lea	 ecx, DWORD PTR __Loc$3[ebp]
  00045	51		 push	 ecx
  00046	8b c8		 mov	 ecx, eax
  00048	e8 00 00 00 00	 call	 ??$_Find_lower_bound@K@?$_Tree@V?$_Tmap_traits@KUSStoreCoolDown@CSlotWindow@UI@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@5@$0A@@std@@@std@@IBE?AU?$_Tree_find_result@PAU?$_Tree_node@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@PAX@std@@@1@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,UI::CSlotWindow::SStoreCoolDown,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,UI::CSlotWindow::SStoreCoolDown> >,0> >::_Find_lower_bound<unsigned long>

; 1591 :         return !_Bound->_Isnil && !_DEBUG_LT_PRED(_Getcomp(), _Keyval, _Traits::_Kfn(_Bound->_Myval));

  0004d	8b 75 d0	 mov	 esi, DWORD PTR __Loc$3[ebp+8]
  00050	80 7e 0d 00	 cmp	 BYTE PTR [esi+13], 0
  00054	75 08		 jne	 SHORT $LN8@StoreSlotC
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xstddef

; 117  :         return _Left < _Right;

  00056	8b 45 0c	 mov	 eax, DWORD PTR _dwSlotIndex$[ebp]
  00059	3b 46 10	 cmp	 eax, DWORD PTR [esi+16]
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xtree

; 1591 :         return !_Bound->_Isnil && !_DEBUG_LT_PRED(_Getcomp(), _Keyval, _Traits::_Kfn(_Bound->_Myval));

  0005c	73 05		 jae	 SHORT $LN7@StoreSlotC
$LN8@StoreSlotC:

; 1358 :         return _Get_scary()->_Myhead;

  0005e	8b 75 dc	 mov	 esi, DWORD PTR _this$1$[ebp]
  00061	8b 36		 mov	 esi, DWORD PTR [esi]
$LN7@StoreSlotC:
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonSlotWindow.cpp

; 558  : 	if (it != m_CoolDownStore[dwKey].end())

  00063	8d 45 08	 lea	 eax, DWORD PTR _dwKey$[ebp]
  00066	8b cf		 mov	 ecx, edi
  00068	50		 push	 eax
  00069	e8 00 00 00 00	 call	 ??A?$map@KV?$map@KUSStoreCoolDown@CSlotWindow@UI@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@5@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$map@KUSStoreCoolDown@CSlotWindow@UI@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@5@@std@@@std@@@2@@std@@QAEAAV?$map@KUSStoreCoolDown@CSlotWindow@UI@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@5@@1@ABK@Z ; std::map<unsigned long,std::map<unsigned long,UI::CSlotWindow::SStoreCoolDown,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,UI::CSlotWindow::SStoreCoolDown> > >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::map<unsigned long,UI::CSlotWindow::SStoreCoolDown,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,UI::CSlotWindow::SStoreCoolDown> > > > > >::operator[]
  0006e	f3 0f 10 45 10	 movss	 xmm0, DWORD PTR _fCoolTime$[ebp]
  00073	3b 30		 cmp	 esi, DWORD PTR [eax]
  00075	74 1f		 je	 SHORT $LN2@StoreSlotC

; 559  : 	{
; 560  : 		it->second.fCoolTime = fCoolTime;

  00077	f3 0f 11 46 14	 movss	 DWORD PTR [esi+20], xmm0

; 561  : 		it->second.fElapsedTime = CTimer::Instance().GetCurrentSecond() - fElapsedTime;

  0007c	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCTimer@@@@0PAVCTimer@@A ; CSingleton<CTimer>::ms_singleton
  00082	e8 00 00 00 00	 call	 ?GetCurrentSecond@CTimer@@QAEMXZ ; CTimer::GetCurrentSecond
  00087	d8 65 14	 fsub	 DWORD PTR _fElapsedTime$[ebp]
  0008a	d9 5e 18	 fstp	 DWORD PTR [esi+24]

; 562  : 		it->second.bActive = false;

  0008d	c6 46 1c 00	 mov	 BYTE PTR [esi+28], 0

; 563  : 	}

  00091	e9 ad 00 00 00	 jmp	 $LN134@StoreSlotC
$LN2@StoreSlotC:

; 564  : 	else
; 565  : 	{
; 566  : 		SStoreCoolDown m_storeCoolDown;
; 567  : 		m_storeCoolDown.fCoolTime = fCoolTime;
; 568  : 		m_storeCoolDown.fElapsedTime = CTimer::Instance().GetCurrentSecond() - fElapsedTime;

  00096	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCTimer@@@@0PAVCTimer@@A ; CSingleton<CTimer>::ms_singleton
  0009c	f3 0f 11 45 d4	 movss	 DWORD PTR _m_storeCoolDown$5[ebp], xmm0
  000a1	e8 00 00 00 00	 call	 ?GetCurrentSecond@CTimer@@QAEMXZ ; CTimer::GetCurrentSecond
  000a6	d8 65 14	 fsub	 DWORD PTR _fElapsedTime$[ebp]
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\utility

; 186  :         : first(_STD forward<_Other1>(_Val1)), second(_STD forward<_Other2>(_Val2)) {}

  000a9	8b 75 0c	 mov	 esi, DWORD PTR _dwSlotIndex$[ebp]
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonSlotWindow.cpp

; 570  : 		m_CoolDownStore[dwKey].insert(std::map<DWORD, SStoreCoolDown>::value_type(dwSlotIndex, m_storeCoolDown));

  000ac	8b cf		 mov	 ecx, edi
  000ae	c6 45 dc 00	 mov	 BYTE PTR _m_storeCoolDown$5[ebp+8], 0
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\utility

; 186  :         : first(_STD forward<_Other1>(_Val1)), second(_STD forward<_Other2>(_Val2)) {}

  000b2	8b 45 dc	 mov	 eax, DWORD PTR _m_storeCoolDown$5[ebp+8]
  000b5	89 45 ec	 mov	 DWORD PTR $T7[ebp+12], eax
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonSlotWindow.cpp

; 570  : 		m_CoolDownStore[dwKey].insert(std::map<DWORD, SStoreCoolDown>::value_type(dwSlotIndex, m_storeCoolDown));

  000b8	8d 45 08	 lea	 eax, DWORD PTR _dwKey$[ebp]
  000bb	d9 5d d8	 fstp	 DWORD PTR _m_storeCoolDown$5[ebp+4]
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\utility

; 186  :         : first(_STD forward<_Other1>(_Val1)), second(_STD forward<_Other2>(_Val2)) {}

  000be	f3 0f 7e 45 d4	 movq	 xmm0, QWORD PTR _m_storeCoolDown$5[ebp]
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonSlotWindow.cpp

; 570  : 		m_CoolDownStore[dwKey].insert(std::map<DWORD, SStoreCoolDown>::value_type(dwSlotIndex, m_storeCoolDown));

  000c3	50		 push	 eax
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\utility

; 186  :         : first(_STD forward<_Other1>(_Val1)), second(_STD forward<_Other2>(_Val2)) {}

  000c4	89 75 e0	 mov	 DWORD PTR $T7[ebp], esi
  000c7	66 0f d6 45 e4	 movq	 QWORD PTR $T7[ebp+4], xmm0
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonSlotWindow.cpp

; 570  : 		m_CoolDownStore[dwKey].insert(std::map<DWORD, SStoreCoolDown>::value_type(dwSlotIndex, m_storeCoolDown));

  000cc	e8 00 00 00 00	 call	 ??A?$map@KV?$map@KUSStoreCoolDown@CSlotWindow@UI@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@5@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$map@KUSStoreCoolDown@CSlotWindow@UI@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@5@@std@@@std@@@2@@std@@QAEAAV?$map@KUSStoreCoolDown@CSlotWindow@UI@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@5@@1@ABK@Z ; std::map<unsigned long,std::map<unsigned long,UI::CSlotWindow::SStoreCoolDown,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,UI::CSlotWindow::SStoreCoolDown> > >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::map<unsigned long,UI::CSlotWindow::SStoreCoolDown,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,UI::CSlotWindow::SStoreCoolDown> > > > > >::operator[]
  000d1	8b f8		 mov	 edi, eax
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xtree

; 1006 :             _Loc                = _Find_lower_bound(_Keyval);

  000d3	8d 45 e0	 lea	 eax, DWORD PTR $T7[ebp]
  000d6	50		 push	 eax
  000d7	8d 45 d4	 lea	 eax, DWORD PTR $T4[ebp]
  000da	8b cf		 mov	 ecx, edi
  000dc	50		 push	 eax
  000dd	e8 00 00 00 00	 call	 ??$_Find_lower_bound@K@?$_Tree@V?$_Tmap_traits@KUSStoreCoolDown@CSlotWindow@UI@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@5@$0A@@std@@@std@@IBE?AU?$_Tree_find_result@PAU?$_Tree_node@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@PAX@std@@@1@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,UI::CSlotWindow::SStoreCoolDown,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,UI::CSlotWindow::SStoreCoolDown> >,0> >::_Find_lower_bound<unsigned long>
  000e2	f3 0f 7e 00	 movq	 xmm0, QWORD PTR [eax]
  000e6	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  000e9	66 0f d6 45 c8	 movq	 QWORD PTR __Loc$2[ebp], xmm0

; 1591 :         return !_Bound->_Isnil && !_DEBUG_LT_PRED(_Getcomp(), _Keyval, _Traits::_Kfn(_Bound->_Myval));

  000ee	80 78 0d 00	 cmp	 BYTE PTR [eax+13], 0
  000f2	75 05		 jne	 SHORT $LN62@StoreSlotC
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xstddef

; 117  :         return _Left < _Right;

  000f4	3b 70 10	 cmp	 esi, DWORD PTR [eax+16]
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xtree

; 1591 :         return !_Bound->_Isnil && !_DEBUG_LT_PRED(_Getcomp(), _Keyval, _Traits::_Kfn(_Bound->_Myval));

  000f7	73 4a		 jae	 SHORT $LN134@StoreSlotC
$LN62@StoreSlotC:

; 1615 :         if (max_size() == _Get_scary()->_Mysize) {

  000f9	81 7f 04 ff ff
	ff 07		 cmp	 DWORD PTR [edi+4], 134217727 ; 07ffffffH
  00100	74 5e		 je	 SHORT $LN151@StoreSlotC

; 1012 :             _Inserted = _Tree_temp_node<_Alnode>(_Getal(), _Scary->_Myhead, _STD forward<_Valtys>(_Vals)...)._Release();

  00102	8b 37		 mov	 esi, DWORD PTR [edi]
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory

; 958  :     _CONSTEXPR20_DYNALLOC explicit _Alloc_construct_ptr(_Alloc& _Al_) : _Al(_Al_), _Ptr(nullptr) {}

  00104	89 7d d8	 mov	 DWORD PTR $T6[ebp], edi

; 79   :         return ::operator new(_Bytes);

  00107	6a 20		 push	 32			; 00000020H
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xtree

; 783  :     explicit _Tree_temp_node_alloc(_Alnode& _Al_) : _Alloc_construct_ptr<_Alnode>(_Al_) {

  00109	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory

; 965  :         _Ptr = nullptr; // if allocate throws, prevents double-free

  00110	c7 45 dc 00 00
	00 00		 mov	 DWORD PTR $T6[ebp+4], 0

; 79   :         return ::operator new(_Bytes);

  00117	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new

; 681  :             ::new (_Voidify_iter(_Ptr)) _Objty(_STD forward<_Types>(_Args)...);

  0011c	0f 10 45 e0	 movups	 xmm0, XMMWORD PTR $T7[ebp]

; 79   :         return ::operator new(_Bytes);

  00120	83 c4 04	 add	 esp, 4
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xtree

; 1031 :         return {_Scary->_Insert_node(_Loc._Location, _Inserted), true};

  00123	8b cf		 mov	 ecx, edi
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory

; 681  :             ::new (_Voidify_iter(_Ptr)) _Objty(_STD forward<_Types>(_Args)...);

  00125	0f 11 40 10	 movups	 XMMWORD PTR [eax+16], xmm0
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xtree

; 806  :         _Construct_in_place(this->_Ptr->_Left, _Myhead);

  00129	89 30		 mov	 DWORD PTR [eax], esi

; 1031 :         return {_Scary->_Insert_node(_Loc._Location, _Inserted), true};

  0012b	50		 push	 eax
  0012c	ff 75 cc	 push	 DWORD PTR __Loc$2[ebp+4]

; 807  :         _Construct_in_place(this->_Ptr->_Parent, _Myhead);

  0012f	89 70 04	 mov	 DWORD PTR [eax+4], esi

; 1031 :         return {_Scary->_Insert_node(_Loc._Location, _Inserted), true};

  00132	ff 75 c8	 push	 DWORD PTR __Loc$2[ebp]

; 808  :         _Construct_in_place(this->_Ptr->_Right, _Myhead);

  00135	89 70 08	 mov	 DWORD PTR [eax+8], esi

; 809  :         this->_Ptr->_Color = _Red;

  00138	66 c7 40 0c 00
	00		 mov	 WORD PTR [eax+12], 0

; 1031 :         return {_Scary->_Insert_node(_Loc._Location, _Inserted), true};

  0013e	e8 00 00 00 00	 call	 ?_Insert_node@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@PAX@2@U?$_Tree_id@PAU?$_Tree_node@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@PAX@std@@@2@QAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,UI::CSlotWindow::SStoreCoolDown> > >::_Insert_node
$LN134@StoreSlotC:
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonSlotWindow.cpp

; 572  : }

  00143	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00146	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0014d	59		 pop	 ecx
  0014e	5f		 pop	 edi
  0014f	5e		 pop	 esi
  00150	8b 4d f0	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00153	33 cd		 xor	 ecx, ebp
  00155	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0015a	8b e5		 mov	 esp, ebp
  0015c	5d		 pop	 ebp
  0015d	c2 10 00	 ret	 16			; 00000010H
$LN151@StoreSlotC:
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xtree

; 1616 :             _Throw_tree_length_error();

  00160	e8 00 00 00 00	 call	 ?_Throw_tree_length_error@std@@YAXXZ ; std::_Throw_tree_length_error
$LN149@StoreSlotC:
  00165	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?StoreSlotCoolTime@CSlotWindow@UI@@QAEXKKMM@Z$2:
  00000	8d 4d d8	 lea	 ecx, DWORD PTR $T6[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@PAX@std@@@std@@@std@@QAE@XZ ; std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<unsigned long const ,UI::CSlotWindow::SStoreCoolDown>,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<unsigned long const ,UI::CSlotWindow::SStoreCoolDown>,void *> > >
  00008	cc		 int	 3
  00009	cc		 int	 3
  0000a	cc		 int	 3
  0000b	cc		 int	 3
  0000c	cc		 int	 3
__ehhandler$?StoreSlotCoolTime@CSlotWindow@UI@@QAEXKKMM@Z:
  0000d	90		 npad	 1
  0000e	90		 npad	 1
  0000f	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00013	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00016	8b 4a c8	 mov	 ecx, DWORD PTR [edx-56]
  00019	33 c8		 xor	 ecx, eax
  0001b	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00020	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  00023	33 c8		 xor	 ecx, eax
  00025	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0002a	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?StoreSlotCoolTime@CSlotWindow@UI@@QAEXKKMM@Z
  0002f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?StoreSlotCoolTime@CSlotWindow@UI@@QAEXKKMM@Z ENDP	; UI::CSlotWindow::StoreSlotCoolTime
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ?SetSlotCoolTimeInverse@CSlotWindow@UI@@QAEXKMM@Z
_TEXT	SEGMENT
_pSlot$ = -4						; size = 4
_dwIndex$ = 8						; size = 4
_fCoolTime$ = 12					; size = 4
_fRemainingTime$ = 16					; size = 4
?SetSlotCoolTimeInverse@CSlotWindow@UI@@QAEXKMM@Z PROC	; UI::CSlotWindow::SetSlotCoolTimeInverse, COMDAT
; _this$ = ecx

; 545  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 546  : 	TSlot* pSlot;
; 547  : 	if (!GetSlotPointer(dwIndex, &pSlot))

  00004	8d 45 fc	 lea	 eax, DWORD PTR _pSlot$[ebp]
  00007	50		 push	 eax
  00008	ff 75 08	 push	 DWORD PTR _dwIndex$[ebp]
  0000b	e8 00 00 00 00	 call	 ?GetSlotPointer@CSlotWindow@UI@@IAEHKPAPAUSSlot@12@@Z ; UI::CSlotWindow::GetSlotPointer
  00010	85 c0		 test	 eax, eax
  00012	74 1b		 je	 SHORT $LN1@SetSlotCoo

; 548  : 		return;
; 549  : 
; 550  : 	pSlot->fCoolTime = fCoolTime;

  00014	8b 45 fc	 mov	 eax, DWORD PTR _pSlot$[ebp]
  00017	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR _fCoolTime$[ebp]
  0001c	f3 0f 11 40 20	 movss	 DWORD PTR [eax+32], xmm0

; 551  : 	pSlot->fStartCoolTime = fRemainingTime;

  00021	f3 0f 10 45 10	 movss	 xmm0, DWORD PTR _fRemainingTime$[ebp]
  00026	f3 0f 11 40 24	 movss	 DWORD PTR [eax+36], xmm0

; 552  : 	pSlot->bInverseCooltime = true;

  0002b	c6 40 28 01	 mov	 BYTE PTR [eax+40], 1
$LN1@SetSlotCoo:

; 553  : }

  0002f	8b e5		 mov	 esp, ebp
  00031	5d		 pop	 ebp
  00032	c2 0c 00	 ret	 12			; 0000000cH
?SetSlotCoolTimeInverse@CSlotWindow@UI@@QAEXKMM@Z ENDP	; UI::CSlotWindow::SetSlotCoolTimeInverse
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ?SetSlotCoolTimeColor@CSlotWindow@UI@@QAEXKMMMM@Z
_TEXT	SEGMENT
_pSlot$ = -4						; size = 4
_dwIndex$ = 8						; size = 4
_fr$ = 12						; size = 4
_fg$ = 16						; size = 4
_fb$ = 20						; size = 4
_fa$ = 24						; size = 4
?SetSlotCoolTimeColor@CSlotWindow@UI@@QAEXKMMMM@Z PROC	; UI::CSlotWindow::SetSlotCoolTimeColor, COMDAT
; _this$ = ecx

; 533  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 534  : 	TSlot* pSlot;
; 535  : 	if (!GetSlotPointer(dwIndex, &pSlot))

  00004	8d 45 fc	 lea	 eax, DWORD PTR _pSlot$[ebp]
  00007	50		 push	 eax
  00008	ff 75 08	 push	 DWORD PTR _dwIndex$[ebp]
  0000b	e8 00 00 00 00	 call	 ?GetSlotPointer@CSlotWindow@UI@@IAEHKPAPAUSSlot@12@@Z ; UI::CSlotWindow::GetSlotPointer
  00010	85 c0		 test	 eax, eax
  00012	74 2b		 je	 SHORT $LN1@SetSlotCoo

; 536  : 		return;
; 537  : 
; 538  : 	pSlot->cooltimeDiffuseColor.r = fr;

  00014	8b 45 fc	 mov	 eax, DWORD PTR _pSlot$[ebp]
  00017	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR _fr$[ebp]
  0001c	f3 0f 11 40 2c	 movss	 DWORD PTR [eax+44], xmm0

; 539  : 	pSlot->cooltimeDiffuseColor.g = fg;

  00021	f3 0f 10 45 10	 movss	 xmm0, DWORD PTR _fg$[ebp]
  00026	f3 0f 11 40 30	 movss	 DWORD PTR [eax+48], xmm0

; 540  : 	pSlot->cooltimeDiffuseColor.b = fb;

  0002b	f3 0f 10 45 14	 movss	 xmm0, DWORD PTR _fb$[ebp]
  00030	f3 0f 11 40 34	 movss	 DWORD PTR [eax+52], xmm0

; 541  : 	pSlot->cooltimeDiffuseColor.a = fa;

  00035	f3 0f 10 45 18	 movss	 xmm0, DWORD PTR _fa$[ebp]
  0003a	f3 0f 11 40 38	 movss	 DWORD PTR [eax+56], xmm0
$LN1@SetSlotCoo:

; 542  : }

  0003f	8b e5		 mov	 esp, ebp
  00041	5d		 pop	 ebp
  00042	c2 14 00	 ret	 20			; 00000014H
?SetSlotCoolTimeColor@CSlotWindow@UI@@QAEXKMMMM@Z ENDP	; UI::CSlotWindow::SetSlotCoolTimeColor
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ?SetSlotCoolTime@CSlotWindow@UI@@QAEXKMM@Z
_TEXT	SEGMENT
_pSlot$ = -4						; size = 4
_dwIndex$ = 8						; size = 4
_fCoolTime$ = 12					; size = 4
_fElapsedTime$ = 16					; size = 4
?SetSlotCoolTime@CSlotWindow@UI@@QAEXKMM@Z PROC		; UI::CSlotWindow::SetSlotCoolTime, COMDAT
; _this$ = ecx

; 522  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 523  : 	TSlot * pSlot;
; 524  : 	if (!GetSlotPointer(dwIndex, &pSlot))

  00004	8d 45 fc	 lea	 eax, DWORD PTR _pSlot$[ebp]
  00007	50		 push	 eax
  00008	ff 75 08	 push	 DWORD PTR _dwIndex$[ebp]
  0000b	e8 00 00 00 00	 call	 ?GetSlotPointer@CSlotWindow@UI@@IAEHKPAPAUSSlot@12@@Z ; UI::CSlotWindow::GetSlotPointer
  00010	85 c0		 test	 eax, eax
  00012	74 24		 je	 SHORT $LN1@SetSlotCoo

; 525  : 		return;
; 526  : 
; 527  : 	pSlot->fCoolTime = fCoolTime;

  00014	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR _fCoolTime$[ebp]
  00019	56		 push	 esi
  0001a	8b 75 fc	 mov	 esi, DWORD PTR _pSlot$[ebp]
  0001d	f3 0f 11 46 20	 movss	 DWORD PTR [esi+32], xmm0

; 528  : 	pSlot->fStartCoolTime = CTimer::Instance().GetCurrentSecond() - fElapsedTime;

  00022	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCTimer@@@@0PAVCTimer@@A ; CSingleton<CTimer>::ms_singleton
  00028	e8 00 00 00 00	 call	 ?GetCurrentSecond@CTimer@@QAEMXZ ; CTimer::GetCurrentSecond
  0002d	d8 65 10	 fsub	 DWORD PTR _fElapsedTime$[ebp]
  00030	d9 5e 24	 fstp	 DWORD PTR [esi+36]

; 529  : 	pSlot->bInverseCooltime = false;

  00033	c6 46 28 00	 mov	 BYTE PTR [esi+40], 0
  00037	5e		 pop	 esi
$LN1@SetSlotCoo:

; 530  : }

  00038	8b e5		 mov	 esp, ebp
  0003a	5d		 pop	 ebp
  0003b	c2 0c 00	 ret	 12			; 0000000cH
?SetSlotCoolTime@CSlotWindow@UI@@QAEXKMM@Z ENDP		; UI::CSlotWindow::SetSlotCoolTime
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ?SetSlotCountNew@CSlotWindow@UI@@QAEXKKK@Z
_TEXT	SEGMENT
$T2 = -40						; size = 4
_pSlot$ = -40						; size = 4
_szCount$3 = -36					; size = 17
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_dwIndex$ = 8						; size = 4
_dwGrade$ = 12						; size = 4
_dwCount$ = 16						; size = 4
?SetSlotCountNew@CSlotWindow@UI@@QAEXKKK@Z PROC		; UI::CSlotWindow::SetSlotCountNew, COMDAT
; _this$ = ecx

; 465  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?SetSlotCountNew@CSlotWindow@UI@@QAEXKKK@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	89 45 f0	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  0001e	53		 push	 ebx
  0001f	56		 push	 esi
  00020	57		 push	 edi
  00021	50		 push	 eax
  00022	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00025	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002b	8b d9		 mov	 ebx, ecx

; 466  : 	TSlot * pSlot;
; 467  : 	if (!GetSlotPointer(dwIndex, &pSlot))

  0002d	8d 45 d8	 lea	 eax, DWORD PTR _pSlot$[ebp]
  00030	50		 push	 eax
  00031	ff 75 08	 push	 DWORD PTR _dwIndex$[ebp]
  00034	e8 00 00 00 00	 call	 ?GetSlotPointer@CSlotWindow@UI@@IAEHKPAPAUSSlot@12@@Z ; UI::CSlotWindow::GetSlotPointer
  00039	85 c0		 test	 eax, eax
  0003b	0f 84 df 00 00
	00		 je	 $LN6@SetSlotCou

; 468  : 		return;
; 469  : 
; 470  : 	if (dwCount <= 0)

  00041	8b 45 10	 mov	 eax, DWORD PTR _dwCount$[ebp]
  00044	85 c0		 test	 eax, eax
  00046	75 20		 jne	 SHORT $LN5@SetSlotCou

; 471  : 	{
; 472  : 		if (pSlot->pNumberLine)

  00048	8b 75 d8	 mov	 esi, DWORD PTR _pSlot$[ebp]
  0004b	8b 4e 58	 mov	 ecx, DWORD PTR [esi+88]
  0004e	85 c9		 test	 ecx, ecx
  00050	0f 84 ca 00 00
	00		 je	 $LN6@SetSlotCou

; 473  : 		{
; 474  : 			delete pSlot->pNumberLine;

  00056	8b 01		 mov	 eax, DWORD PTR [ecx]
  00058	6a 01		 push	 1
  0005a	ff 10		 call	 DWORD PTR [eax]

; 475  : 			pSlot->pNumberLine = NULL;

  0005c	c7 46 58 00 00
	00 00		 mov	 DWORD PTR [esi+88], 0

; 476  : 		}
; 477  : 	}

  00063	e9 b8 00 00 00	 jmp	 $LN6@SetSlotCou
$LN5@SetSlotCou:

; 478  : 	else
; 479  : 	{
; 480  : 		char szCount[16+1];
; 481  : 
; 482  : 		switch (dwGrade)

  00068	8b 4d 0c	 mov	 ecx, DWORD PTR _dwGrade$[ebp]
  0006b	83 f9 03	 cmp	 ecx, 3
  0006e	77 5c		 ja	 SHORT $LN2@SetSlotCou
  00070	ff 24 8d 00 00
	00 00		 jmp	 DWORD PTR $LN19@SetSlotCou[ecx*4]
$LN8@SetSlotCou:

; 483  : 		{
; 484  : 			case 0:
; 485  : 				_snprintf(szCount, sizeof(szCount), "%d", dwCount);

  00077	50		 push	 eax
  00078	68 00 00 00 00	 push	 OFFSET ??_C@_02DPKJAMEF@?$CFd@
  0007d	8d 45 dc	 lea	 eax, DWORD PTR _szCount$3[ebp]
  00080	6a 11		 push	 17			; 00000011H
  00082	50		 push	 eax
  00083	e8 00 00 00 00	 call	 __snprintf
  00088	83 c4 10	 add	 esp, 16			; 00000010H

; 486  : 				break;

  0008b	eb 3f		 jmp	 SHORT $LN2@SetSlotCou
$LN9@SetSlotCou:

; 487  : 			case 1:
; 488  : 				_snprintf(szCount, sizeof(szCount), "m%d", dwCount);

  0008d	50		 push	 eax
  0008e	68 00 00 00 00	 push	 OFFSET ??_C@_03CIOACFJF@m?$CFd@
  00093	8d 45 dc	 lea	 eax, DWORD PTR _szCount$3[ebp]
  00096	6a 11		 push	 17			; 00000011H
  00098	50		 push	 eax
  00099	e8 00 00 00 00	 call	 __snprintf
  0009e	83 c4 10	 add	 esp, 16			; 00000010H

; 489  : 				break;

  000a1	eb 29		 jmp	 SHORT $LN2@SetSlotCou
$LN10@SetSlotCou:

; 490  : 			case 2:
; 491  : 				_snprintf(szCount, sizeof(szCount), "g%d", dwCount);

  000a3	50		 push	 eax
  000a4	68 00 00 00 00	 push	 OFFSET ??_C@_03EHFNMFPB@g?$CFd@
  000a9	8d 45 dc	 lea	 eax, DWORD PTR _szCount$3[ebp]
  000ac	6a 11		 push	 17			; 00000011H
  000ae	50		 push	 eax
  000af	e8 00 00 00 00	 call	 __snprintf
  000b4	83 c4 10	 add	 esp, 16			; 00000010H

; 492  : 				break;

  000b7	eb 13		 jmp	 SHORT $LN2@SetSlotCou
$LN11@SetSlotCou:

; 493  : 			case 3:
; 494  : 				_snprintf(szCount, sizeof(szCount), "p");

  000b9	68 00 00 00 00	 push	 OFFSET ??_C@_01JBBJJEPG@p@
  000be	8d 45 dc	 lea	 eax, DWORD PTR _szCount$3[ebp]
  000c1	6a 11		 push	 17			; 00000011H
  000c3	50		 push	 eax
  000c4	e8 00 00 00 00	 call	 __snprintf
  000c9	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN2@SetSlotCou:

; 495  : 				break;
; 496  : 		}
; 497  : 
; 498  : 		if (!pSlot->pNumberLine)

  000cc	8b 7d d8	 mov	 edi, DWORD PTR _pSlot$[ebp]
  000cf	8b 77 58	 mov	 esi, DWORD PTR [edi+88]
  000d2	85 f6		 test	 esi, esi
  000d4	75 3f		 jne	 SHORT $LN12@SetSlotCou

; 499  : 		{
; 500  : 			CNumberLine * pNumberLine = new UI::CNumberLine(this);

  000d6	68 c0 00 00 00	 push	 192			; 000000c0H
  000db	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  000e0	83 c4 04	 add	 esp, 4
  000e3	89 45 d8	 mov	 DWORD PTR $T2[ebp], eax
  000e6	89 75 fc	 mov	 DWORD PTR __$EHRec$[ebp+8], esi
  000e9	85 c0		 test	 eax, eax
  000eb	74 0c		 je	 SHORT $LN16@SetSlotCou
  000ed	53		 push	 ebx
  000ee	8b c8		 mov	 ecx, eax
  000f0	e8 00 00 00 00	 call	 ??0CNumberLine@UI@@QAE@PAVCWindow@1@@Z ; UI::CNumberLine::CNumberLine
  000f5	8b f0		 mov	 esi, eax
  000f7	eb 02		 jmp	 SHORT $LN17@SetSlotCou
$LN16@SetSlotCou:
  000f9	33 f6		 xor	 esi, esi
$LN17@SetSlotCou:

; 501  : 			pNumberLine->SetHorizontalAlign(CNumberLine::HORIZONTAL_ALIGN_RIGHT);

  000fb	6a 02		 push	 2
  000fd	8b ce		 mov	 ecx, esi
  000ff	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00106	e8 00 00 00 00	 call	 ?SetHorizontalAlign@CNumberLine@UI@@QAEXH@Z ; UI::CNumberLine::SetHorizontalAlign

; 502  : 			pNumberLine->Show();

  0010b	8b ce		 mov	 ecx, esi
  0010d	e8 00 00 00 00	 call	 ?Show@CWindow@UI@@QAEXXZ ; UI::CWindow::Show

; 503  : 			pSlot->pNumberLine = pNumberLine;

  00112	89 77 58	 mov	 DWORD PTR [edi+88], esi
$LN12@SetSlotCou:

; 504  : 		}
; 505  : 
; 506  : 		pSlot->pNumberLine->SetNumber(szCount);

  00115	8d 45 dc	 lea	 eax, DWORD PTR _szCount$3[ebp]
  00118	8b ce		 mov	 ecx, esi
  0011a	50		 push	 eax
  0011b	e8 00 00 00 00	 call	 ?SetNumber@CNumberLine@UI@@QAEXPBD@Z ; UI::CNumberLine::SetNumber
$LN6@SetSlotCou:

; 507  : 	}
; 508  : }

  00120	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00123	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0012a	59		 pop	 ecx
  0012b	5f		 pop	 edi
  0012c	5e		 pop	 esi
  0012d	5b		 pop	 ebx
  0012e	8b 4d f0	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00131	33 cd		 xor	 ecx, ebp
  00133	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00138	8b e5		 mov	 esp, ebp
  0013a	5d		 pop	 ebp
  0013b	c2 0c 00	 ret	 12			; 0000000cH
  0013e	66 90		 npad	 2
$LN19@SetSlotCou:
  00140	00 00 00 00	 DD	 $LN8@SetSlotCou
  00144	00 00 00 00	 DD	 $LN9@SetSlotCou
  00148	00 00 00 00	 DD	 $LN10@SetSlotCou
  0014c	00 00 00 00	 DD	 $LN11@SetSlotCou
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?SetSlotCountNew@CSlotWindow@UI@@QAEXKKK@Z$0:
  00000	68 c0 00 00 00	 push	 192			; 000000c0H
  00005	8b 45 d8	 mov	 eax, DWORD PTR $T2[ebp]
  00008	50		 push	 eax
  00009	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0000e	83 c4 08	 add	 esp, 8
  00011	c3		 ret	 0
  00012	cc		 int	 3
  00013	cc		 int	 3
  00014	cc		 int	 3
  00015	cc		 int	 3
  00016	cc		 int	 3
__ehhandler$?SetSlotCountNew@CSlotWindow@UI@@QAEXKKK@Z:
  00017	90		 npad	 1
  00018	90		 npad	 1
  00019	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0001d	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00020	8b 4a d4	 mov	 ecx, DWORD PTR [edx-44]
  00023	33 c8		 xor	 ecx, eax
  00025	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0002a	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  0002d	33 c8		 xor	 ecx, eax
  0002f	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00034	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?SetSlotCountNew@CSlotWindow@UI@@QAEXKKK@Z
  00039	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?SetSlotCountNew@CSlotWindow@UI@@QAEXKKK@Z ENDP		; UI::CSlotWindow::SetSlotCountNew
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ?SetRealSlotNumber@CSlotWindow@UI@@QAEXKK@Z
_TEXT	SEGMENT
_pSlot$ = -4						; size = 4
_dwIndex$ = 8						; size = 4
_dwSlotRealNumber$ = 12					; size = 4
?SetRealSlotNumber@CSlotWindow@UI@@QAEXKK@Z PROC	; UI::CSlotWindow::SetRealSlotNumber, COMDAT
; _this$ = ecx

; 511  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 512  : 	TSlot* pSlot;
; 513  : 	if (!GetSlotPointer(dwIndex, &pSlot))

  00004	8d 45 fc	 lea	 eax, DWORD PTR _pSlot$[ebp]
  00007	50		 push	 eax
  00008	ff 75 08	 push	 DWORD PTR _dwIndex$[ebp]
  0000b	e8 00 00 00 00	 call	 ?GetSlotPointer@CSlotWindow@UI@@IAEHKPAPAUSSlot@12@@Z ; UI::CSlotWindow::GetSlotPointer
  00010	85 c0		 test	 eax, eax
  00012	74 09		 je	 SHORT $LN1@SetRealSlo

; 514  : 	{
; 515  : 		return;
; 516  : 	}
; 517  : 
; 518  : 	pSlot->dwRealSlotNumber = dwSlotRealNumber;

  00014	8b 45 fc	 mov	 eax, DWORD PTR _pSlot$[ebp]
  00017	8b 4d 0c	 mov	 ecx, DWORD PTR _dwSlotRealNumber$[ebp]
  0001a	89 48 0c	 mov	 DWORD PTR [eax+12], ecx
$LN1@SetRealSlo:

; 519  : }

  0001d	8b e5		 mov	 esp, ebp
  0001f	5d		 pop	 ebp
  00020	c2 08 00	 ret	 8
?SetRealSlotNumber@CSlotWindow@UI@@QAEXKK@Z ENDP	; UI::CSlotWindow::SetRealSlotNumber
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ?SetSlotCount@CSlotWindow@UI@@QAEXKK@Z
_TEXT	SEGMENT
$T2 = -40						; size = 4
_pSlot$ = -40						; size = 4
_szCount$3 = -36					; size = 17
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_dwIndex$ = 8						; size = 4
_dwCount$ = 12						; size = 4
?SetSlotCount@CSlotWindow@UI@@QAEXKK@Z PROC		; UI::CSlotWindow::SetSlotCount, COMDAT
; _this$ = ecx

; 434  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?SetSlotCount@CSlotWindow@UI@@QAEXKK@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	89 45 f0	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  0001e	53		 push	 ebx
  0001f	56		 push	 esi
  00020	57		 push	 edi
  00021	50		 push	 eax
  00022	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00025	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002b	8b d9		 mov	 ebx, ecx

; 435  : 	TSlot * pSlot;
; 436  : 	if (!GetSlotPointer(dwIndex, &pSlot))

  0002d	8d 45 d8	 lea	 eax, DWORD PTR _pSlot$[ebp]
  00030	50		 push	 eax
  00031	ff 75 08	 push	 DWORD PTR _dwIndex$[ebp]
  00034	e8 00 00 00 00	 call	 ?GetSlotPointer@CSlotWindow@UI@@IAEHKPAPAUSSlot@12@@Z ; UI::CSlotWindow::GetSlotPointer
  00039	85 c0		 test	 eax, eax
  0003b	0f 84 88 00 00
	00		 je	 $LN4@SetSlotCou

; 437  : 		return;
; 438  : 
; 439  : 	if (dwCount <= 0)

  00041	8b 45 0c	 mov	 eax, DWORD PTR _dwCount$[ebp]
  00044	85 c0		 test	 eax, eax
  00046	75 19		 jne	 SHORT $LN3@SetSlotCou

; 440  : 	{
; 441  : 		if (pSlot->pNumberLine)

  00048	8b 75 d8	 mov	 esi, DWORD PTR _pSlot$[ebp]
  0004b	8b 4e 58	 mov	 ecx, DWORD PTR [esi+88]
  0004e	85 c9		 test	 ecx, ecx
  00050	74 77		 je	 SHORT $LN4@SetSlotCou

; 442  : 		{
; 443  : 			delete pSlot->pNumberLine;

  00052	8b 01		 mov	 eax, DWORD PTR [ecx]
  00054	6a 01		 push	 1
  00056	ff 10		 call	 DWORD PTR [eax]

; 444  : 			pSlot->pNumberLine = NULL;

  00058	c7 46 58 00 00
	00 00		 mov	 DWORD PTR [esi+88], 0

; 445  : 		}
; 446  : 	}

  0005f	eb 68		 jmp	 SHORT $LN4@SetSlotCou
$LN3@SetSlotCou:

; 447  : 	else
; 448  : 	{
; 449  : 		char szCount[16+1];
; 450  : 		_snprintf(szCount, sizeof(szCount), "%d", dwCount);

  00061	50		 push	 eax
  00062	68 00 00 00 00	 push	 OFFSET ??_C@_02DPKJAMEF@?$CFd@
  00067	8d 45 dc	 lea	 eax, DWORD PTR _szCount$3[ebp]
  0006a	6a 11		 push	 17			; 00000011H
  0006c	50		 push	 eax
  0006d	e8 00 00 00 00	 call	 __snprintf

; 451  : 
; 452  : 		if (!pSlot->pNumberLine)

  00072	8b 7d d8	 mov	 edi, DWORD PTR _pSlot$[ebp]
  00075	83 c4 10	 add	 esp, 16			; 00000010H
  00078	8b 77 58	 mov	 esi, DWORD PTR [edi+88]
  0007b	85 f6		 test	 esi, esi
  0007d	75 3f		 jne	 SHORT $LN6@SetSlotCou

; 453  : 		{
; 454  : 			CNumberLine * pNumberLine = new UI::CNumberLine(this);

  0007f	68 c0 00 00 00	 push	 192			; 000000c0H
  00084	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00089	83 c4 04	 add	 esp, 4
  0008c	89 45 d8	 mov	 DWORD PTR $T2[ebp], eax
  0008f	89 75 fc	 mov	 DWORD PTR __$EHRec$[ebp+8], esi
  00092	85 c0		 test	 eax, eax
  00094	74 0c		 je	 SHORT $LN10@SetSlotCou
  00096	53		 push	 ebx
  00097	8b c8		 mov	 ecx, eax
  00099	e8 00 00 00 00	 call	 ??0CNumberLine@UI@@QAE@PAVCWindow@1@@Z ; UI::CNumberLine::CNumberLine
  0009e	8b f0		 mov	 esi, eax
  000a0	eb 02		 jmp	 SHORT $LN11@SetSlotCou
$LN10@SetSlotCou:
  000a2	33 f6		 xor	 esi, esi
$LN11@SetSlotCou:

; 455  : 			pNumberLine->SetHorizontalAlign(CNumberLine::HORIZONTAL_ALIGN_RIGHT);

  000a4	6a 02		 push	 2
  000a6	8b ce		 mov	 ecx, esi
  000a8	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  000af	e8 00 00 00 00	 call	 ?SetHorizontalAlign@CNumberLine@UI@@QAEXH@Z ; UI::CNumberLine::SetHorizontalAlign

; 456  : 			pNumberLine->Show();

  000b4	8b ce		 mov	 ecx, esi
  000b6	e8 00 00 00 00	 call	 ?Show@CWindow@UI@@QAEXXZ ; UI::CWindow::Show

; 457  : 			pSlot->pNumberLine = pNumberLine;

  000bb	89 77 58	 mov	 DWORD PTR [edi+88], esi
$LN6@SetSlotCou:

; 458  : 		}
; 459  : 
; 460  : 		pSlot->pNumberLine->SetNumber(szCount);

  000be	8d 45 dc	 lea	 eax, DWORD PTR _szCount$3[ebp]
  000c1	8b ce		 mov	 ecx, esi
  000c3	50		 push	 eax
  000c4	e8 00 00 00 00	 call	 ?SetNumber@CNumberLine@UI@@QAEXPBD@Z ; UI::CNumberLine::SetNumber
$LN4@SetSlotCou:

; 461  : 	}
; 462  : }

  000c9	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000cc	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000d3	59		 pop	 ecx
  000d4	5f		 pop	 edi
  000d5	5e		 pop	 esi
  000d6	5b		 pop	 ebx
  000d7	8b 4d f0	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000da	33 cd		 xor	 ecx, ebp
  000dc	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000e1	8b e5		 mov	 esp, ebp
  000e3	5d		 pop	 ebp
  000e4	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?SetSlotCount@CSlotWindow@UI@@QAEXKK@Z$0:
  00000	68 c0 00 00 00	 push	 192			; 000000c0H
  00005	8b 45 d8	 mov	 eax, DWORD PTR $T2[ebp]
  00008	50		 push	 eax
  00009	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0000e	83 c4 08	 add	 esp, 8
  00011	c3		 ret	 0
  00012	cc		 int	 3
  00013	cc		 int	 3
  00014	cc		 int	 3
  00015	cc		 int	 3
  00016	cc		 int	 3
__ehhandler$?SetSlotCount@CSlotWindow@UI@@QAEXKK@Z:
  00017	90		 npad	 1
  00018	90		 npad	 1
  00019	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0001d	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00020	8b 4a d4	 mov	 ecx, DWORD PTR [edx-44]
  00023	33 c8		 xor	 ecx, eax
  00025	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0002a	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  0002d	33 c8		 xor	 ecx, eax
  0002f	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00034	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?SetSlotCount@CSlotWindow@UI@@QAEXKK@Z
  00039	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?SetSlotCount@CSlotWindow@UI@@QAEXKK@Z ENDP		; UI::CSlotWindow::SetSlotCount
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ?SetSlot@CSlotWindow@UI@@QAEXKKEEPAVCGraphicImage@@AAUD3DXCOLOR@@@Z
_TEXT	SEGMENT
_pSlot$ = -4						; size = 4
_dwIndex$ = 8						; size = 4
_dwVirtualNumber$ = 12					; size = 4
_byWidth$ = 16						; size = 1
_byHeight$ = 20						; size = 1
_pImage$ = 24						; size = 4
_diffuseColor$ = 28					; size = 4
?SetSlot@CSlotWindow@UI@@QAEXKKEEPAVCGraphicImage@@AAUD3DXCOLOR@@@Z PROC ; UI::CSlotWindow::SetSlot, COMDAT
; _this$ = ecx

; 393  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	57		 push	 edi

; 394  : 	TSlot * pSlot;
; 395  : 	if (!GetSlotPointer(dwIndex, &pSlot))

  00005	8d 45 fc	 lea	 eax, DWORD PTR _pSlot$[ebp]
  00008	8b f9		 mov	 edi, ecx
  0000a	50		 push	 eax
  0000b	ff 75 08	 push	 DWORD PTR _dwIndex$[ebp]
  0000e	e8 00 00 00 00	 call	 ?GetSlotPointer@CSlotWindow@UI@@IAEHKPAPAUSSlot@12@@Z ; UI::CSlotWindow::GetSlotPointer
  00013	85 c0		 test	 eax, eax
  00015	0f 84 c9 00 00
	00		 je	 $LN7@SetSlot

; 396  : 		return;
; 397  : 
; 398  : 	if (pSlot->isItem)

  0001b	53		 push	 ebx
  0001c	8b 5d 0c	 mov	 ebx, DWORD PTR _dwVirtualNumber$[ebp]
  0001f	56		 push	 esi
  00020	8b 75 fc	 mov	 esi, DWORD PTR _pSlot$[ebp]
  00023	83 7e 18 00	 cmp	 DWORD PTR [esi+24], 0
  00027	74 37		 je	 SHORT $LN4@SetSlot

; 399  : 	if (pSlot->dwItemIndex == dwVirtualNumber)

  00029	39 5e 14	 cmp	 DWORD PTR [esi+20], ebx
  0002c	75 32		 jne	 SHORT $LN4@SetSlot

; 400  : 	{
; 401  : 		pSlot->dwState = 0;
; 402  : 		pSlot->isItem = TRUE;
; 403  : 		if (pImage && pSlot->pInstance)

  0002e	8b 45 18	 mov	 eax, DWORD PTR _pImage$[ebp]
  00031	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], 0
  00037	c7 46 18 01 00
	00 00		 mov	 DWORD PTR [esi+24], 1
  0003e	85 c0		 test	 eax, eax
  00040	0f 84 9c 00 00
	00		 je	 $LN9@SetSlot
  00046	8b 4e 54	 mov	 ecx, DWORD PTR [esi+84]
  00049	85 c9		 test	 ecx, ecx
  0004b	0f 84 91 00 00
	00		 je	 $LN9@SetSlot

; 404  : 		{
; 405  : 			pSlot->pInstance->SetImagePointer(pImage);

  00051	50		 push	 eax
  00052	e8 00 00 00 00	 call	 ?SetImagePointer@CGraphicImageInstance@@QAEXPAVCGraphicImage@@@Z ; CGraphicImageInstance::SetImagePointer
  00057	5e		 pop	 esi
  00058	5b		 pop	 ebx
  00059	5f		 pop	 edi

; 430  : 	}
; 431  : }

  0005a	8b e5		 mov	 esp, ebp
  0005c	5d		 pop	 ebp
  0005d	c2 18 00	 ret	 24			; 00000018H
$LN4@SetSlot:

; 406  : 		}
; 407  : 		return;
; 408  : 	}
; 409  : 
; 410  : 	ClearSlot(pSlot);

  00060	56		 push	 esi
  00061	8b cf		 mov	 ecx, edi
  00063	e8 00 00 00 00	 call	 ?ClearSlot@CSlotWindow@UI@@IAEXPAUSSlot@12@@Z ; UI::CSlotWindow::ClearSlot

; 411  : 	pSlot->dwState = 0;

  00068	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], 0

; 412  : 	pSlot->isItem = TRUE;

  0006e	c7 46 18 01 00
	00 00		 mov	 DWORD PTR [esi+24], 1

; 413  : 	pSlot->dwItemIndex = dwVirtualNumber;

  00075	89 5e 14	 mov	 DWORD PTR [esi+20], ebx

; 414  : 
; 415  : 	if (pImage)

  00078	8b 5d 18	 mov	 ebx, DWORD PTR _pImage$[ebp]
  0007b	85 db		 test	 ebx, ebx
  0007d	74 4b		 je	 SHORT $LN6@SetSlot

; 416  : 	{
; 417  : 		assert(NULL == pSlot->pInstance);
; 418  : 		pSlot->pInstance = CGraphicImageInstance::New();

  0007f	e8 00 00 00 00	 call	 ?New@CGraphicImageInstance@@SAPAV1@XZ ; CGraphicImageInstance::New

; 419  : 		pSlot->pInstance->SetDiffuseColor(diffuseColor.r, diffuseColor.g, diffuseColor.b, diffuseColor.a);

  00084	8b 4d 1c	 mov	 ecx, DWORD PTR _diffuseColor$[ebp]
  00087	83 ec 10	 sub	 esp, 16			; 00000010H
  0008a	89 46 54	 mov	 DWORD PTR [esi+84], eax
  0008d	0f 10 01	 movups	 xmm0, XMMWORD PTR [ecx]
  00090	8b c8		 mov	 ecx, eax
  00092	0f 11 04 24	 movups	 XMMWORD PTR [esp], xmm0
  00096	e8 00 00 00 00	 call	 ?SetDiffuseColor@CGraphicImageInstance@@QAEXMMMM@Z ; CGraphicImageInstance::SetDiffuseColor

; 420  : 		pSlot->pInstance->SetScale(m_fScaleX, m_fScaleY);

  0009b	f3 0f 10 87 c0
	00 00 00	 movss	 xmm0, DWORD PTR [edi+192]
  000a3	83 ec 08	 sub	 esp, 8
  000a6	8b 4e 54	 mov	 ecx, DWORD PTR [esi+84]
  000a9	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  000af	f3 0f 10 87 bc
	00 00 00	 movss	 xmm0, DWORD PTR [edi+188]
  000b7	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000bc	e8 00 00 00 00	 call	 ?SetScale@CGraphicImageInstance@@QAEXMM@Z ; CGraphicImageInstance::SetScale

; 421  : 		pSlot->pInstance->SetImagePointer(pImage);

  000c1	8b 4e 54	 mov	 ecx, DWORD PTR [esi+84]
  000c4	53		 push	 ebx
  000c5	e8 00 00 00 00	 call	 ?SetImagePointer@CGraphicImageInstance@@QAEXPAVCGraphicImage@@@Z ; CGraphicImageInstance::SetImagePointer
$LN6@SetSlot:

; 422  : 	}
; 423  : 
; 424  : 	pSlot->byxPlacedItemSize = byWidth;

  000ca	8a 45 10	 mov	 al, BYTE PTR _byWidth$[ebp]
  000cd	88 46 50	 mov	 BYTE PTR [esi+80], al

; 425  : 	pSlot->byyPlacedItemSize = byHeight;

  000d0	8a 45 14	 mov	 al, BYTE PTR _byHeight$[ebp]
  000d3	88 46 51	 mov	 BYTE PTR [esi+81], al

; 426  : 
; 427  : 	if (pSlot->pCoverButton)

  000d6	8b 4e 60	 mov	 ecx, DWORD PTR [esi+96]
  000d9	85 c9		 test	 ecx, ecx
  000db	74 05		 je	 SHORT $LN9@SetSlot

; 428  : 	{
; 429  : 		pSlot->pCoverButton->Show();

  000dd	e8 00 00 00 00	 call	 ?Show@CWindow@UI@@QAEXXZ ; UI::CWindow::Show
$LN9@SetSlot:
  000e2	5e		 pop	 esi
  000e3	5b		 pop	 ebx
$LN7@SetSlot:
  000e4	5f		 pop	 edi

; 430  : 	}
; 431  : }

  000e5	8b e5		 mov	 esp, ebp
  000e7	5d		 pop	 ebp
  000e8	c2 18 00	 ret	 24			; 00000018H
?SetSlot@CSlotWindow@UI@@QAEXKKEEPAVCGraphicImage@@AAUD3DXCOLOR@@@Z ENDP ; UI::CSlotWindow::SetSlot
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ?ClearSlot@CSlotWindow@UI@@QAEXK@Z
_TEXT	SEGMENT
_pSlot$ = -4						; size = 4
_dwIndex$ = 8						; size = 4
?ClearSlot@CSlotWindow@UI@@QAEXK@Z PROC			; UI::CSlotWindow::ClearSlot, COMDAT
; _this$ = ecx

; 656  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi

; 657  : 	TSlot * pSlot;
; 658  : 	if (!GetSlotPointer(dwIndex, &pSlot))

  00005	8d 45 fc	 lea	 eax, DWORD PTR _pSlot$[ebp]
  00008	8b f1		 mov	 esi, ecx
  0000a	50		 push	 eax
  0000b	ff 75 08	 push	 DWORD PTR _dwIndex$[ebp]
  0000e	e8 00 00 00 00	 call	 ?GetSlotPointer@CSlotWindow@UI@@IAEHKPAPAUSSlot@12@@Z ; UI::CSlotWindow::GetSlotPointer
  00013	85 c0		 test	 eax, eax
  00015	74 0a		 je	 SHORT $LN1@ClearSlot

; 659  : 		return;
; 660  : 
; 661  : 	ClearSlot(pSlot);

  00017	ff 75 fc	 push	 DWORD PTR _pSlot$[ebp]
  0001a	8b ce		 mov	 ecx, esi
  0001c	e8 00 00 00 00	 call	 ?ClearSlot@CSlotWindow@UI@@IAEXPAUSSlot@12@@Z ; UI::CSlotWindow::ClearSlot
$LN1@ClearSlot:
  00021	5e		 pop	 esi

; 662  : }

  00022	8b e5		 mov	 esp, ebp
  00024	5d		 pop	 ebp
  00025	c2 04 00	 ret	 4
?ClearSlot@CSlotWindow@UI@@QAEXK@Z ENDP			; UI::CSlotWindow::ClearSlot
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ?ClearAllSlot@CSlotWindow@UI@@QAEXXZ
_TEXT	SEGMENT
?ClearAllSlot@CSlotWindow@UI@@QAEXXZ PROC		; UI::CSlotWindow::ClearAllSlot, COMDAT
; _this$ = ecx

; 715  : 	Destroy();

  00000	e9 00 00 00 00	 jmp	 ?Destroy@CSlotWindow@UI@@QAEXXZ ; UI::CSlotWindow::Destroy
?ClearAllSlot@CSlotWindow@UI@@QAEXXZ ENDP		; UI::CSlotWindow::ClearAllSlot
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ?HasSlot@CSlotWindow@UI@@QAEHK@Z
_TEXT	SEGMENT
_pSlot$ = -4						; size = 4
_dwIndex$ = 8						; size = 4
?HasSlot@CSlotWindow@UI@@QAEHK@Z PROC			; UI::CSlotWindow::HasSlot, COMDAT
; _this$ = ecx

; 384  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 385  : 	TSlot * pSlot;
; 386  : 	if (!GetSlotPointer(dwIndex, &pSlot))

  00004	8d 45 fc	 lea	 eax, DWORD PTR _pSlot$[ebp]
  00007	50		 push	 eax
  00008	ff 75 08	 push	 DWORD PTR _dwIndex$[ebp]
  0000b	e8 00 00 00 00	 call	 ?GetSlotPointer@CSlotWindow@UI@@IAEHKPAPAUSSlot@12@@Z ; UI::CSlotWindow::GetSlotPointer
  00010	f7 d8		 neg	 eax
  00012	1b c0		 sbb	 eax, eax
  00014	f7 d8		 neg	 eax

; 387  : 		return FALSE;
; 388  : 
; 389  : 	return TRUE;
; 390  : }

  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c2 04 00	 ret	 4
?HasSlot@CSlotWindow@UI@@QAEHK@Z ENDP			; UI::CSlotWindow::HasSlot
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ?IsDisableCoverButton@CSlotWindow@UI@@QAEHK@Z
_TEXT	SEGMENT
_pSlot$ = -4						; size = 4
_dwIndex$ = 8						; size = 4
?IsDisableCoverButton@CSlotWindow@UI@@QAEHK@Z PROC	; UI::CSlotWindow::IsDisableCoverButton, COMDAT
; _this$ = ecx

; 327  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 328  : 	TSlot * pSlot;
; 329  : 	if (!GetSlotPointer(dwIndex, &pSlot))

  00004	8d 45 fc	 lea	 eax, DWORD PTR _pSlot$[ebp]
  00007	50		 push	 eax
  00008	ff 75 08	 push	 DWORD PTR _dwIndex$[ebp]
  0000b	e8 00 00 00 00	 call	 ?GetSlotPointer@CSlotWindow@UI@@IAEHKPAPAUSSlot@12@@Z ; UI::CSlotWindow::GetSlotPointer
  00010	85 c0		 test	 eax, eax
  00012	74 15		 je	 SHORT $LN5@IsDisableC

; 330  : 		return FALSE;
; 331  : 
; 332  : 	if (!pSlot->pCoverButton)

  00014	8b 45 fc	 mov	 eax, DWORD PTR _pSlot$[ebp]
  00017	8b 48 60	 mov	 ecx, DWORD PTR [eax+96]
  0001a	85 c9		 test	 ecx, ecx
  0001c	74 0b		 je	 SHORT $LN5@IsDisableC

; 334  : 
; 335  : 	return pSlot->pCoverButton->IsDisable();

  0001e	e8 00 00 00 00	 call	 ?IsDisable@CButton@UI@@QAEHXZ ; UI::CButton::IsDisable

; 336  : }

  00023	8b e5		 mov	 esp, ebp
  00025	5d		 pop	 ebp
  00026	c2 04 00	 ret	 4
$LN5@IsDisableC:

; 333  : 		return FALSE;

  00029	33 c0		 xor	 eax, eax

; 336  : }

  0002b	8b e5		 mov	 esp, ebp
  0002d	5d		 pop	 ebp
  0002e	c2 04 00	 ret	 4
?IsDisableCoverButton@CSlotWindow@UI@@QAEHK@Z ENDP	; UI::CSlotWindow::IsDisableCoverButton
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ?HideSlotBaseImage@CSlotWindow@UI@@QAEXK@Z
_TEXT	SEGMENT
_pSlot$ = -4						; size = 4
_dwIndex$ = 8						; size = 4
?HideSlotBaseImage@CSlotWindow@UI@@QAEXK@Z PROC		; UI::CSlotWindow::HideSlotBaseImage, COMDAT
; _this$ = ecx

; 318  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 319  : 	TSlot * pSlot;
; 320  : 	if (!GetSlotPointer(dwIndex, &pSlot))

  00004	8d 45 fc	 lea	 eax, DWORD PTR _pSlot$[ebp]
  00007	50		 push	 eax
  00008	ff 75 08	 push	 DWORD PTR _dwIndex$[ebp]
  0000b	e8 00 00 00 00	 call	 ?GetSlotPointer@CSlotWindow@UI@@IAEHKPAPAUSSlot@12@@Z ; UI::CSlotWindow::GetSlotPointer
  00010	85 c0		 test	 eax, eax
  00012	74 07		 je	 SHORT $LN1@HideSlotBa

; 321  : 		return;
; 322  : 
; 323  : 	pSlot->bRenderBaseSlotImage = false;

  00014	8b 45 fc	 mov	 eax, DWORD PTR _pSlot$[ebp]
  00017	c6 40 5c 00	 mov	 BYTE PTR [eax+92], 0
$LN1@HideSlotBa:

; 324  : }

  0001b	8b e5		 mov	 esp, ebp
  0001d	5d		 pop	 ebp
  0001e	c2 04 00	 ret	 4
?HideSlotBaseImage@CSlotWindow@UI@@QAEXK@Z ENDP		; UI::CSlotWindow::HideSlotBaseImage
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ?ShowSlotBaseImage@CSlotWindow@UI@@QAEXK@Z
_TEXT	SEGMENT
_pSlot$ = -4						; size = 4
_dwIndex$ = 8						; size = 4
?ShowSlotBaseImage@CSlotWindow@UI@@QAEXK@Z PROC		; UI::CSlotWindow::ShowSlotBaseImage, COMDAT
; _this$ = ecx

; 309  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 310  : 	TSlot * pSlot;
; 311  : 	if (!GetSlotPointer(dwIndex, &pSlot))

  00004	8d 45 fc	 lea	 eax, DWORD PTR _pSlot$[ebp]
  00007	50		 push	 eax
  00008	ff 75 08	 push	 DWORD PTR _dwIndex$[ebp]
  0000b	e8 00 00 00 00	 call	 ?GetSlotPointer@CSlotWindow@UI@@IAEHKPAPAUSSlot@12@@Z ; UI::CSlotWindow::GetSlotPointer
  00010	85 c0		 test	 eax, eax
  00012	74 07		 je	 SHORT $LN1@ShowSlotBa

; 312  : 		return;
; 313  : 
; 314  : 	pSlot->bRenderBaseSlotImage = true;

  00014	8b 45 fc	 mov	 eax, DWORD PTR _pSlot$[ebp]
  00017	c6 40 5c 01	 mov	 BYTE PTR [eax+92], 1
$LN1@ShowSlotBa:

; 315  : }

  0001b	8b e5		 mov	 esp, ebp
  0001d	5d		 pop	 ebp
  0001e	c2 04 00	 ret	 4
?ShowSlotBaseImage@CSlotWindow@UI@@QAEXK@Z ENDP		; UI::CSlotWindow::ShowSlotBaseImage
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ?SetAlwaysRenderCoverButton@CSlotWindow@UI@@QAEXK_N@Z
_TEXT	SEGMENT
_pSlot$ = -4						; size = 4
_dwIndex$ = 8						; size = 4
_bAlwaysRender$ = 12					; size = 1
?SetAlwaysRenderCoverButton@CSlotWindow@UI@@QAEXK_N@Z PROC ; UI::CSlotWindow::SetAlwaysRenderCoverButton, COMDAT
; _this$ = ecx

; 297  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 298  : 	TSlot * pSlot;
; 299  : 	if (!GetSlotPointer(dwIndex, &pSlot))

  00004	8d 45 fc	 lea	 eax, DWORD PTR _pSlot$[ebp]
  00007	50		 push	 eax
  00008	ff 75 08	 push	 DWORD PTR _dwIndex$[ebp]
  0000b	e8 00 00 00 00	 call	 ?GetSlotPointer@CSlotWindow@UI@@IAEHKPAPAUSSlot@12@@Z ; UI::CSlotWindow::GetSlotPointer
  00010	85 c0		 test	 eax, eax
  00012	74 15		 je	 SHORT $LN4@SetAlwaysR

; 300  : 		return;
; 301  : 
; 302  : 	if (bAlwaysRender)

  00014	80 7d 0c 00	 cmp	 BYTE PTR _bAlwaysRender$[ebp], 0
  00018	8b 45 fc	 mov	 eax, DWORD PTR _pSlot$[ebp]
  0001b	74 09		 je	 SHORT $LN3@SetAlwaysR

; 303  : 		SET_BIT(pSlot->dwState, SLOT_STATE_ALWAYS_RENDER_COVER);

  0001d	83 08 08	 or	 DWORD PTR [eax], 8

; 306  : }

  00020	8b e5		 mov	 esp, ebp
  00022	5d		 pop	 ebp
  00023	c2 08 00	 ret	 8
$LN3@SetAlwaysR:

; 304  : 	else
; 305  : 		REMOVE_BIT(pSlot->dwState, SLOT_STATE_ALWAYS_RENDER_COVER);

  00026	83 20 f7	 and	 DWORD PTR [eax], -9	; fffffff7H
$LN4@SetAlwaysR:

; 306  : }

  00029	8b e5		 mov	 esp, ebp
  0002b	5d		 pop	 ebp
  0002c	c2 08 00	 ret	 8
?SetAlwaysRenderCoverButton@CSlotWindow@UI@@QAEXK_N@Z ENDP ; UI::CSlotWindow::SetAlwaysRenderCoverButton
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ?DisableCoverButton@CSlotWindow@UI@@QAEXK@Z
_TEXT	SEGMENT
_pSlot$ = -4						; size = 4
_dwIndex$ = 8						; size = 4
?DisableCoverButton@CSlotWindow@UI@@QAEXK@Z PROC	; UI::CSlotWindow::DisableCoverButton, COMDAT
; _this$ = ecx

; 285  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 286  : 	TSlot * pSlot;
; 287  : 	if (!GetSlotPointer(dwIndex, &pSlot))

  00004	8d 45 fc	 lea	 eax, DWORD PTR _pSlot$[ebp]
  00007	50		 push	 eax
  00008	ff 75 08	 push	 DWORD PTR _dwIndex$[ebp]
  0000b	e8 00 00 00 00	 call	 ?GetSlotPointer@CSlotWindow@UI@@IAEHKPAPAUSSlot@12@@Z ; UI::CSlotWindow::GetSlotPointer
  00010	85 c0		 test	 eax, eax
  00012	74 0f		 je	 SHORT $LN1@DisableCov

; 288  : 		return;
; 289  : 
; 290  : 	if (!pSlot->pCoverButton)

  00014	8b 45 fc	 mov	 eax, DWORD PTR _pSlot$[ebp]
  00017	8b 48 60	 mov	 ecx, DWORD PTR [eax+96]
  0001a	85 c9		 test	 ecx, ecx
  0001c	74 05		 je	 SHORT $LN1@DisableCov

; 291  : 		return;
; 292  : 
; 293  : 	pSlot->pCoverButton->Disable();

  0001e	e8 00 00 00 00	 call	 ?Disable@CButton@UI@@QAEXXZ ; UI::CButton::Disable
$LN1@DisableCov:

; 294  : }

  00023	8b e5		 mov	 esp, ebp
  00025	5d		 pop	 ebp
  00026	c2 04 00	 ret	 4
?DisableCoverButton@CSlotWindow@UI@@QAEXK@Z ENDP	; UI::CSlotWindow::DisableCoverButton
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ?EnableCoverButton@CSlotWindow@UI@@QAEXK@Z
_TEXT	SEGMENT
_pSlot$ = -4						; size = 4
_dwIndex$ = 8						; size = 4
?EnableCoverButton@CSlotWindow@UI@@QAEXK@Z PROC		; UI::CSlotWindow::EnableCoverButton, COMDAT
; _this$ = ecx

; 273  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 274  : 	TSlot * pSlot;
; 275  : 	if (!GetSlotPointer(dwIndex, &pSlot))

  00004	8d 45 fc	 lea	 eax, DWORD PTR _pSlot$[ebp]
  00007	50		 push	 eax
  00008	ff 75 08	 push	 DWORD PTR _dwIndex$[ebp]
  0000b	e8 00 00 00 00	 call	 ?GetSlotPointer@CSlotWindow@UI@@IAEHKPAPAUSSlot@12@@Z ; UI::CSlotWindow::GetSlotPointer
  00010	85 c0		 test	 eax, eax
  00012	74 0f		 je	 SHORT $LN1@EnableCove

; 276  : 		return;
; 277  : 
; 278  : 	if (!pSlot->pCoverButton)

  00014	8b 45 fc	 mov	 eax, DWORD PTR _pSlot$[ebp]
  00017	8b 48 60	 mov	 ecx, DWORD PTR [eax+96]
  0001a	85 c9		 test	 ecx, ecx
  0001c	74 05		 je	 SHORT $LN1@EnableCove

; 279  : 		return;
; 280  : 
; 281  : 	pSlot->pCoverButton->Enable();

  0001e	e8 00 00 00 00	 call	 ?Enable@CButton@UI@@QAEXXZ ; UI::CButton::Enable
$LN1@EnableCove:

; 282  : }

  00023	8b e5		 mov	 esp, ebp
  00025	5d		 pop	 ebp
  00026	c2 04 00	 ret	 4
?EnableCoverButton@CSlotWindow@UI@@QAEXK@Z ENDP		; UI::CSlotWindow::EnableCoverButton
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonSlotWindow.cpp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\list
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonSlotWindow.cpp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\list
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ?AppendRequirementSignImage@CSlotWindow@UI@@QAEXPBD@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
$T2 = 8							; size = 4
_c_szImageName$ = 8					; size = 4
?AppendRequirementSignImage@CSlotWindow@UI@@QAEXPBD@Z PROC ; UI::CSlotWindow::AppendRequirementSignImage, COMDAT
; _this$ = ecx

; 366  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?AppendRequirementSignImage@CSlotWindow@UI@@QAEXPBD@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	53		 push	 ebx
  00012	56		 push	 esi
  00013	57		 push	 edi
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	50		 push	 eax
  0001c	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001f	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00025	8b f9		 mov	 edi, ecx
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\list

; 1083 :         return iterator(_Mypair._Myval2._Myhead->_Next, _STD addressof(_Mypair._Myval2));

  00027	8b 87 8c 00 00
	00		 mov	 eax, DWORD PTR [edi+140]

; 38   :     _List_unchecked_const_iterator(_Nodeptr _Pnode, const _Mylist* _Plist) noexcept : _Ptr(_Pnode) {

  0002d	8b 30		 mov	 esi, DWORD PTR [eax]
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonSlotWindow.cpp

; 367  : 	for (TSlotListIterator itor = m_SlotList.begin(); itor != m_SlotList.end(); ++itor)

  0002f	3b f0		 cmp	 esi, eax
  00031	74 64		 je	 SHORT $LN3@AppendRequ
  00033	8b 5d 08	 mov	 ebx, DWORD PTR _c_szImageName$[ebp]
$LL21@AppendRequ:

; 368  : 	{
; 369  : 		TSlot & rSlot = *itor;
; 370  : 		CImageBox *& rpSignImage = rSlot.pSignImage;
; 371  : 
; 372  : 		if (!rpSignImage)

  00036	8b 4e 70	 mov	 ecx, DWORD PTR [esi+112]
  00039	85 c9		 test	 ecx, ecx
  0003b	75 42		 jne	 SHORT $LN42@AppendRequ

; 373  : 		{
; 374  : 			rpSignImage = new CImageBox(NULL);

  0003d	68 80 00 00 00	 push	 128			; 00000080H
  00042	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00047	83 c4 04	 add	 esp, 4
  0004a	89 45 08	 mov	 DWORD PTR $T2[ebp], eax
  0004d	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00054	85 c0		 test	 eax, eax
  00056	74 0b		 je	 SHORT $LN7@AppendRequ
  00058	6a 00		 push	 0
  0005a	8b c8		 mov	 ecx, eax
  0005c	e8 00 00 00 00	 call	 ??0CImageBox@UI@@QAE@PAU_object@@@Z ; UI::CImageBox::CImageBox
  00061	eb 02		 jmp	 SHORT $LN8@AppendRequ
$LN7@AppendRequ:
  00063	33 c0		 xor	 eax, eax
$LN8@AppendRequ:

; 375  : 			CWindowManager::Instance().SetParent(rpSignImage, this);

  00065	57		 push	 edi
  00066	89 46 70	 mov	 DWORD PTR [esi+112], eax
  00069	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCWindowManager@UI@@@@0PAVCWindowManager@UI@@A ; CSingleton<UI::CWindowManager>::ms_singleton
  0006f	50		 push	 eax
  00070	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00077	e8 00 00 00 00	 call	 ?SetParent@CWindowManager@UI@@QAEXPAVCWindow@2@0@Z ; UI::CWindowManager::SetParent
  0007c	8b 4e 70	 mov	 ecx, DWORD PTR [esi+112]
$LN42@AppendRequ:

; 376  : 		}
; 377  : 
; 378  : 		rpSignImage->LoadImage(c_szImageName);

  0007f	53		 push	 ebx
  00080	e8 00 00 00 00	 call	 ?LoadImageA@CImageBox@UI@@QAEHPBD@Z ; UI::CImageBox::LoadImageA

; 379  : 		rpSignImage->Hide();

  00085	8b 4e 70	 mov	 ecx, DWORD PTR [esi+112]
  00088	e8 00 00 00 00	 call	 ?Hide@CWindow@UI@@QAEXXZ ; UI::CWindow::Hide
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\list

; 165  :         this->_Ptr = this->_Ptr->_Next;

  0008d	8b 36		 mov	 esi, DWORD PTR [esi]

; 198  :         return this->_Ptr == _Right._Ptr;

  0008f	3b b7 8c 00 00
	00		 cmp	 esi, DWORD PTR [edi+140]
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonSlotWindow.cpp

; 367  : 	for (TSlotListIterator itor = m_SlotList.begin(); itor != m_SlotList.end(); ++itor)

  00095	75 9f		 jne	 SHORT $LL21@AppendRequ
$LN3@AppendRequ:

; 380  : 	}
; 381  : }

  00097	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0009a	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000a1	59		 pop	 ecx
  000a2	5f		 pop	 edi
  000a3	5e		 pop	 esi
  000a4	5b		 pop	 ebx
  000a5	8b e5		 mov	 esp, ebp
  000a7	5d		 pop	 ebp
  000a8	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?AppendRequirementSignImage@CSlotWindow@UI@@QAEXPBD@Z$0:
  00000	68 80 00 00 00	 push	 128			; 00000080H
  00005	8b 45 08	 mov	 eax, DWORD PTR $T2[ebp]
  00008	50		 push	 eax
  00009	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0000e	83 c4 08	 add	 esp, 8
  00011	c3		 ret	 0
  00012	cc		 int	 3
  00013	cc		 int	 3
  00014	cc		 int	 3
  00015	cc		 int	 3
  00016	cc		 int	 3
__ehhandler$?AppendRequirementSignImage@CSlotWindow@UI@@QAEXPBD@Z:
  00017	90		 npad	 1
  00018	90		 npad	 1
  00019	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0001d	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00020	8b 4a f0	 mov	 ecx, DWORD PTR [edx-16]
  00023	33 c8		 xor	 ecx, eax
  00025	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0002a	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?AppendRequirementSignImage@CSlotWindow@UI@@QAEXPBD@Z
  0002f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?AppendRequirementSignImage@CSlotWindow@UI@@QAEXPBD@Z ENDP ; UI::CSlotWindow::AppendRequirementSignImage
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonSlotWindow.cpp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\list
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonSlotWindow.cpp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.h
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonSlotWindow.cpp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\list
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ?AppendSlotButton@CSlotWindow@UI@@QAEXPBD00@Z
_TEXT	SEGMENT
$T2 = -20						; size = 4
_this$1$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_c_szUpImageName$ = 8					; size = 4
_c_szOverImageName$ = 12				; size = 4
_c_szDownImageName$ = 16				; size = 4
?AppendSlotButton@CSlotWindow@UI@@QAEXPBD00@Z PROC	; UI::CSlotWindow::AppendSlotButton, COMDAT
; _this$ = ecx

; 344  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?AppendSlotButton@CSlotWindow@UI@@QAEXPBD00@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 08	 sub	 esp, 8
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00028	8b d9		 mov	 ebx, ecx
  0002a	89 5d f0	 mov	 DWORD PTR _this$1$[ebp], ebx
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\list

; 1083 :         return iterator(_Mypair._Myval2._Myhead->_Next, _STD addressof(_Mypair._Myval2));

  0002d	8b 83 8c 00 00
	00		 mov	 eax, DWORD PTR [ebx+140]

; 38   :     _List_unchecked_const_iterator(_Nodeptr _Pnode, const _Mylist* _Plist) noexcept : _Ptr(_Pnode) {

  00033	8b 30		 mov	 esi, DWORD PTR [eax]
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonSlotWindow.cpp

; 345  : 	for (TSlotListIterator itor = m_SlotList.begin(); itor != m_SlotList.end(); ++itor)

  00035	3b f0		 cmp	 esi, eax
  00037	0f 84 c1 00 00
	00		 je	 $LN3@AppendSlot
  0003d	0f 1f 00	 npad	 3
$LL21@AppendSlot:

; 346  : 	{
; 347  : 		TSlot & rSlot = *itor;
; 348  : 		CSlotButton *& rpSlotButton = rSlot.pSlotButton;
; 349  : 
; 350  : 		if (!rpSlotButton)

  00040	8b 4e 6c	 mov	 ecx, DWORD PTR [esi+108]
  00043	85 c9		 test	 ecx, ecx
  00045	75 6f		 jne	 SHORT $LN47@AppendSlot

; 351  : 		{
; 352  : 			rpSlotButton = new CSlotButton(CSlotButton::SLOT_BUTTON_TYPE_PLUS, rSlot.dwSlotNumber, this);

  00047	68 40 01 00 00	 push	 320			; 00000140H
  0004c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00051	8b f8		 mov	 edi, eax
  00053	83 c4 04	 add	 esp, 4
  00056	89 7d ec	 mov	 DWORD PTR $T2[ebp], edi
  00059	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00060	85 ff		 test	 edi, edi
  00062	74 2d		 je	 SHORT $LN7@AppendSlot
  00064	8b 5e 0c	 mov	 ebx, DWORD PTR [esi+12]

; 21   : 		CSlotButton(ESlotButtonType dwType, DWORD dwSlotNumber, CSlotWindow * pParent) : CButton(NULL)

  00067	8b cf		 mov	 ecx, edi
  00069	6a 00		 push	 0
  0006b	e8 00 00 00 00	 call	 ??0CButton@UI@@QAE@PAU_object@@@Z ; UI::CButton::CButton

; 22   : 		{
; 23   : 			m_dwSlotButtonType = dwType;
; 24   : 			m_dwSlotNumber = dwSlotNumber;

  00070	89 9f 38 01 00
	00		 mov	 DWORD PTR [edi+312], ebx

; 25   : 			m_pParent = pParent;

  00076	8b 5d f0	 mov	 ebx, DWORD PTR _this$1$[ebp]
  00079	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], OFFSET ??_7CSlotButton@CSlotWindow@UI@@6B@
  0007f	c7 87 34 01 00
	00 00 00 00 00	 mov	 DWORD PTR [edi+308], 0
  00089	89 9f 3c 01 00
	00		 mov	 DWORD PTR [edi+316], ebx

; 351  : 		{
; 352  : 			rpSlotButton = new CSlotButton(CSlotButton::SLOT_BUTTON_TYPE_PLUS, rSlot.dwSlotNumber, this);

  0008f	eb 02		 jmp	 SHORT $LN8@AppendSlot
$LN7@AppendSlot:
  00091	33 ff		 xor	 edi, edi
$LN8@AppendSlot:
  00093	89 7e 6c	 mov	 DWORD PTR [esi+108], edi
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.h

; 97   : 			void			AddFlag(DWORD flag)		{ SET_BIT(m_dwFlag, flag);		}

  00096	81 4f 58 00 01
	00 00		 or	 DWORD PTR [edi+88], 256	; 00000100H
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonSlotWindow.cpp

; 354  : 			CWindowManager::Instance().SetParent(rpSlotButton, this);

  0009d	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCWindowManager@UI@@@@0PAVCWindowManager@UI@@A ; CSingleton<UI::CWindowManager>::ms_singleton
  000a3	53		 push	 ebx
  000a4	ff 76 6c	 push	 DWORD PTR [esi+108]
  000a7	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  000ae	e8 00 00 00 00	 call	 ?SetParent@CWindowManager@UI@@QAEXPAVCWindow@2@0@Z ; UI::CWindowManager::SetParent
  000b3	8b 4e 6c	 mov	 ecx, DWORD PTR [esi+108]
$LN47@AppendSlot:

; 355  : 		}
; 356  : 
; 357  : 		rpSlotButton->SetUpVisual(c_szUpImageName);

  000b6	ff 75 08	 push	 DWORD PTR _c_szUpImageName$[ebp]
  000b9	e8 00 00 00 00	 call	 ?SetUpVisual@CButton@UI@@QAEHPBD@Z ; UI::CButton::SetUpVisual

; 358  : 		rpSlotButton->SetOverVisual(c_szOverImageName);

  000be	ff 75 0c	 push	 DWORD PTR _c_szOverImageName$[ebp]
  000c1	8b 4e 6c	 mov	 ecx, DWORD PTR [esi+108]
  000c4	e8 00 00 00 00	 call	 ?SetOverVisual@CButton@UI@@QAEHPBD@Z ; UI::CButton::SetOverVisual

; 359  : 		rpSlotButton->SetDownVisual(c_szDownImageName);

  000c9	ff 75 10	 push	 DWORD PTR _c_szDownImageName$[ebp]
  000cc	8b 4e 6c	 mov	 ecx, DWORD PTR [esi+108]
  000cf	e8 00 00 00 00	 call	 ?SetDownVisual@CButton@UI@@QAEHPBD@Z ; UI::CButton::SetDownVisual

; 360  : 		rpSlotButton->SetPosition(rSlot.ixPosition + 1, rSlot.iyPosition + 19);

  000d4	8b 46 4c	 mov	 eax, DWORD PTR [esi+76]
  000d7	8b 4e 6c	 mov	 ecx, DWORD PTR [esi+108]
  000da	83 c0 13	 add	 eax, 19			; 00000013H
  000dd	50		 push	 eax
  000de	8b 46 48	 mov	 eax, DWORD PTR [esi+72]
  000e1	40		 inc	 eax
  000e2	50		 push	 eax
  000e3	e8 00 00 00 00	 call	 ?SetPosition@CWindow@UI@@QAEXJJ@Z ; UI::CWindow::SetPosition

; 361  : 		rpSlotButton->Hide();

  000e8	8b 4e 6c	 mov	 ecx, DWORD PTR [esi+108]
  000eb	e8 00 00 00 00	 call	 ?Hide@CWindow@UI@@QAEXXZ ; UI::CWindow::Hide
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\list

; 165  :         this->_Ptr = this->_Ptr->_Next;

  000f0	8b 36		 mov	 esi, DWORD PTR [esi]

; 198  :         return this->_Ptr == _Right._Ptr;

  000f2	3b b3 8c 00 00
	00		 cmp	 esi, DWORD PTR [ebx+140]
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonSlotWindow.cpp

; 345  : 	for (TSlotListIterator itor = m_SlotList.begin(); itor != m_SlotList.end(); ++itor)

  000f8	0f 85 42 ff ff
	ff		 jne	 $LL21@AppendSlot
$LN3@AppendSlot:

; 362  : 	}
; 363  : }

  000fe	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00101	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00108	59		 pop	 ecx
  00109	5f		 pop	 edi
  0010a	5e		 pop	 esi
  0010b	5b		 pop	 ebx
  0010c	8b e5		 mov	 esp, ebp
  0010e	5d		 pop	 ebp
  0010f	c2 0c 00	 ret	 12			; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?AppendSlotButton@CSlotWindow@UI@@QAEXPBD00@Z$0:
  00000	68 40 01 00 00	 push	 320			; 00000140H
  00005	8b 45 ec	 mov	 eax, DWORD PTR $T2[ebp]
  00008	50		 push	 eax
  00009	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0000e	83 c4 08	 add	 esp, 8
  00011	c3		 ret	 0
  00012	cc		 int	 3
  00013	cc		 int	 3
  00014	cc		 int	 3
  00015	cc		 int	 3
  00016	cc		 int	 3
__ehhandler$?AppendSlotButton@CSlotWindow@UI@@QAEXPBD00@Z:
  00017	90		 npad	 1
  00018	90		 npad	 1
  00019	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0001d	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00020	8b 4a e8	 mov	 ecx, DWORD PTR [edx-24]
  00023	33 c8		 xor	 ecx, eax
  00025	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0002a	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?AppendSlotButton@CSlotWindow@UI@@QAEXPBD00@Z
  0002f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?AppendSlotButton@CSlotWindow@UI@@QAEXPBD00@Z ENDP	; UI::CSlotWindow::AppendSlotButton
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ?SetSlotBaseImage@CSlotWindow@UI@@QAEXPBDMMMM@Z
_TEXT	SEGMENT
_c_szFileName$ = 8					; size = 4
_fr$ = 12						; size = 4
_fg$ = 16						; size = 4
_fb$ = 20						; size = 4
_fa$ = 24						; size = 4
?SetSlotBaseImage@CSlotWindow@UI@@QAEXPBDMMMM@Z PROC	; UI::CSlotWindow::SetSlotBaseImage, COMDAT
; _this$ = ecx

; 339  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 340  : 	__CreateBaseImage(c_szFileName, fr, fg, fb, fa);

  00003	f3 0f 10 45 18	 movss	 xmm0, DWORD PTR _fa$[ebp]
  00008	83 ec 10	 sub	 esp, 16			; 00000010H
  0000b	f3 0f 11 44 24
	0c		 movss	 DWORD PTR [esp+12], xmm0
  00011	f3 0f 10 45 14	 movss	 xmm0, DWORD PTR _fb$[ebp]
  00016	f3 0f 11 44 24
	08		 movss	 DWORD PTR [esp+8], xmm0
  0001c	f3 0f 10 45 10	 movss	 xmm0, DWORD PTR _fg$[ebp]
  00021	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  00027	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR _fr$[ebp]
  0002c	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00031	ff 75 08	 push	 DWORD PTR _c_szFileName$[ebp]
  00034	e8 00 00 00 00	 call	 ?__CreateBaseImage@CSlotWindow@UI@@IAEXPBDMMMM@Z ; UI::CSlotWindow::__CreateBaseImage

; 341  : }

  00039	5d		 pop	 ebp
  0003a	c2 14 00	 ret	 20			; 00000014H
?SetSlotBaseImage@CSlotWindow@UI@@QAEXPBDMMMM@Z ENDP	; UI::CSlotWindow::SetSlotBaseImage
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ?SetCoverButton@CSlotWindow@UI@@QAEXKPBD000HH@Z
_TEXT	SEGMENT
_this$1$ = -20						; size = 4
_pSlot$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
$T2 = 8							; size = 4
_dwIndex$ = 8						; size = 4
_c_szUpImageName$ = 12					; size = 4
_c_szOverImageName$ = 16				; size = 4
_c_szDownImageName$ = 20				; size = 4
_c_szDisableImageName$ = 24				; size = 4
_bLeftButtonEnable$ = 28				; size = 4
_bRightButtonEnable$ = 32				; size = 4
?SetCoverButton@CSlotWindow@UI@@QAEXKPBD000HH@Z PROC	; UI::CSlotWindow::SetCoverButton, COMDAT
; _this$ = ecx

; 243  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?SetCoverButton@CSlotWindow@UI@@QAEXKPBD000HH@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 08	 sub	 esp, 8
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00028	8b f1		 mov	 esi, ecx
  0002a	89 75 ec	 mov	 DWORD PTR _this$1$[ebp], esi

; 244  : 	TSlot * pSlot;
; 245  : 	if (!GetSlotPointer(dwIndex, &pSlot))

  0002d	8d 45 f0	 lea	 eax, DWORD PTR _pSlot$[ebp]
  00030	50		 push	 eax
  00031	ff 75 08	 push	 DWORD PTR _dwIndex$[ebp]
  00034	e8 00 00 00 00	 call	 ?GetSlotPointer@CSlotWindow@UI@@IAEHKPAPAUSSlot@12@@Z ; UI::CSlotWindow::GetSlotPointer
  00039	85 c0		 test	 eax, eax
  0003b	0f 84 0a 01 00
	00		 je	 $LN4@SetCoverBu

; 246  : 		return;
; 247  : 
; 248  : 	CCoverButton *& rpCoverButton = pSlot->pCoverButton;

  00041	8b 5d f0	 mov	 ebx, DWORD PTR _pSlot$[ebp]

; 249  : 
; 250  : 	if (!rpCoverButton)

  00044	8b 4b 60	 mov	 ecx, DWORD PTR [ebx+96]
  00047	85 c9		 test	 ecx, ecx
  00049	75 7a		 jne	 SHORT $LN3@SetCoverBu

; 251  : 	{
; 252  : 		rpCoverButton = new CCoverButton(CSlotButton::SLOT_BUTTON_TYPE_COVER, pSlot->dwSlotNumber, this);

  0004b	68 48 01 00 00	 push	 328			; 00000148H
  00050	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00055	8b f8		 mov	 edi, eax
  00057	83 c4 04	 add	 esp, 4
  0005a	89 7d 08	 mov	 DWORD PTR $T2[ebp], edi
  0005d	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00064	85 ff		 test	 edi, edi
  00066	74 41		 je	 SHORT $LN6@SetCoverBu
  00068	8b 73 04	 mov	 esi, DWORD PTR [ebx+4]

; 21   : 		CSlotButton(ESlotButtonType dwType, DWORD dwSlotNumber, CSlotWindow * pParent) : CButton(NULL)

  0006b	8b cf		 mov	 ecx, edi
  0006d	6a 00		 push	 0
  0006f	e8 00 00 00 00	 call	 ??0CButton@UI@@QAE@PAU_object@@@Z ; UI::CButton::CButton

; 22   : 		{
; 23   : 			m_dwSlotButtonType = dwType;
; 24   : 			m_dwSlotNumber = dwSlotNumber;

  00074	89 b7 38 01 00
	00		 mov	 DWORD PTR [edi+312], esi

; 25   : 			m_pParent = pParent;

  0007a	8b 75 ec	 mov	 esi, DWORD PTR _this$1$[ebp]
  0007d	c7 87 34 01 00
	00 01 00 00 00	 mov	 DWORD PTR [edi+308], 1
  00087	89 b7 3c 01 00
	00		 mov	 DWORD PTR [edi+316], esi

; 92   : 		{

  0008d	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], OFFSET ??_7CCoverButton@CSlotWindow@UI@@6B@

; 93   : 			m_bLeftButtonEnable = TRUE;

  00093	c7 87 40 01 00
	00 01 00 00 00	 mov	 DWORD PTR [edi+320], 1

; 94   : 			m_bRightButtonEnable = TRUE;

  0009d	c7 87 44 01 00
	00 01 00 00 00	 mov	 DWORD PTR [edi+324], 1

; 251  : 	{
; 252  : 		rpCoverButton = new CCoverButton(CSlotButton::SLOT_BUTTON_TYPE_COVER, pSlot->dwSlotNumber, this);

  000a7	eb 02		 jmp	 SHORT $LN7@SetCoverBu
$LN6@SetCoverBu:
  000a9	33 ff		 xor	 edi, edi
$LN7@SetCoverBu:

; 253  : 		CWindowManager::Instance().SetParent(rpCoverButton, this);

  000ab	56		 push	 esi
  000ac	89 7b 60	 mov	 DWORD PTR [ebx+96], edi
  000af	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCWindowManager@UI@@@@0PAVCWindowManager@UI@@A ; CSingleton<UI::CWindowManager>::ms_singleton
  000b5	57		 push	 edi
  000b6	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  000bd	e8 00 00 00 00	 call	 ?SetParent@CWindowManager@UI@@QAEXPAVCWindow@2@0@Z ; UI::CWindowManager::SetParent
  000c2	8b 4b 60	 mov	 ecx, DWORD PTR [ebx+96]
$LN3@SetCoverBu:

; 254  : 	}
; 255  : 
; 256  : 	rpCoverButton->SetLeftButtonEnable(bLeftButtonEnable);

  000c5	8b 45 1c	 mov	 eax, DWORD PTR _bLeftButtonEnable$[ebp]

; 257  : 	rpCoverButton->SetRightButtonEnable(bRightButtonEnable);
; 258  : 	rpCoverButton->SetUpVisual(c_szUpImageName);

  000c8	ff 75 0c	 push	 DWORD PTR _c_szUpImageName$[ebp]
  000cb	89 81 40 01 00
	00		 mov	 DWORD PTR [ecx+320], eax
  000d1	8b 4b 60	 mov	 ecx, DWORD PTR [ebx+96]
  000d4	8b 45 20	 mov	 eax, DWORD PTR _bRightButtonEnable$[ebp]
  000d7	89 81 44 01 00
	00		 mov	 DWORD PTR [ecx+324], eax
  000dd	8b 4b 60	 mov	 ecx, DWORD PTR [ebx+96]
  000e0	e8 00 00 00 00	 call	 ?SetUpVisual@CButton@UI@@QAEHPBD@Z ; UI::CButton::SetUpVisual

; 259  : 	rpCoverButton->SetOverVisual(c_szOverImageName);

  000e5	ff 75 10	 push	 DWORD PTR _c_szOverImageName$[ebp]
  000e8	8b 4b 60	 mov	 ecx, DWORD PTR [ebx+96]
  000eb	e8 00 00 00 00	 call	 ?SetOverVisual@CButton@UI@@QAEHPBD@Z ; UI::CButton::SetOverVisual

; 260  : 	rpCoverButton->SetDownVisual(c_szDownImageName);

  000f0	ff 75 14	 push	 DWORD PTR _c_szDownImageName$[ebp]
  000f3	8b 4b 60	 mov	 ecx, DWORD PTR [ebx+96]
  000f6	e8 00 00 00 00	 call	 ?SetDownVisual@CButton@UI@@QAEHPBD@Z ; UI::CButton::SetDownVisual

; 261  : 	rpCoverButton->SetDisableVisual(c_szDisableImageName);

  000fb	ff 75 18	 push	 DWORD PTR _c_szDisableImageName$[ebp]
  000fe	8b 4b 60	 mov	 ecx, DWORD PTR [ebx+96]
  00101	e8 00 00 00 00	 call	 ?SetDisableVisual@CButton@UI@@QAEHPBD@Z ; UI::CButton::SetDisableVisual

; 262  : 	rpCoverButton->SetScale(m_fScaleX, m_fScaleY);

  00106	f3 0f 10 86 c0
	00 00 00	 movss	 xmm0, DWORD PTR [esi+192]
  0010e	83 ec 08	 sub	 esp, 8
  00111	8b 4b 60	 mov	 ecx, DWORD PTR [ebx+96]
  00114	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  0011a	f3 0f 10 86 bc
	00 00 00	 movss	 xmm0, DWORD PTR [esi+188]
  00122	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00127	e8 00 00 00 00	 call	 ?SetScale@CButton@UI@@QAEXMM@Z ; UI::CButton::SetScale

; 263  : 	rpCoverButton->Enable();

  0012c	8b 4b 60	 mov	 ecx, DWORD PTR [ebx+96]
  0012f	e8 00 00 00 00	 call	 ?Enable@CButton@UI@@QAEXXZ ; UI::CButton::Enable

; 264  : 	rpCoverButton->Show();

  00134	8b 4b 60	 mov	 ecx, DWORD PTR [ebx+96]
  00137	e8 00 00 00 00	 call	 ?Show@CWindow@UI@@QAEXXZ ; UI::CWindow::Show

; 265  : 
; 266  : 	if (pSlot->pSlotButton)

  0013c	8b 43 64	 mov	 eax, DWORD PTR [ebx+100]
  0013f	85 c0		 test	 eax, eax
  00141	74 08		 je	 SHORT $LN4@SetCoverBu

; 267  : 	{
; 268  : 		SetTop(pSlot->pSlotButton);

  00143	50		 push	 eax
  00144	8b ce		 mov	 ecx, esi
  00146	e8 00 00 00 00	 call	 ?SetTop@CWindow@UI@@QAEXPAV12@@Z ; UI::CWindow::SetTop
$LN4@SetCoverBu:

; 269  : 	}
; 270  : }

  0014b	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0014e	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00155	59		 pop	 ecx
  00156	5f		 pop	 edi
  00157	5e		 pop	 esi
  00158	5b		 pop	 ebx
  00159	8b e5		 mov	 esp, ebp
  0015b	5d		 pop	 ebp
  0015c	c2 1c 00	 ret	 28			; 0000001cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?SetCoverButton@CSlotWindow@UI@@QAEXKPBD000HH@Z$0:
  00000	68 48 01 00 00	 push	 328			; 00000148H
  00005	8b 45 08	 mov	 eax, DWORD PTR $T2[ebp]
  00008	50		 push	 eax
  00009	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0000e	83 c4 08	 add	 esp, 8
  00011	c3		 ret	 0
  00012	cc		 int	 3
  00013	cc		 int	 3
  00014	cc		 int	 3
  00015	cc		 int	 3
  00016	cc		 int	 3
__ehhandler$?SetCoverButton@CSlotWindow@UI@@QAEXKPBD000HH@Z:
  00017	90		 npad	 1
  00018	90		 npad	 1
  00019	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0001d	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00020	8b 4a e8	 mov	 ecx, DWORD PTR [edx-24]
  00023	33 c8		 xor	 ecx, eax
  00025	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0002a	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?SetCoverButton@CSlotWindow@UI@@QAEXKPBD000HH@Z
  0002f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?SetCoverButton@CSlotWindow@UI@@QAEXKPBD000HH@Z ENDP	; UI::CSlotWindow::SetCoverButton
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonSlotWindow.cpp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\list
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonSlotWindow.cpp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\list
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\list
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\list
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\list
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\list
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonSlotWindow.cpp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\list
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ?AppendSlot@CSlotWindow@UI@@QAEXKHHHH@Z
_TEXT	SEGMENT
_Slot$ = -144						; size = 124
__Op$2 = -20						; size = 8
__$EHRec$ = -12						; size = 12
__Where$1$ = 8						; size = 4
_dwIndex$ = 8						; size = 4
_ixPosition$ = 12					; size = 4
_iyPosition$ = 16					; size = 4
_ixCellSize$ = 20					; size = 4
_iyCellSize$ = 24					; size = 4
?AppendSlot@CSlotWindow@UI@@QAEXKHHHH@Z PROC		; UI::CSlotWindow::AppendSlot, COMDAT
; _this$ = ecx

; 219  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?AppendSlot@CSlotWindow@UI@@QAEXKHHHH@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	81 ec 84 00 00
	00		 sub	 esp, 132		; 00000084H
  00017	53		 push	 ebx
  00018	56		 push	 esi
  00019	57		 push	 edi
  0001a	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001f	33 c5		 xor	 eax, ebp
  00021	50		 push	 eax
  00022	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00025	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002b	8b f1		 mov	 esi, ecx
  0002d	0f 57 c0	 xorps	 xmm0, xmm0

; 220  : 	TSlot Slot;
; 221  : 	Slot.pInstance = NULL;

  00030	c7 45 c4 00 00
	00 00		 mov	 DWORD PTR _Slot$[ebp+84], 0

; 222  : 	Slot.pNumberLine = NULL;
; 223  : 	Slot.pCoverButton = NULL;
; 224  : 	Slot.pSlotButton = NULL;
; 225  : 	Slot.pSignImage = NULL;
; 226  : 	Slot.pFinishCoolTimeEffect = NULL;
; 227  : #ifdef ENABLE_ACCE_SYSTEM
; 228  : 	memset(Slot.pActiveSlotEffect, 0, sizeof(Slot.pActiveSlotEffect));
; 229  : #endif
; 230  : 	ClearSlot(&Slot);

  00037	8d 85 70 ff ff
	ff		 lea	 eax, DWORD PTR _Slot$[ebp]
  0003d	c7 45 c8 00 00
	00 00		 mov	 DWORD PTR _Slot$[ebp+88], 0
  00044	50		 push	 eax
  00045	0f 11 45 d0	 movups	 XMMWORD PTR _Slot$[ebp+96], xmm0
  00049	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR _Slot$[ebp+120], 0
  00050	66 0f d6 45 e0	 movq	 QWORD PTR _Slot$[ebp+112], xmm0
  00055	e8 00 00 00 00	 call	 ?ClearSlot@CSlotWindow@UI@@IAEXPAUSSlot@12@@Z ; UI::CSlotWindow::ClearSlot
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\list

; 1005 :         if (_Mysize == max_size()) {

  0005a	81 be 90 00 00
	00 1f 7c f0 01	 cmp	 DWORD PTR [esi+144], 32537631 ; 01f07c1fH
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonSlotWindow.cpp

; 239  : 	m_SlotList.push_back(Slot);

  00064	8d 9e 8c 00 00
	00		 lea	 ebx, DWORD PTR [esi+140]
  0006a	8b 45 08	 mov	 eax, DWORD PTR _dwIndex$[ebp]
  0006d	89 85 74 ff ff
	ff		 mov	 DWORD PTR _Slot$[ebp+4], eax
  00073	89 85 78 ff ff
	ff		 mov	 DWORD PTR _Slot$[ebp+8], eax
  00079	89 85 7c ff ff
	ff		 mov	 DWORD PTR _Slot$[ebp+12], eax
  0007f	89 45 80	 mov	 DWORD PTR _Slot$[ebp+16], eax
  00082	8b 45 0c	 mov	 eax, DWORD PTR _ixPosition$[ebp]
  00085	89 45 b0	 mov	 DWORD PTR _Slot$[ebp+64], eax
  00088	8b 45 10	 mov	 eax, DWORD PTR _iyPosition$[ebp]
  0008b	89 45 b4	 mov	 DWORD PTR _Slot$[ebp+68], eax
  0008e	8b 45 14	 mov	 eax, DWORD PTR _ixCellSize$[ebp]
  00091	89 45 b8	 mov	 DWORD PTR _Slot$[ebp+72], eax
  00094	8b 45 18	 mov	 eax, DWORD PTR _iyCellSize$[ebp]
  00097	89 45 bc	 mov	 DWORD PTR _Slot$[ebp+76], eax
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\list

; 1243 :         _Emplace(_Mypair._Myval2._Myhead, _Val);

  0009a	8b 03		 mov	 eax, DWORD PTR [ebx]
  0009c	89 45 08	 mov	 DWORD PTR __Where$1$[ebp], eax

; 1005 :         if (_Mysize == max_size()) {

  0009f	74 55		 je	 SHORT $LN89@AppendSlot
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory

; 958  :     _CONSTEXPR20_DYNALLOC explicit _Alloc_construct_ptr(_Alloc& _Al_) : _Al(_Al_), _Ptr(nullptr) {}

  000a1	89 5d ec	 mov	 DWORD PTR __Op$2[ebp], ebx

; 79   :         return ::operator new(_Bytes);

  000a4	68 84 00 00 00	 push	 132			; 00000084H
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\list

; 582  :     explicit _List_node_emplace_op2(_Alnode& _Al_, _Valtys&&... _Vals) : _Alloc_construct_ptr<_Alnode>(_Al_) {

  000a9	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory

; 965  :         _Ptr = nullptr; // if allocate throws, prevents double-free

  000b0	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR __Op$2[ebp+4], 0

; 79   :         return ::operator new(_Bytes);

  000b7	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\list

; 597  :         const pointer _Insert_after = _Insert_before->_Prev;

  000bc	8b 55 08	 mov	 edx, DWORD PTR __Where$1$[ebp]
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory

; 681  :             ::new (_Voidify_iter(_Ptr)) _Objty(_STD forward<_Types>(_Args)...);

  000bf	8d b5 70 ff ff
	ff		 lea	 esi, DWORD PTR _Slot$[ebp]
  000c5	b9 1f 00 00 00	 mov	 ecx, 31			; 0000001fH

; 79   :         return ::operator new(_Bytes);

  000ca	83 c4 04	 add	 esp, 4
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\list

; 584  :         _Alnode_traits::construct(this->_Al, _STD addressof(this->_Ptr->_Myval), _STD forward<_Valtys>(_Vals)...);

  000cd	8d 78 08	 lea	 edi, DWORD PTR [eax+8]
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory

; 681  :             ::new (_Voidify_iter(_Ptr)) _Objty(_STD forward<_Types>(_Args)...);

  000d0	f3 a5		 rep movsd
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\list

; 1010 :         ++_Mysize;

  000d2	ff 43 04	 inc	 DWORD PTR [ebx+4]

; 597  :         const pointer _Insert_after = _Insert_before->_Prev;

  000d5	8b 4a 04	 mov	 ecx, DWORD PTR [edx+4]

; 598  :         _Construct_in_place(this->_Ptr->_Next, _Insert_before);

  000d8	89 10		 mov	 DWORD PTR [eax], edx

; 599  :         _Construct_in_place(this->_Ptr->_Prev, _Insert_after);

  000da	89 48 04	 mov	 DWORD PTR [eax+4], ecx

; 600  :         const auto _Result    = this->_Ptr;
; 601  :         this->_Ptr            = pointer{};
; 602  :         _Insert_before->_Prev = _Result;

  000dd	89 42 04	 mov	 DWORD PTR [edx+4], eax

; 603  :         _Insert_after->_Next  = _Result;

  000e0	89 01		 mov	 DWORD PTR [ecx], eax
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonSlotWindow.cpp

; 240  : }

  000e2	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000e5	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000ec	59		 pop	 ecx
  000ed	5f		 pop	 edi
  000ee	5e		 pop	 esi
  000ef	5b		 pop	 ebx
  000f0	8b e5		 mov	 esp, ebp
  000f2	5d		 pop	 ebp
  000f3	c2 14 00	 ret	 20			; 00000014H
$LN89@AppendSlot:
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\list

; 1006 :             _Xlength_error("list too long");

  000f6	68 00 00 00 00	 push	 OFFSET ??_C@_0O@NKNMEGII@list?5too?5long@
  000fb	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPBD@Z ; std::_Xlength_error
$LN87@AppendSlot:
  00100	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?AppendSlot@CSlotWindow@UI@@QAEXKHHHH@Z$1:
  00000	8d 4d ec	 lea	 ecx, DWORD PTR __Op$2[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@USSlot@CSlotWindow@UI@@PAX@std@@@std@@@std@@QAE@XZ ; std::_Alloc_construct_ptr<std::allocator<std::_List_node<UI::CSlotWindow::SSlot,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_List_node<UI::CSlotWindow::SSlot,void *> > >
  00008	cc		 int	 3
  00009	cc		 int	 3
  0000a	cc		 int	 3
  0000b	cc		 int	 3
  0000c	cc		 int	 3
__ehhandler$?AppendSlot@CSlotWindow@UI@@QAEXKHHHH@Z:
  0000d	90		 npad	 1
  0000e	90		 npad	 1
  0000f	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00013	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00016	8b 8a 6c ff ff
	ff		 mov	 ecx, DWORD PTR [edx-148]
  0001c	33 c8		 xor	 ecx, eax
  0001e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00023	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?AppendSlot@CSlotWindow@UI@@QAEXKHHHH@Z
  00028	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?AppendSlot@CSlotWindow@UI@@QAEXKHHHH@Z ENDP		; UI::CSlotWindow::AppendSlot
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ?SetSlotScale@CSlotWindow@UI@@QAEXMM@Z
_TEXT	SEGMENT
_fx$ = 8						; size = 4
_fy$ = 12						; size = 4
?SetSlotScale@CSlotWindow@UI@@QAEXMM@Z PROC		; UI::CSlotWindow::SetSlotScale, COMDAT
; _this$ = ecx

; 213  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 214  : 	m_fScaleX = fx;

  00003	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _fx$[ebp]
  00008	f3 0f 11 81 bc
	00 00 00	 movss	 DWORD PTR [ecx+188], xmm0

; 215  : 	m_fScaleY = fy;

  00010	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR _fy$[ebp]
  00015	f3 0f 11 81 c0
	00 00 00	 movss	 DWORD PTR [ecx+192], xmm0

; 216  : }

  0001d	5d		 pop	 ebp
  0001e	c2 08 00	 ret	 8
?SetSlotScale@CSlotWindow@UI@@QAEXMM@Z ENDP		; UI::CSlotWindow::SetSlotScale
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ?SetSlotStyle@CSlotWindow@UI@@QAEXK@Z
_TEXT	SEGMENT
_dwStyle$ = 8						; size = 4
?SetSlotStyle@CSlotWindow@UI@@QAEXK@Z PROC		; UI::CSlotWindow::SetSlotStyle, COMDAT
; _this$ = ecx

; 208  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 209  : 	m_dwSlotStyle = dwStyle;

  00003	8b 45 08	 mov	 eax, DWORD PTR _dwStyle$[ebp]
  00006	89 81 80 00 00
	00		 mov	 DWORD PTR [ecx+128], eax

; 210  : }

  0000c	5d		 pop	 ebp
  0000d	c2 04 00	 ret	 4
?SetSlotStyle@CSlotWindow@UI@@QAEXK@Z ENDP		; UI::CSlotWindow::SetSlotStyle
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ?SetSlotType@CSlotWindow@UI@@QAEXK@Z
_TEXT	SEGMENT
_dwType$ = 8						; size = 4
?SetSlotType@CSlotWindow@UI@@QAEXK@Z PROC		; UI::CSlotWindow::SetSlotType, COMDAT
; _this$ = ecx

; 203  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 204  : 	m_dwSlotType = dwType;

  00003	8b 45 08	 mov	 eax, DWORD PTR _dwType$[ebp]
  00006	89 41 7c	 mov	 DWORD PTR [ecx+124], eax

; 205  : }

  00009	5d		 pop	 ebp
  0000a	c2 04 00	 ret	 4
?SetSlotType@CSlotWindow@UI@@QAEXK@Z ENDP		; UI::CSlotWindow::SetSlotType
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonSlotWindow.cpp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\list
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonSlotWindow.cpp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\list
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonSlotWindow.cpp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\list
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonSlotWindow.cpp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\list
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\list
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonSlotWindow.cpp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\list
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonSlotWindow.cpp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\list
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ?Destroy@CSlotWindow@UI@@QAEXXZ
_TEXT	SEGMENT
_this$1$ = -4						; size = 4
?Destroy@CSlotWindow@UI@@QAEXXZ PROC			; UI::CSlotWindow::Destroy, COMDAT
; _this$ = ecx

; 1840 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	57		 push	 edi
  00006	8b f9		 mov	 edi, ecx
  00008	89 7d fc	 mov	 DWORD PTR _this$1$[ebp], edi
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\list

; 1083 :         return iterator(_Mypair._Myval2._Myhead->_Next, _STD addressof(_Mypair._Myval2));

  0000b	8b 87 8c 00 00
	00		 mov	 eax, DWORD PTR [edi+140]

; 38   :     _List_unchecked_const_iterator(_Nodeptr _Pnode, const _Mylist* _Plist) noexcept : _Ptr(_Pnode) {

  00011	8b 30		 mov	 esi, DWORD PTR [eax]
  00013	3b f0		 cmp	 esi, eax
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonSlotWindow.cpp

; 1841 : 	for (TSlotListIterator itor = m_SlotList.begin(); itor != m_SlotList.end(); ++itor)

  00015	0f 84 a7 00 00
	00		 je	 $LN3@Destroy
  0001b	53		 push	 ebx
  0001c	0f 1f 40 00	 npad	 4
$LL31@Destroy:
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\list

; 151  :         return this->_Ptr->_Myval;

  00020	8d 5e 08	 lea	 ebx, DWORD PTR [esi+8]
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonSlotWindow.cpp

; 1845 : 		ClearSlot(&rSlot);

  00023	8b cf		 mov	 ecx, edi
  00025	53		 push	 ebx
  00026	e8 00 00 00 00	 call	 ?ClearSlot@CSlotWindow@UI@@IAEXPAUSSlot@12@@Z ; UI::CSlotWindow::ClearSlot

; 1846 : 
; 1847 : 		if (rSlot.pNumberLine)

  0002b	8b 4b 58	 mov	 ecx, DWORD PTR [ebx+88]
  0002e	85 c9		 test	 ecx, ecx
  00030	74 0d		 je	 SHORT $LN98@Destroy

; 1848 : 		{
; 1849 : 			delete rSlot.pNumberLine;

  00032	8b 01		 mov	 eax, DWORD PTR [ecx]
  00034	6a 01		 push	 1
  00036	ff 10		 call	 DWORD PTR [eax]

; 1850 : 			rSlot.pNumberLine = NULL;

  00038	c7 43 58 00 00
	00 00		 mov	 DWORD PTR [ebx+88], 0
$LN98@Destroy:

; 1851 : 		}
; 1852 : 		if (rSlot.pCoverButton)

  0003f	8b 43 60	 mov	 eax, DWORD PTR [ebx+96]
  00042	85 c0		 test	 eax, eax
  00044	74 0c		 je	 SHORT $LN12@Destroy

; 1853 : 		{
; 1854 : 			CWindowManager::Instance().DestroyWindow(rSlot.pCoverButton);

  00046	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCWindowManager@UI@@@@0PAVCWindowManager@UI@@A ; CSingleton<UI::CWindowManager>::ms_singleton
  0004c	50		 push	 eax
  0004d	e8 00 00 00 00	 call	 ?DestroyWindow@CWindowManager@UI@@QAEXPAVCWindow@2@@Z ; UI::CWindowManager::DestroyWindow
$LN12@Destroy:

; 1855 : 		}
; 1856 : 		if (rSlot.pSlotButton)

  00052	8b 43 64	 mov	 eax, DWORD PTR [ebx+100]
  00055	85 c0		 test	 eax, eax
  00057	74 0c		 je	 SHORT $LN13@Destroy

; 1857 : 		{
; 1858 : 			CWindowManager::Instance().DestroyWindow(rSlot.pSlotButton);

  00059	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCWindowManager@UI@@@@0PAVCWindowManager@UI@@A ; CSingleton<UI::CWindowManager>::ms_singleton
  0005f	50		 push	 eax
  00060	e8 00 00 00 00	 call	 ?DestroyWindow@CWindowManager@UI@@QAEXPAVCWindow@2@@Z ; UI::CWindowManager::DestroyWindow
$LN13@Destroy:

; 1859 : 		}
; 1860 : 		if (rSlot.pSignImage)

  00065	8b 43 68	 mov	 eax, DWORD PTR [ebx+104]
  00068	85 c0		 test	 eax, eax
  0006a	74 0c		 je	 SHORT $LN14@Destroy

; 1861 : 		{
; 1862 : 			CWindowManager::Instance().DestroyWindow(rSlot.pSignImage);

  0006c	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCWindowManager@UI@@@@0PAVCWindowManager@UI@@A ; CSingleton<UI::CWindowManager>::ms_singleton
  00072	50		 push	 eax
  00073	e8 00 00 00 00	 call	 ?DestroyWindow@CWindowManager@UI@@QAEXPAVCWindow@2@@Z ; UI::CWindowManager::DestroyWindow
$LN14@Destroy:

; 1863 : 		}
; 1864 : 		if (rSlot.pFinishCoolTimeEffect)

  00078	8b 43 6c	 mov	 eax, DWORD PTR [ebx+108]
  0007b	85 c0		 test	 eax, eax
  0007d	74 0c		 je	 SHORT $LN15@Destroy

; 1865 : 		{
; 1866 : 			CWindowManager::Instance().DestroyWindow(rSlot.pFinishCoolTimeEffect);

  0007f	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCWindowManager@UI@@@@0PAVCWindowManager@UI@@A ; CSingleton<UI::CWindowManager>::ms_singleton
  00085	50		 push	 eax
  00086	e8 00 00 00 00	 call	 ?DestroyWindow@CWindowManager@UI@@QAEXPAVCWindow@2@@Z ; UI::CWindowManager::DestroyWindow
$LN15@Destroy:

; 1867 : 		}
; 1868 : 
; 1869 : #ifdef ENABLE_ACCE_SYSTEM
; 1870 : 		for (auto& pEff: rSlot.pActiveSlotEffect )

  0008b	8d 7b 70	 lea	 edi, DWORD PTR [ebx+112]
  0008e	83 c3 7c	 add	 ebx, 124		; 0000007cH
  00091	3b fb		 cmp	 edi, ebx
  00093	74 19		 je	 SHORT $LN2@Destroy
$LL7@Destroy:

; 1871 : 			if (pEff)

  00095	8b 07		 mov	 eax, DWORD PTR [edi]
  00097	85 c0		 test	 eax, eax
  00099	74 0c		 je	 SHORT $LN5@Destroy

; 1872 : 				CWindowManager::Instance().DestroyWindow(pEff);

  0009b	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCWindowManager@UI@@@@0PAVCWindowManager@UI@@A ; CSingleton<UI::CWindowManager>::ms_singleton
  000a1	50		 push	 eax
  000a2	e8 00 00 00 00	 call	 ?DestroyWindow@CWindowManager@UI@@QAEXPAVCWindow@2@@Z ; UI::CWindowManager::DestroyWindow
$LN5@Destroy:

; 1867 : 		}
; 1868 : 
; 1869 : #ifdef ENABLE_ACCE_SYSTEM
; 1870 : 		for (auto& pEff: rSlot.pActiveSlotEffect )

  000a7	83 c7 04	 add	 edi, 4
  000aa	3b fb		 cmp	 edi, ebx
  000ac	75 e7		 jne	 SHORT $LL7@Destroy
$LN2@Destroy:
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\list

; 38   :     _List_unchecked_const_iterator(_Nodeptr _Pnode, const _Mylist* _Plist) noexcept : _Ptr(_Pnode) {

  000ae	8b 7d fc	 mov	 edi, DWORD PTR _this$1$[ebp]

; 165  :         this->_Ptr = this->_Ptr->_Next;

  000b1	8b 36		 mov	 esi, DWORD PTR [esi]

; 38   :     _List_unchecked_const_iterator(_Nodeptr _Pnode, const _Mylist* _Plist) noexcept : _Ptr(_Pnode) {

  000b3	8b 87 8c 00 00
	00		 mov	 eax, DWORD PTR [edi+140]

; 198  :         return this->_Ptr == _Right._Ptr;

  000b9	3b f0		 cmp	 esi, eax
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonSlotWindow.cpp

; 1841 : 	for (TSlotListIterator itor = m_SlotList.begin(); itor != m_SlotList.end(); ++itor)

  000bb	0f 85 5f ff ff
	ff		 jne	 $LL31@Destroy
  000c1	5b		 pop	 ebx
$LN3@Destroy:
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\list

; 323  :         _Head->_Prev->_Next = nullptr;

  000c2	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  000c5	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], 0

; 324  : 
; 325  :         auto _Pnode = _Head->_Next;

  000cb	8b 00		 mov	 eax, DWORD PTR [eax]

; 326  :         for (_Nodeptr _Pnext; _Pnode; _Pnode = _Pnext) {

  000cd	85 c0		 test	 eax, eax
  000cf	74 16		 je	 SHORT $LN52@Destroy
$LL53@Destroy:

; 327  :             _Pnext = _Pnode->_Next;

  000d1	8b 30		 mov	 esi, DWORD PTR [eax]
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory

; 255  :         ::operator delete(_Ptr, _Bytes);

  000d3	68 84 00 00 00	 push	 132			; 00000084H
  000d8	50		 push	 eax
  000d9	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  000de	83 c4 08	 add	 esp, 8
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\list

; 326  :         for (_Nodeptr _Pnext; _Pnode; _Pnode = _Pnext) {

  000e1	8b c6		 mov	 eax, esi
  000e3	85 f6		 test	 esi, esi
  000e5	75 ea		 jne	 SHORT $LL53@Destroy
$LN52@Destroy:

; 1421 :         _My_data._Myhead->_Next = _My_data._Myhead;

  000e7	8b 87 8c 00 00
	00		 mov	 eax, DWORD PTR [edi+140]
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonSlotWindow.cpp

; 1878 : 	__DestroyToggleSlotImage();

  000ed	8b cf		 mov	 ecx, edi
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\list

; 1421 :         _My_data._Myhead->_Next = _My_data._Myhead;

  000ef	89 00		 mov	 DWORD PTR [eax], eax

; 1422 :         _My_data._Myhead->_Prev = _My_data._Myhead;

  000f1	8b 87 8c 00 00
	00		 mov	 eax, DWORD PTR [edi+140]
  000f7	89 40 04	 mov	 DWORD PTR [eax+4], eax

; 1423 :         _My_data._Mysize        = 0;

  000fa	c7 87 90 00 00
	00 00 00 00 00	 mov	 DWORD PTR [edi+144], 0
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonSlotWindow.cpp

; 1878 : 	__DestroyToggleSlotImage();

  00104	e8 00 00 00 00	 call	 ?__DestroyToggleSlotImage@CSlotWindow@UI@@IAEXXZ ; UI::CSlotWindow::__DestroyToggleSlotImage
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\list

; 1421 :         _My_data._Myhead->_Next = _My_data._Myhead;

  00109	33 f6		 xor	 esi, esi
  0010b	0f 1f 44 00 00	 npad	 5
$LL10@Destroy:
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonSlotWindow.cpp

; 1882 : 		__DestroySlotEnableEffect(slotEffect);

  00110	56		 push	 esi
  00111	8b cf		 mov	 ecx, edi
  00113	e8 00 00 00 00	 call	 ?__DestroySlotEnableEffect@CSlotWindow@UI@@IAEXH@Z ; UI::CSlotWindow::__DestroySlotEnableEffect
  00118	46		 inc	 esi
  00119	83 fe 03	 cmp	 esi, 3
  0011c	7c f2		 jl	 SHORT $LL10@Destroy

; 1883 : 	}
; 1884 : #else
; 1885 : 	__DestroySlotEnableEffect();
; 1886 : #endif
; 1887 : 	__DestroyBaseImage();

  0011e	8b cf		 mov	 ecx, edi
  00120	e8 00 00 00 00	 call	 ?__DestroyBaseImage@CSlotWindow@UI@@IAEXXZ ; UI::CSlotWindow::__DestroyBaseImage

; 1888 : 
; 1889 : 	__Initialize();

  00125	8b cf		 mov	 ecx, edi
  00127	e8 00 00 00 00	 call	 ?__Initialize@CSlotWindow@UI@@IAEXXZ ; UI::CSlotWindow::__Initialize
  0012c	5f		 pop	 edi
  0012d	5e		 pop	 esi

; 1890 : }

  0012e	8b e5		 mov	 esp, ebp
  00130	5d		 pop	 ebp
  00131	c3		 ret	 0
?Destroy@CSlotWindow@UI@@QAEXXZ ENDP			; UI::CSlotWindow::Destroy
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonSlotWindow.cpp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\deque
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\utility
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\utility
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xtree
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonSlotWindow.cpp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xtree
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\list
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\list
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\list
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\list
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\list
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\list
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ??1CSlotWindow@UI@@UAE@XZ
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
??1CSlotWindow@UI@@UAE@XZ PROC				; UI::CSlotWindow::~CSlotWindow, COMDAT
; _this$ = ecx

; 1898 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1CSlotWindow@UI@@UAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	56		 push	 esi
  00012	57		 push	 edi
  00013	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00018	33 c5		 xor	 eax, ebp
  0001a	50		 push	 eax
  0001b	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001e	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00024	8b f9		 mov	 edi, ecx
  00026	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], OFFSET ??_7CSlotWindow@UI@@6B@

; 1899 : 	Destroy();

  0002c	e8 00 00 00 00	 call	 ?Destroy@CSlotWindow@UI@@QAEXXZ ; UI::CSlotWindow::Destroy
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\deque

; 861  :         _Tidy();

  00031	8d 8f c4 00 00
	00		 lea	 ecx, DWORD PTR [edi+196]
  00037	e8 00 00 00 00	 call	 ?_Tidy@?$deque@KV?$allocator@K@std@@@std@@AAEXXZ ; std::deque<unsigned long,std::allocator<unsigned long> >::_Tidy
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\utility

; 602  :     _Ty _Old_val = static_cast<_Ty&&>(_Val);

  0003c	8b 87 c4 00 00
	00		 mov	 eax, DWORD PTR [edi+196]
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory

; 255  :         ::operator delete(_Ptr, _Bytes);

  00042	6a 08		 push	 8
  00044	50		 push	 eax
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\utility

; 603  :     _Val         = static_cast<_Other&&>(_New_val);

  00045	c7 87 c4 00 00
	00 00 00 00 00	 mov	 DWORD PTR [edi+196], 0
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory

; 255  :         ::operator delete(_Ptr, _Bytes);

  0004f	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xtree

; 752  :         _Erase_tree(_Al, _Myhead->_Parent);

  00054	8b 87 98 00 00
	00		 mov	 eax, DWORD PTR [edi+152]
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonSlotWindow.cpp

; 1900 : }

  0005a	8d b7 98 00 00
	00		 lea	 esi, DWORD PTR [edi+152]
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory

; 255  :         ::operator delete(_Ptr, _Bytes);

  00060	83 c4 08	 add	 esp, 8
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xtree

; 752  :         _Erase_tree(_Al, _Myhead->_Parent);

  00063	8b ce		 mov	 ecx, esi
  00065	ff 70 04	 push	 DWORD PTR [eax+4]
  00068	56		 push	 esi
  00069	e8 00 00 00 00	 call	 ??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBKV?$map@KUSStoreCoolDown@CSlotWindow@UI@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@5@@std@@@std@@PAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$map@KUSStoreCoolDown@CSlotWindow@UI@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@5@@std@@@std@@@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBKV?$map@KUSStoreCoolDown@CSlotWindow@UI@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@5@@std@@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBKV?$map@KUSStoreCoolDown@CSlotWindow@UI@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@5@@std@@@std@@PAX@1@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,std::map<unsigned long,UI::CSlotWindow::SStoreCoolDown,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,UI::CSlotWindow::SStoreCoolDown> > > > > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<unsigned long const ,std::map<unsigned long,UI::CSlotWindow::SStoreCoolDown,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,UI::CSlotWindow::SStoreCoolDown> > > >,void *> > >
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory

; 255  :         ::operator delete(_Ptr, _Bytes);

  0006e	6a 1c		 push	 28			; 0000001cH
  00070	ff 36		 push	 DWORD PTR [esi]
  00072	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\list

; 1431 :         _Node::_Free_non_head(_Al, _My_data._Myhead);

  00077	8b 8f 8c 00 00
	00		 mov	 ecx, DWORD PTR [edi+140]
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory

; 255  :         ::operator delete(_Ptr, _Bytes);

  0007d	83 c4 08	 add	 esp, 8
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\list

; 323  :         _Head->_Prev->_Next = nullptr;

  00080	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00083	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 324  : 
; 325  :         auto _Pnode = _Head->_Next;

  00089	8b 01		 mov	 eax, DWORD PTR [ecx]

; 326  :         for (_Nodeptr _Pnext; _Pnode; _Pnode = _Pnext) {

  0008b	85 c0		 test	 eax, eax
  0008d	74 17		 je	 SHORT $LN68@CSlotWindo
  0008f	90		 npad	 1
$LL69@CSlotWindo:

; 327  :             _Pnext = _Pnode->_Next;

  00090	8b 30		 mov	 esi, DWORD PTR [eax]
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory

; 255  :         ::operator delete(_Ptr, _Bytes);

  00092	68 84 00 00 00	 push	 132			; 00000084H
  00097	50		 push	 eax
  00098	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0009d	83 c4 08	 add	 esp, 8
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\list

; 326  :         for (_Nodeptr _Pnext; _Pnode; _Pnode = _Pnext) {

  000a0	8b c6		 mov	 eax, esi
  000a2	85 f6		 test	 esi, esi
  000a4	75 ea		 jne	 SHORT $LL69@CSlotWindo
$LN68@CSlotWindo:
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory

; 255  :         ::operator delete(_Ptr, _Bytes);

  000a6	68 84 00 00 00	 push	 132			; 00000084H
  000ab	ff b7 8c 00 00
	00		 push	 DWORD PTR [edi+140]
  000b1	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\list

; 1431 :         _Node::_Free_non_head(_Al, _My_data._Myhead);

  000b6	8b 8f 84 00 00
	00		 mov	 ecx, DWORD PTR [edi+132]
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory

; 255  :         ::operator delete(_Ptr, _Bytes);

  000bc	83 c4 08	 add	 esp, 8
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\list

; 323  :         _Head->_Prev->_Next = nullptr;

  000bf	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  000c2	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 324  : 
; 325  :         auto _Pnode = _Head->_Next;

  000c8	8b 01		 mov	 eax, DWORD PTR [ecx]

; 326  :         for (_Nodeptr _Pnext; _Pnode; _Pnode = _Pnext) {

  000ca	85 c0		 test	 eax, eax
  000cc	74 15		 je	 SHORT $LN123@CSlotWindo
  000ce	66 90		 npad	 2
$LL124@CSlotWindo:

; 327  :             _Pnext = _Pnode->_Next;

  000d0	8b 30		 mov	 esi, DWORD PTR [eax]
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory

; 255  :         ::operator delete(_Ptr, _Bytes);

  000d2	6a 0c		 push	 12			; 0000000cH
  000d4	50		 push	 eax
  000d5	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  000da	83 c4 08	 add	 esp, 8
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\list

; 326  :         for (_Nodeptr _Pnext; _Pnode; _Pnode = _Pnext) {

  000dd	8b c6		 mov	 eax, esi
  000df	85 f6		 test	 esi, esi
  000e1	75 ed		 jne	 SHORT $LL124@CSlotWindo
$LN123@CSlotWindo:
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory

; 255  :         ::operator delete(_Ptr, _Bytes);

  000e3	6a 0c		 push	 12			; 0000000cH
  000e5	ff b7 84 00 00
	00		 push	 DWORD PTR [edi+132]
  000eb	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  000f0	83 c4 08	 add	 esp, 8
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonSlotWindow.cpp

; 1900 : }

  000f3	8b cf		 mov	 ecx, edi
  000f5	e8 00 00 00 00	 call	 ??1CWindow@UI@@UAE@XZ	; UI::CWindow::~CWindow
  000fa	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000fd	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00104	59		 pop	 ecx
  00105	5f		 pop	 edi
  00106	5e		 pop	 esi
  00107	8b e5		 mov	 esp, ebp
  00109	5d		 pop	 ebp
  0010a	c3		 ret	 0
  0010b	cc		 int	 3
  0010c	cc		 int	 3
  0010d	cc		 int	 3
  0010e	cc		 int	 3
  0010f	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1CSlotWindow@UI@@UAE@XZ:
  00000	90		 npad	 1
  00001	90		 npad	 1
  00002	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00006	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00009	8b 4a f4	 mov	 ecx, DWORD PTR [edx-12]
  0000c	33 c8		 xor	 ecx, eax
  0000e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00013	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1CSlotWindow@UI@@UAE@XZ
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1CSlotWindow@UI@@UAE@XZ ENDP				; UI::CSlotWindow::~CSlotWindow
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ?SetSlotID@CSlotWindow@UI@@QAEXKK@Z
_TEXT	SEGMENT
_pSlot$ = -4						; size = 4
_dwIndex$ = 8						; size = 4
_dwID$ = 12						; size = 4
?SetSlotID@CSlotWindow@UI@@QAEXKK@Z PROC		; UI::CSlotWindow::SetSlotID, COMDAT
; _this$ = ecx

; 979  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 980  : 	TSlot * pSlot;
; 981  : 	if (!GetSlotPointer(dwIndex, &pSlot))

  00004	8d 45 fc	 lea	 eax, DWORD PTR _pSlot$[ebp]
  00007	50		 push	 eax
  00008	ff 75 08	 push	 DWORD PTR _dwIndex$[ebp]
  0000b	e8 00 00 00 00	 call	 ?GetSlotPointer@CSlotWindow@UI@@IAEHKPAPAUSSlot@12@@Z ; UI::CSlotWindow::GetSlotPointer
  00010	85 c0		 test	 eax, eax
  00012	74 0d		 je	 SHORT $LN4@SetSlotID

; 982  : 		return;
; 983  : 
; 984  : 	if (dwID <= 0)

  00014	8b 4d 0c	 mov	 ecx, DWORD PTR _dwID$[ebp]
  00017	85 c9		 test	 ecx, ecx
  00019	74 06		 je	 SHORT $LN4@SetSlotID

; 985  : 	{
; 986  : 		return;
; 987  : 	}
; 988  : 	else
; 989  : 	{
; 990  : 		
; 991  : 		pSlot->dwItemID=dwID;

  0001b	8b 45 fc	 mov	 eax, DWORD PTR _pSlot$[ebp]
  0001e	89 48 1c	 mov	 DWORD PTR [eax+28], ecx
$LN4@SetSlotID:

; 992  : 	}
; 993  : }

  00021	8b e5		 mov	 esp, ebp
  00023	5d		 pop	 ebp
  00024	c2 08 00	 ret	 8
?SetSlotID@CSlotWindow@UI@@QAEXKK@Z ENDP		; UI::CSlotWindow::SetSlotID
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonSlotWindow.cpp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonSlotWindow.cpp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\list
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\list
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonSlotWindow.cpp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\list
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\list
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonSlotWindow.cpp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonSlotWindow.cpp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xtree
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xtree
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonSlotWindow.cpp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\deque
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonSlotWindow.cpp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ??0CSlotWindow@UI@@QAE@PAU_object@@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_this$ = 8						; size = 4
_ppyObject$ = 8						; size = 4
??0CSlotWindow@UI@@QAE@PAU_object@@@Z PROC		; UI::CSlotWindow::CSlotWindow, COMDAT
; _this$ = ecx

; 1893 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0CSlotWindow@UI@@QAE@PAU_object@@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	56		 push	 esi
  00013	57		 push	 edi
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	50		 push	 eax
  0001c	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001f	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00025	8b f9		 mov	 edi, ecx
  00027	89 7d f0	 mov	 DWORD PTR _this$[ebp], edi

; 1892 : CSlotWindow::CSlotWindow(PyObject * ppyObject) : CWindow(ppyObject)

  0002a	ff 75 08	 push	 DWORD PTR _ppyObject$[ebp]
  0002d	e8 00 00 00 00	 call	 ??0CWindow@UI@@QAE@PAU_object@@@Z ; UI::CWindow::CWindow

; 1893 : {

  00032	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], OFFSET ??_7CSlotWindow@UI@@6B@
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory

; 79   :         return ::operator new(_Bytes);

  00038	6a 0c		 push	 12			; 0000000cH
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonSlotWindow.cpp

; 1892 : CSlotWindow::CSlotWindow(PyObject * ppyObject) : CWindow(ppyObject)

  0003a	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\list

; 352  :     _List_val() noexcept : _Myhead(), _Mysize(0) {} // initialize data

  00041	c7 87 84 00 00
	00 00 00 00 00	 mov	 DWORD PTR [edi+132], 0
  0004b	c7 87 88 00 00
	00 00 00 00 00	 mov	 DWORD PTR [edi+136], 0
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory

; 79   :         return ::operator new(_Bytes);

  00055	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\list

; 1767 :         _Construct_in_place(_Newhead->_Next, _Newhead);

  0005a	89 00		 mov	 DWORD PTR [eax], eax

; 1768 :         _Construct_in_place(_Newhead->_Prev, _Newhead);

  0005c	89 40 04	 mov	 DWORD PTR [eax+4], eax

; 1769 :         _Mypair._Myval2._Myhead = _Newhead;

  0005f	89 87 84 00 00
	00		 mov	 DWORD PTR [edi+132], eax
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory

; 79   :         return ::operator new(_Bytes);

  00065	68 84 00 00 00	 push	 132			; 00000084H
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonSlotWindow.cpp

; 1893 : {

  0006a	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\list

; 352  :     _List_val() noexcept : _Myhead(), _Mysize(0) {} // initialize data

  0006e	c7 87 8c 00 00
	00 00 00 00 00	 mov	 DWORD PTR [edi+140], 0
  00078	c7 87 90 00 00
	00 00 00 00 00	 mov	 DWORD PTR [edi+144], 0
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory

; 79   :         return ::operator new(_Bytes);

  00082	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\list

; 1767 :         _Construct_in_place(_Newhead->_Next, _Newhead);

  00087	89 00		 mov	 DWORD PTR [eax], eax

; 1768 :         _Construct_in_place(_Newhead->_Prev, _Newhead);

  00089	89 40 04	 mov	 DWORD PTR [eax+4], eax

; 1769 :         _Mypair._Myval2._Myhead = _Newhead;

  0008c	89 87 8c 00 00
	00		 mov	 DWORD PTR [edi+140], eax
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonSlotWindow.cpp

; 1893 : {

  00092	8d b7 98 00 00
	00		 lea	 esi, DWORD PTR [edi+152]
  00098	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory

; 79   :         return ::operator new(_Bytes);

  0009c	6a 1c		 push	 28			; 0000001cH
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonSlotWindow.cpp

; 1893 : {

  0009e	89 75 08	 mov	 DWORD PTR _this$[ebp], esi
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xtree

; 435  :     _Tree_val() noexcept : _Myhead(), _Mysize(0) {}

  000a1	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], 0
  000a7	c7 46 04 00 00
	00 00		 mov	 DWORD PTR [esi+4], 0
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory

; 79   :         return ::operator new(_Bytes);

  000ae	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xtree

; 345  :         _Construct_in_place(_Pnode->_Left, _Pnode);

  000b3	89 00		 mov	 DWORD PTR [eax], eax

; 346  :         _Construct_in_place(_Pnode->_Parent, _Pnode);

  000b5	89 40 04	 mov	 DWORD PTR [eax+4], eax

; 347  :         _Construct_in_place(_Pnode->_Right, _Pnode);

  000b8	89 40 08	 mov	 DWORD PTR [eax+8], eax

; 348  :         _Pnode->_Color = _Black;

  000bb	66 c7 40 0c 01
	01		 mov	 WORD PTR [eax+12], 257	; 00000101H

; 1917 :         _Scary->_Myhead = _Node::_Buyheadnode(_Getal());

  000c1	89 06		 mov	 DWORD PTR [esi], eax
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonSlotWindow.cpp

; 1893 : {

  000c3	8d b7 c4 00 00
	00		 lea	 esi, DWORD PTR [edi+196]
  000c9	c6 45 fc 03	 mov	 BYTE PTR __$EHRec$[ebp+8], 3
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory

; 79   :         return ::operator new(_Bytes);

  000cd	6a 08		 push	 8

; 1033 :     _Container_proxy* _Myproxy = nullptr;

  000cf	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], 0
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\deque

; 555  :     _Deque_val() noexcept : _Map(), _Mapsize(0), _Myoff(0), _Mysize(0) {}

  000d5	c7 46 04 00 00
	00 00		 mov	 DWORD PTR [esi+4], 0
  000dc	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0
  000e3	c7 46 0c 00 00
	00 00		 mov	 DWORD PTR [esi+12], 0
  000ea	c7 46 10 00 00
	00 00		 mov	 DWORD PTR [esi+16], 0
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory

; 79   :         return ::operator new(_Bytes);

  000f1	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  000f6	83 c4 10	 add	 esp, 16			; 00000010H
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonSlotWindow.cpp

; 1894 : 	__Initialize();

  000f9	8b cf		 mov	 ecx, edi
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory

; 1003 :     mutable _Iterator_base12* _Myfirstiter = nullptr;

  000fb	c7 40 04 00 00
	00 00		 mov	 DWORD PTR [eax+4], 0

; 1020 :         _Myproxy            = _New_proxy;

  00102	89 06		 mov	 DWORD PTR [esi], eax

; 1021 :         _New_proxy->_Mycont = this;

  00104	89 30		 mov	 DWORD PTR [eax], esi
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonSlotWindow.cpp

; 1894 : 	__Initialize();

  00106	e8 00 00 00 00	 call	 ?__Initialize@CSlotWindow@UI@@IAEXXZ ; UI::CSlotWindow::__Initialize

; 1895 : }

  0010b	8b c7		 mov	 eax, edi
  0010d	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00110	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00117	59		 pop	 ecx
  00118	5f		 pop	 edi
  00119	5e		 pop	 esi
  0011a	8b e5		 mov	 esp, ebp
  0011c	5d		 pop	 ebp
  0011d	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0CSlotWindow@UI@@QAE@PAU_object@@@Z$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1CWindow@UI@@UAE@XZ	; UI::CWindow::~CWindow
__unwindfunclet$??0CSlotWindow@UI@@QAE@PAU_object@@@Z$1:
  00008	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0000b	81 c1 84 00 00
	00		 add	 ecx, 132		; 00000084H
  00011	e9 00 00 00 00	 jmp	 ??1?$list@KV?$allocator@K@std@@@std@@QAE@XZ ; std::list<unsigned long,std::allocator<unsigned long> >::~list<unsigned long,std::allocator<unsigned long> >
__unwindfunclet$??0CSlotWindow@UI@@QAE@PAU_object@@@Z$2:
  00016	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00019	81 c1 8c 00 00
	00		 add	 ecx, 140		; 0000008cH
  0001f	e9 00 00 00 00	 jmp	 ??1?$list@USSlot@CSlotWindow@UI@@V?$allocator@USSlot@CSlotWindow@UI@@@std@@@std@@QAE@XZ ; std::list<UI::CSlotWindow::SSlot,std::allocator<UI::CSlotWindow::SSlot> >::~list<UI::CSlotWindow::SSlot,std::allocator<UI::CSlotWindow::SSlot> >
__unwindfunclet$??0CSlotWindow@UI@@QAE@PAU_object@@@Z$3:
  00024	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00027	81 c1 98 00 00
	00		 add	 ecx, 152		; 00000098H
  0002d	e9 00 00 00 00	 jmp	 ??1?$map@KV?$map@KUSStoreCoolDown@CSlotWindow@UI@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@5@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$map@KUSStoreCoolDown@CSlotWindow@UI@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUSStoreCoolDown@CSlotWindow@UI@@@std@@@5@@std@@@std@@@2@@std@@QAE@XZ
  00032	cc		 int	 3
  00033	cc		 int	 3
  00034	cc		 int	 3
  00035	cc		 int	 3
  00036	cc		 int	 3
__ehhandler$??0CSlotWindow@UI@@QAE@PAU_object@@@Z:
  00037	90		 npad	 1
  00038	90		 npad	 1
  00039	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0003d	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00040	8b 4a f0	 mov	 ecx, DWORD PTR [edx-16]
  00043	33 c8		 xor	 ecx, eax
  00045	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0004a	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0CSlotWindow@UI@@QAE@PAU_object@@@Z
  0004f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0CSlotWindow@UI@@QAE@PAU_object@@@Z ENDP		; UI::CSlotWindow::CSlotWindow
; Function compile flags: /Ogtp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\list
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\list
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\list
;	COMDAT ??1?$list@USSlot@CSlotWindow@UI@@V?$allocator@USSlot@CSlotWindow@UI@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$list@USSlot@CSlotWindow@UI@@V?$allocator@USSlot@CSlotWindow@UI@@@std@@@std@@QAE@XZ PROC ; std::list<UI::CSlotWindow::SSlot,std::allocator<UI::CSlotWindow::SSlot> >::~list<UI::CSlotWindow::SSlot,std::allocator<UI::CSlotWindow::SSlot> >, COMDAT
; _this$ = ecx

; 1036 :     ~list() noexcept {

  00000	57		 push	 edi
  00001	8b f9		 mov	 edi, ecx

; 1431 :         _Node::_Free_non_head(_Al, _My_data._Myhead);

  00003	8b 17		 mov	 edx, DWORD PTR [edi]

; 323  :         _Head->_Prev->_Next = nullptr;

  00005	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00008	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 324  : 
; 325  :         auto _Pnode = _Head->_Next;

  0000e	8b 02		 mov	 eax, DWORD PTR [edx]

; 326  :         for (_Nodeptr _Pnext; _Pnode; _Pnode = _Pnext) {

  00010	85 c0		 test	 eax, eax
  00012	74 18		 je	 SHORT $LN7@list
  00014	56		 push	 esi
$LL8@list:

; 327  :             _Pnext = _Pnode->_Next;

  00015	8b 30		 mov	 esi, DWORD PTR [eax]
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory

; 255  :         ::operator delete(_Ptr, _Bytes);

  00017	68 84 00 00 00	 push	 132			; 00000084H
  0001c	50		 push	 eax
  0001d	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00022	83 c4 08	 add	 esp, 8
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\list

; 326  :         for (_Nodeptr _Pnext; _Pnode; _Pnode = _Pnext) {

  00025	8b c6		 mov	 eax, esi
  00027	85 f6		 test	 esi, esi
  00029	75 ea		 jne	 SHORT $LL8@list
  0002b	5e		 pop	 esi
$LN7@list:
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory

; 255  :         ::operator delete(_Ptr, _Bytes);

  0002c	68 84 00 00 00	 push	 132			; 00000084H
  00031	ff 37		 push	 DWORD PTR [edi]
  00033	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00038	83 c4 08	 add	 esp, 8
  0003b	5f		 pop	 edi
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\list

; 1042 :     }

  0003c	c3		 ret	 0
??1?$list@USSlot@CSlotWindow@UI@@V?$allocator@USSlot@CSlotWindow@UI@@@std@@@std@@QAE@XZ ENDP ; std::list<UI::CSlotWindow::SSlot,std::allocator<UI::CSlotWindow::SSlot> >::~list<UI::CSlotWindow::SSlot,std::allocator<UI::CSlotWindow::SSlot> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ?Type@CSlotWindow@UI@@SAKXZ
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
?Type@CSlotWindow@UI@@SAKXZ PROC			; UI::CSlotWindow::Type, COMDAT

; 1526 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?Type@CSlotWindow@UI@@SAKXZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00016	33 c5		 xor	 eax, ebp
  00018	50		 push	 eax
  00019	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001c	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax

; 1527 : 	static int s_Type = GetCRC32("CSlotWindow", strlen("CSlotWindow"));

  00022	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__tls_array
  00028	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR __tls_index
  0002e	8b 0c 88	 mov	 ecx, DWORD PTR [eax+ecx*4]
  00031	a1 00 00 00 00	 mov	 eax, DWORD PTR ?$TSS0@?1??Type@CSlotWindow@UI@@SAKXZ@4HA
  00036	3b 81 00 00 00
	00		 cmp	 eax, DWORD PTR __Init_thread_epoch[ecx]
  0003c	7f 14		 jg	 SHORT $LN9@Type
$LN5@Type:

; 1528 : 	return s_Type;
; 1529 : }

  0003e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?s_Type@?1??Type@CSlotWindow@UI@@SAKXZ@4HA
  00043	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00046	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0004d	59		 pop	 ecx
  0004e	8b e5		 mov	 esp, ebp
  00050	5d		 pop	 ebp
  00051	c3		 ret	 0
$LN9@Type:

; 1527 : 	static int s_Type = GetCRC32("CSlotWindow", strlen("CSlotWindow"));

  00052	68 00 00 00 00	 push	 OFFSET ?$TSS0@?1??Type@CSlotWindow@UI@@SAKXZ@4HA
  00057	e8 00 00 00 00	 call	 __Init_thread_header
  0005c	83 c4 04	 add	 esp, 4
  0005f	83 3d 00 00 00
	00 ff		 cmp	 DWORD PTR ?$TSS0@?1??Type@CSlotWindow@UI@@SAKXZ@4HA, -1
  00066	75 d6		 jne	 SHORT $LN5@Type
  00068	6a 0b		 push	 11			; 0000000bH
  0006a	68 00 00 00 00	 push	 OFFSET ??_C@_0M@DKKKJBKL@CSlotWindow@
  0006f	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00076	e8 00 00 00 00	 call	 ?GetCRC32@@YAKPBDI@Z	; GetCRC32
  0007b	68 00 00 00 00	 push	 OFFSET ?$TSS0@?1??Type@CSlotWindow@UI@@SAKXZ@4HA
  00080	a3 00 00 00 00	 mov	 DWORD PTR ?s_Type@?1??Type@CSlotWindow@UI@@SAKXZ@4HA, eax
  00085	e8 00 00 00 00	 call	 __Init_thread_footer
  0008a	83 c4 0c	 add	 esp, 12			; 0000000cH
  0008d	eb af		 jmp	 SHORT $LN5@Type
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?Type@CSlotWindow@UI@@SAKXZ$0:
  00000	68 00 00 00 00	 push	 OFFSET ?$TSS0@?1??Type@CSlotWindow@UI@@SAKXZ@4HA
  00005	e8 00 00 00 00	 call	 __Init_thread_abort
  0000a	59		 pop	 ecx
  0000b	c3		 ret	 0
  0000c	cc		 int	 3
  0000d	cc		 int	 3
  0000e	cc		 int	 3
  0000f	cc		 int	 3
  00010	cc		 int	 3
__ehhandler$?Type@CSlotWindow@UI@@SAKXZ:
  00011	90		 npad	 1
  00012	90		 npad	 1
  00013	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00017	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0001a	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  0001d	33 c8		 xor	 ecx, eax
  0001f	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00024	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?Type@CSlotWindow@UI@@SAKXZ
  00029	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?Type@CSlotWindow@UI@@SAKXZ ENDP			; UI::CSlotWindow::Type
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.h
;	COMDAT ?IsWindow@CWindow@UI@@UAEHXZ
_TEXT	SEGMENT
?IsWindow@CWindow@UI@@UAEHXZ PROC			; UI::CWindow::IsWindow, COMDAT
; _this$ = ecx

; 165  : 			virtual BOOL	IsWindow() { return TRUE; }

  00000	b8 01 00 00 00	 mov	 eax, 1
  00005	c3		 ret	 0
?IsWindow@CWindow@UI@@UAEHXZ ENDP			; UI::CWindow::IsWindow
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.h
;	COMDAT ?SetColor@CWindow@UI@@UAEXK@Z
_TEXT	SEGMENT
_dwColor$ = 8						; size = 4
?SetColor@CWindow@UI@@UAEXK@Z PROC			; UI::CWindow::SetColor, COMDAT
; _this$ = ecx

; 161  : 			virtual void	SetColor(DWORD dwColor){}

  00000	c2 04 00	 ret	 4
?SetColor@CWindow@UI@@UAEXK@Z ENDP			; UI::CWindow::SetColor
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.h
;	COMDAT ?OnChangePosition@CWindow@UI@@UAEXXZ
_TEXT	SEGMENT
?OnChangePosition@CWindow@UI@@UAEXXZ PROC		; UI::CWindow::OnChangePosition, COMDAT
; _this$ = ecx

; 104  : 			virtual void	OnChangePosition(){}

  00000	c2 00 00	 ret	 0
?OnChangePosition@CWindow@UI@@UAEXXZ ENDP		; UI::CWindow::OnChangePosition
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory
;	COMDAT ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z
_TEXT	SEGMENT
__Bytes$ = 8						; size = 4
??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z PROC ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>, COMDAT

; 127  : __declspec(allocator) void* _Allocate_manually_vector_aligned(const size_t _Bytes) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 128  :     // allocate _Bytes manually aligned to at least _Big_allocation_alignment
; 129  :     const size_t _Block_size = _Non_user_size + _Bytes;

  00003	8b 45 08	 mov	 eax, DWORD PTR __Bytes$[ebp]
  00006	8d 48 23	 lea	 ecx, DWORD PTR [eax+35]

; 130  :     if (_Block_size <= _Bytes) {

  00009	3b c8		 cmp	 ecx, eax
  0000b	0f 86 00 00 00
	00		 jbe	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length

; 79   :         return ::operator new(_Bytes);

  00011	51		 push	 ecx
  00012	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new

; 131  :         _Throw_bad_array_new_length(); // add overflow
; 132  :     }
; 133  : 
; 134  :     const uintptr_t _Ptr_container = reinterpret_cast<uintptr_t>(_Traits::_Allocate(_Block_size));

  00017	8b c8		 mov	 ecx, eax

; 79   :         return ::operator new(_Bytes);

  00019	83 c4 04	 add	 esp, 4

; 135  :     _STL_VERIFY(_Ptr_container != 0, "invalid argument"); // validate even in release since we're doing p[-1]

  0001c	85 c9		 test	 ecx, ecx
  0001e	74 0b		 je	 SHORT $LN7@Allocate_m

; 136  :     void* const _Ptr = reinterpret_cast<void*>((_Ptr_container + _Non_user_size) & ~(_Big_allocation_alignment - 1));

  00020	8d 41 23	 lea	 eax, DWORD PTR [ecx+35]
  00023	83 e0 e0	 and	 eax, -32		; ffffffe0H

; 137  :     static_cast<uintptr_t*>(_Ptr)[-1] = _Ptr_container;

  00026	89 48 fc	 mov	 DWORD PTR [eax-4], ecx

; 138  : 
; 139  : #ifdef _DEBUG
; 140  :     static_cast<uintptr_t*>(_Ptr)[-2] = _Big_allocation_sentinel;
; 141  : #endif // _DEBUG
; 142  :     return _Ptr;
; 143  : }

  00029	5d		 pop	 ebp
  0002a	c3		 ret	 0
$LN7@Allocate_m:

; 135  :     _STL_VERIFY(_Ptr_container != 0, "invalid argument"); // validate even in release since we're doing p[-1]

  0002b	e9 00 00 00 00	 jmp	 __invalid_parameter_noinfo_noreturn
??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ENDP ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xtree
;	COMDAT ?_Throw_tree_length_error@std@@YAXXZ
_TEXT	SEGMENT
?_Throw_tree_length_error@std@@YAXXZ PROC		; std::_Throw_tree_length_error, COMDAT

; 416  :     _Xlength_error("map/set too long");

  00000	68 00 00 00 00	 push	 OFFSET ??_C@_0BB@GCADKGJO@map?1set?5too?5long@
  00005	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPBD@Z ; std::_Xlength_error
$LN3@Throw_tree:
  0000a	cc		 int	 3
?_Throw_tree_length_error@std@@YAXXZ ENDP		; std::_Throw_tree_length_error
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\exception
;	COMDAT ?_Throw_bad_array_new_length@std@@YAXXZ
_TEXT	SEGMENT
$T1 = -12						; size = 12
?_Throw_bad_array_new_length@std@@YAXXZ PROC		; std::_Throw_bad_array_new_length, COMDAT

; 315  : [[noreturn]] inline void _Throw_bad_array_new_length() {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH

; 316  :     _THROW(bad_array_new_length{});

  00006	8d 4d f4	 lea	 ecx, DWORD PTR $T1[ebp]
  00009	e8 00 00 00 00	 call	 ??0bad_array_new_length@std@@QAE@XZ ; std::bad_array_new_length::bad_array_new_length
  0000e	68 00 00 00 00	 push	 OFFSET __TI3?AVbad_array_new_length@std@@
  00013	8d 45 f4	 lea	 eax, DWORD PTR $T1[ebp]
  00016	50		 push	 eax
  00017	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN3@Throw_bad_:
  0001c	cc		 int	 3
?_Throw_bad_array_new_length@std@@YAXXZ ENDP		; std::_Throw_bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\vcruntime_exception.h
;	COMDAT ??_Gbad_array_new_length@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Gbad_array_new_length@std@@UAEPAXI@Z PROC		; std::bad_array_new_length::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 89   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 90   :         __std_exception_destroy(&_Data);

  00006	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  00009	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  0000f	50		 push	 eax
  00010	e8 00 00 00 00	 call	 ___std_exception_destroy
  00015	83 c4 04	 add	 esp, 4
  00018	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0001c	74 0b		 je	 SHORT $LN12@scalar
  0001e	6a 0c		 push	 12			; 0000000cH
  00020	56		 push	 esi
  00021	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00026	83 c4 08	 add	 esp, 8
$LN12@scalar:
  00029	8b c6		 mov	 eax, esi
  0002b	5e		 pop	 esi
  0002c	5d		 pop	 ebp
  0002d	c2 04 00	 ret	 4
??_Gbad_array_new_length@std@@UAEPAXI@Z ENDP		; std::bad_array_new_length::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\vcruntime_exception.h
;	COMDAT ??0bad_array_new_length@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??0bad_array_new_length@std@@QAE@ABV01@@Z PROC		; std::bad_array_new_length::bad_array_new_length, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 72   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	0f 57 c0	 xorps	 xmm0, xmm0

; 71   :         : _Data()

  00009	8d 46 04	 lea	 eax, DWORD PTR [esi+4]

; 73   :         __std_exception_copy(&_Other._Data, &_Data);

  0000c	50		 push	 eax
  0000d	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  00013	66 0f d6 00	 movq	 QWORD PTR [eax], xmm0
  00017	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  0001a	83 c0 04	 add	 eax, 4
  0001d	50		 push	 eax
  0001e	e8 00 00 00 00	 call	 ___std_exception_copy
  00023	83 c4 08	 add	 esp, 8
  00026	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7bad_array_new_length@std@@6B@
  0002c	8b c6		 mov	 eax, esi
  0002e	5e		 pop	 esi
  0002f	5d		 pop	 ebp
  00030	c2 04 00	 ret	 4
??0bad_array_new_length@std@@QAE@ABV01@@Z ENDP		; std::bad_array_new_length::bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\vcruntime_exception.h
;	COMDAT ??1bad_array_new_length@std@@UAE@XZ
_TEXT	SEGMENT
??1bad_array_new_length@std@@UAE@XZ PROC		; std::bad_array_new_length::~bad_array_new_length, COMDAT
; _this$ = ecx

; 90   :         __std_exception_destroy(&_Data);

  00000	8d 41 04	 lea	 eax, DWORD PTR [ecx+4]
  00003	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7exception@std@@6B@
  00009	50		 push	 eax
  0000a	e8 00 00 00 00	 call	 ___std_exception_destroy
  0000f	59		 pop	 ecx
  00010	c3		 ret	 0
??1bad_array_new_length@std@@UAE@XZ ENDP		; std::bad_array_new_length::~bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\vcruntime_exception.h
;	COMDAT ??0bad_array_new_length@std@@QAE@XZ
_TEXT	SEGMENT
??0bad_array_new_length@std@@QAE@XZ PROC		; std::bad_array_new_length::bad_array_new_length, COMDAT
; _this$ = ecx

; 141  :     {

  00000	0f 57 c0	 xorps	 xmm0, xmm0

; 142  :     }

  00003	8b c1		 mov	 eax, ecx

; 65   :         : _Data()

  00005	66 0f d6 41 04	 movq	 QWORD PTR [ecx+4], xmm0

; 66   :     {
; 67   :         _Data._What = _Message;

  0000a	c7 41 04 00 00
	00 00		 mov	 DWORD PTR [ecx+4], OFFSET ??_C@_0BF@KINCDENJ@bad?5array?5new?5length@

; 141  :     {

  00011	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7bad_array_new_length@std@@6B@

; 142  :     }

  00017	c3		 ret	 0
??0bad_array_new_length@std@@QAE@XZ ENDP		; std::bad_array_new_length::bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\vcruntime_exception.h
;	COMDAT ??_Gbad_alloc@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Gbad_alloc@std@@UAEPAXI@Z PROC			; std::bad_alloc::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 89   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 90   :         __std_exception_destroy(&_Data);

  00006	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  00009	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  0000f	50		 push	 eax
  00010	e8 00 00 00 00	 call	 ___std_exception_destroy
  00015	83 c4 04	 add	 esp, 4
  00018	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0001c	74 0b		 je	 SHORT $LN9@scalar
  0001e	6a 0c		 push	 12			; 0000000cH
  00020	56		 push	 esi
  00021	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00026	83 c4 08	 add	 esp, 8
$LN9@scalar:
  00029	8b c6		 mov	 eax, esi
  0002b	5e		 pop	 esi
  0002c	5d		 pop	 ebp
  0002d	c2 04 00	 ret	 4
??_Gbad_alloc@std@@UAEPAXI@Z ENDP			; std::bad_alloc::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\vcruntime_exception.h
;	COMDAT ??0bad_alloc@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??0bad_alloc@std@@QAE@ABV01@@Z PROC			; std::bad_alloc::bad_alloc, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 72   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	0f 57 c0	 xorps	 xmm0, xmm0

; 71   :         : _Data()

  00009	8d 46 04	 lea	 eax, DWORD PTR [esi+4]

; 73   :         __std_exception_copy(&_Other._Data, &_Data);

  0000c	50		 push	 eax
  0000d	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  00013	66 0f d6 00	 movq	 QWORD PTR [eax], xmm0
  00017	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  0001a	83 c0 04	 add	 eax, 4
  0001d	50		 push	 eax
  0001e	e8 00 00 00 00	 call	 ___std_exception_copy
  00023	83 c4 08	 add	 esp, 8
  00026	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7bad_alloc@std@@6B@
  0002c	8b c6		 mov	 eax, esi
  0002e	5e		 pop	 esi
  0002f	5d		 pop	 ebp
  00030	c2 04 00	 ret	 4
??0bad_alloc@std@@QAE@ABV01@@Z ENDP			; std::bad_alloc::bad_alloc
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\vcruntime_exception.h
;	COMDAT ??_Gexception@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Gexception@std@@UAEPAXI@Z PROC			; std::exception::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 89   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 90   :         __std_exception_destroy(&_Data);

  00006	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  00009	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  0000f	50		 push	 eax
  00010	e8 00 00 00 00	 call	 ___std_exception_destroy
  00015	83 c4 04	 add	 esp, 4
  00018	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0001c	74 0b		 je	 SHORT $LN6@scalar
  0001e	6a 0c		 push	 12			; 0000000cH
  00020	56		 push	 esi
  00021	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00026	83 c4 08	 add	 esp, 8
$LN6@scalar:
  00029	8b c6		 mov	 eax, esi
  0002b	5e		 pop	 esi
  0002c	5d		 pop	 ebp
  0002d	c2 04 00	 ret	 4
??_Gexception@std@@UAEPAXI@Z ENDP			; std::exception::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\vcruntime_exception.h
;	COMDAT ?what@exception@std@@UBEPBDXZ
_TEXT	SEGMENT
?what@exception@std@@UBEPBDXZ PROC			; std::exception::what, COMDAT
; _this$ = ecx

; 95   :         return _Data._What ? _Data._What : "Unknown exception";

  00000	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00003	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0BC@EOODALEL@Unknown?5exception@
  00008	85 c9		 test	 ecx, ecx
  0000a	0f 45 c1	 cmovne	 eax, ecx

; 96   :     }

  0000d	c3		 ret	 0
?what@exception@std@@UBEPBDXZ ENDP			; std::exception::what
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\vcruntime_exception.h
;	COMDAT ??1exception@std@@UAE@XZ
_TEXT	SEGMENT
??1exception@std@@UAE@XZ PROC				; std::exception::~exception, COMDAT
; _this$ = ecx

; 90   :         __std_exception_destroy(&_Data);

  00000	8d 41 04	 lea	 eax, DWORD PTR [ecx+4]
  00003	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7exception@std@@6B@
  00009	50		 push	 eax
  0000a	e8 00 00 00 00	 call	 ___std_exception_destroy
  0000f	59		 pop	 ecx

; 91   :     }

  00010	c3		 ret	 0
??1exception@std@@UAE@XZ ENDP				; std::exception::~exception
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\vcruntime_exception.h
;	COMDAT ??0exception@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
__Other$ = 8						; size = 4
??0exception@std@@QAE@ABV01@@Z PROC			; std::exception::exception, COMDAT
; _this$ = ecx

; 72   :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	0f 57 c0	 xorps	 xmm0, xmm0
  00009	8d 46 04	 lea	 eax, DWORD PTR [esi+4]

; 73   :         __std_exception_copy(&_Other._Data, &_Data);

  0000c	50		 push	 eax
  0000d	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  00013	66 0f d6 00	 movq	 QWORD PTR [eax], xmm0
  00017	8b 45 08	 mov	 eax, DWORD PTR __Other$[ebp]
  0001a	83 c0 04	 add	 eax, 4
  0001d	50		 push	 eax
  0001e	e8 00 00 00 00	 call	 ___std_exception_copy
  00023	83 c4 08	 add	 esp, 8

; 74   :     }

  00026	8b c6		 mov	 eax, esi
  00028	5e		 pop	 esi
  00029	5d		 pop	 ebp
  0002a	c2 04 00	 ret	 4
??0exception@std@@QAE@ABV01@@Z ENDP			; std::exception::exception
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Windows Kits\10\Include\10.0.19041.0\ucrt\stdio.h
;	COMDAT __snprintf
_TEXT	SEGMENT
__Buffer$ = 8						; size = 4
__BufferCount$ = 12					; size = 4
__Format$ = 16						; size = 4
__snprintf PROC						; COMDAT

; 1947 :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1392 :         int const _Result = __stdio_common_vsprintf(

  00003	8d 45 14	 lea	 eax, DWORD PTR __Format$[ebp+4]
  00006	50		 push	 eax
  00007	6a 00		 push	 0
  00009	ff 75 10	 push	 DWORD PTR __Format$[ebp]
  0000c	ff 75 0c	 push	 DWORD PTR __BufferCount$[ebp]
  0000f	ff 75 08	 push	 DWORD PTR __Buffer$[ebp]
  00012	e8 00 00 00 00	 call	 ___local_stdio_printf_options
  00017	8b 08		 mov	 ecx, DWORD PTR [eax]
  00019	ff 70 04	 push	 DWORD PTR [eax+4]
  0001c	83 c9 01	 or	 ecx, 1
  0001f	51		 push	 ecx
  00020	e8 00 00 00 00	 call	 ___stdio_common_vsprintf

; 1393 :             _CRT_INTERNAL_LOCAL_PRINTF_OPTIONS | _CRT_INTERNAL_PRINTF_LEGACY_VSPRINTF_NULL_TERMINATION,
; 1394 :             _Buffer, _BufferCount, _Format, _Locale, _ArgList);
; 1395 : 
; 1396 :         return _Result < 0 ? -1 : _Result;

  00025	83 c9 ff	 or	 ecx, -1
  00028	83 c4 1c	 add	 esp, 28			; 0000001cH
  0002b	85 c0		 test	 eax, eax
  0002d	0f 48 c1	 cmovs	 eax, ecx

; 1948 :         int _Result;
; 1949 :         va_list _ArgList;
; 1950 :         __crt_va_start(_ArgList, _Format);
; 1951 :         _Result = _vsnprintf(_Buffer, _BufferCount, _Format, _ArgList);
; 1952 :         __crt_va_end(_ArgList);
; 1953 :         return _Result;
; 1954 :     }

  00030	5d		 pop	 ebp
  00031	c3		 ret	 0
__snprintf ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Windows Kits\10\Include\10.0.19041.0\ucrt\corecrt_stdio_config.h
;	COMDAT ___local_stdio_printf_options
_TEXT	SEGMENT
___local_stdio_printf_options PROC			; COMDAT

; 91   :         static unsigned __int64 _OptionsStorage;
; 92   :         return &_OptionsStorage;

  00000	b8 00 00 00 00	 mov	 eax, OFFSET ?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA ; `__local_stdio_printf_options'::`2'::_OptionsStorage

; 93   :     }

  00005	c3		 ret	 0
___local_stdio_printf_options ENDP
_TEXT	ENDS
END
