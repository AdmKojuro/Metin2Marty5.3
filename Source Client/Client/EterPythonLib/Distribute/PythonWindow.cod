; Listing generated by Microsoft (R) Optimizing Compiler Version 19.29.30151.0 

	TITLE	C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\Distribute\PythonWindow.obj
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	?g_bOutlineBoxEnable@@3HA			; g_bOutlineBoxEnable
_BSS	SEGMENT
?g_bOutlineBoxEnable@@3HA DD 01H DUP (?)		; g_bOutlineBoxEnable
_BSS	ENDS
CONST	SEGMENT
?_Fake_alloc@std@@3U_Fake_allocator@1@B	ORG $+1		; std::_Fake_alloc
CONST	ENDS
PUBLIC	??0exception@std@@QAE@ABV01@@Z			; std::exception::exception
PUBLIC	??1exception@std@@UAE@XZ			; std::exception::~exception
PUBLIC	?what@exception@std@@UBEPBDXZ			; std::exception::what
PUBLIC	??_Gexception@std@@UAEPAXI@Z			; std::exception::`scalar deleting destructor'
PUBLIC	??0bad_alloc@std@@QAE@ABV01@@Z			; std::bad_alloc::bad_alloc
PUBLIC	??_Gbad_alloc@std@@UAEPAXI@Z			; std::bad_alloc::`scalar deleting destructor'
PUBLIC	??0bad_array_new_length@std@@QAE@XZ		; std::bad_array_new_length::bad_array_new_length
PUBLIC	??1bad_array_new_length@std@@UAE@XZ		; std::bad_array_new_length::~bad_array_new_length
PUBLIC	??0bad_array_new_length@std@@QAE@ABV01@@Z	; std::bad_array_new_length::bad_array_new_length
PUBLIC	??_Gbad_array_new_length@std@@UAEPAXI@Z		; std::bad_array_new_length::`scalar deleting destructor'
PUBLIC	?_Throw_bad_array_new_length@std@@YAXXZ		; std::_Throw_bad_array_new_length
PUBLIC	?_Xlen_string@std@@YAXXZ			; std::_Xlen_string
PUBLIC	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
PUBLIC	?DeleteExpandedImageInstance@CGraphicExpandedImageInstance@@SAXPAV1@@Z ; CGraphicExpandedImageInstance::DeleteExpandedImageInstance
PUBLIC	?_Xlength@?$vector@PAVCGraphicExpandedImageInstance@@V?$allocator@PAVCGraphicExpandedImageInstance@@@std@@@std@@CAXXZ ; std::vector<CGraphicExpandedImageInstance *,std::allocator<CGraphicExpandedImageInstance *> >::_Xlength
PUBLIC	??1?$list@PAVCWindow@UI@@V?$allocator@PAVCWindow@UI@@@std@@@std@@QAE@XZ ; std::list<UI::CWindow *,std::allocator<UI::CWindow *> >::~list<UI::CWindow *,std::allocator<UI::CWindow *> >
PUBLIC	?push_back@?$list@PAVCWindow@UI@@V?$allocator@PAVCWindow@UI@@@std@@@std@@QAEXABQAVCWindow@UI@@@Z ; std::list<UI::CWindow *,std::allocator<UI::CWindow *> >::push_back
PUBLIC	?remove@?$list@PAVCWindow@UI@@V?$allocator@PAVCWindow@UI@@@std@@@std@@QAE@ABQAVCWindow@UI@@@Z ; std::list<UI::CWindow *,std::allocator<UI::CWindow *> >::remove
PUBLIC	??$_Emplace_reallocate@ABQAVCGraphicExpandedImageInstance@@@?$vector@PAVCGraphicExpandedImageInstance@@V?$allocator@PAVCGraphicExpandedImageInstance@@@std@@@std@@QAEPAPAVCGraphicExpandedImageInstance@@QAPAV2@ABQAV2@@Z ; std::vector<CGraphicExpandedImageInstance *,std::allocator<CGraphicExpandedImageInstance *> >::_Emplace_reallocate<CGraphicExpandedImageInstance * const &>
PUBLIC	??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
PUBLIC	??$_Copy_memmove@PAPAVCGraphicExpandedImageInstance@@PAPAV1@@std@@YAPAPAVCGraphicExpandedImageInstance@@PAPAV1@00@Z ; std::_Copy_memmove<CGraphicExpandedImageInstance * *,CGraphicExpandedImageInstance * *>
PUBLIC	?Type@CWindow@UI@@SAKXZ				; UI::CWindow::Type
PUBLIC	?IsType@CWindow@UI@@QAEHK@Z			; UI::CWindow::IsType
PUBLIC	??0CWindow@UI@@QAE@PAU_object@@@Z		; UI::CWindow::CWindow
PUBLIC	??1CWindow@UI@@UAE@XZ				; UI::CWindow::~CWindow
PUBLIC	?AddChild@CWindow@UI@@QAEXPAV12@@Z		; UI::CWindow::AddChild
PUBLIC	?Clear@CWindow@UI@@QAEXXZ			; UI::CWindow::Clear
PUBLIC	?DestroyHandle@CWindow@UI@@QAEXXZ		; UI::CWindow::DestroyHandle
PUBLIC	?Update@CWindow@UI@@QAEXXZ			; UI::CWindow::Update
PUBLIC	?Render@CWindow@UI@@QAEXXZ			; UI::CWindow::Render
PUBLIC	?SetName@CWindow@UI@@QAEXPBD@Z			; UI::CWindow::SetName
PUBLIC	?SetSize@CWindow@UI@@QAEXJJ@Z			; UI::CWindow::SetSize
PUBLIC	?SetHorizontalAlign@CWindow@UI@@QAEXK@Z		; UI::CWindow::SetHorizontalAlign
PUBLIC	?SetVerticalAlign@CWindow@UI@@QAEXK@Z		; UI::CWindow::SetVerticalAlign
PUBLIC	?SetPosition@CWindow@UI@@QAEXJJ@Z		; UI::CWindow::SetPosition
PUBLIC	?GetPosition@CWindow@UI@@QAEXPAJ0@Z		; UI::CWindow::GetPosition
PUBLIC	?GetLocalPosition@CWindow@UI@@QAEXAAJ0@Z	; UI::CWindow::GetLocalPosition
PUBLIC	?GetMouseLocalPosition@CWindow@UI@@QAEXAAJ0@Z	; UI::CWindow::GetMouseLocalPosition
PUBLIC	?UpdateRect@CWindow@UI@@QAEJXZ			; UI::CWindow::UpdateRect
PUBLIC	?Show@CWindow@UI@@QAEXXZ			; UI::CWindow::Show
PUBLIC	?Hide@CWindow@UI@@QAEXXZ			; UI::CWindow::Hide
PUBLIC	?IsRendering@CWindow@UI@@QAE_NXZ		; UI::CWindow::IsRendering
PUBLIC	?GetRoot@CWindow@UI@@QAEPAV12@XZ		; UI::CWindow::GetRoot
PUBLIC	?GetParent@CWindow@UI@@QAEPAV12@XZ		; UI::CWindow::GetParent
PUBLIC	?IsChild@CWindow@UI@@QAE_NPAV12@@Z		; UI::CWindow::IsChild
PUBLIC	?DeleteChild@CWindow@UI@@QAEXPAV12@@Z		; UI::CWindow::DeleteChild
PUBLIC	?SetTop@CWindow@UI@@QAEXPAV12@@Z		; UI::CWindow::SetTop
PUBLIC	?IsIn@CWindow@UI@@QAE_NJJ@Z			; UI::CWindow::IsIn
PUBLIC	?IsIn@CWindow@UI@@QAE_NXZ			; UI::CWindow::IsIn
PUBLIC	?PickWindow@CWindow@UI@@QAEPAV12@JJ@Z		; UI::CWindow::PickWindow
PUBLIC	?PickTopWindow@CWindow@UI@@QAEPAV12@JJ@Z	; UI::CWindow::PickTopWindow
PUBLIC	?__RemoveReserveChildren@CWindow@UI@@QAEXXZ	; UI::CWindow::__RemoveReserveChildren
PUBLIC	?OnRender@CWindow@UI@@UAEXXZ			; UI::CWindow::OnRender
PUBLIC	?OnUpdate@CWindow@UI@@UAEXXZ			; UI::CWindow::OnUpdate
PUBLIC	?OnChangePosition@CWindow@UI@@UAEXXZ		; UI::CWindow::OnChangePosition
PUBLIC	?OnSetFocus@CWindow@UI@@UAEXXZ			; UI::CWindow::OnSetFocus
PUBLIC	?OnKillFocus@CWindow@UI@@UAEXXZ			; UI::CWindow::OnKillFocus
PUBLIC	?OnMouseDrag@CWindow@UI@@UAEXJJ@Z		; UI::CWindow::OnMouseDrag
PUBLIC	?OnMouseOverIn@CWindow@UI@@UAEXXZ		; UI::CWindow::OnMouseOverIn
PUBLIC	?OnMouseOverOut@CWindow@UI@@UAEXXZ		; UI::CWindow::OnMouseOverOut
PUBLIC	?OnMouseOver@CWindow@UI@@UAEXXZ			; UI::CWindow::OnMouseOver
PUBLIC	?OnDrop@CWindow@UI@@UAEXXZ			; UI::CWindow::OnDrop
PUBLIC	?OnTop@CWindow@UI@@UAEXXZ			; UI::CWindow::OnTop
PUBLIC	?OnIMEUpdate@CWindow@UI@@UAEXXZ			; UI::CWindow::OnIMEUpdate
PUBLIC	?OnMoveWindow@CWindow@UI@@UAEXJJ@Z		; UI::CWindow::OnMoveWindow
PUBLIC	?RunIMETabEvent@CWindow@UI@@QAEHXZ		; UI::CWindow::RunIMETabEvent
PUBLIC	?RunIMEReturnEvent@CWindow@UI@@QAEHXZ		; UI::CWindow::RunIMEReturnEvent
PUBLIC	?RunIMEKeyDownEvent@CWindow@UI@@QAEHH@Z		; UI::CWindow::RunIMEKeyDownEvent
PUBLIC	?RunKeyDownEvent@CWindow@UI@@QAEPAV12@H@Z	; UI::CWindow::RunKeyDownEvent
PUBLIC	?RunKeyUpEvent@CWindow@UI@@QAEHH@Z		; UI::CWindow::RunKeyUpEvent
PUBLIC	?RunPressEscapeKeyEvent@CWindow@UI@@QAEHXZ	; UI::CWindow::RunPressEscapeKeyEvent
PUBLIC	?RunPressExitKeyEvent@CWindow@UI@@QAEHXZ	; UI::CWindow::RunPressExitKeyEvent
PUBLIC	?OnIMETabEvent@CWindow@UI@@UAEHXZ		; UI::CWindow::OnIMETabEvent
PUBLIC	?OnIMEReturnEvent@CWindow@UI@@UAEHXZ		; UI::CWindow::OnIMEReturnEvent
PUBLIC	?OnIMEKeyDownEvent@CWindow@UI@@UAEHH@Z		; UI::CWindow::OnIMEKeyDownEvent
PUBLIC	?OnIMEChangeCodePage@CWindow@UI@@UAEHXZ		; UI::CWindow::OnIMEChangeCodePage
PUBLIC	?OnIMEOpenCandidateListEvent@CWindow@UI@@UAEHXZ	; UI::CWindow::OnIMEOpenCandidateListEvent
PUBLIC	?OnIMECloseCandidateListEvent@CWindow@UI@@UAEHXZ ; UI::CWindow::OnIMECloseCandidateListEvent
PUBLIC	?OnIMEOpenReadingWndEvent@CWindow@UI@@UAEHXZ	; UI::CWindow::OnIMEOpenReadingWndEvent
PUBLIC	?OnIMECloseReadingWndEvent@CWindow@UI@@UAEHXZ	; UI::CWindow::OnIMECloseReadingWndEvent
PUBLIC	?OnMouseLeftButtonDown@CWindow@UI@@UAEHXZ	; UI::CWindow::OnMouseLeftButtonDown
PUBLIC	?OnMouseLeftButtonUp@CWindow@UI@@UAEHXZ		; UI::CWindow::OnMouseLeftButtonUp
PUBLIC	?OnMouseLeftButtonDoubleClick@CWindow@UI@@UAEHXZ ; UI::CWindow::OnMouseLeftButtonDoubleClick
PUBLIC	?OnMouseRightButtonDown@CWindow@UI@@UAEHXZ	; UI::CWindow::OnMouseRightButtonDown
PUBLIC	?OnMouseRightButtonUp@CWindow@UI@@UAEHXZ	; UI::CWindow::OnMouseRightButtonUp
PUBLIC	?OnMouseRightButtonDoubleClick@CWindow@UI@@UAEHXZ ; UI::CWindow::OnMouseRightButtonDoubleClick
PUBLIC	?OnMouseMiddleButtonDown@CWindow@UI@@UAEHXZ	; UI::CWindow::OnMouseMiddleButtonDown
PUBLIC	?OnMouseMiddleButtonUp@CWindow@UI@@UAEHXZ	; UI::CWindow::OnMouseMiddleButtonUp
PUBLIC	?RunMouseWheelEvent@CWindow@UI@@UAEHJ@Z		; UI::CWindow::RunMouseWheelEvent
PUBLIC	?OnMouseWheelScroll@CWindow@UI@@UAEHF@Z		; UI::CWindow::OnMouseWheelScroll
PUBLIC	?SetScrollable@CWindow@UI@@UAEXXZ		; UI::CWindow::SetScrollable
PUBLIC	?OnKeyDown@CWindow@UI@@UAEHH@Z			; UI::CWindow::OnKeyDown
PUBLIC	?OnKeyUp@CWindow@UI@@UAEHH@Z			; UI::CWindow::OnKeyUp
PUBLIC	?OnPressEscapeKey@CWindow@UI@@UAEHXZ		; UI::CWindow::OnPressEscapeKey
PUBLIC	?OnPressExitKey@CWindow@UI@@UAEHXZ		; UI::CWindow::OnPressExitKey
PUBLIC	?SetColor@CWindow@UI@@UAEXK@Z			; UI::CWindow::SetColor
PUBLIC	?OnIsType@CWindow@UI@@UAEHK@Z			; UI::CWindow::OnIsType
PUBLIC	?IsWindow@CWindow@UI@@UAEHXZ			; UI::CWindow::IsWindow
PUBLIC	??_GCWindow@UI@@UAEPAXI@Z			; UI::CWindow::`scalar deleting destructor'
PUBLIC	??0CRenderTarget@UI@@QAE@PAU_object@@@Z		; UI::CRenderTarget::CRenderTarget
PUBLIC	??1CRenderTarget@UI@@UAE@XZ			; UI::CRenderTarget::~CRenderTarget
PUBLIC	?SetRenderTarget@CRenderTarget@UI@@QAE_NE@Z	; UI::CRenderTarget::SetRenderTarget
PUBLIC	?OnRender@CRenderTarget@UI@@MAEXXZ		; UI::CRenderTarget::OnRender
PUBLIC	??_GCRenderTarget@UI@@UAEPAXI@Z			; UI::CRenderTarget::`scalar deleting destructor'
PUBLIC	??0CBox@UI@@QAE@PAU_object@@@Z			; UI::CBox::CBox
PUBLIC	??1CBox@UI@@UAE@XZ				; UI::CBox::~CBox
PUBLIC	?SetColor@CBox@UI@@UAEXK@Z			; UI::CBox::SetColor
PUBLIC	?OnRender@CBox@UI@@MAEXXZ			; UI::CBox::OnRender
PUBLIC	??_GCBox@UI@@UAEPAXI@Z				; UI::CBox::`scalar deleting destructor'
PUBLIC	??0CBar@UI@@QAE@PAU_object@@@Z			; UI::CBar::CBar
PUBLIC	??1CBar@UI@@UAE@XZ				; UI::CBar::~CBar
PUBLIC	?SetColor@CBar@UI@@UAEXK@Z			; UI::CBar::SetColor
PUBLIC	?OnRender@CBar@UI@@MAEXXZ			; UI::CBar::OnRender
PUBLIC	??_GCBar@UI@@UAEPAXI@Z				; UI::CBar::`scalar deleting destructor'
PUBLIC	??0CLine@UI@@QAE@PAU_object@@@Z			; UI::CLine::CLine
PUBLIC	??1CLine@UI@@UAE@XZ				; UI::CLine::~CLine
PUBLIC	?SetColor@CLine@UI@@UAEXK@Z			; UI::CLine::SetColor
PUBLIC	?OnRender@CLine@UI@@MAEXXZ			; UI::CLine::OnRender
PUBLIC	??_GCLine@UI@@UAEPAXI@Z				; UI::CLine::`scalar deleting destructor'
PUBLIC	?Type@CBar3D@UI@@SAKXZ				; UI::CBar3D::Type
PUBLIC	??0CBar3D@UI@@QAE@PAU_object@@@Z		; UI::CBar3D::CBar3D
PUBLIC	??1CBar3D@UI@@UAE@XZ				; UI::CBar3D::~CBar3D
PUBLIC	?SetColor@CBar3D@UI@@QAEXKKK@Z			; UI::CBar3D::SetColor
PUBLIC	?OnRender@CBar3D@UI@@MAEXXZ			; UI::CBar3D::OnRender
PUBLIC	??_GCBar3D@UI@@UAEPAXI@Z			; UI::CBar3D::`scalar deleting destructor'
PUBLIC	??0CTextLine@UI@@QAE@PAU_object@@@Z		; UI::CTextLine::CTextLine
PUBLIC	??1CTextLine@UI@@UAE@XZ				; UI::CTextLine::~CTextLine
PUBLIC	?SetMax@CTextLine@UI@@QAEXH@Z			; UI::CTextLine::SetMax
PUBLIC	?SetHorizontalAlign@CTextLine@UI@@QAEXH@Z	; UI::CTextLine::SetHorizontalAlign
PUBLIC	?SetVerticalAlign@CTextLine@UI@@QAEXH@Z		; UI::CTextLine::SetVerticalAlign
PUBLIC	?SetSecret@CTextLine@UI@@QAEXH@Z		; UI::CTextLine::SetSecret
PUBLIC	?SetOutline@CTextLine@UI@@QAEXH@Z		; UI::CTextLine::SetOutline
PUBLIC	?SetFeather@CTextLine@UI@@QAEXH@Z		; UI::CTextLine::SetFeather
PUBLIC	?SetMultiLine@CTextLine@UI@@QAEXH@Z		; UI::CTextLine::SetMultiLine
PUBLIC	?SetFontName@CTextLine@UI@@QAEXPBD@Z		; UI::CTextLine::SetFontName
PUBLIC	?SetFontColor@CTextLine@UI@@QAEXK@Z		; UI::CTextLine::SetFontColor
PUBLIC	?SetLimitWidth@CTextLine@UI@@QAEXM@Z		; UI::CTextLine::SetLimitWidth
PUBLIC	?ShowCursor@CTextLine@UI@@QAEXXZ		; UI::CTextLine::ShowCursor
PUBLIC	?HideCursor@CTextLine@UI@@QAEXXZ		; UI::CTextLine::HideCursor
PUBLIC	?GetCursorPosition@CTextLine@UI@@QAEHXZ		; UI::CTextLine::GetCursorPosition
PUBLIC	?SetText@CTextLine@UI@@QAEXPBD@Z		; UI::CTextLine::SetText
PUBLIC	?GetText@CTextLine@UI@@QAEPBDXZ			; UI::CTextLine::GetText
PUBLIC	?GetTextSize@CTextLine@UI@@QAEXPAH0@Z		; UI::CTextLine::GetTextSize
PUBLIC	?GetTextLineCount@CTextLine@UI@@QAEHXZ		; UI::CTextLine::GetTextLineCount
PUBLIC	?DisableEnterToken@CTextLine@UI@@QAEXXZ		; UI::CTextLine::DisableEnterToken
PUBLIC	?SetLineHeight@CTextLine@UI@@QAEXH@Z		; UI::CTextLine::SetLineHeight
PUBLIC	?GetLineHeight@CTextLine@UI@@QAEHXZ		; UI::CTextLine::GetLineHeight
PUBLIC	?OnUpdate@CTextLine@UI@@MAEXXZ			; UI::CTextLine::OnUpdate
PUBLIC	?OnRender@CTextLine@UI@@MAEXXZ			; UI::CTextLine::OnRender
PUBLIC	?OnChangePosition@CTextLine@UI@@MAEXXZ		; UI::CTextLine::OnChangePosition
PUBLIC	?OnSetText@CTextLine@UI@@MAEXPBD@Z		; UI::CTextLine::OnSetText
PUBLIC	??_GCTextLine@UI@@UAEPAXI@Z			; UI::CTextLine::`scalar deleting destructor'
PUBLIC	??0CNumberLine@UI@@QAE@PAU_object@@@Z		; UI::CNumberLine::CNumberLine
PUBLIC	??0CNumberLine@UI@@QAE@PAVCWindow@1@@Z		; UI::CNumberLine::CNumberLine
PUBLIC	??1CNumberLine@UI@@UAE@XZ			; UI::CNumberLine::~CNumberLine
PUBLIC	?SetPath@CNumberLine@UI@@QAEXPBD@Z		; UI::CNumberLine::SetPath
PUBLIC	?SetHorizontalAlign@CNumberLine@UI@@QAEXH@Z	; UI::CNumberLine::SetHorizontalAlign
PUBLIC	?SetNumber@CNumberLine@UI@@QAEXPBD@Z		; UI::CNumberLine::SetNumber
PUBLIC	?ClearNumber@CNumberLine@UI@@IAEXXZ		; UI::CNumberLine::ClearNumber
PUBLIC	?OnRender@CNumberLine@UI@@MAEXXZ		; UI::CNumberLine::OnRender
PUBLIC	?OnChangePosition@CNumberLine@UI@@MAEXXZ	; UI::CNumberLine::OnChangePosition
PUBLIC	??1?$vector@PAVCGraphicImageInstance@@V?$allocator@PAVCGraphicImageInstance@@@std@@@std@@QAE@XZ ; std::vector<CGraphicImageInstance *,std::allocator<CGraphicImageInstance *> >::~vector<CGraphicImageInstance *,std::allocator<CGraphicImageInstance *> >
PUBLIC	?_Xlength@?$vector@PAVCGraphicImageInstance@@V?$allocator@PAVCGraphicImageInstance@@@std@@@std@@CAXXZ ; std::vector<CGraphicImageInstance *,std::allocator<CGraphicImageInstance *> >::_Xlength
PUBLIC	??_GCNumberLine@UI@@UAEPAXI@Z			; UI::CNumberLine::`scalar deleting destructor'
PUBLIC	??0CImageBox@UI@@QAE@PAU_object@@@Z		; UI::CImageBox::CImageBox
PUBLIC	??1CImageBox@UI@@UAE@XZ				; UI::CImageBox::~CImageBox
PUBLIC	?LoadImageA@CImageBox@UI@@QAEHPBD@Z		; UI::CImageBox::LoadImageA
PUBLIC	?SetDiffuseColor@CImageBox@UI@@QAEXMMMM@Z	; UI::CImageBox::SetDiffuseColor
PUBLIC	?GetWidth@CImageBox@UI@@QAEHXZ			; UI::CImageBox::GetWidth
PUBLIC	?GetHeight@CImageBox@UI@@QAEHXZ			; UI::CImageBox::GetHeight
PUBLIC	?OnCreateInstance@CImageBox@UI@@MAEXXZ		; UI::CImageBox::OnCreateInstance
PUBLIC	?OnDestroyInstance@CImageBox@UI@@MAEXXZ		; UI::CImageBox::OnDestroyInstance
PUBLIC	?OnUpdate@CImageBox@UI@@MAEXXZ			; UI::CImageBox::OnUpdate
PUBLIC	?OnRender@CImageBox@UI@@MAEXXZ			; UI::CImageBox::OnRender
PUBLIC	?OnChangePosition@CImageBox@UI@@MAEXXZ		; UI::CImageBox::OnChangePosition
PUBLIC	??_GCImageBox@UI@@UAEPAXI@Z			; UI::CImageBox::`scalar deleting destructor'
PUBLIC	??0CMarkBox@UI@@QAE@PAU_object@@@Z		; UI::CMarkBox::CMarkBox
PUBLIC	??1CMarkBox@UI@@UAE@XZ				; UI::CMarkBox::~CMarkBox
PUBLIC	?LoadImageA@CMarkBox@UI@@QAEXPBD@Z		; UI::CMarkBox::LoadImageA
PUBLIC	?SetDiffuseColor@CMarkBox@UI@@QAEXMMMM@Z	; UI::CMarkBox::SetDiffuseColor
PUBLIC	?SetIndex@CMarkBox@UI@@QAEXI@Z			; UI::CMarkBox::SetIndex
PUBLIC	?SetScale@CMarkBox@UI@@QAEXM@Z			; UI::CMarkBox::SetScale
PUBLIC	?OnCreateInstance@CMarkBox@UI@@MAEXXZ		; UI::CMarkBox::OnCreateInstance
PUBLIC	?OnDestroyInstance@CMarkBox@UI@@MAEXXZ		; UI::CMarkBox::OnDestroyInstance
PUBLIC	?OnUpdate@CMarkBox@UI@@MAEXXZ			; UI::CMarkBox::OnUpdate
PUBLIC	?OnRender@CMarkBox@UI@@MAEXXZ			; UI::CMarkBox::OnRender
PUBLIC	?OnChangePosition@CMarkBox@UI@@MAEXXZ		; UI::CMarkBox::OnChangePosition
PUBLIC	??_GCMarkBox@UI@@UAEPAXI@Z			; UI::CMarkBox::`scalar deleting destructor'
PUBLIC	?Type@CExpandedImageBox@UI@@SAKXZ		; UI::CExpandedImageBox::Type
PUBLIC	??0CExpandedImageBox@UI@@QAE@PAU_object@@@Z	; UI::CExpandedImageBox::CExpandedImageBox
PUBLIC	??1CExpandedImageBox@UI@@UAE@XZ			; UI::CExpandedImageBox::~CExpandedImageBox
PUBLIC	?SetScale@CExpandedImageBox@UI@@QAEXMM@Z	; UI::CExpandedImageBox::SetScale
PUBLIC	?SetOrigin@CExpandedImageBox@UI@@QAEXMM@Z	; UI::CExpandedImageBox::SetOrigin
PUBLIC	?SetRotation@CExpandedImageBox@UI@@QAEXM@Z	; UI::CExpandedImageBox::SetRotation
PUBLIC	?SetRenderingRect@CExpandedImageBox@UI@@QAEXMMMM@Z ; UI::CExpandedImageBox::SetRenderingRect
PUBLIC	?SetRenderingRectWithScale@CExpandedImageBox@UI@@QAEXMMMM@Z ; UI::CExpandedImageBox::SetRenderingRectWithScale
PUBLIC	?SetRenderingMode@CExpandedImageBox@UI@@QAEXH@Z	; UI::CExpandedImageBox::SetRenderingMode
PUBLIC	?OnCreateInstance@CExpandedImageBox@UI@@MAEXXZ	; UI::CExpandedImageBox::OnCreateInstance
PUBLIC	?OnDestroyInstance@CExpandedImageBox@UI@@MAEXXZ	; UI::CExpandedImageBox::OnDestroyInstance
PUBLIC	?OnUpdate@CExpandedImageBox@UI@@MAEXXZ		; UI::CExpandedImageBox::OnUpdate
PUBLIC	?OnRender@CExpandedImageBox@UI@@MAEXXZ		; UI::CExpandedImageBox::OnRender
PUBLIC	?OnIsType@CExpandedImageBox@UI@@MAEHK@Z		; UI::CExpandedImageBox::OnIsType
PUBLIC	??_GCExpandedImageBox@UI@@UAEPAXI@Z		; UI::CExpandedImageBox::`scalar deleting destructor'
PUBLIC	?Type@CAniImageBox@UI@@SAKXZ			; UI::CAniImageBox::Type
PUBLIC	??0CAniImageBox@UI@@QAE@PAU_object@@@Z		; UI::CAniImageBox::CAniImageBox
PUBLIC	??1CAniImageBox@UI@@UAE@XZ			; UI::CAniImageBox::~CAniImageBox
PUBLIC	?SetDelay@CAniImageBox@UI@@QAEXH@Z		; UI::CAniImageBox::SetDelay
PUBLIC	?AppendImage@CAniImageBox@UI@@QAEXPBDMMMM@Z	; UI::CAniImageBox::AppendImage
PUBLIC	?SetRenderingRect@CAniImageBox@UI@@QAEXMMMM@Z	; UI::CAniImageBox::SetRenderingRect
PUBLIC	?SetRenderingRectWithScale@CAniImageBox@UI@@QAEXMMMM@Z ; UI::CAniImageBox::SetRenderingRectWithScale
PUBLIC	?SetRenderingMode@CAniImageBox@UI@@QAEXH@Z	; UI::CAniImageBox::SetRenderingMode
PUBLIC	?SetAniImgScale@CAniImageBox@UI@@QAEXMM@Z	; UI::CAniImageBox::SetAniImgScale
PUBLIC	?ResetFrame@CAniImageBox@UI@@QAEXXZ		; UI::CAniImageBox::ResetFrame
PUBLIC	?SetRotation@CAniImageBox@UI@@QAEXM@Z		; UI::CAniImageBox::SetRotation
PUBLIC	?OnUpdate@CAniImageBox@UI@@MAEXXZ		; UI::CAniImageBox::OnUpdate
PUBLIC	?OnRender@CAniImageBox@UI@@MAEXXZ		; UI::CAniImageBox::OnRender
PUBLIC	?OnChangePosition@CAniImageBox@UI@@MAEXXZ	; UI::CAniImageBox::OnChangePosition
PUBLIC	?OnEndFrame@CAniImageBox@UI@@MAEXXZ		; UI::CAniImageBox::OnEndFrame
PUBLIC	?OnIsType@CAniImageBox@UI@@MAEHK@Z		; UI::CAniImageBox::OnIsType
PUBLIC	??_GCAniImageBox@UI@@UAEPAXI@Z			; UI::CAniImageBox::`scalar deleting destructor'
PUBLIC	??0CButton@UI@@QAE@PAU_object@@@Z		; UI::CButton::CButton
PUBLIC	??1CButton@UI@@UAE@XZ				; UI::CButton::~CButton
PUBLIC	?SetUpVisual@CButton@UI@@QAEHPBD@Z		; UI::CButton::SetUpVisual
PUBLIC	?SetOverVisual@CButton@UI@@QAEHPBD@Z		; UI::CButton::SetOverVisual
PUBLIC	?SetDownVisual@CButton@UI@@QAEHPBD@Z		; UI::CButton::SetDownVisual
PUBLIC	?SetDisableVisual@CButton@UI@@QAEHPBD@Z		; UI::CButton::SetDisableVisual
PUBLIC	?GetUpVisualFileName@CButton@UI@@QAEPBDXZ	; UI::CButton::GetUpVisualFileName
PUBLIC	?GetOverVisualFileName@CButton@UI@@QAEPBDXZ	; UI::CButton::GetOverVisualFileName
PUBLIC	?GetDownVisualFileName@CButton@UI@@QAEPBDXZ	; UI::CButton::GetDownVisualFileName
PUBLIC	?Flash@CButton@UI@@QAEXXZ			; UI::CButton::Flash
PUBLIC	?EnableFlash@CButton@UI@@QAEXXZ			; UI::CButton::EnableFlash
PUBLIC	?DisableFlash@CButton@UI@@QAEXXZ		; UI::CButton::DisableFlash
PUBLIC	?Enable@CButton@UI@@QAEXXZ			; UI::CButton::Enable
PUBLIC	?Disable@CButton@UI@@QAEXXZ			; UI::CButton::Disable
PUBLIC	?SetUp@CButton@UI@@QAEXXZ			; UI::CButton::SetUp
PUBLIC	?Up@CButton@UI@@QAEXXZ				; UI::CButton::Up
PUBLIC	?Over@CButton@UI@@QAEXXZ			; UI::CButton::Over
PUBLIC	?Down@CButton@UI@@QAEXXZ			; UI::CButton::Down
PUBLIC	?IsDisable@CButton@UI@@QAEHXZ			; UI::CButton::IsDisable
PUBLIC	?IsPressed@CButton@UI@@QAEHXZ			; UI::CButton::IsPressed
PUBLIC	?SetScale@CButton@UI@@QAEXMM@Z			; UI::CButton::SetScale
PUBLIC	?OnUpdate@CButton@UI@@MAEXXZ			; UI::CButton::OnUpdate
PUBLIC	?OnRender@CButton@UI@@MAEXXZ			; UI::CButton::OnRender
PUBLIC	?OnChangePosition@CButton@UI@@MAEXXZ		; UI::CButton::OnChangePosition
PUBLIC	?OnMouseLeftButtonDown@CButton@UI@@MAEHXZ	; UI::CButton::OnMouseLeftButtonDown
PUBLIC	?OnMouseLeftButtonDoubleClick@CButton@UI@@MAEHXZ ; UI::CButton::OnMouseLeftButtonDoubleClick
PUBLIC	?OnMouseLeftButtonUp@CButton@UI@@MAEHXZ		; UI::CButton::OnMouseLeftButtonUp
PUBLIC	?OnMouseOverIn@CButton@UI@@MAEXXZ		; UI::CButton::OnMouseOverIn
PUBLIC	?OnMouseOverOut@CButton@UI@@MAEXXZ		; UI::CButton::OnMouseOverOut
PUBLIC	?IsEnable@CButton@UI@@IAEHXZ			; UI::CButton::IsEnable
PUBLIC	?SetCurrentVisual@CButton@UI@@IAEXPAVCGraphicImageInstance@@@Z ; UI::CButton::SetCurrentVisual
PUBLIC	??_GCButton@UI@@UAEPAXI@Z			; UI::CButton::`scalar deleting destructor'
PUBLIC	??0CRadioButton@UI@@QAE@PAU_object@@@Z		; UI::CRadioButton::CRadioButton
PUBLIC	??1CRadioButton@UI@@UAE@XZ			; UI::CRadioButton::~CRadioButton
PUBLIC	?OnMouseLeftButtonDown@CRadioButton@UI@@MAEHXZ	; UI::CRadioButton::OnMouseLeftButtonDown
PUBLIC	?OnMouseLeftButtonUp@CRadioButton@UI@@MAEHXZ	; UI::CRadioButton::OnMouseLeftButtonUp
PUBLIC	?OnMouseOverIn@CRadioButton@UI@@MAEXXZ		; UI::CRadioButton::OnMouseOverIn
PUBLIC	?OnMouseOverOut@CRadioButton@UI@@MAEXXZ		; UI::CRadioButton::OnMouseOverOut
PUBLIC	??_GCRadioButton@UI@@UAEPAXI@Z			; UI::CRadioButton::`scalar deleting destructor'
PUBLIC	??0CToggleButton@UI@@QAE@PAU_object@@@Z		; UI::CToggleButton::CToggleButton
PUBLIC	??1CToggleButton@UI@@UAE@XZ			; UI::CToggleButton::~CToggleButton
PUBLIC	?OnMouseLeftButtonDown@CToggleButton@UI@@MAEHXZ	; UI::CToggleButton::OnMouseLeftButtonDown
PUBLIC	?OnMouseLeftButtonUp@CToggleButton@UI@@MAEHXZ	; UI::CToggleButton::OnMouseLeftButtonUp
PUBLIC	?OnMouseOverIn@CToggleButton@UI@@MAEXXZ		; UI::CToggleButton::OnMouseOverIn
PUBLIC	?OnMouseOverOut@CToggleButton@UI@@MAEXXZ	; UI::CToggleButton::OnMouseOverOut
PUBLIC	??_GCToggleButton@UI@@UAEPAXI@Z			; UI::CToggleButton::`scalar deleting destructor'
PUBLIC	??0CDragButton@UI@@QAE@PAU_object@@@Z		; UI::CDragButton::CDragButton
PUBLIC	??1CDragButton@UI@@UAE@XZ			; UI::CDragButton::~CDragButton
PUBLIC	?SetRestrictMovementArea@CDragButton@UI@@QAEXHHHH@Z ; UI::CDragButton::SetRestrictMovementArea
PUBLIC	?OnChangePosition@CDragButton@UI@@MAEXXZ	; UI::CDragButton::OnChangePosition
PUBLIC	?OnMouseOverIn@CDragButton@UI@@MAEXXZ		; UI::CDragButton::OnMouseOverIn
PUBLIC	?OnMouseOverOut@CDragButton@UI@@MAEXXZ		; UI::CDragButton::OnMouseOverOut
PUBLIC	??_GCDragButton@UI@@UAEPAXI@Z			; UI::CDragButton::`scalar deleting destructor'
PUBLIC	??$mem_fun@JVCWindow@UI@@@std@@YA?AV?$mem_fun_t@JVCWindow@UI@@@0@P8CWindow@UI@@AEJXZ@Z ; std::mem_fun<long,UI::CWindow>
PUBLIC	??1?$shared_ptr@VCRenderTarget@@@std@@QAE@XZ	; std::shared_ptr<CRenderTarget>::~shared_ptr<CRenderTarget>
PUBLIC	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@QBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??$_Emplace_reallocate@ABQAVCGraphicImageInstance@@@?$vector@PAVCGraphicImageInstance@@V?$allocator@PAVCGraphicImageInstance@@@std@@@std@@QAEPAPAVCGraphicImageInstance@@QAPAV2@ABQAV2@@Z ; std::vector<CGraphicImageInstance *,std::allocator<CGraphicImageInstance *> >::_Emplace_reallocate<CGraphicImageInstance * const &>
PUBLIC	??1?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@PAVCWindow@UI@@PAX@std@@@std@@@std@@QAE@XZ ; std::_Alloc_construct_ptr<std::allocator<std::_List_node<UI::CWindow *,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_List_node<UI::CWindow *,void *> > >
PUBLIC	??$_Copy_memmove@PAPAVCGraphicImageInstance@@PAPAV1@@std@@YAPAPAVCGraphicImageInstance@@PAPAV1@00@Z ; std::_Copy_memmove<CGraphicImageInstance * *,CGraphicImageInstance * *>
PUBLIC	??_7exception@std@@6B@				; std::exception::`vftable'
PUBLIC	??_C@_0BC@EOODALEL@Unknown?5exception@		; `string'
PUBLIC	??_7bad_alloc@std@@6B@				; std::bad_alloc::`vftable'
PUBLIC	??_7bad_array_new_length@std@@6B@		; std::bad_array_new_length::`vftable'
PUBLIC	??_C@_0BF@KINCDENJ@bad?5array?5new?5length@	; `string'
PUBLIC	__TI3?AVbad_array_new_length@std@@
PUBLIC	__CTA3?AVbad_array_new_length@std@@
PUBLIC	??_R0?AVbad_array_new_length@std@@@8		; std::bad_array_new_length `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QAE@ABV01@@Z12
PUBLIC	??_R0?AVbad_alloc@std@@@8			; std::bad_alloc `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
PUBLIC	??_R0?AVexception@std@@@8			; std::exception `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
PUBLIC	??_C@_0BA@JFNIOLAK@string?5too?5long@		; `string'
PUBLIC	??_C@_00CNPNBAHC@@				; `string'
PUBLIC	?ms_singleton@?$CSingleton@VCResourceManager@@@@0PAVCResourceManager@@A ; CSingleton<CResourceManager>::ms_singleton
PUBLIC	?ms_singleton@?$CSingleton@VCPythonGraphic@@@@0PAVCPythonGraphic@@A ; CSingleton<CPythonGraphic>::ms_singleton
PUBLIC	?ms_singleton@?$CSingleton@VCWindowManager@UI@@@@0PAVCWindowManager@UI@@A ; CSingleton<UI::CWindowManager>::ms_singleton
PUBLIC	??_C@_0BA@FOIKENOD@vector?5too?5long@		; `string'
PUBLIC	??_R4exception@std@@6B@				; std::exception::`RTTI Complete Object Locator'
PUBLIC	??_R3exception@std@@8				; std::exception::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2exception@std@@8				; std::exception::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@exception@std@@8			; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4bad_alloc@std@@6B@				; std::bad_alloc::`RTTI Complete Object Locator'
PUBLIC	??_R3bad_alloc@std@@8				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2bad_alloc@std@@8				; std::bad_alloc::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@bad_alloc@std@@8			; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4bad_array_new_length@std@@6B@		; std::bad_array_new_length::`RTTI Complete Object Locator'
PUBLIC	??_R3bad_array_new_length@std@@8		; std::bad_array_new_length::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2bad_array_new_length@std@@8		; std::bad_array_new_length::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@bad_array_new_length@std@@8	; std::bad_array_new_length::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_7CWindow@UI@@6B@				; UI::CWindow::`vftable'
PUBLIC	??_7CRenderTarget@UI@@6B@			; UI::CRenderTarget::`vftable'
PUBLIC	??_7CBox@UI@@6B@				; UI::CBox::`vftable'
PUBLIC	??_7CBar@UI@@6B@				; UI::CBar::`vftable'
PUBLIC	??_7CLine@UI@@6B@				; UI::CLine::`vftable'
PUBLIC	??_7CBar3D@UI@@6B@				; UI::CBar3D::`vftable'
PUBLIC	??_7CTextLine@UI@@6B@				; UI::CTextLine::`vftable'
PUBLIC	??_7CNumberLine@UI@@6B@				; UI::CNumberLine::`vftable'
PUBLIC	??_7CImageBox@UI@@6B@				; UI::CImageBox::`vftable'
PUBLIC	??_7CMarkBox@UI@@6B@				; UI::CMarkBox::`vftable'
PUBLIC	??_7CExpandedImageBox@UI@@6B@			; UI::CExpandedImageBox::`vftable'
PUBLIC	??_7CAniImageBox@UI@@6B@			; UI::CAniImageBox::`vftable'
PUBLIC	??_7CButton@UI@@6B@				; UI::CButton::`vftable'
PUBLIC	??_7CRadioButton@UI@@6B@			; UI::CRadioButton::`vftable'
PUBLIC	??_7CToggleButton@UI@@6B@			; UI::CToggleButton::`vftable'
PUBLIC	??_7CDragButton@UI@@6B@				; UI::CDragButton::`vftable'
PUBLIC	?ms_singleton@?$CSingleton@VCRenderTargetManager@@@@0PAVCRenderTargetManager@@A ; CSingleton<CRenderTargetManager>::ms_singleton
PUBLIC	??_C@_07EFPFKGGH@CWindow@			; `string'
PUBLIC	??_C@_08DCJEAFK@OnUpdate@			; `string'
PUBLIC	??_C@_08PAJMEILO@OnRender@			; `string'
PUBLIC	??_C@_0DA@NEIGMJK@?5CWindow?3?3SetTop?5?9?5Failed?5to?5fi@ ; `string'
PUBLIC	??_C@_04INACLLOK@?$CIii?$CJ@			; `string'
PUBLIC	??_C@_0M@ECAEGPAI@OnMouseDrag@			; `string'
PUBLIC	??_C@_0N@PFKNBOJP@OnMoveWindow@			; `string'
PUBLIC	??_C@_0L@GIMNGBCD@OnSetFocus@			; `string'
PUBLIC	??_C@_0M@CEGPCFGM@OnKillFocus@			; `string'
PUBLIC	??_C@_0O@JKDAFDCC@OnMouseOverIn@		; `string'
PUBLIC	??_C@_0P@KLLBNOAI@OnMouseOverOut@		; `string'
PUBLIC	??_C@_06OCNPCIEO@OnDrop@			; `string'
PUBLIC	??_C@_05LOOKECNH@OnTop@				; `string'
PUBLIC	??_C@_0M@DGOFHNMI@OnIMEUpdate@			; `string'
PUBLIC	??_C@_0BG@DNDHJHBD@OnMouseLeftButtonDown@	; `string'
PUBLIC	??_C@_0BE@MJALGMGL@OnMouseLeftButtonUp@		; `string'
PUBLIC	??_C@_0BN@KEKGIMMP@OnMouseLeftButtonDoubleClick@ ; `string'
PUBLIC	??_C@_0BH@ELECPAKA@OnMouseRightButtonDown@	; `string'
PUBLIC	??_C@_0BF@FDIGHPIH@OnMouseRightButtonUp@	; `string'
PUBLIC	??_C@_0BO@NPKMHGOP@OnMouseRightButtonDoubleClick@ ; `string'
PUBLIC	??_C@_0BI@LKFMHNKP@OnMouseMiddleButtonDown@	; `string'
PUBLIC	??_C@_0BG@IGAJCEHG@OnMouseMiddleButtonUp@	; `string'
PUBLIC	??_C@_03LOLGAKJN@?$CIl?$CJ@			; `string'
PUBLIC	??_C@_0BA@PDHAFBGB@OnRunMouseWheel@		; `string'
PUBLIC	??_C@_02NAHCJHOC@UP@				; `string'
PUBLIC	??_C@_04FANAOELO@DOWN@				; `string'
PUBLIC	??_C@_03KJMMOONA@?$CIs?$CJ@			; `string'
PUBLIC	??_C@_0BD@GNNJJHBO@OnMouseWheelScroll@		; `string'
PUBLIC	??_C@_08HFELFLOI@OnIMETab@			; `string'
PUBLIC	??_C@_0M@PILLCCFN@OnIMEReturn@			; `string'
PUBLIC	??_C@_03LIHNMIHG@?$CIi?$CJ@			; `string'
PUBLIC	??_C@_0N@BMPDGPBH@OnIMEKeyDown@			; `string'
PUBLIC	??_C@_0BE@EHKLBB@OnIMEChangeCodePage@		; `string'
PUBLIC	??_C@_0BH@HEDPBKEK@OnIMEOpenCandidateList@	; `string'
PUBLIC	??_C@_0BI@LOIKIPJ@OnIMECloseCandidateList@	; `string'
PUBLIC	??_C@_0BE@KDCLEDDC@OnIMEOpenReadingWnd@		; `string'
PUBLIC	??_C@_0BF@DEOILJPB@OnIMECloseReadingWnd@	; `string'
PUBLIC	??_C@_09CMHFBEC@OnKeyDown@			; `string'
PUBLIC	??_C@_07NGNLLPEG@OnKeyUp@			; `string'
PUBLIC	??_C@_0BB@HCFLIMGH@OnPressEscapeKey@		; `string'
PUBLIC	??_C@_0P@KEJGBDKK@OnPressExitKey@		; `string'
PUBLIC	??_C@_0DN@LJLFOKKA@CRenderTargetManager?5could?5not?5@ ; `string'
PUBLIC	??_C@_0CC@GOJDIMPB@SetRenderingRect?5?9?$DO?5target?5empt@ ; `string'
PUBLIC	??_C@_06ICLMADCA@CBar3D@			; `string'
PUBLIC	??_C@_04FAHLGLIA@?4fnt@				; `string'
PUBLIC	??_C@_0BO@GPCBPBEE@d?3?1ymir?5work?1ui?1game?1taskbar?1@ ; `string'
PUBLIC	??_C@_09GPLBLMNE@colon?4sub@			; `string'
PUBLIC	??_C@_0BB@POBNNLPJ@questionmark?4sub@		; `string'
PUBLIC	??_C@_09JMLAABIP@slash?4sub@			; `string'
PUBLIC	??_C@_0M@MHAKIBOD@percent?4sub@			; `string'
PUBLIC	??_C@_08FPHNCABK@plus?4sub@			; `string'
PUBLIC	??_C@_05PINNHPFB@m?4sub@			; `string'
PUBLIC	??_C@_05FJEGFMDH@g?4sub@			; `string'
PUBLIC	??_C@_05EHJFGOBE@p?4sub@			; `string'
PUBLIC	??_C@_04DLFHDFGL@?4sub@				; `string'
PUBLIC	??_C@_0BC@DJHPPMGJ@CExpandedImageBox@		; `string'
PUBLIC	??_C@_0N@LBBHECOO@CAniImageBox@			; `string'
PUBLIC	??_C@_0L@LBHHAGOH@OnEndFrame@			; `string'
PUBLIC	??_C@_09MFFHPOPB@CallEvent@			; `string'
PUBLIC	??_C@_09FJAHACEO@DownEvent@			; `string'
PUBLIC	??_C@_0M@LEFCMAKP@ShowToolTip@			; `string'
PUBLIC	??_C@_0M@HCIAMHJN@HideToolTip@			; `string'
PUBLIC	??_C@_0L@HGABHAMN@OnToggleUp@			; `string'
PUBLIC	??_C@_0N@NBGLGPDJ@OnToggleDown@			; `string'
PUBLIC	??_C@_06GJPOLLJG@OnMove@			; `string'
PUBLIC	??_C@_0O@NKNMEGII@list?5too?5long@		; `string'
PUBLIC	??_R4CWindow@UI@@6B@				; UI::CWindow::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCWindow@UI@@@8				; UI::CWindow `RTTI Type Descriptor'
PUBLIC	??_R3CWindow@UI@@8				; UI::CWindow::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CWindow@UI@@8				; UI::CWindow::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CWindow@UI@@8			; UI::CWindow::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4CRenderTarget@UI@@6B@			; UI::CRenderTarget::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCRenderTarget@UI@@@8			; UI::CRenderTarget `RTTI Type Descriptor'
PUBLIC	??_R3CRenderTarget@UI@@8			; UI::CRenderTarget::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CRenderTarget@UI@@8			; UI::CRenderTarget::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CRenderTarget@UI@@8		; UI::CRenderTarget::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4CBox@UI@@6B@				; UI::CBox::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCBox@UI@@@8				; UI::CBox `RTTI Type Descriptor'
PUBLIC	??_R3CBox@UI@@8					; UI::CBox::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CBox@UI@@8					; UI::CBox::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CBox@UI@@8			; UI::CBox::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4CBar@UI@@6B@				; UI::CBar::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCBar@UI@@@8				; UI::CBar `RTTI Type Descriptor'
PUBLIC	??_R3CBar@UI@@8					; UI::CBar::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CBar@UI@@8					; UI::CBar::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CBar@UI@@8			; UI::CBar::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4CLine@UI@@6B@				; UI::CLine::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCLine@UI@@@8				; UI::CLine `RTTI Type Descriptor'
PUBLIC	??_R3CLine@UI@@8				; UI::CLine::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CLine@UI@@8				; UI::CLine::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CLine@UI@@8			; UI::CLine::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4CBar3D@UI@@6B@				; UI::CBar3D::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCBar3D@UI@@@8				; UI::CBar3D `RTTI Type Descriptor'
PUBLIC	??_R3CBar3D@UI@@8				; UI::CBar3D::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CBar3D@UI@@8				; UI::CBar3D::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CBar3D@UI@@8			; UI::CBar3D::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4CTextLine@UI@@6B@				; UI::CTextLine::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCTextLine@UI@@@8			; UI::CTextLine `RTTI Type Descriptor'
PUBLIC	??_R3CTextLine@UI@@8				; UI::CTextLine::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CTextLine@UI@@8				; UI::CTextLine::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CTextLine@UI@@8			; UI::CTextLine::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4CNumberLine@UI@@6B@			; UI::CNumberLine::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCNumberLine@UI@@@8			; UI::CNumberLine `RTTI Type Descriptor'
PUBLIC	??_R3CNumberLine@UI@@8				; UI::CNumberLine::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CNumberLine@UI@@8				; UI::CNumberLine::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CNumberLine@UI@@8			; UI::CNumberLine::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4CImageBox@UI@@6B@				; UI::CImageBox::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCImageBox@UI@@@8			; UI::CImageBox `RTTI Type Descriptor'
PUBLIC	??_R3CImageBox@UI@@8				; UI::CImageBox::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CImageBox@UI@@8				; UI::CImageBox::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CImageBox@UI@@8			; UI::CImageBox::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4CMarkBox@UI@@6B@				; UI::CMarkBox::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCMarkBox@UI@@@8				; UI::CMarkBox `RTTI Type Descriptor'
PUBLIC	??_R3CMarkBox@UI@@8				; UI::CMarkBox::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CMarkBox@UI@@8				; UI::CMarkBox::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CMarkBox@UI@@8			; UI::CMarkBox::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4CExpandedImageBox@UI@@6B@			; UI::CExpandedImageBox::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCExpandedImageBox@UI@@@8		; UI::CExpandedImageBox `RTTI Type Descriptor'
PUBLIC	??_R3CExpandedImageBox@UI@@8			; UI::CExpandedImageBox::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CExpandedImageBox@UI@@8			; UI::CExpandedImageBox::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CExpandedImageBox@UI@@8		; UI::CExpandedImageBox::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4CAniImageBox@UI@@6B@			; UI::CAniImageBox::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCAniImageBox@UI@@@8			; UI::CAniImageBox `RTTI Type Descriptor'
PUBLIC	??_R3CAniImageBox@UI@@8				; UI::CAniImageBox::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CAniImageBox@UI@@8				; UI::CAniImageBox::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CAniImageBox@UI@@8		; UI::CAniImageBox::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4CButton@UI@@6B@				; UI::CButton::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCButton@UI@@@8				; UI::CButton `RTTI Type Descriptor'
PUBLIC	??_R3CButton@UI@@8				; UI::CButton::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CButton@UI@@8				; UI::CButton::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CButton@UI@@8			; UI::CButton::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4CRadioButton@UI@@6B@			; UI::CRadioButton::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCRadioButton@UI@@@8			; UI::CRadioButton `RTTI Type Descriptor'
PUBLIC	??_R3CRadioButton@UI@@8				; UI::CRadioButton::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CRadioButton@UI@@8				; UI::CRadioButton::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CRadioButton@UI@@8		; UI::CRadioButton::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4CToggleButton@UI@@6B@			; UI::CToggleButton::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCToggleButton@UI@@@8			; UI::CToggleButton `RTTI Type Descriptor'
PUBLIC	??_R3CToggleButton@UI@@8			; UI::CToggleButton::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CToggleButton@UI@@8			; UI::CToggleButton::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CToggleButton@UI@@8		; UI::CToggleButton::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4CDragButton@UI@@6B@			; UI::CDragButton::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCDragButton@UI@@@8			; UI::CDragButton `RTTI Type Descriptor'
PUBLIC	??_R3CDragButton@UI@@8				; UI::CDragButton::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CDragButton@UI@@8				; UI::CDragButton::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CDragButton@UI@@8			; UI::CDragButton::`RTTI Base Class Descriptor at (0,-1,0,64)'
EXTRN	??2@YAPAXI@Z:PROC				; operator new
EXTRN	??3@YAXPAXI@Z:PROC				; operator delete
EXTRN	__Init_thread_header:PROC
EXTRN	__Init_thread_abort:PROC
EXTRN	__Init_thread_footer:PROC
EXTRN	__invalid_parameter_noinfo_noreturn:PROC
EXTRN	_rand:PROC
EXTRN	__imp__timeGetTime@0:PROC
EXTRN	___std_exception_copy:PROC
EXTRN	___std_exception_destroy:PROC
EXTRN	??_Eexception@std@@UAEPAXI@Z:PROC		; std::exception::`vector deleting destructor'
EXTRN	??_Ebad_alloc@std@@UAEPAXI@Z:PROC		; std::bad_alloc::`vector deleting destructor'
EXTRN	??_Ebad_array_new_length@std@@UAEPAXI@Z:PROC	; std::bad_array_new_length::`vector deleting destructor'
EXTRN	?_Xlength_error@std@@YAXPBD@Z:PROC		; std::_Xlength_error
EXTRN	?TraceError@@YAXPBDZZ:PROC			; TraceError
EXTRN	__imp__PyString_InternFromString:PROC
EXTRN	__imp__Py_BuildValue:PROC
EXTRN	?PyCallClassMemberFunc@@YA_NPAU_object@@PBD0@Z:PROC ; PyCallClassMemberFunc
EXTRN	?PyCallClassMemberFunc@@YA_NPAU_object@@PBD0PA_N@Z:PROC ; PyCallClassMemberFunc
EXTRN	?PyCallClassMemberFunc@@YA_NPAU_object@@PBD0PAJ@Z:PROC ; PyCallClassMemberFunc
EXTRN	?PyCallClassMemberFunc_ByPyString@@YA_NPAU_object@@00@Z:PROC ; PyCallClassMemberFunc_ByPyString
EXTRN	?GetCRC32@@YAKPBDI@Z:PROC			; GetCRC32
EXTRN	?GetDefaultCodePage@@YAKXZ:PROC			; GetDefaultCodePage
EXTRN	?IsType@CResource@@QAE_NK@Z:PROC		; CResource::IsType
EXTRN	?GetResourcePointer@CResourceManager@@QAEPAVCResource@@PBD@Z:PROC ; CResourceManager::GetResourcePointer
EXTRN	?GetTypeResourcePointer@CResourceManager@@QAEPAVCResource@@PBDH@Z:PROC ; CResourceManager::GetTypeResourcePointer
EXTRN	?IsFileExist@CResourceManager@@QAE_NPBD@Z:PROC	; CResourceManager::IsFileExist
EXTRN	?Type@CGraphicImage@@SAKXZ:PROC			; CGraphicImage::Type
EXTRN	??0CGraphicImageInstance@@QAE@XZ:PROC		; CGraphicImageInstance::CGraphicImageInstance
EXTRN	??1CGraphicImageInstance@@UAE@XZ:PROC		; CGraphicImageInstance::~CGraphicImageInstance
EXTRN	?Render@CGraphicImageInstance@@QAEXXZ:PROC	; CGraphicImageInstance::Render
EXTRN	?SetDiffuseColor@CGraphicImageInstance@@QAEXMMMM@Z:PROC ; CGraphicImageInstance::SetDiffuseColor
EXTRN	?SetPosition@CGraphicImageInstance@@QAEXMM@Z:PROC ; CGraphicImageInstance::SetPosition
EXTRN	?SetImagePointer@CGraphicImageInstance@@QAEXPAVCGraphicImage@@@Z:PROC ; CGraphicImageInstance::SetImagePointer
EXTRN	?IsEmpty@CGraphicImageInstance@@QBE_NXZ:PROC	; CGraphicImageInstance::IsEmpty
EXTRN	?GetWidth@CGraphicImageInstance@@QAEHXZ:PROC	; CGraphicImageInstance::GetWidth
EXTRN	?GetHeight@CGraphicImageInstance@@QAEHXZ:PROC	; CGraphicImageInstance::GetHeight
EXTRN	?SetScale@CGraphicImageInstance@@QAEXMM@Z:PROC	; CGraphicImageInstance::SetScale
EXTRN	?GetGraphicImagePointer@CGraphicImageInstance@@QAEPAVCGraphicImage@@XZ:PROC ; CGraphicImageInstance::GetGraphicImagePointer
EXTRN	?New@CGraphicImageInstance@@SAPAV1@XZ:PROC	; CGraphicImageInstance::New
EXTRN	?Delete@CGraphicImageInstance@@SAXPAV1@@Z:PROC	; CGraphicImageInstance::Delete
EXTRN	??0CGraphicTextInstance@@QAE@XZ:PROC		; CGraphicTextInstance::CGraphicTextInstance
EXTRN	??1CGraphicTextInstance@@UAE@XZ:PROC		; CGraphicTextInstance::~CGraphicTextInstance
EXTRN	?Destroy@CGraphicTextInstance@@QAEXXZ:PROC	; CGraphicTextInstance::Destroy
EXTRN	?Update@CGraphicTextInstance@@QAEXXZ:PROC	; CGraphicTextInstance::Update
EXTRN	?Render@CGraphicTextInstance@@QAEXPAUtagRECT@@@Z:PROC ; CGraphicTextInstance::Render
EXTRN	?ShowCursor@CGraphicTextInstance@@QAEXXZ:PROC	; CGraphicTextInstance::ShowCursor
EXTRN	?HideCursor@CGraphicTextInstance@@QAEXXZ:PROC	; CGraphicTextInstance::HideCursor
EXTRN	?SetColor@CGraphicTextInstance@@QAEXK@Z:PROC	; CGraphicTextInstance::SetColor
EXTRN	?SetColor@CGraphicTextInstance@@QAEXMMMM@Z:PROC	; CGraphicTextInstance::SetColor
EXTRN	?SetHorizonalAlign@CGraphicTextInstance@@QAEXH@Z:PROC ; CGraphicTextInstance::SetHorizonalAlign
EXTRN	?SetVerticalAlign@CGraphicTextInstance@@QAEXH@Z:PROC ; CGraphicTextInstance::SetVerticalAlign
EXTRN	?SetMax@CGraphicTextInstance@@QAEXH@Z:PROC	; CGraphicTextInstance::SetMax
EXTRN	?SetTextPointer@CGraphicTextInstance@@QAEXPAVCGraphicText@@@Z:PROC ; CGraphicTextInstance::SetTextPointer
EXTRN	?SetValue@CGraphicTextInstance@@QAEXPBDI@Z:PROC	; CGraphicTextInstance::SetValue
EXTRN	?SetPosition@CGraphicTextInstance@@QAEXMMM@Z:PROC ; CGraphicTextInstance::SetPosition
EXTRN	?SetSecret@CGraphicTextInstance@@QAEX_N@Z:PROC	; CGraphicTextInstance::SetSecret
EXTRN	?SetOutline@CGraphicTextInstance@@QAEX_N@Z:PROC	; CGraphicTextInstance::SetOutline
EXTRN	?SetFeather@CGraphicTextInstance@@QAEX_N@Z:PROC	; CGraphicTextInstance::SetFeather
EXTRN	?SetMultiLine@CGraphicTextInstance@@QAEX_N@Z:PROC ; CGraphicTextInstance::SetMultiLine
EXTRN	?SetLimitWidth@CGraphicTextInstance@@QAEXM@Z:PROC ; CGraphicTextInstance::SetLimitWidth
EXTRN	?DisableEnterToken@CGraphicTextInstance@@QAEXXZ:PROC ; CGraphicTextInstance::DisableEnterToken
EXTRN	?SetLineHeight@CGraphicTextInstance@@QAEXH@Z:PROC ; CGraphicTextInstance::SetLineHeight
EXTRN	?GetTextSize@CGraphicTextInstance@@QAEXPAH0@Z:PROC ; CGraphicTextInstance::GetTextSize
EXTRN	?GetValueStringReference@CGraphicTextInstance@@QAEABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ:PROC ; CGraphicTextInstance::GetValueStringReference
EXTRN	?GetTextLineCount@CGraphicTextInstance@@QAEGXZ:PROC ; CGraphicTextInstance::GetTextLineCount
EXTRN	?GetLineHeight@CGraphicTextInstance@@QAEGXZ:PROC ; CGraphicTextInstance::GetLineHeight
EXTRN	?PixelPositionToCharacterPosition@CGraphicTextInstance@@QAEHH@Z:PROC ; CGraphicTextInstance::PixelPositionToCharacterPosition
EXTRN	?SetImageFileName@CGraphicMarkInstance@@QAEXPBD@Z:PROC ; CGraphicMarkInstance::SetImageFileName
EXTRN	?Render@CGraphicMarkInstance@@QAEXXZ:PROC	; CGraphicMarkInstance::Render
EXTRN	?SetDiffuseColor@CGraphicMarkInstance@@QAEXMMMM@Z:PROC ; CGraphicMarkInstance::SetDiffuseColor
EXTRN	?SetPosition@CGraphicMarkInstance@@QAEXMM@Z:PROC ; CGraphicMarkInstance::SetPosition
EXTRN	?SetIndex@CGraphicMarkInstance@@QAEXI@Z:PROC	; CGraphicMarkInstance::SetIndex
EXTRN	?SetScale@CGraphicMarkInstance@@QAEXM@Z:PROC	; CGraphicMarkInstance::SetScale
EXTRN	?Load@CGraphicMarkInstance@@QAEXXZ:PROC		; CGraphicMarkInstance::Load
EXTRN	?GetWidth@CGraphicMarkInstance@@QAEHXZ:PROC	; CGraphicMarkInstance::GetWidth
EXTRN	?GetHeight@CGraphicMarkInstance@@QAEHXZ:PROC	; CGraphicMarkInstance::GetHeight
EXTRN	?New@CGraphicMarkInstance@@SAPAV1@XZ:PROC	; CGraphicMarkInstance::New
EXTRN	?Delete@CGraphicMarkInstance@@SAXPAV1@@Z:PROC	; CGraphicMarkInstance::Delete
EXTRN	?Destroy@CGraphicExpandedImageInstance@@QAEXXZ:PROC ; CGraphicExpandedImageInstance::Destroy
EXTRN	?SetOrigin@CGraphicExpandedImageInstance@@QAEXMM@Z:PROC ; CGraphicExpandedImageInstance::SetOrigin
EXTRN	?SetRotation@CGraphicExpandedImageInstance@@QAEXM@Z:PROC ; CGraphicExpandedImageInstance::SetRotation
EXTRN	?SetScale@CGraphicExpandedImageInstance@@QAEXMM@Z:PROC ; CGraphicExpandedImageInstance::SetScale
EXTRN	?SetRenderingRect@CGraphicExpandedImageInstance@@QAEXMMMM@Z:PROC ; CGraphicExpandedImageInstance::SetRenderingRect
EXTRN	?SetRenderingRectWithScale@CGraphicExpandedImageInstance@@QAEXMMMM@Z:PROC ; CGraphicExpandedImageInstance::SetRenderingRectWithScale
EXTRN	?SetRenderingMode@CGraphicExpandedImageInstance@@QAEXH@Z:PROC ; CGraphicExpandedImageInstance::SetRenderingMode
EXTRN	?New@CGraphicExpandedImageInstance@@SAPAV1@XZ:PROC ; CGraphicExpandedImageInstance::New
EXTRN	?Delete@CGraphicExpandedImageInstance@@SAXPAV1@@Z:PROC ; CGraphicExpandedImageInstance::Delete
EXTRN	?RenderLine2d@CScreen@@QAEXMMMMM@Z:PROC		; CScreen::RenderLine2d
EXTRN	?RenderBox2d@CScreen@@QAEXMMMMM@Z:PROC		; CScreen::RenderBox2d
EXTRN	?RenderBar2d@CScreen@@QAEXMMMMM@Z:PROC		; CScreen::RenderBar2d
EXTRN	?SetDiffuseColor@CScreen@@QAEXK@Z:PROC		; CScreen::SetDiffuseColor
EXTRN	?SetDiffuseColor@CScreen@@QAEXMMMM@Z:PROC	; CScreen::SetDiffuseColor
EXTRN	?GetMousePosition@CWindowManager@UI@@QAEXAAJ0@Z:PROC ; UI::CWindowManager::GetMousePosition
EXTRN	?BuildEmptyTuple@UI@@YAPAU_object@@XZ:PROC	; UI::BuildEmptyTuple
EXTRN	??_ECWindow@UI@@UAEPAXI@Z:PROC			; UI::CWindow::`vector deleting destructor'
EXTRN	??_ECRenderTarget@UI@@UAEPAXI@Z:PROC		; UI::CRenderTarget::`vector deleting destructor'
EXTRN	??_ECBox@UI@@UAEPAXI@Z:PROC			; UI::CBox::`vector deleting destructor'
EXTRN	??_ECBar@UI@@UAEPAXI@Z:PROC			; UI::CBar::`vector deleting destructor'
EXTRN	??_ECLine@UI@@UAEPAXI@Z:PROC			; UI::CLine::`vector deleting destructor'
EXTRN	??_ECBar3D@UI@@UAEPAXI@Z:PROC			; UI::CBar3D::`vector deleting destructor'
EXTRN	??_ECTextLine@UI@@UAEPAXI@Z:PROC		; UI::CTextLine::`vector deleting destructor'
EXTRN	??_ECNumberLine@UI@@UAEPAXI@Z:PROC		; UI::CNumberLine::`vector deleting destructor'
EXTRN	??_ECImageBox@UI@@UAEPAXI@Z:PROC		; UI::CImageBox::`vector deleting destructor'
EXTRN	??_ECMarkBox@UI@@UAEPAXI@Z:PROC			; UI::CMarkBox::`vector deleting destructor'
EXTRN	??_ECExpandedImageBox@UI@@UAEPAXI@Z:PROC	; UI::CExpandedImageBox::`vector deleting destructor'
EXTRN	??_ECAniImageBox@UI@@UAEPAXI@Z:PROC		; UI::CAniImageBox::`vector deleting destructor'
EXTRN	??_ECButton@UI@@UAEPAXI@Z:PROC			; UI::CButton::`vector deleting destructor'
EXTRN	??_ECRadioButton@UI@@UAEPAXI@Z:PROC		; UI::CRadioButton::`vector deleting destructor'
EXTRN	??_ECToggleButton@UI@@UAEPAXI@Z:PROC		; UI::CToggleButton::`vector deleting destructor'
EXTRN	??_ECDragButton@UI@@UAEPAXI@Z:PROC		; UI::CDragButton::`vector deleting destructor'
EXTRN	?RenderTexture@CRenderTarget@@QBEXXZ:PROC	; CRenderTarget::RenderTexture
EXTRN	?SetRenderingRect@CRenderTarget@@QBEXPAUtagRECT@@@Z:PROC ; CRenderTarget::SetRenderingRect
EXTRN	?GetRenderTarget@CRenderTargetManager@@QAE?AV?$shared_ptr@VCRenderTarget@@@std@@E@Z:PROC ; CRenderTargetManager::GetRenderTarget
EXTRN	?CreateRenderTarget@CRenderTargetManager@@QAE_NEHH@Z:PROC ; CRenderTargetManager::CreateRenderTarget
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__CxxThrowException@8:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	__ftoui3:PROC
EXTRN	_memcpy:PROC
EXTRN	_memmove:PROC
EXTRN	__Init_thread_epoch:DWORD
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	?ms_kPool@CGraphicExpandedImageInstance@@2V?$CDynamicPool@VCGraphicExpandedImageInstance@@@@A:BYTE ; CGraphicExpandedImageInstance::ms_kPool
EXTRN	___security_cookie:DWORD
EXTRN	__fltused:DWORD
EXTRN	__tls_array:DWORD
EXTRN	__tls_index:DWORD
;	COMDAT ?ms_singleton@?$CSingleton@VCResourceManager@@@@0PAVCResourceManager@@A
_BSS	SEGMENT
?ms_singleton@?$CSingleton@VCResourceManager@@@@0PAVCResourceManager@@A DD 01H DUP (?) ; CSingleton<CResourceManager>::ms_singleton
_BSS	ENDS
;	COMDAT ?ms_singleton@?$CSingleton@VCPythonGraphic@@@@0PAVCPythonGraphic@@A
_BSS	SEGMENT
?ms_singleton@?$CSingleton@VCPythonGraphic@@@@0PAVCPythonGraphic@@A DD 01H DUP (?) ; CSingleton<CPythonGraphic>::ms_singleton
_BSS	ENDS
;	COMDAT ?ms_singleton@?$CSingleton@VCWindowManager@UI@@@@0PAVCWindowManager@UI@@A
_BSS	SEGMENT
?ms_singleton@?$CSingleton@VCWindowManager@UI@@@@0PAVCWindowManager@UI@@A DD 01H DUP (?) ; CSingleton<UI::CWindowManager>::ms_singleton
_BSS	ENDS
;	COMDAT ?ms_singleton@?$CSingleton@VCRenderTargetManager@@@@0PAVCRenderTargetManager@@A
_BSS	SEGMENT
?ms_singleton@?$CSingleton@VCRenderTargetManager@@@@0PAVCRenderTargetManager@@A DD 01H DUP (?) ; CSingleton<CRenderTargetManager>::ms_singleton
_BSS	ENDS
;	COMDAT ?s_dwType@?1??Type@CWindow@UI@@SAKXZ@4KA
_BSS	SEGMENT
?s_dwType@?1??Type@CWindow@UI@@SAKXZ@4KA DD 01H DUP (?)	; `UI::CWindow::Type'::`2'::s_dwType
_BSS	ENDS
;	COMDAT ?$TSS0@?1??Type@CWindow@UI@@SAKXZ@4HA
_BSS	SEGMENT
?$TSS0@?1??Type@CWindow@UI@@SAKXZ@4HA DD 01H DUP (?)	; `UI::CWindow::Type'::`2'::$TSS0
_BSS	ENDS
;	COMDAT ?poFuncName_OnUpdate@?1??OnUpdate@CWindow@UI@@UAEXXZ@4PAU_object@@A
_BSS	SEGMENT
?poFuncName_OnUpdate@?1??OnUpdate@CWindow@UI@@UAEXXZ@4PAU_object@@A DD 01H DUP (?) ; `UI::CWindow::OnUpdate'::`2'::poFuncName_OnUpdate
_BSS	ENDS
;	COMDAT ?$TSS0@?1??OnUpdate@CWindow@UI@@UAEXXZ@4HA
_BSS	SEGMENT
?$TSS0@?1??OnUpdate@CWindow@UI@@UAEXXZ@4HA DD 01H DUP (?) ; `UI::CWindow::OnUpdate'::`2'::$TSS0
_BSS	ENDS
;	COMDAT ?s_dwType@?1??Type@CBar3D@UI@@SAKXZ@4KA
_BSS	SEGMENT
?s_dwType@?1??Type@CBar3D@UI@@SAKXZ@4KA DD 01H DUP (?)	; `UI::CBar3D::Type'::`2'::s_dwType
_BSS	ENDS
;	COMDAT ?$TSS0@?1??Type@CBar3D@UI@@SAKXZ@4HA
_BSS	SEGMENT
?$TSS0@?1??Type@CBar3D@UI@@SAKXZ@4HA DD 01H DUP (?)	; `UI::CBar3D::Type'::`2'::$TSS0
_BSS	ENDS
;	COMDAT ?s_dwType@?1??Type@CExpandedImageBox@UI@@SAKXZ@4KA
_BSS	SEGMENT
?s_dwType@?1??Type@CExpandedImageBox@UI@@SAKXZ@4KA DD 01H DUP (?) ; `UI::CExpandedImageBox::Type'::`2'::s_dwType
_BSS	ENDS
;	COMDAT ?$TSS0@?1??Type@CExpandedImageBox@UI@@SAKXZ@4HA
_BSS	SEGMENT
?$TSS0@?1??Type@CExpandedImageBox@UI@@SAKXZ@4HA DD 01H DUP (?) ; `UI::CExpandedImageBox::Type'::`2'::$TSS0
_BSS	ENDS
;	COMDAT ?s_dwType@?1??Type@CAniImageBox@UI@@SAKXZ@4KA
_BSS	SEGMENT
?s_dwType@?1??Type@CAniImageBox@UI@@SAKXZ@4KA DD 01H DUP (?) ; `UI::CAniImageBox::Type'::`2'::s_dwType
_BSS	ENDS
;	COMDAT ?$TSS0@?1??Type@CAniImageBox@UI@@SAKXZ@4HA
_BSS	SEGMENT
?$TSS0@?1??Type@CAniImageBox@UI@@SAKXZ@4HA DD 01H DUP (?) ; `UI::CAniImageBox::Type'::`2'::$TSS0
_BSS	ENDS
;	COMDAT ??_R1A@?0A@EA@CDragButton@UI@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CDragButton@UI@@8 DD FLAT:??_R0?AVCDragButton@UI@@@8 ; UI::CDragButton::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CDragButton@UI@@8
rdata$r	ENDS
;	COMDAT ??_R2CDragButton@UI@@8
rdata$r	SEGMENT
??_R2CDragButton@UI@@8 DD FLAT:??_R1A@?0A@EA@CDragButton@UI@@8 ; UI::CDragButton::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CButton@UI@@8
	DD	FLAT:??_R1A@?0A@EA@CWindow@UI@@8
rdata$r	ENDS
;	COMDAT ??_R3CDragButton@UI@@8
rdata$r	SEGMENT
??_R3CDragButton@UI@@8 DD 00H				; UI::CDragButton::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2CDragButton@UI@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCDragButton@UI@@@8
data$rs	SEGMENT
??_R0?AVCDragButton@UI@@@8 DD FLAT:??_7type_info@@6B@	; UI::CDragButton `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCDragButton@UI@@', 00H
data$rs	ENDS
;	COMDAT ??_R4CDragButton@UI@@6B@
rdata$r	SEGMENT
??_R4CDragButton@UI@@6B@ DD 00H				; UI::CDragButton::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCDragButton@UI@@@8
	DD	FLAT:??_R3CDragButton@UI@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CToggleButton@UI@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CToggleButton@UI@@8 DD FLAT:??_R0?AVCToggleButton@UI@@@8 ; UI::CToggleButton::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CToggleButton@UI@@8
rdata$r	ENDS
;	COMDAT ??_R2CToggleButton@UI@@8
rdata$r	SEGMENT
??_R2CToggleButton@UI@@8 DD FLAT:??_R1A@?0A@EA@CToggleButton@UI@@8 ; UI::CToggleButton::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CButton@UI@@8
	DD	FLAT:??_R1A@?0A@EA@CWindow@UI@@8
rdata$r	ENDS
;	COMDAT ??_R3CToggleButton@UI@@8
rdata$r	SEGMENT
??_R3CToggleButton@UI@@8 DD 00H				; UI::CToggleButton::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2CToggleButton@UI@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCToggleButton@UI@@@8
data$rs	SEGMENT
??_R0?AVCToggleButton@UI@@@8 DD FLAT:??_7type_info@@6B@	; UI::CToggleButton `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCToggleButton@UI@@', 00H
data$rs	ENDS
;	COMDAT ??_R4CToggleButton@UI@@6B@
rdata$r	SEGMENT
??_R4CToggleButton@UI@@6B@ DD 00H			; UI::CToggleButton::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCToggleButton@UI@@@8
	DD	FLAT:??_R3CToggleButton@UI@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CRadioButton@UI@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CRadioButton@UI@@8 DD FLAT:??_R0?AVCRadioButton@UI@@@8 ; UI::CRadioButton::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CRadioButton@UI@@8
rdata$r	ENDS
;	COMDAT ??_R2CRadioButton@UI@@8
rdata$r	SEGMENT
??_R2CRadioButton@UI@@8 DD FLAT:??_R1A@?0A@EA@CRadioButton@UI@@8 ; UI::CRadioButton::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CButton@UI@@8
	DD	FLAT:??_R1A@?0A@EA@CWindow@UI@@8
rdata$r	ENDS
;	COMDAT ??_R3CRadioButton@UI@@8
rdata$r	SEGMENT
??_R3CRadioButton@UI@@8 DD 00H				; UI::CRadioButton::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2CRadioButton@UI@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCRadioButton@UI@@@8
data$rs	SEGMENT
??_R0?AVCRadioButton@UI@@@8 DD FLAT:??_7type_info@@6B@	; UI::CRadioButton `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCRadioButton@UI@@', 00H
data$rs	ENDS
;	COMDAT ??_R4CRadioButton@UI@@6B@
rdata$r	SEGMENT
??_R4CRadioButton@UI@@6B@ DD 00H			; UI::CRadioButton::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCRadioButton@UI@@@8
	DD	FLAT:??_R3CRadioButton@UI@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CButton@UI@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CButton@UI@@8 DD FLAT:??_R0?AVCButton@UI@@@8 ; UI::CButton::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CButton@UI@@8
rdata$r	ENDS
;	COMDAT ??_R2CButton@UI@@8
rdata$r	SEGMENT
??_R2CButton@UI@@8 DD FLAT:??_R1A@?0A@EA@CButton@UI@@8	; UI::CButton::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CWindow@UI@@8
rdata$r	ENDS
;	COMDAT ??_R3CButton@UI@@8
rdata$r	SEGMENT
??_R3CButton@UI@@8 DD 00H				; UI::CButton::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2CButton@UI@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCButton@UI@@@8
data$rs	SEGMENT
??_R0?AVCButton@UI@@@8 DD FLAT:??_7type_info@@6B@	; UI::CButton `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCButton@UI@@', 00H
data$rs	ENDS
;	COMDAT ??_R4CButton@UI@@6B@
rdata$r	SEGMENT
??_R4CButton@UI@@6B@ DD 00H				; UI::CButton::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCButton@UI@@@8
	DD	FLAT:??_R3CButton@UI@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CAniImageBox@UI@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CAniImageBox@UI@@8 DD FLAT:??_R0?AVCAniImageBox@UI@@@8 ; UI::CAniImageBox::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CAniImageBox@UI@@8
rdata$r	ENDS
;	COMDAT ??_R2CAniImageBox@UI@@8
rdata$r	SEGMENT
??_R2CAniImageBox@UI@@8 DD FLAT:??_R1A@?0A@EA@CAniImageBox@UI@@8 ; UI::CAniImageBox::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CWindow@UI@@8
rdata$r	ENDS
;	COMDAT ??_R3CAniImageBox@UI@@8
rdata$r	SEGMENT
??_R3CAniImageBox@UI@@8 DD 00H				; UI::CAniImageBox::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2CAniImageBox@UI@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCAniImageBox@UI@@@8
data$rs	SEGMENT
??_R0?AVCAniImageBox@UI@@@8 DD FLAT:??_7type_info@@6B@	; UI::CAniImageBox `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCAniImageBox@UI@@', 00H
data$rs	ENDS
;	COMDAT ??_R4CAniImageBox@UI@@6B@
rdata$r	SEGMENT
??_R4CAniImageBox@UI@@6B@ DD 00H			; UI::CAniImageBox::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCAniImageBox@UI@@@8
	DD	FLAT:??_R3CAniImageBox@UI@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CExpandedImageBox@UI@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CExpandedImageBox@UI@@8 DD FLAT:??_R0?AVCExpandedImageBox@UI@@@8 ; UI::CExpandedImageBox::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CExpandedImageBox@UI@@8
rdata$r	ENDS
;	COMDAT ??_R2CExpandedImageBox@UI@@8
rdata$r	SEGMENT
??_R2CExpandedImageBox@UI@@8 DD FLAT:??_R1A@?0A@EA@CExpandedImageBox@UI@@8 ; UI::CExpandedImageBox::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CImageBox@UI@@8
	DD	FLAT:??_R1A@?0A@EA@CWindow@UI@@8
rdata$r	ENDS
;	COMDAT ??_R3CExpandedImageBox@UI@@8
rdata$r	SEGMENT
??_R3CExpandedImageBox@UI@@8 DD 00H			; UI::CExpandedImageBox::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2CExpandedImageBox@UI@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCExpandedImageBox@UI@@@8
data$rs	SEGMENT
??_R0?AVCExpandedImageBox@UI@@@8 DD FLAT:??_7type_info@@6B@ ; UI::CExpandedImageBox `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCExpandedImageBox@UI@@', 00H
data$rs	ENDS
;	COMDAT ??_R4CExpandedImageBox@UI@@6B@
rdata$r	SEGMENT
??_R4CExpandedImageBox@UI@@6B@ DD 00H			; UI::CExpandedImageBox::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCExpandedImageBox@UI@@@8
	DD	FLAT:??_R3CExpandedImageBox@UI@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CMarkBox@UI@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CMarkBox@UI@@8 DD FLAT:??_R0?AVCMarkBox@UI@@@8 ; UI::CMarkBox::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CMarkBox@UI@@8
rdata$r	ENDS
;	COMDAT ??_R2CMarkBox@UI@@8
rdata$r	SEGMENT
??_R2CMarkBox@UI@@8 DD FLAT:??_R1A@?0A@EA@CMarkBox@UI@@8 ; UI::CMarkBox::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CWindow@UI@@8
rdata$r	ENDS
;	COMDAT ??_R3CMarkBox@UI@@8
rdata$r	SEGMENT
??_R3CMarkBox@UI@@8 DD 00H				; UI::CMarkBox::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2CMarkBox@UI@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCMarkBox@UI@@@8
data$rs	SEGMENT
??_R0?AVCMarkBox@UI@@@8 DD FLAT:??_7type_info@@6B@	; UI::CMarkBox `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCMarkBox@UI@@', 00H
data$rs	ENDS
;	COMDAT ??_R4CMarkBox@UI@@6B@
rdata$r	SEGMENT
??_R4CMarkBox@UI@@6B@ DD 00H				; UI::CMarkBox::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCMarkBox@UI@@@8
	DD	FLAT:??_R3CMarkBox@UI@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CImageBox@UI@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CImageBox@UI@@8 DD FLAT:??_R0?AVCImageBox@UI@@@8 ; UI::CImageBox::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CImageBox@UI@@8
rdata$r	ENDS
;	COMDAT ??_R2CImageBox@UI@@8
rdata$r	SEGMENT
??_R2CImageBox@UI@@8 DD FLAT:??_R1A@?0A@EA@CImageBox@UI@@8 ; UI::CImageBox::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CWindow@UI@@8
rdata$r	ENDS
;	COMDAT ??_R3CImageBox@UI@@8
rdata$r	SEGMENT
??_R3CImageBox@UI@@8 DD 00H				; UI::CImageBox::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2CImageBox@UI@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCImageBox@UI@@@8
data$rs	SEGMENT
??_R0?AVCImageBox@UI@@@8 DD FLAT:??_7type_info@@6B@	; UI::CImageBox `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCImageBox@UI@@', 00H
data$rs	ENDS
;	COMDAT ??_R4CImageBox@UI@@6B@
rdata$r	SEGMENT
??_R4CImageBox@UI@@6B@ DD 00H				; UI::CImageBox::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCImageBox@UI@@@8
	DD	FLAT:??_R3CImageBox@UI@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CNumberLine@UI@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CNumberLine@UI@@8 DD FLAT:??_R0?AVCNumberLine@UI@@@8 ; UI::CNumberLine::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CNumberLine@UI@@8
rdata$r	ENDS
;	COMDAT ??_R2CNumberLine@UI@@8
rdata$r	SEGMENT
??_R2CNumberLine@UI@@8 DD FLAT:??_R1A@?0A@EA@CNumberLine@UI@@8 ; UI::CNumberLine::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CWindow@UI@@8
rdata$r	ENDS
;	COMDAT ??_R3CNumberLine@UI@@8
rdata$r	SEGMENT
??_R3CNumberLine@UI@@8 DD 00H				; UI::CNumberLine::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2CNumberLine@UI@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCNumberLine@UI@@@8
data$rs	SEGMENT
??_R0?AVCNumberLine@UI@@@8 DD FLAT:??_7type_info@@6B@	; UI::CNumberLine `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCNumberLine@UI@@', 00H
data$rs	ENDS
;	COMDAT ??_R4CNumberLine@UI@@6B@
rdata$r	SEGMENT
??_R4CNumberLine@UI@@6B@ DD 00H				; UI::CNumberLine::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCNumberLine@UI@@@8
	DD	FLAT:??_R3CNumberLine@UI@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CTextLine@UI@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CTextLine@UI@@8 DD FLAT:??_R0?AVCTextLine@UI@@@8 ; UI::CTextLine::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CTextLine@UI@@8
rdata$r	ENDS
;	COMDAT ??_R2CTextLine@UI@@8
rdata$r	SEGMENT
??_R2CTextLine@UI@@8 DD FLAT:??_R1A@?0A@EA@CTextLine@UI@@8 ; UI::CTextLine::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CWindow@UI@@8
rdata$r	ENDS
;	COMDAT ??_R3CTextLine@UI@@8
rdata$r	SEGMENT
??_R3CTextLine@UI@@8 DD 00H				; UI::CTextLine::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2CTextLine@UI@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCTextLine@UI@@@8
data$rs	SEGMENT
??_R0?AVCTextLine@UI@@@8 DD FLAT:??_7type_info@@6B@	; UI::CTextLine `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCTextLine@UI@@', 00H
data$rs	ENDS
;	COMDAT ??_R4CTextLine@UI@@6B@
rdata$r	SEGMENT
??_R4CTextLine@UI@@6B@ DD 00H				; UI::CTextLine::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCTextLine@UI@@@8
	DD	FLAT:??_R3CTextLine@UI@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CBar3D@UI@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CBar3D@UI@@8 DD FLAT:??_R0?AVCBar3D@UI@@@8 ; UI::CBar3D::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CBar3D@UI@@8
rdata$r	ENDS
;	COMDAT ??_R2CBar3D@UI@@8
rdata$r	SEGMENT
??_R2CBar3D@UI@@8 DD FLAT:??_R1A@?0A@EA@CBar3D@UI@@8	; UI::CBar3D::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CWindow@UI@@8
rdata$r	ENDS
;	COMDAT ??_R3CBar3D@UI@@8
rdata$r	SEGMENT
??_R3CBar3D@UI@@8 DD 00H				; UI::CBar3D::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2CBar3D@UI@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCBar3D@UI@@@8
data$rs	SEGMENT
??_R0?AVCBar3D@UI@@@8 DD FLAT:??_7type_info@@6B@	; UI::CBar3D `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCBar3D@UI@@', 00H
data$rs	ENDS
;	COMDAT ??_R4CBar3D@UI@@6B@
rdata$r	SEGMENT
??_R4CBar3D@UI@@6B@ DD 00H				; UI::CBar3D::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCBar3D@UI@@@8
	DD	FLAT:??_R3CBar3D@UI@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CLine@UI@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CLine@UI@@8 DD FLAT:??_R0?AVCLine@UI@@@8	; UI::CLine::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CLine@UI@@8
rdata$r	ENDS
;	COMDAT ??_R2CLine@UI@@8
rdata$r	SEGMENT
??_R2CLine@UI@@8 DD FLAT:??_R1A@?0A@EA@CLine@UI@@8	; UI::CLine::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CWindow@UI@@8
rdata$r	ENDS
;	COMDAT ??_R3CLine@UI@@8
rdata$r	SEGMENT
??_R3CLine@UI@@8 DD 00H					; UI::CLine::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2CLine@UI@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCLine@UI@@@8
data$rs	SEGMENT
??_R0?AVCLine@UI@@@8 DD FLAT:??_7type_info@@6B@		; UI::CLine `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCLine@UI@@', 00H
data$rs	ENDS
;	COMDAT ??_R4CLine@UI@@6B@
rdata$r	SEGMENT
??_R4CLine@UI@@6B@ DD 00H				; UI::CLine::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCLine@UI@@@8
	DD	FLAT:??_R3CLine@UI@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CBar@UI@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CBar@UI@@8 DD FLAT:??_R0?AVCBar@UI@@@8	; UI::CBar::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CBar@UI@@8
rdata$r	ENDS
;	COMDAT ??_R2CBar@UI@@8
rdata$r	SEGMENT
??_R2CBar@UI@@8 DD FLAT:??_R1A@?0A@EA@CBar@UI@@8	; UI::CBar::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CWindow@UI@@8
rdata$r	ENDS
;	COMDAT ??_R3CBar@UI@@8
rdata$r	SEGMENT
??_R3CBar@UI@@8 DD 00H					; UI::CBar::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2CBar@UI@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCBar@UI@@@8
data$rs	SEGMENT
??_R0?AVCBar@UI@@@8 DD FLAT:??_7type_info@@6B@		; UI::CBar `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCBar@UI@@', 00H
data$rs	ENDS
;	COMDAT ??_R4CBar@UI@@6B@
rdata$r	SEGMENT
??_R4CBar@UI@@6B@ DD 00H				; UI::CBar::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCBar@UI@@@8
	DD	FLAT:??_R3CBar@UI@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CBox@UI@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CBox@UI@@8 DD FLAT:??_R0?AVCBox@UI@@@8	; UI::CBox::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CBox@UI@@8
rdata$r	ENDS
;	COMDAT ??_R2CBox@UI@@8
rdata$r	SEGMENT
??_R2CBox@UI@@8 DD FLAT:??_R1A@?0A@EA@CBox@UI@@8	; UI::CBox::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CWindow@UI@@8
rdata$r	ENDS
;	COMDAT ??_R3CBox@UI@@8
rdata$r	SEGMENT
??_R3CBox@UI@@8 DD 00H					; UI::CBox::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2CBox@UI@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCBox@UI@@@8
data$rs	SEGMENT
??_R0?AVCBox@UI@@@8 DD FLAT:??_7type_info@@6B@		; UI::CBox `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCBox@UI@@', 00H
data$rs	ENDS
;	COMDAT ??_R4CBox@UI@@6B@
rdata$r	SEGMENT
??_R4CBox@UI@@6B@ DD 00H				; UI::CBox::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCBox@UI@@@8
	DD	FLAT:??_R3CBox@UI@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CRenderTarget@UI@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CRenderTarget@UI@@8 DD FLAT:??_R0?AVCRenderTarget@UI@@@8 ; UI::CRenderTarget::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CRenderTarget@UI@@8
rdata$r	ENDS
;	COMDAT ??_R2CRenderTarget@UI@@8
rdata$r	SEGMENT
??_R2CRenderTarget@UI@@8 DD FLAT:??_R1A@?0A@EA@CRenderTarget@UI@@8 ; UI::CRenderTarget::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CWindow@UI@@8
rdata$r	ENDS
;	COMDAT ??_R3CRenderTarget@UI@@8
rdata$r	SEGMENT
??_R3CRenderTarget@UI@@8 DD 00H				; UI::CRenderTarget::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2CRenderTarget@UI@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCRenderTarget@UI@@@8
data$rs	SEGMENT
??_R0?AVCRenderTarget@UI@@@8 DD FLAT:??_7type_info@@6B@	; UI::CRenderTarget `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCRenderTarget@UI@@', 00H
data$rs	ENDS
;	COMDAT ??_R4CRenderTarget@UI@@6B@
rdata$r	SEGMENT
??_R4CRenderTarget@UI@@6B@ DD 00H			; UI::CRenderTarget::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCRenderTarget@UI@@@8
	DD	FLAT:??_R3CRenderTarget@UI@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CWindow@UI@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CWindow@UI@@8 DD FLAT:??_R0?AVCWindow@UI@@@8 ; UI::CWindow::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CWindow@UI@@8
rdata$r	ENDS
;	COMDAT ??_R2CWindow@UI@@8
rdata$r	SEGMENT
??_R2CWindow@UI@@8 DD FLAT:??_R1A@?0A@EA@CWindow@UI@@8	; UI::CWindow::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3CWindow@UI@@8
rdata$r	SEGMENT
??_R3CWindow@UI@@8 DD 00H				; UI::CWindow::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2CWindow@UI@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCWindow@UI@@@8
data$rs	SEGMENT
??_R0?AVCWindow@UI@@@8 DD FLAT:??_7type_info@@6B@	; UI::CWindow `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCWindow@UI@@', 00H
data$rs	ENDS
;	COMDAT ??_R4CWindow@UI@@6B@
rdata$r	SEGMENT
??_R4CWindow@UI@@6B@ DD 00H				; UI::CWindow::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCWindow@UI@@@8
	DD	FLAT:??_R3CWindow@UI@@8
rdata$r	ENDS
;	COMDAT ??_C@_0O@NKNMEGII@list?5too?5long@
CONST	SEGMENT
??_C@_0O@NKNMEGII@list?5too?5long@ DB 'list too long', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_06GJPOLLJG@OnMove@
CONST	SEGMENT
??_C@_06GJPOLLJG@OnMove@ DB 'OnMove', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@NBGLGPDJ@OnToggleDown@
CONST	SEGMENT
??_C@_0N@NBGLGPDJ@OnToggleDown@ DB 'OnToggleDown', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@HGABHAMN@OnToggleUp@
CONST	SEGMENT
??_C@_0L@HGABHAMN@OnToggleUp@ DB 'OnToggleUp', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@HCIAMHJN@HideToolTip@
CONST	SEGMENT
??_C@_0M@HCIAMHJN@HideToolTip@ DB 'HideToolTip', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@LEFCMAKP@ShowToolTip@
CONST	SEGMENT
??_C@_0M@LEFCMAKP@ShowToolTip@ DB 'ShowToolTip', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_09FJAHACEO@DownEvent@
CONST	SEGMENT
??_C@_09FJAHACEO@DownEvent@ DB 'DownEvent', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_09MFFHPOPB@CallEvent@
CONST	SEGMENT
??_C@_09MFFHPOPB@CallEvent@ DB 'CallEvent', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@LBHHAGOH@OnEndFrame@
CONST	SEGMENT
??_C@_0L@LBHHAGOH@OnEndFrame@ DB 'OnEndFrame', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@LBBHECOO@CAniImageBox@
CONST	SEGMENT
??_C@_0N@LBBHECOO@CAniImageBox@ DB 'CAniImageBox', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@DJHPPMGJ@CExpandedImageBox@
CONST	SEGMENT
??_C@_0BC@DJHPPMGJ@CExpandedImageBox@ DB 'CExpandedImageBox', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_04DLFHDFGL@?4sub@
CONST	SEGMENT
??_C@_04DLFHDFGL@?4sub@ DB '.sub', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_05EHJFGOBE@p?4sub@
CONST	SEGMENT
??_C@_05EHJFGOBE@p?4sub@ DB 'p.sub', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_05FJEGFMDH@g?4sub@
CONST	SEGMENT
??_C@_05FJEGFMDH@g?4sub@ DB 'g.sub', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_05PINNHPFB@m?4sub@
CONST	SEGMENT
??_C@_05PINNHPFB@m?4sub@ DB 'm.sub', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_08FPHNCABK@plus?4sub@
CONST	SEGMENT
??_C@_08FPHNCABK@plus?4sub@ DB 'plus.sub', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@MHAKIBOD@percent?4sub@
CONST	SEGMENT
??_C@_0M@MHAKIBOD@percent?4sub@ DB 'percent.sub', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_09JMLAABIP@slash?4sub@
CONST	SEGMENT
??_C@_09JMLAABIP@slash?4sub@ DB 'slash.sub', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@POBNNLPJ@questionmark?4sub@
CONST	SEGMENT
??_C@_0BB@POBNNLPJ@questionmark?4sub@ DB 'questionmark.sub', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_09GPLBLMNE@colon?4sub@
CONST	SEGMENT
??_C@_09GPLBLMNE@colon?4sub@ DB 'colon.sub', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BO@GPCBPBEE@d?3?1ymir?5work?1ui?1game?1taskbar?1@
CONST	SEGMENT
??_C@_0BO@GPCBPBEE@d?3?1ymir?5work?1ui?1game?1taskbar?1@ DB 'd:/ymir work'
	DB	'/ui/game/taskbar/', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_04FAHLGLIA@?4fnt@
CONST	SEGMENT
??_C@_04FAHLGLIA@?4fnt@ DB '.fnt', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_06ICLMADCA@CBar3D@
CONST	SEGMENT
??_C@_06ICLMADCA@CBar3D@ DB 'CBar3D', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CC@GOJDIMPB@SetRenderingRect?5?9?$DO?5target?5empt@
CONST	SEGMENT
??_C@_0CC@GOJDIMPB@SetRenderingRect?5?9?$DO?5target?5empt@ DB 'SetRenderi'
	DB	'ngRect -> target empty!', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0DN@LJLFOKKA@CRenderTargetManager?5could?5not?5@
CONST	SEGMENT
??_C@_0DN@LJLFOKKA@CRenderTargetManager?5could?5not?5@ DB 'CRenderTargetM'
	DB	'anager could not create the texture. w %d h %d', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@KEJGBDKK@OnPressExitKey@
CONST	SEGMENT
??_C@_0P@KEJGBDKK@OnPressExitKey@ DB 'OnPressExitKey', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@HCFLIMGH@OnPressEscapeKey@
CONST	SEGMENT
??_C@_0BB@HCFLIMGH@OnPressEscapeKey@ DB 'OnPressEscapeKey', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_07NGNLLPEG@OnKeyUp@
CONST	SEGMENT
??_C@_07NGNLLPEG@OnKeyUp@ DB 'OnKeyUp', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_09CMHFBEC@OnKeyDown@
CONST	SEGMENT
??_C@_09CMHFBEC@OnKeyDown@ DB 'OnKeyDown', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@DEOILJPB@OnIMECloseReadingWnd@
CONST	SEGMENT
??_C@_0BF@DEOILJPB@OnIMECloseReadingWnd@ DB 'OnIMECloseReadingWnd', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@KDCLEDDC@OnIMEOpenReadingWnd@
CONST	SEGMENT
??_C@_0BE@KDCLEDDC@OnIMEOpenReadingWnd@ DB 'OnIMEOpenReadingWnd', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@LOIKIPJ@OnIMECloseCandidateList@
CONST	SEGMENT
??_C@_0BI@LOIKIPJ@OnIMECloseCandidateList@ DB 'OnIMECloseCandidateList', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@HEDPBKEK@OnIMEOpenCandidateList@
CONST	SEGMENT
??_C@_0BH@HEDPBKEK@OnIMEOpenCandidateList@ DB 'OnIMEOpenCandidateList', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@EHKLBB@OnIMEChangeCodePage@
CONST	SEGMENT
??_C@_0BE@EHKLBB@OnIMEChangeCodePage@ DB 'OnIMEChangeCodePage', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@BMPDGPBH@OnIMEKeyDown@
CONST	SEGMENT
??_C@_0N@BMPDGPBH@OnIMEKeyDown@ DB 'OnIMEKeyDown', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_03LIHNMIHG@?$CIi?$CJ@
CONST	SEGMENT
??_C@_03LIHNMIHG@?$CIi?$CJ@ DB '(i)', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@PILLCCFN@OnIMEReturn@
CONST	SEGMENT
??_C@_0M@PILLCCFN@OnIMEReturn@ DB 'OnIMEReturn', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_08HFELFLOI@OnIMETab@
CONST	SEGMENT
??_C@_08HFELFLOI@OnIMETab@ DB 'OnIMETab', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@GNNJJHBO@OnMouseWheelScroll@
CONST	SEGMENT
??_C@_0BD@GNNJJHBO@OnMouseWheelScroll@ DB 'OnMouseWheelScroll', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_03KJMMOONA@?$CIs?$CJ@
CONST	SEGMENT
??_C@_03KJMMOONA@?$CIs?$CJ@ DB '(s)', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04FANAOELO@DOWN@
CONST	SEGMENT
??_C@_04FANAOELO@DOWN@ DB 'DOWN', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_02NAHCJHOC@UP@
CONST	SEGMENT
??_C@_02NAHCJHOC@UP@ DB 'UP', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@PDHAFBGB@OnRunMouseWheel@
CONST	SEGMENT
??_C@_0BA@PDHAFBGB@OnRunMouseWheel@ DB 'OnRunMouseWheel', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_03LOLGAKJN@?$CIl?$CJ@
CONST	SEGMENT
??_C@_03LOLGAKJN@?$CIl?$CJ@ DB '(l)', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@IGAJCEHG@OnMouseMiddleButtonUp@
CONST	SEGMENT
??_C@_0BG@IGAJCEHG@OnMouseMiddleButtonUp@ DB 'OnMouseMiddleButtonUp', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@LKFMHNKP@OnMouseMiddleButtonDown@
CONST	SEGMENT
??_C@_0BI@LKFMHNKP@OnMouseMiddleButtonDown@ DB 'OnMouseMiddleButtonDown', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BO@NPKMHGOP@OnMouseRightButtonDoubleClick@
CONST	SEGMENT
??_C@_0BO@NPKMHGOP@OnMouseRightButtonDoubleClick@ DB 'OnMouseRightButtonD'
	DB	'oubleClick', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@FDIGHPIH@OnMouseRightButtonUp@
CONST	SEGMENT
??_C@_0BF@FDIGHPIH@OnMouseRightButtonUp@ DB 'OnMouseRightButtonUp', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@ELECPAKA@OnMouseRightButtonDown@
CONST	SEGMENT
??_C@_0BH@ELECPAKA@OnMouseRightButtonDown@ DB 'OnMouseRightButtonDown', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@KEKGIMMP@OnMouseLeftButtonDoubleClick@
CONST	SEGMENT
??_C@_0BN@KEKGIMMP@OnMouseLeftButtonDoubleClick@ DB 'OnMouseLeftButtonDou'
	DB	'bleClick', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@MJALGMGL@OnMouseLeftButtonUp@
CONST	SEGMENT
??_C@_0BE@MJALGMGL@OnMouseLeftButtonUp@ DB 'OnMouseLeftButtonUp', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@DNDHJHBD@OnMouseLeftButtonDown@
CONST	SEGMENT
??_C@_0BG@DNDHJHBD@OnMouseLeftButtonDown@ DB 'OnMouseLeftButtonDown', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@DGOFHNMI@OnIMEUpdate@
CONST	SEGMENT
??_C@_0M@DGOFHNMI@OnIMEUpdate@ DB 'OnIMEUpdate', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_05LOOKECNH@OnTop@
CONST	SEGMENT
??_C@_05LOOKECNH@OnTop@ DB 'OnTop', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_06OCNPCIEO@OnDrop@
CONST	SEGMENT
??_C@_06OCNPCIEO@OnDrop@ DB 'OnDrop', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@KLLBNOAI@OnMouseOverOut@
CONST	SEGMENT
??_C@_0P@KLLBNOAI@OnMouseOverOut@ DB 'OnMouseOverOut', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@JKDAFDCC@OnMouseOverIn@
CONST	SEGMENT
??_C@_0O@JKDAFDCC@OnMouseOverIn@ DB 'OnMouseOverIn', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@CEGPCFGM@OnKillFocus@
CONST	SEGMENT
??_C@_0M@CEGPCFGM@OnKillFocus@ DB 'OnKillFocus', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@GIMNGBCD@OnSetFocus@
CONST	SEGMENT
??_C@_0L@GIMNGBCD@OnSetFocus@ DB 'OnSetFocus', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@PFKNBOJP@OnMoveWindow@
CONST	SEGMENT
??_C@_0N@PFKNBOJP@OnMoveWindow@ DB 'OnMoveWindow', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@ECAEGPAI@OnMouseDrag@
CONST	SEGMENT
??_C@_0M@ECAEGPAI@OnMouseDrag@ DB 'OnMouseDrag', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_04INACLLOK@?$CIii?$CJ@
CONST	SEGMENT
??_C@_04INACLLOK@?$CIii?$CJ@ DB '(ii)', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0DA@NEIGMJK@?5CWindow?3?3SetTop?5?9?5Failed?5to?5fi@
CONST	SEGMENT
??_C@_0DA@NEIGMJK@?5CWindow?3?3SetTop?5?9?5Failed?5to?5fi@ DB ' CWindow::'
	DB	'SetTop - Failed to find child window', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_08PAJMEILO@OnRender@
CONST	SEGMENT
??_C@_08PAJMEILO@OnRender@ DB 'OnRender', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_08DCJEAFK@OnUpdate@
CONST	SEGMENT
??_C@_08DCJEAFK@OnUpdate@ DB 'OnUpdate', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_07EFPFKGGH@CWindow@
CONST	SEGMENT
??_C@_07EFPFKGGH@CWindow@ DB 'CWindow', 00H		; `string'
CONST	ENDS
;	COMDAT ??_7CDragButton@UI@@6B@
CONST	SEGMENT
??_7CDragButton@UI@@6B@ DD FLAT:??_R4CDragButton@UI@@6B@ ; UI::CDragButton::`vftable'
	DD	FLAT:??_ECDragButton@UI@@UAEPAXI@Z
	DD	FLAT:?OnRender@CButton@UI@@MAEXXZ
	DD	FLAT:?OnUpdate@CButton@UI@@MAEXXZ
	DD	FLAT:?OnChangePosition@CDragButton@UI@@MAEXXZ
	DD	FLAT:?OnSetFocus@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnKillFocus@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnMouseDrag@CWindow@UI@@UAEXJJ@Z
	DD	FLAT:?OnMouseOverIn@CDragButton@UI@@MAEXXZ
	DD	FLAT:?OnMouseOverOut@CDragButton@UI@@MAEXXZ
	DD	FLAT:?OnMouseOver@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnDrop@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnTop@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnIMEUpdate@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnMoveWindow@CWindow@UI@@UAEXJJ@Z
	DD	FLAT:?OnIMETabEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEReturnEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEKeyDownEvent@CWindow@UI@@UAEHH@Z
	DD	FLAT:?OnIMEChangeCodePage@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEOpenCandidateListEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMECloseCandidateListEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEOpenReadingWndEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMECloseReadingWndEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseLeftButtonDown@CButton@UI@@MAEHXZ
	DD	FLAT:?OnMouseLeftButtonUp@CButton@UI@@MAEHXZ
	DD	FLAT:?OnMouseLeftButtonDoubleClick@CButton@UI@@MAEHXZ
	DD	FLAT:?OnMouseRightButtonDown@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseRightButtonUp@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseRightButtonDoubleClick@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseMiddleButtonDown@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseMiddleButtonUp@CWindow@UI@@UAEHXZ
	DD	FLAT:?RunMouseWheelEvent@CWindow@UI@@UAEHJ@Z
	DD	FLAT:?OnMouseWheelScroll@CWindow@UI@@UAEHF@Z
	DD	FLAT:?SetScrollable@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnKeyDown@CWindow@UI@@UAEHH@Z
	DD	FLAT:?OnKeyUp@CWindow@UI@@UAEHH@Z
	DD	FLAT:?OnPressEscapeKey@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnPressExitKey@CWindow@UI@@UAEHXZ
	DD	FLAT:?SetColor@CWindow@UI@@UAEXK@Z
	DD	FLAT:?OnIsType@CWindow@UI@@UAEHK@Z
	DD	FLAT:?IsWindow@CWindow@UI@@UAEHXZ
CONST	ENDS
;	COMDAT ??_7CToggleButton@UI@@6B@
CONST	SEGMENT
??_7CToggleButton@UI@@6B@ DD FLAT:??_R4CToggleButton@UI@@6B@ ; UI::CToggleButton::`vftable'
	DD	FLAT:??_ECToggleButton@UI@@UAEPAXI@Z
	DD	FLAT:?OnRender@CButton@UI@@MAEXXZ
	DD	FLAT:?OnUpdate@CButton@UI@@MAEXXZ
	DD	FLAT:?OnChangePosition@CButton@UI@@MAEXXZ
	DD	FLAT:?OnSetFocus@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnKillFocus@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnMouseDrag@CWindow@UI@@UAEXJJ@Z
	DD	FLAT:?OnMouseOverIn@CToggleButton@UI@@MAEXXZ
	DD	FLAT:?OnMouseOverOut@CToggleButton@UI@@MAEXXZ
	DD	FLAT:?OnMouseOver@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnDrop@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnTop@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnIMEUpdate@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnMoveWindow@CWindow@UI@@UAEXJJ@Z
	DD	FLAT:?OnIMETabEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEReturnEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEKeyDownEvent@CWindow@UI@@UAEHH@Z
	DD	FLAT:?OnIMEChangeCodePage@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEOpenCandidateListEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMECloseCandidateListEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEOpenReadingWndEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMECloseReadingWndEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseLeftButtonDown@CToggleButton@UI@@MAEHXZ
	DD	FLAT:?OnMouseLeftButtonUp@CToggleButton@UI@@MAEHXZ
	DD	FLAT:?OnMouseLeftButtonDoubleClick@CButton@UI@@MAEHXZ
	DD	FLAT:?OnMouseRightButtonDown@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseRightButtonUp@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseRightButtonDoubleClick@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseMiddleButtonDown@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseMiddleButtonUp@CWindow@UI@@UAEHXZ
	DD	FLAT:?RunMouseWheelEvent@CWindow@UI@@UAEHJ@Z
	DD	FLAT:?OnMouseWheelScroll@CWindow@UI@@UAEHF@Z
	DD	FLAT:?SetScrollable@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnKeyDown@CWindow@UI@@UAEHH@Z
	DD	FLAT:?OnKeyUp@CWindow@UI@@UAEHH@Z
	DD	FLAT:?OnPressEscapeKey@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnPressExitKey@CWindow@UI@@UAEHXZ
	DD	FLAT:?SetColor@CWindow@UI@@UAEXK@Z
	DD	FLAT:?OnIsType@CWindow@UI@@UAEHK@Z
	DD	FLAT:?IsWindow@CWindow@UI@@UAEHXZ
CONST	ENDS
;	COMDAT ??_7CRadioButton@UI@@6B@
CONST	SEGMENT
??_7CRadioButton@UI@@6B@ DD FLAT:??_R4CRadioButton@UI@@6B@ ; UI::CRadioButton::`vftable'
	DD	FLAT:??_ECRadioButton@UI@@UAEPAXI@Z
	DD	FLAT:?OnRender@CButton@UI@@MAEXXZ
	DD	FLAT:?OnUpdate@CButton@UI@@MAEXXZ
	DD	FLAT:?OnChangePosition@CButton@UI@@MAEXXZ
	DD	FLAT:?OnSetFocus@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnKillFocus@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnMouseDrag@CWindow@UI@@UAEXJJ@Z
	DD	FLAT:?OnMouseOverIn@CRadioButton@UI@@MAEXXZ
	DD	FLAT:?OnMouseOverOut@CRadioButton@UI@@MAEXXZ
	DD	FLAT:?OnMouseOver@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnDrop@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnTop@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnIMEUpdate@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnMoveWindow@CWindow@UI@@UAEXJJ@Z
	DD	FLAT:?OnIMETabEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEReturnEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEKeyDownEvent@CWindow@UI@@UAEHH@Z
	DD	FLAT:?OnIMEChangeCodePage@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEOpenCandidateListEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMECloseCandidateListEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEOpenReadingWndEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMECloseReadingWndEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseLeftButtonDown@CRadioButton@UI@@MAEHXZ
	DD	FLAT:?OnMouseLeftButtonUp@CRadioButton@UI@@MAEHXZ
	DD	FLAT:?OnMouseLeftButtonDoubleClick@CButton@UI@@MAEHXZ
	DD	FLAT:?OnMouseRightButtonDown@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseRightButtonUp@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseRightButtonDoubleClick@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseMiddleButtonDown@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseMiddleButtonUp@CWindow@UI@@UAEHXZ
	DD	FLAT:?RunMouseWheelEvent@CWindow@UI@@UAEHJ@Z
	DD	FLAT:?OnMouseWheelScroll@CWindow@UI@@UAEHF@Z
	DD	FLAT:?SetScrollable@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnKeyDown@CWindow@UI@@UAEHH@Z
	DD	FLAT:?OnKeyUp@CWindow@UI@@UAEHH@Z
	DD	FLAT:?OnPressEscapeKey@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnPressExitKey@CWindow@UI@@UAEHXZ
	DD	FLAT:?SetColor@CWindow@UI@@UAEXK@Z
	DD	FLAT:?OnIsType@CWindow@UI@@UAEHK@Z
	DD	FLAT:?IsWindow@CWindow@UI@@UAEHXZ
CONST	ENDS
;	COMDAT ??_7CButton@UI@@6B@
CONST	SEGMENT
??_7CButton@UI@@6B@ DD FLAT:??_R4CButton@UI@@6B@	; UI::CButton::`vftable'
	DD	FLAT:??_ECButton@UI@@UAEPAXI@Z
	DD	FLAT:?OnRender@CButton@UI@@MAEXXZ
	DD	FLAT:?OnUpdate@CButton@UI@@MAEXXZ
	DD	FLAT:?OnChangePosition@CButton@UI@@MAEXXZ
	DD	FLAT:?OnSetFocus@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnKillFocus@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnMouseDrag@CWindow@UI@@UAEXJJ@Z
	DD	FLAT:?OnMouseOverIn@CButton@UI@@MAEXXZ
	DD	FLAT:?OnMouseOverOut@CButton@UI@@MAEXXZ
	DD	FLAT:?OnMouseOver@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnDrop@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnTop@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnIMEUpdate@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnMoveWindow@CWindow@UI@@UAEXJJ@Z
	DD	FLAT:?OnIMETabEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEReturnEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEKeyDownEvent@CWindow@UI@@UAEHH@Z
	DD	FLAT:?OnIMEChangeCodePage@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEOpenCandidateListEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMECloseCandidateListEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEOpenReadingWndEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMECloseReadingWndEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseLeftButtonDown@CButton@UI@@MAEHXZ
	DD	FLAT:?OnMouseLeftButtonUp@CButton@UI@@MAEHXZ
	DD	FLAT:?OnMouseLeftButtonDoubleClick@CButton@UI@@MAEHXZ
	DD	FLAT:?OnMouseRightButtonDown@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseRightButtonUp@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseRightButtonDoubleClick@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseMiddleButtonDown@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseMiddleButtonUp@CWindow@UI@@UAEHXZ
	DD	FLAT:?RunMouseWheelEvent@CWindow@UI@@UAEHJ@Z
	DD	FLAT:?OnMouseWheelScroll@CWindow@UI@@UAEHF@Z
	DD	FLAT:?SetScrollable@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnKeyDown@CWindow@UI@@UAEHH@Z
	DD	FLAT:?OnKeyUp@CWindow@UI@@UAEHH@Z
	DD	FLAT:?OnPressEscapeKey@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnPressExitKey@CWindow@UI@@UAEHXZ
	DD	FLAT:?SetColor@CWindow@UI@@UAEXK@Z
	DD	FLAT:?OnIsType@CWindow@UI@@UAEHK@Z
	DD	FLAT:?IsWindow@CWindow@UI@@UAEHXZ
CONST	ENDS
;	COMDAT ??_7CAniImageBox@UI@@6B@
CONST	SEGMENT
??_7CAniImageBox@UI@@6B@ DD FLAT:??_R4CAniImageBox@UI@@6B@ ; UI::CAniImageBox::`vftable'
	DD	FLAT:??_ECAniImageBox@UI@@UAEPAXI@Z
	DD	FLAT:?OnRender@CAniImageBox@UI@@MAEXXZ
	DD	FLAT:?OnUpdate@CAniImageBox@UI@@MAEXXZ
	DD	FLAT:?OnChangePosition@CAniImageBox@UI@@MAEXXZ
	DD	FLAT:?OnSetFocus@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnKillFocus@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnMouseDrag@CWindow@UI@@UAEXJJ@Z
	DD	FLAT:?OnMouseOverIn@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnMouseOverOut@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnMouseOver@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnDrop@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnTop@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnIMEUpdate@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnMoveWindow@CWindow@UI@@UAEXJJ@Z
	DD	FLAT:?OnIMETabEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEReturnEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEKeyDownEvent@CWindow@UI@@UAEHH@Z
	DD	FLAT:?OnIMEChangeCodePage@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEOpenCandidateListEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMECloseCandidateListEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEOpenReadingWndEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMECloseReadingWndEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseLeftButtonDown@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseLeftButtonUp@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseLeftButtonDoubleClick@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseRightButtonDown@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseRightButtonUp@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseRightButtonDoubleClick@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseMiddleButtonDown@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseMiddleButtonUp@CWindow@UI@@UAEHXZ
	DD	FLAT:?RunMouseWheelEvent@CWindow@UI@@UAEHJ@Z
	DD	FLAT:?OnMouseWheelScroll@CWindow@UI@@UAEHF@Z
	DD	FLAT:?SetScrollable@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnKeyDown@CWindow@UI@@UAEHH@Z
	DD	FLAT:?OnKeyUp@CWindow@UI@@UAEHH@Z
	DD	FLAT:?OnPressEscapeKey@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnPressExitKey@CWindow@UI@@UAEHXZ
	DD	FLAT:?SetColor@CWindow@UI@@UAEXK@Z
	DD	FLAT:?OnIsType@CAniImageBox@UI@@MAEHK@Z
	DD	FLAT:?IsWindow@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnEndFrame@CAniImageBox@UI@@MAEXXZ
CONST	ENDS
;	COMDAT ??_7CExpandedImageBox@UI@@6B@
CONST	SEGMENT
??_7CExpandedImageBox@UI@@6B@ DD FLAT:??_R4CExpandedImageBox@UI@@6B@ ; UI::CExpandedImageBox::`vftable'
	DD	FLAT:??_ECExpandedImageBox@UI@@UAEPAXI@Z
	DD	FLAT:?OnRender@CExpandedImageBox@UI@@MAEXXZ
	DD	FLAT:?OnUpdate@CExpandedImageBox@UI@@MAEXXZ
	DD	FLAT:?OnChangePosition@CImageBox@UI@@MAEXXZ
	DD	FLAT:?OnSetFocus@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnKillFocus@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnMouseDrag@CWindow@UI@@UAEXJJ@Z
	DD	FLAT:?OnMouseOverIn@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnMouseOverOut@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnMouseOver@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnDrop@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnTop@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnIMEUpdate@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnMoveWindow@CWindow@UI@@UAEXJJ@Z
	DD	FLAT:?OnIMETabEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEReturnEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEKeyDownEvent@CWindow@UI@@UAEHH@Z
	DD	FLAT:?OnIMEChangeCodePage@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEOpenCandidateListEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMECloseCandidateListEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEOpenReadingWndEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMECloseReadingWndEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseLeftButtonDown@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseLeftButtonUp@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseLeftButtonDoubleClick@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseRightButtonDown@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseRightButtonUp@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseRightButtonDoubleClick@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseMiddleButtonDown@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseMiddleButtonUp@CWindow@UI@@UAEHXZ
	DD	FLAT:?RunMouseWheelEvent@CWindow@UI@@UAEHJ@Z
	DD	FLAT:?OnMouseWheelScroll@CWindow@UI@@UAEHF@Z
	DD	FLAT:?SetScrollable@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnKeyDown@CWindow@UI@@UAEHH@Z
	DD	FLAT:?OnKeyUp@CWindow@UI@@UAEHH@Z
	DD	FLAT:?OnPressEscapeKey@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnPressExitKey@CWindow@UI@@UAEHXZ
	DD	FLAT:?SetColor@CWindow@UI@@UAEXK@Z
	DD	FLAT:?OnIsType@CExpandedImageBox@UI@@MAEHK@Z
	DD	FLAT:?IsWindow@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnCreateInstance@CExpandedImageBox@UI@@MAEXXZ
	DD	FLAT:?OnDestroyInstance@CExpandedImageBox@UI@@MAEXXZ
CONST	ENDS
;	COMDAT ??_7CMarkBox@UI@@6B@
CONST	SEGMENT
??_7CMarkBox@UI@@6B@ DD FLAT:??_R4CMarkBox@UI@@6B@	; UI::CMarkBox::`vftable'
	DD	FLAT:??_ECMarkBox@UI@@UAEPAXI@Z
	DD	FLAT:?OnRender@CMarkBox@UI@@MAEXXZ
	DD	FLAT:?OnUpdate@CMarkBox@UI@@MAEXXZ
	DD	FLAT:?OnChangePosition@CMarkBox@UI@@MAEXXZ
	DD	FLAT:?OnSetFocus@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnKillFocus@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnMouseDrag@CWindow@UI@@UAEXJJ@Z
	DD	FLAT:?OnMouseOverIn@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnMouseOverOut@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnMouseOver@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnDrop@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnTop@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnIMEUpdate@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnMoveWindow@CWindow@UI@@UAEXJJ@Z
	DD	FLAT:?OnIMETabEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEReturnEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEKeyDownEvent@CWindow@UI@@UAEHH@Z
	DD	FLAT:?OnIMEChangeCodePage@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEOpenCandidateListEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMECloseCandidateListEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEOpenReadingWndEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMECloseReadingWndEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseLeftButtonDown@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseLeftButtonUp@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseLeftButtonDoubleClick@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseRightButtonDown@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseRightButtonUp@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseRightButtonDoubleClick@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseMiddleButtonDown@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseMiddleButtonUp@CWindow@UI@@UAEHXZ
	DD	FLAT:?RunMouseWheelEvent@CWindow@UI@@UAEHJ@Z
	DD	FLAT:?OnMouseWheelScroll@CWindow@UI@@UAEHF@Z
	DD	FLAT:?SetScrollable@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnKeyDown@CWindow@UI@@UAEHH@Z
	DD	FLAT:?OnKeyUp@CWindow@UI@@UAEHH@Z
	DD	FLAT:?OnPressEscapeKey@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnPressExitKey@CWindow@UI@@UAEHXZ
	DD	FLAT:?SetColor@CWindow@UI@@UAEXK@Z
	DD	FLAT:?OnIsType@CWindow@UI@@UAEHK@Z
	DD	FLAT:?IsWindow@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnCreateInstance@CMarkBox@UI@@MAEXXZ
	DD	FLAT:?OnDestroyInstance@CMarkBox@UI@@MAEXXZ
CONST	ENDS
;	COMDAT ??_7CImageBox@UI@@6B@
CONST	SEGMENT
??_7CImageBox@UI@@6B@ DD FLAT:??_R4CImageBox@UI@@6B@	; UI::CImageBox::`vftable'
	DD	FLAT:??_ECImageBox@UI@@UAEPAXI@Z
	DD	FLAT:?OnRender@CImageBox@UI@@MAEXXZ
	DD	FLAT:?OnUpdate@CImageBox@UI@@MAEXXZ
	DD	FLAT:?OnChangePosition@CImageBox@UI@@MAEXXZ
	DD	FLAT:?OnSetFocus@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnKillFocus@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnMouseDrag@CWindow@UI@@UAEXJJ@Z
	DD	FLAT:?OnMouseOverIn@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnMouseOverOut@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnMouseOver@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnDrop@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnTop@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnIMEUpdate@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnMoveWindow@CWindow@UI@@UAEXJJ@Z
	DD	FLAT:?OnIMETabEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEReturnEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEKeyDownEvent@CWindow@UI@@UAEHH@Z
	DD	FLAT:?OnIMEChangeCodePage@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEOpenCandidateListEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMECloseCandidateListEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEOpenReadingWndEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMECloseReadingWndEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseLeftButtonDown@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseLeftButtonUp@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseLeftButtonDoubleClick@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseRightButtonDown@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseRightButtonUp@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseRightButtonDoubleClick@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseMiddleButtonDown@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseMiddleButtonUp@CWindow@UI@@UAEHXZ
	DD	FLAT:?RunMouseWheelEvent@CWindow@UI@@UAEHJ@Z
	DD	FLAT:?OnMouseWheelScroll@CWindow@UI@@UAEHF@Z
	DD	FLAT:?SetScrollable@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnKeyDown@CWindow@UI@@UAEHH@Z
	DD	FLAT:?OnKeyUp@CWindow@UI@@UAEHH@Z
	DD	FLAT:?OnPressEscapeKey@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnPressExitKey@CWindow@UI@@UAEHXZ
	DD	FLAT:?SetColor@CWindow@UI@@UAEXK@Z
	DD	FLAT:?OnIsType@CWindow@UI@@UAEHK@Z
	DD	FLAT:?IsWindow@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnCreateInstance@CImageBox@UI@@MAEXXZ
	DD	FLAT:?OnDestroyInstance@CImageBox@UI@@MAEXXZ
CONST	ENDS
;	COMDAT ??_7CNumberLine@UI@@6B@
CONST	SEGMENT
??_7CNumberLine@UI@@6B@ DD FLAT:??_R4CNumberLine@UI@@6B@ ; UI::CNumberLine::`vftable'
	DD	FLAT:??_ECNumberLine@UI@@UAEPAXI@Z
	DD	FLAT:?OnRender@CNumberLine@UI@@MAEXXZ
	DD	FLAT:?OnUpdate@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnChangePosition@CNumberLine@UI@@MAEXXZ
	DD	FLAT:?OnSetFocus@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnKillFocus@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnMouseDrag@CWindow@UI@@UAEXJJ@Z
	DD	FLAT:?OnMouseOverIn@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnMouseOverOut@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnMouseOver@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnDrop@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnTop@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnIMEUpdate@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnMoveWindow@CWindow@UI@@UAEXJJ@Z
	DD	FLAT:?OnIMETabEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEReturnEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEKeyDownEvent@CWindow@UI@@UAEHH@Z
	DD	FLAT:?OnIMEChangeCodePage@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEOpenCandidateListEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMECloseCandidateListEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEOpenReadingWndEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMECloseReadingWndEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseLeftButtonDown@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseLeftButtonUp@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseLeftButtonDoubleClick@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseRightButtonDown@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseRightButtonUp@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseRightButtonDoubleClick@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseMiddleButtonDown@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseMiddleButtonUp@CWindow@UI@@UAEHXZ
	DD	FLAT:?RunMouseWheelEvent@CWindow@UI@@UAEHJ@Z
	DD	FLAT:?OnMouseWheelScroll@CWindow@UI@@UAEHF@Z
	DD	FLAT:?SetScrollable@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnKeyDown@CWindow@UI@@UAEHH@Z
	DD	FLAT:?OnKeyUp@CWindow@UI@@UAEHH@Z
	DD	FLAT:?OnPressEscapeKey@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnPressExitKey@CWindow@UI@@UAEHXZ
	DD	FLAT:?SetColor@CWindow@UI@@UAEXK@Z
	DD	FLAT:?OnIsType@CWindow@UI@@UAEHK@Z
	DD	FLAT:?IsWindow@CWindow@UI@@UAEHXZ
CONST	ENDS
;	COMDAT ??_7CTextLine@UI@@6B@
CONST	SEGMENT
??_7CTextLine@UI@@6B@ DD FLAT:??_R4CTextLine@UI@@6B@	; UI::CTextLine::`vftable'
	DD	FLAT:??_ECTextLine@UI@@UAEPAXI@Z
	DD	FLAT:?OnRender@CTextLine@UI@@MAEXXZ
	DD	FLAT:?OnUpdate@CTextLine@UI@@MAEXXZ
	DD	FLAT:?OnChangePosition@CTextLine@UI@@MAEXXZ
	DD	FLAT:?OnSetFocus@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnKillFocus@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnMouseDrag@CWindow@UI@@UAEXJJ@Z
	DD	FLAT:?OnMouseOverIn@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnMouseOverOut@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnMouseOver@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnDrop@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnTop@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnIMEUpdate@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnMoveWindow@CWindow@UI@@UAEXJJ@Z
	DD	FLAT:?OnIMETabEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEReturnEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEKeyDownEvent@CWindow@UI@@UAEHH@Z
	DD	FLAT:?OnIMEChangeCodePage@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEOpenCandidateListEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMECloseCandidateListEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEOpenReadingWndEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMECloseReadingWndEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseLeftButtonDown@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseLeftButtonUp@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseLeftButtonDoubleClick@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseRightButtonDown@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseRightButtonUp@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseRightButtonDoubleClick@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseMiddleButtonDown@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseMiddleButtonUp@CWindow@UI@@UAEHXZ
	DD	FLAT:?RunMouseWheelEvent@CWindow@UI@@UAEHJ@Z
	DD	FLAT:?OnMouseWheelScroll@CWindow@UI@@UAEHF@Z
	DD	FLAT:?SetScrollable@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnKeyDown@CWindow@UI@@UAEHH@Z
	DD	FLAT:?OnKeyUp@CWindow@UI@@UAEHH@Z
	DD	FLAT:?OnPressEscapeKey@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnPressExitKey@CWindow@UI@@UAEHXZ
	DD	FLAT:?SetColor@CWindow@UI@@UAEXK@Z
	DD	FLAT:?OnIsType@CWindow@UI@@UAEHK@Z
	DD	FLAT:?IsWindow@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnSetText@CTextLine@UI@@MAEXPBD@Z
CONST	ENDS
;	COMDAT ??_7CBar3D@UI@@6B@
CONST	SEGMENT
??_7CBar3D@UI@@6B@ DD FLAT:??_R4CBar3D@UI@@6B@		; UI::CBar3D::`vftable'
	DD	FLAT:??_ECBar3D@UI@@UAEPAXI@Z
	DD	FLAT:?OnRender@CBar3D@UI@@MAEXXZ
	DD	FLAT:?OnUpdate@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnChangePosition@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnSetFocus@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnKillFocus@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnMouseDrag@CWindow@UI@@UAEXJJ@Z
	DD	FLAT:?OnMouseOverIn@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnMouseOverOut@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnMouseOver@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnDrop@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnTop@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnIMEUpdate@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnMoveWindow@CWindow@UI@@UAEXJJ@Z
	DD	FLAT:?OnIMETabEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEReturnEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEKeyDownEvent@CWindow@UI@@UAEHH@Z
	DD	FLAT:?OnIMEChangeCodePage@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEOpenCandidateListEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMECloseCandidateListEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEOpenReadingWndEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMECloseReadingWndEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseLeftButtonDown@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseLeftButtonUp@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseLeftButtonDoubleClick@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseRightButtonDown@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseRightButtonUp@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseRightButtonDoubleClick@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseMiddleButtonDown@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseMiddleButtonUp@CWindow@UI@@UAEHXZ
	DD	FLAT:?RunMouseWheelEvent@CWindow@UI@@UAEHJ@Z
	DD	FLAT:?OnMouseWheelScroll@CWindow@UI@@UAEHF@Z
	DD	FLAT:?SetScrollable@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnKeyDown@CWindow@UI@@UAEHH@Z
	DD	FLAT:?OnKeyUp@CWindow@UI@@UAEHH@Z
	DD	FLAT:?OnPressEscapeKey@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnPressExitKey@CWindow@UI@@UAEHXZ
	DD	FLAT:?SetColor@CWindow@UI@@UAEXK@Z
	DD	FLAT:?OnIsType@CWindow@UI@@UAEHK@Z
	DD	FLAT:?IsWindow@CWindow@UI@@UAEHXZ
CONST	ENDS
;	COMDAT ??_7CLine@UI@@6B@
CONST	SEGMENT
??_7CLine@UI@@6B@ DD FLAT:??_R4CLine@UI@@6B@		; UI::CLine::`vftable'
	DD	FLAT:??_ECLine@UI@@UAEPAXI@Z
	DD	FLAT:?OnRender@CLine@UI@@MAEXXZ
	DD	FLAT:?OnUpdate@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnChangePosition@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnSetFocus@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnKillFocus@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnMouseDrag@CWindow@UI@@UAEXJJ@Z
	DD	FLAT:?OnMouseOverIn@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnMouseOverOut@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnMouseOver@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnDrop@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnTop@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnIMEUpdate@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnMoveWindow@CWindow@UI@@UAEXJJ@Z
	DD	FLAT:?OnIMETabEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEReturnEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEKeyDownEvent@CWindow@UI@@UAEHH@Z
	DD	FLAT:?OnIMEChangeCodePage@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEOpenCandidateListEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMECloseCandidateListEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEOpenReadingWndEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMECloseReadingWndEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseLeftButtonDown@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseLeftButtonUp@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseLeftButtonDoubleClick@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseRightButtonDown@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseRightButtonUp@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseRightButtonDoubleClick@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseMiddleButtonDown@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseMiddleButtonUp@CWindow@UI@@UAEHXZ
	DD	FLAT:?RunMouseWheelEvent@CWindow@UI@@UAEHJ@Z
	DD	FLAT:?OnMouseWheelScroll@CWindow@UI@@UAEHF@Z
	DD	FLAT:?SetScrollable@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnKeyDown@CWindow@UI@@UAEHH@Z
	DD	FLAT:?OnKeyUp@CWindow@UI@@UAEHH@Z
	DD	FLAT:?OnPressEscapeKey@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnPressExitKey@CWindow@UI@@UAEHXZ
	DD	FLAT:?SetColor@CLine@UI@@UAEXK@Z
	DD	FLAT:?OnIsType@CWindow@UI@@UAEHK@Z
	DD	FLAT:?IsWindow@CWindow@UI@@UAEHXZ
CONST	ENDS
;	COMDAT ??_7CBar@UI@@6B@
CONST	SEGMENT
??_7CBar@UI@@6B@ DD FLAT:??_R4CBar@UI@@6B@		; UI::CBar::`vftable'
	DD	FLAT:??_ECBar@UI@@UAEPAXI@Z
	DD	FLAT:?OnRender@CBar@UI@@MAEXXZ
	DD	FLAT:?OnUpdate@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnChangePosition@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnSetFocus@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnKillFocus@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnMouseDrag@CWindow@UI@@UAEXJJ@Z
	DD	FLAT:?OnMouseOverIn@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnMouseOverOut@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnMouseOver@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnDrop@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnTop@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnIMEUpdate@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnMoveWindow@CWindow@UI@@UAEXJJ@Z
	DD	FLAT:?OnIMETabEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEReturnEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEKeyDownEvent@CWindow@UI@@UAEHH@Z
	DD	FLAT:?OnIMEChangeCodePage@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEOpenCandidateListEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMECloseCandidateListEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEOpenReadingWndEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMECloseReadingWndEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseLeftButtonDown@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseLeftButtonUp@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseLeftButtonDoubleClick@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseRightButtonDown@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseRightButtonUp@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseRightButtonDoubleClick@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseMiddleButtonDown@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseMiddleButtonUp@CWindow@UI@@UAEHXZ
	DD	FLAT:?RunMouseWheelEvent@CWindow@UI@@UAEHJ@Z
	DD	FLAT:?OnMouseWheelScroll@CWindow@UI@@UAEHF@Z
	DD	FLAT:?SetScrollable@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnKeyDown@CWindow@UI@@UAEHH@Z
	DD	FLAT:?OnKeyUp@CWindow@UI@@UAEHH@Z
	DD	FLAT:?OnPressEscapeKey@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnPressExitKey@CWindow@UI@@UAEHXZ
	DD	FLAT:?SetColor@CBar@UI@@UAEXK@Z
	DD	FLAT:?OnIsType@CWindow@UI@@UAEHK@Z
	DD	FLAT:?IsWindow@CWindow@UI@@UAEHXZ
CONST	ENDS
;	COMDAT ??_7CBox@UI@@6B@
CONST	SEGMENT
??_7CBox@UI@@6B@ DD FLAT:??_R4CBox@UI@@6B@		; UI::CBox::`vftable'
	DD	FLAT:??_ECBox@UI@@UAEPAXI@Z
	DD	FLAT:?OnRender@CBox@UI@@MAEXXZ
	DD	FLAT:?OnUpdate@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnChangePosition@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnSetFocus@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnKillFocus@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnMouseDrag@CWindow@UI@@UAEXJJ@Z
	DD	FLAT:?OnMouseOverIn@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnMouseOverOut@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnMouseOver@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnDrop@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnTop@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnIMEUpdate@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnMoveWindow@CWindow@UI@@UAEXJJ@Z
	DD	FLAT:?OnIMETabEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEReturnEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEKeyDownEvent@CWindow@UI@@UAEHH@Z
	DD	FLAT:?OnIMEChangeCodePage@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEOpenCandidateListEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMECloseCandidateListEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEOpenReadingWndEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMECloseReadingWndEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseLeftButtonDown@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseLeftButtonUp@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseLeftButtonDoubleClick@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseRightButtonDown@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseRightButtonUp@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseRightButtonDoubleClick@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseMiddleButtonDown@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseMiddleButtonUp@CWindow@UI@@UAEHXZ
	DD	FLAT:?RunMouseWheelEvent@CWindow@UI@@UAEHJ@Z
	DD	FLAT:?OnMouseWheelScroll@CWindow@UI@@UAEHF@Z
	DD	FLAT:?SetScrollable@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnKeyDown@CWindow@UI@@UAEHH@Z
	DD	FLAT:?OnKeyUp@CWindow@UI@@UAEHH@Z
	DD	FLAT:?OnPressEscapeKey@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnPressExitKey@CWindow@UI@@UAEHXZ
	DD	FLAT:?SetColor@CBox@UI@@UAEXK@Z
	DD	FLAT:?OnIsType@CWindow@UI@@UAEHK@Z
	DD	FLAT:?IsWindow@CWindow@UI@@UAEHXZ
CONST	ENDS
;	COMDAT ??_7CRenderTarget@UI@@6B@
CONST	SEGMENT
??_7CRenderTarget@UI@@6B@ DD FLAT:??_R4CRenderTarget@UI@@6B@ ; UI::CRenderTarget::`vftable'
	DD	FLAT:??_ECRenderTarget@UI@@UAEPAXI@Z
	DD	FLAT:?OnRender@CRenderTarget@UI@@MAEXXZ
	DD	FLAT:?OnUpdate@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnChangePosition@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnSetFocus@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnKillFocus@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnMouseDrag@CWindow@UI@@UAEXJJ@Z
	DD	FLAT:?OnMouseOverIn@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnMouseOverOut@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnMouseOver@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnDrop@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnTop@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnIMEUpdate@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnMoveWindow@CWindow@UI@@UAEXJJ@Z
	DD	FLAT:?OnIMETabEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEReturnEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEKeyDownEvent@CWindow@UI@@UAEHH@Z
	DD	FLAT:?OnIMEChangeCodePage@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEOpenCandidateListEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMECloseCandidateListEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEOpenReadingWndEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMECloseReadingWndEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseLeftButtonDown@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseLeftButtonUp@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseLeftButtonDoubleClick@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseRightButtonDown@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseRightButtonUp@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseRightButtonDoubleClick@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseMiddleButtonDown@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseMiddleButtonUp@CWindow@UI@@UAEHXZ
	DD	FLAT:?RunMouseWheelEvent@CWindow@UI@@UAEHJ@Z
	DD	FLAT:?OnMouseWheelScroll@CWindow@UI@@UAEHF@Z
	DD	FLAT:?SetScrollable@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnKeyDown@CWindow@UI@@UAEHH@Z
	DD	FLAT:?OnKeyUp@CWindow@UI@@UAEHH@Z
	DD	FLAT:?OnPressEscapeKey@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnPressExitKey@CWindow@UI@@UAEHXZ
	DD	FLAT:?SetColor@CWindow@UI@@UAEXK@Z
	DD	FLAT:?OnIsType@CWindow@UI@@UAEHK@Z
	DD	FLAT:?IsWindow@CWindow@UI@@UAEHXZ
CONST	ENDS
;	COMDAT ??_7CWindow@UI@@6B@
CONST	SEGMENT
??_7CWindow@UI@@6B@ DD FLAT:??_R4CWindow@UI@@6B@	; UI::CWindow::`vftable'
	DD	FLAT:??_ECWindow@UI@@UAEPAXI@Z
	DD	FLAT:?OnRender@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnUpdate@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnChangePosition@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnSetFocus@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnKillFocus@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnMouseDrag@CWindow@UI@@UAEXJJ@Z
	DD	FLAT:?OnMouseOverIn@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnMouseOverOut@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnMouseOver@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnDrop@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnTop@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnIMEUpdate@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnMoveWindow@CWindow@UI@@UAEXJJ@Z
	DD	FLAT:?OnIMETabEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEReturnEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEKeyDownEvent@CWindow@UI@@UAEHH@Z
	DD	FLAT:?OnIMEChangeCodePage@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEOpenCandidateListEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMECloseCandidateListEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEOpenReadingWndEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMECloseReadingWndEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseLeftButtonDown@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseLeftButtonUp@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseLeftButtonDoubleClick@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseRightButtonDown@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseRightButtonUp@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseRightButtonDoubleClick@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseMiddleButtonDown@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseMiddleButtonUp@CWindow@UI@@UAEHXZ
	DD	FLAT:?RunMouseWheelEvent@CWindow@UI@@UAEHJ@Z
	DD	FLAT:?OnMouseWheelScroll@CWindow@UI@@UAEHF@Z
	DD	FLAT:?SetScrollable@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnKeyDown@CWindow@UI@@UAEHH@Z
	DD	FLAT:?OnKeyUp@CWindow@UI@@UAEHH@Z
	DD	FLAT:?OnPressEscapeKey@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnPressExitKey@CWindow@UI@@UAEHXZ
	DD	FLAT:?SetColor@CWindow@UI@@UAEXK@Z
	DD	FLAT:?OnIsType@CWindow@UI@@UAEHK@Z
	DD	FLAT:?IsWindow@CWindow@UI@@UAEHXZ
CONST	ENDS
;	COMDAT ??_R1A@?0A@EA@bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@bad_array_new_length@std@@8 DD FLAT:??_R0?AVbad_array_new_length@std@@@8 ; std::bad_array_new_length::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3bad_array_new_length@std@@8
rdata$r	ENDS
;	COMDAT ??_R2bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R2bad_array_new_length@std@@8 DD FLAT:??_R1A@?0A@EA@bad_array_new_length@std@@8 ; std::bad_array_new_length::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@bad_alloc@std@@8
	DD	FLAT:??_R1A@?0A@EA@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R3bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R3bad_array_new_length@std@@8 DD 00H			; std::bad_array_new_length::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2bad_array_new_length@std@@8
rdata$r	ENDS
;	COMDAT ??_R4bad_array_new_length@std@@6B@
rdata$r	SEGMENT
??_R4bad_array_new_length@std@@6B@ DD 00H		; std::bad_array_new_length::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVbad_array_new_length@std@@@8
	DD	FLAT:??_R3bad_array_new_length@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@bad_alloc@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@bad_alloc@std@@8 DD FLAT:??_R0?AVbad_alloc@std@@@8 ; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R2bad_alloc@std@@8
rdata$r	SEGMENT
??_R2bad_alloc@std@@8 DD FLAT:??_R1A@?0A@EA@bad_alloc@std@@8 ; std::bad_alloc::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R3bad_alloc@std@@8
rdata$r	SEGMENT
??_R3bad_alloc@std@@8 DD 00H				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R4bad_alloc@std@@6B@
rdata$r	SEGMENT
??_R4bad_alloc@std@@6B@ DD 00H				; std::bad_alloc::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVbad_alloc@std@@@8
	DD	FLAT:??_R3bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@exception@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@exception@std@@8 DD FLAT:??_R0?AVexception@std@@@8 ; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R2exception@std@@8
rdata$r	SEGMENT
??_R2exception@std@@8 DD FLAT:??_R1A@?0A@EA@exception@std@@8 ; std::exception::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3exception@std@@8
rdata$r	SEGMENT
??_R3exception@std@@8 DD 00H				; std::exception::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R4exception@std@@6B@
rdata$r	SEGMENT
??_R4exception@std@@6B@ DD 00H				; std::exception::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVexception@std@@@8
	DD	FLAT:??_R3exception@std@@8
rdata$r	ENDS
;	COMDAT ??_C@_0BA@FOIKENOD@vector?5too?5long@
CONST	SEGMENT
??_C@_0BA@FOIKENOD@vector?5too?5long@ DB 'vector too long', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_00CNPNBAHC@@
CONST	SEGMENT
??_C@_00CNPNBAHC@@ DB 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@JFNIOLAK@string?5too?5long@
CONST	SEGMENT
??_C@_0BA@JFNIOLAK@string?5too?5long@ DB 'string too long', 00H ; `string'
CONST	ENDS
;	COMDAT __CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVexception@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0exception@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVexception@std@@@8
data$r	SEGMENT
??_R0?AVexception@std@@@8 DD FLAT:??_7type_info@@6B@	; std::exception `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVexception@std@@', 00H
data$r	ENDS
;	COMDAT __CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12 DD 010H
	DD	FLAT:??_R0?AVbad_alloc@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0bad_alloc@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVbad_alloc@std@@@8
data$r	SEGMENT
??_R0?AVbad_alloc@std@@@8 DD FLAT:??_7type_info@@6B@	; std::bad_alloc `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVbad_alloc@std@@', 00H
data$r	ENDS
;	COMDAT __CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVbad_array_new_length@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0bad_array_new_length@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVbad_array_new_length@std@@@8
data$r	SEGMENT
??_R0?AVbad_array_new_length@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::bad_array_new_length `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVbad_array_new_length@std@@', 00H
data$r	ENDS
;	COMDAT __CTA3?AVbad_array_new_length@std@@
xdata$x	SEGMENT
__CTA3?AVbad_array_new_length@std@@ DD 03H
	DD	FLAT:__CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QAE@ABV01@@Z12
	DD	FLAT:__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
	DD	FLAT:__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	ENDS
;	COMDAT __TI3?AVbad_array_new_length@std@@
xdata$x	SEGMENT
__TI3?AVbad_array_new_length@std@@ DD 00H
	DD	FLAT:??1bad_array_new_length@std@@UAE@XZ
	DD	00H
	DD	FLAT:__CTA3?AVbad_array_new_length@std@@
xdata$x	ENDS
;	COMDAT ??_C@_0BF@KINCDENJ@bad?5array?5new?5length@
CONST	SEGMENT
??_C@_0BF@KINCDENJ@bad?5array?5new?5length@ DB 'bad array new length', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7bad_array_new_length@std@@6B@
CONST	SEGMENT
??_7bad_array_new_length@std@@6B@ DD FLAT:??_R4bad_array_new_length@std@@6B@ ; std::bad_array_new_length::`vftable'
	DD	FLAT:??_Ebad_array_new_length@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT ??_7bad_alloc@std@@6B@
CONST	SEGMENT
??_7bad_alloc@std@@6B@ DD FLAT:??_R4bad_alloc@std@@6B@	; std::bad_alloc::`vftable'
	DD	FLAT:??_Ebad_alloc@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT ??_C@_0BC@EOODALEL@Unknown?5exception@
CONST	SEGMENT
??_C@_0BC@EOODALEL@Unknown?5exception@ DB 'Unknown exception', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7exception@std@@6B@
CONST	SEGMENT
??_7exception@std@@6B@ DD FLAT:??_R4exception@std@@6B@	; std::exception::`vftable'
	DD	FLAT:??_Eexception@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$?0ABQAVCWindow@UI@@@?$_List_node_emplace_op2@V?$allocator@U?$_List_node@PAVCWindow@UI@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_List_node@PAVCWindow@UI@@PAX@std@@@1@ABQAVCWindow@UI@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$?0ABQAVCWindow@UI@@@?$_List_node_emplace_op2@V?$allocator@U?$_List_node@PAVCWindow@UI@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_List_node@PAVCWindow@UI@@PAX@std@@@1@ABQAVCWindow@UI@@@Z$0
__ehfuncinfo$??$?0ABQAVCWindow@UI@@@?$_List_node_emplace_op2@V?$allocator@U?$_List_node@PAVCWindow@UI@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_List_node@PAVCWindow@UI@@PAX@std@@@1@ABQAVCWindow@UI@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$?0ABQAVCWindow@UI@@@?$_List_node_emplace_op2@V?$allocator@U?$_List_node@PAVCWindow@UI@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_List_node@PAVCWindow@UI@@PAX@std@@@1@ABQAVCWindow@UI@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$_Emplace@ABQAVCWindow@UI@@@?$list@PAVCWindow@UI@@V?$allocator@PAVCWindow@UI@@@std@@@std@@QAEPAU?$_List_node@PAVCWindow@UI@@PAX@1@QAU21@ABQAVCWindow@UI@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$_Emplace@ABQAVCWindow@UI@@@?$list@PAVCWindow@UI@@V?$allocator@PAVCWindow@UI@@@std@@@std@@QAEPAU?$_List_node@PAVCWindow@UI@@PAX@1@QAU21@ABQAVCWindow@UI@@@Z$1
__ehfuncinfo$??$_Emplace@ABQAVCWindow@UI@@@?$list@PAVCWindow@UI@@V?$allocator@PAVCWindow@UI@@@std@@@std@@QAEPAU?$_List_node@PAVCWindow@UI@@PAX@1@QAU21@ABQAVCWindow@UI@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$_Emplace@ABQAVCWindow@UI@@@?$list@PAVCWindow@UI@@V?$allocator@PAVCWindow@UI@@@std@@@std@@QAEPAU?$_List_node@PAVCWindow@UI@@PAX@1@QAU21@ABQAVCWindow@UI@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0CButton@UI@@QAE@PAU_object@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0CButton@UI@@QAE@PAU_object@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0CButton@UI@@QAE@PAU_object@@@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$??0CButton@UI@@QAE@PAU_object@@@Z$2
	DD	02H
	DD	FLAT:__unwindfunclet$??0CButton@UI@@QAE@PAU_object@@@Z$3
__ehfuncinfo$??0CButton@UI@@QAE@PAU_object@@@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$??0CButton@UI@@QAE@PAU_object@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1CAniImageBox@UI@@UAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?Type@CAniImageBox@UI@@SAKXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?Type@CAniImageBox@UI@@SAKXZ$0
__ehfuncinfo$?Type@CAniImageBox@UI@@SAKXZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?Type@CAniImageBox@UI@@SAKXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1CExpandedImageBox@UI@@UAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?Type@CExpandedImageBox@UI@@SAKXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?Type@CExpandedImageBox@UI@@SAKXZ$0
__ehfuncinfo$?Type@CExpandedImageBox@UI@@SAKXZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?Type@CExpandedImageBox@UI@@SAKXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1CMarkBox@UI@@UAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1CImageBox@UI@@UAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?SetNumber@CNumberLine@UI@@QAEXPBD@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?SetNumber@CNumberLine@UI@@QAEXPBD@Z$0
__ehfuncinfo$?SetNumber@CNumberLine@UI@@QAEXPBD@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?SetNumber@CNumberLine@UI@@QAEXPBD@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1CNumberLine@UI@@UAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0CNumberLine@UI@@QAE@PAVCWindow@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0CNumberLine@UI@@QAE@PAVCWindow@1@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0CNumberLine@UI@@QAE@PAVCWindow@1@@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$??0CNumberLine@UI@@QAE@PAVCWindow@1@@Z$2
	DD	02H
	DD	FLAT:__unwindfunclet$??0CNumberLine@UI@@QAE@PAVCWindow@1@@Z$3
__ehfuncinfo$??0CNumberLine@UI@@QAE@PAVCWindow@1@@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$??0CNumberLine@UI@@QAE@PAVCWindow@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0CNumberLine@UI@@QAE@PAU_object@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0CNumberLine@UI@@QAE@PAU_object@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0CNumberLine@UI@@QAE@PAU_object@@@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$??0CNumberLine@UI@@QAE@PAU_object@@@Z$2
	DD	02H
	DD	FLAT:__unwindfunclet$??0CNumberLine@UI@@QAE@PAU_object@@@Z$3
__ehfuncinfo$??0CNumberLine@UI@@QAE@PAU_object@@@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$??0CNumberLine@UI@@QAE@PAU_object@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?SetFontName@CTextLine@UI@@QAEXPBD@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?SetFontName@CTextLine@UI@@QAEXPBD@Z$0
__ehfuncinfo$?SetFontName@CTextLine@UI@@QAEXPBD@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?SetFontName@CTextLine@UI@@QAEXPBD@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1CTextLine@UI@@UAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0CTextLine@UI@@QAE@PAU_object@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0CTextLine@UI@@QAE@PAU_object@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0CTextLine@UI@@QAE@PAU_object@@@Z$1
__ehfuncinfo$??0CTextLine@UI@@QAE@PAU_object@@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??0CTextLine@UI@@QAE@PAU_object@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?Type@CBar3D@UI@@SAKXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?Type@CBar3D@UI@@SAKXZ$0
__ehfuncinfo$?Type@CBar3D@UI@@SAKXZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?Type@CBar3D@UI@@SAKXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?OnRender@CRenderTarget@UI@@MAEXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?OnRender@CRenderTarget@UI@@MAEXXZ$0
__ehfuncinfo$?OnRender@CRenderTarget@UI@@MAEXXZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?OnRender@CRenderTarget@UI@@MAEXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0CWindow@UI@@QAE@PAU_object@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0CWindow@UI@@QAE@PAU_object@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0CWindow@UI@@QAE@PAU_object@@@Z$1
__ehfuncinfo$??0CWindow@UI@@QAE@PAU_object@@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??0CWindow@UI@@QAE@PAU_object@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?Type@CWindow@UI@@SAKXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?Type@CWindow@UI@@SAKXZ$0
__ehfuncinfo$?Type@CWindow@UI@@SAKXZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?Type@CWindow@UI@@SAKXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?push_back@?$list@PAVCWindow@UI@@V?$allocator@PAVCWindow@UI@@@std@@@std@@QAEXABQAVCWindow@UI@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?push_back@?$list@PAVCWindow@UI@@V?$allocator@PAVCWindow@UI@@@std@@@std@@QAEXABQAVCWindow@UI@@@Z$1
__ehfuncinfo$?push_back@?$list@PAVCWindow@UI@@V?$allocator@PAVCWindow@UI@@@std@@@std@@QAEXABQAVCWindow@UI@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?push_back@?$list@PAVCWindow@UI@@V?$allocator@PAVCWindow@UI@@@std@@@std@@QAEXABQAVCWindow@UI@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
; Function compile flags: /Ogtp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xutility
;	COMDAT ??$_Copy_memmove@PAPAVCGraphicImageInstance@@PAPAV1@@std@@YAPAPAVCGraphicImageInstance@@PAPAV1@00@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
??$_Copy_memmove@PAPAVCGraphicImageInstance@@PAPAV1@@std@@YAPAPAVCGraphicImageInstance@@PAPAV1@00@Z PROC ; std::_Copy_memmove<CGraphicImageInstance * *,CGraphicImageInstance * *>, COMDAT

; 4058 : _OutCtgIt _Copy_memmove(_CtgIt _First, _CtgIt _Last, _OutCtgIt _Dest) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 4059 :     auto _FirstPtr              = _To_address(_First);
; 4060 :     auto _LastPtr               = _To_address(_Last);
; 4061 :     auto _DestPtr               = _To_address(_Dest);
; 4062 :     const char* const _First_ch = const_cast<const char*>(reinterpret_cast<const volatile char*>(_FirstPtr));
; 4063 :     const char* const _Last_ch  = const_cast<const char*>(reinterpret_cast<const volatile char*>(_LastPtr));
; 4064 :     char* const _Dest_ch        = const_cast<char*>(reinterpret_cast<const volatile char*>(_DestPtr));
; 4065 :     const auto _Count           = static_cast<size_t>(_Last_ch - _First_ch);

  00003	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  00006	56		 push	 esi

; 4066 :     _CSTD memmove(_Dest_ch, _First_ch, _Count);

  00007	8b 75 10	 mov	 esi, DWORD PTR __Dest$[ebp]
  0000a	57		 push	 edi
  0000b	8b 7d 0c	 mov	 edi, DWORD PTR __Last$[ebp]
  0000e	2b f8		 sub	 edi, eax
  00010	57		 push	 edi
  00011	50		 push	 eax
  00012	56		 push	 esi
  00013	e8 00 00 00 00	 call	 _memmove
  00018	83 c4 0c	 add	 esp, 12			; 0000000cH

; 4067 :     if constexpr (is_pointer_v<_OutCtgIt>) {
; 4068 :         return reinterpret_cast<_OutCtgIt>(_Dest_ch + _Count);

  0001b	8d 04 37	 lea	 eax, DWORD PTR [edi+esi]
  0001e	5f		 pop	 edi
  0001f	5e		 pop	 esi

; 4069 :     } else {
; 4070 :         return _Dest + (_LastPtr - _FirstPtr);
; 4071 :     }
; 4072 : }

  00020	5d		 pop	 ebp
  00021	c3		 ret	 0
??$_Copy_memmove@PAPAVCGraphicImageInstance@@PAPAV1@@std@@YAPAPAVCGraphicImageInstance@@PAPAV1@00@Z ENDP ; std::_Copy_memmove<CGraphicImageInstance * *,CGraphicImageInstance * *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory
;	COMDAT ??1?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@PAVCWindow@UI@@PAX@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@PAVCWindow@UI@@PAX@std@@@std@@@std@@QAE@XZ PROC ; std::_Alloc_construct_ptr<std::allocator<std::_List_node<UI::CWindow *,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_List_node<UI::CWindow *,void *> > >, COMDAT
; _this$ = ecx

; 970  :         if (_Ptr) {

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	85 c0		 test	 eax, eax
  00005	74 0b		 je	 SHORT $LN8@Alloc_cons

; 255  :         ::operator delete(_Ptr, _Bytes);

  00007	6a 0c		 push	 12			; 0000000cH
  00009	50		 push	 eax
  0000a	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0000f	83 c4 08	 add	 esp, 8
$LN8@Alloc_cons:

; 971  :             _Al.deallocate(_Ptr, 1);
; 972  :         }
; 973  :     }

  00012	c3		 ret	 0
??1?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@PAVCWindow@UI@@PAX@std@@@std@@@std@@QAE@XZ ENDP ; std::_Alloc_construct_ptr<std::allocator<std::_List_node<UI::CWindow *,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_List_node<UI::CWindow *,void *> > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\vector
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\vector
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\vector
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\vector
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\vector
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\vector
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\vector
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\vector
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\vector
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\vector
;	COMDAT ??$_Emplace_reallocate@ABQAVCGraphicImageInstance@@@?$vector@PAVCGraphicImageInstance@@V?$allocator@PAVCGraphicImageInstance@@@std@@@std@@QAEPAPAVCGraphicImageInstance@@QAPAV2@ABQAV2@@Z
_TEXT	SEGMENT
__Newsize$1$ = -8					; size = 4
tv641 = -4						; size = 4
__Whereoff$1$ = -4					; size = 4
__Whereptr$ = 8						; size = 4
_<_Val_0>$ = 12						; size = 4
??$_Emplace_reallocate@ABQAVCGraphicImageInstance@@@?$vector@PAVCGraphicImageInstance@@V?$allocator@PAVCGraphicImageInstance@@@std@@@std@@QAEPAPAVCGraphicImageInstance@@QAPAV2@ABQAV2@@Z PROC ; std::vector<CGraphicImageInstance *,std::allocator<CGraphicImageInstance *> >::_Emplace_reallocate<CGraphicImageInstance * const &>, COMDAT
; _this$ = ecx

; 752  :     _CONSTEXPR20_CONTAINER pointer _Emplace_reallocate(const pointer _Whereptr, _Valty&&... _Val) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8

; 753  :         // reallocate and insert by perfectly forwarding _Val at _Whereptr
; 754  :         _Alty& _Al        = _Getal();
; 755  :         auto& _My_data    = _Mypair._Myval2;
; 756  :         pointer& _Myfirst = _My_data._Myfirst;
; 757  :         pointer& _Mylast  = _My_data._Mylast;
; 758  : 
; 759  :         _STL_INTERNAL_CHECK(_Mylast == _My_data._Myend); // check that we have no unused capacity
; 760  : 
; 761  :         const auto _Whereoff = static_cast<size_type>(_Whereptr - _Myfirst);

  00006	8b 45 08	 mov	 eax, DWORD PTR __Whereptr$[ebp]
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	8b f1		 mov	 esi, ecx
  0000d	57		 push	 edi
  0000e	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00010	2b c1		 sub	 eax, ecx
  00012	c1 f8 02	 sar	 eax, 2
  00015	89 45 fc	 mov	 DWORD PTR __Whereoff$1$[ebp], eax

; 762  :         const auto _Oldsize  = static_cast<size_type>(_Mylast - _Myfirst);

  00018	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0001b	2b c1		 sub	 eax, ecx
  0001d	c1 f8 02	 sar	 eax, 2

; 763  : 
; 764  :         if (_Oldsize == max_size()) {

  00020	3d ff ff ff 3f	 cmp	 eax, 1073741823		; 3fffffffH
  00025	0f 84 06 01 00
	00		 je	 $LN96@Emplace_re

; 1546 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  0002b	8b 56 08	 mov	 edx, DWORD PTR [esi+8]

; 766  :         }
; 767  : 
; 768  :         const size_type _Newsize     = _Oldsize + 1;

  0002e	8d 78 01	 lea	 edi, DWORD PTR [eax+1]

; 1546 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00031	2b d1		 sub	 edx, ecx

; 766  :         }
; 767  : 
; 768  :         const size_type _Newsize     = _Oldsize + 1;

  00033	89 7d f8	 mov	 DWORD PTR __Newsize$1$[ebp], edi

; 1546 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00036	c1 fa 02	 sar	 edx, 2

; 1675 :         if (_Oldcapacity > _Max - _Oldcapacity / 2) {

  00039	b8 ff ff ff 3f	 mov	 eax, 1073741823		; 3fffffffH
  0003e	8b ca		 mov	 ecx, edx
  00040	d1 e9		 shr	 ecx, 1
  00042	2b c1		 sub	 eax, ecx
  00044	3b d0		 cmp	 edx, eax
  00046	76 12		 jbe	 SHORT $LN12@Emplace_re

; 1676 :             return _Max; // geometric growth would overflow

  00048	bb fc ff ff ff	 mov	 ebx, -4			; fffffffcH
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory

; 229  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  0004d	53		 push	 ebx
  0004e	e8 00 00 00 00	 call	 ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
  00053	83 c4 04	 add	 esp, 4
  00056	8b f8		 mov	 edi, eax
  00058	eb 41		 jmp	 SHORT $LN23@Emplace_re
$LN12@Emplace_re:
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\vector

; 1679 :         const size_type _Geometric = _Oldcapacity + _Oldcapacity / 2;

  0005a	8d 04 11	 lea	 eax, DWORD PTR [ecx+edx]
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory

; 60   :         if (_Count > _Max_possible) {

  0005d	8b df		 mov	 ebx, edi
  0005f	3b c7		 cmp	 eax, edi
  00061	0f 43 d8	 cmovae	 ebx, eax
  00064	81 fb ff ff ff
	3f		 cmp	 ebx, 1073741823		; 3fffffffH
  0006a	0f 87 c6 00 00
	00		 ja	 $LN97@Emplace_re

; 62   :         }
; 63   :     }
; 64   : 
; 65   :     return _Count * _Ty_size;

  00070	c1 e3 02	 shl	 ebx, 2

; 228  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00073	81 fb 00 10 00
	00		 cmp	 ebx, 4096		; 00001000H
  00079	72 0d		 jb	 SHORT $LN24@Emplace_re

; 229  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  0007b	53		 push	 ebx
  0007c	e8 00 00 00 00	 call	 ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
  00081	83 c4 04	 add	 esp, 4
  00084	8b f8		 mov	 edi, eax
  00086	eb 13		 jmp	 SHORT $LN23@Emplace_re
$LN24@Emplace_re:

; 230  :         }
; 231  :     }
; 232  : #endif // defined(_M_IX86) || defined(_M_X64)
; 233  : 
; 234  :     if (_Bytes != 0) {

  00088	85 db		 test	 ebx, ebx
  0008a	74 0d		 je	 SHORT $LN25@Emplace_re

; 79   :         return ::operator new(_Bytes);

  0008c	53		 push	 ebx
  0008d	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00092	83 c4 04	 add	 esp, 4

; 235  :         return _Traits::_Allocate(_Bytes);

  00095	8b f8		 mov	 edi, eax
  00097	eb 02		 jmp	 SHORT $LN23@Emplace_re
$LN25@Emplace_re:

; 236  :     }
; 237  : 
; 238  :     return nullptr;

  00099	33 ff		 xor	 edi, edi
$LN23@Emplace_re:
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\vector

; 776  :         _Alty_traits::construct(_Al, _Unfancy(_Newvec + _Whereoff), _STD forward<_Valty>(_Val)...);

  0009b	8b 45 fc	 mov	 eax, DWORD PTR __Whereoff$1$[ebp]
  0009e	8d 0c 87	 lea	 ecx, DWORD PTR [edi+eax*4]
  000a1	8b 45 0c	 mov	 eax, DWORD PTR _<_Val_0>$[ebp]
  000a4	89 4d fc	 mov	 DWORD PTR tv641[ebp], ecx
  000a7	8b 00		 mov	 eax, DWORD PTR [eax]
  000a9	89 01		 mov	 DWORD PTR [ecx], eax

; 777  :         _Constructed_first = _Newvec + _Whereoff;
; 778  : 
; 779  :         if (_Whereptr == _Mylast) { // at back, provide strong guarantee

  000ab	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  000ae	8b 45 08	 mov	 eax, DWORD PTR __Whereptr$[ebp]
  000b1	8b 16		 mov	 edx, DWORD PTR [esi]
  000b3	3b c1		 cmp	 eax, ecx
  000b5	75 04		 jne	 SHORT $LN4@Emplace_re
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory

; 1711 :             _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));

  000b7	8b c7		 mov	 eax, edi
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\vector

; 781  :         } else { // provide basic guarantee

  000b9	eb 17		 jmp	 SHORT $LN60@Emplace_re
$LN4@Emplace_re:
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory

; 1711 :             _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));

  000bb	57		 push	 edi
  000bc	50		 push	 eax
  000bd	52		 push	 edx
  000be	e8 00 00 00 00	 call	 ??$_Copy_memmove@PAPAVCGraphicImageInstance@@PAPAV1@@std@@YAPAPAVCGraphicImageInstance@@PAPAV1@00@Z ; std::_Copy_memmove<CGraphicImageInstance * *,CGraphicImageInstance * *>
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\vector

; 784  :             _Umove(_Whereptr, _Mylast, _Newvec + _Whereoff + 1);

  000c3	8b 45 fc	 mov	 eax, DWORD PTR tv641[ebp]
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory

; 1711 :             _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));

  000c6	83 c4 0c	 add	 esp, 12			; 0000000cH
  000c9	8b 55 08	 mov	 edx, DWORD PTR __Whereptr$[ebp]
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\vector

; 784  :             _Umove(_Whereptr, _Mylast, _Newvec + _Whereoff + 1);

  000cc	83 c0 04	 add	 eax, 4
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory

; 1711 :             _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));

  000cf	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
$LN60@Emplace_re:
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\vector

; 784  :             _Umove(_Whereptr, _Mylast, _Newvec + _Whereoff + 1);

  000d2	50		 push	 eax
  000d3	51		 push	 ecx
  000d4	52		 push	 edx
  000d5	e8 00 00 00 00	 call	 ??$_Copy_memmove@PAPAVCGraphicImageInstance@@PAPAV1@@std@@YAPAPAVCGraphicImageInstance@@PAPAV1@00@Z ; std::_Copy_memmove<CGraphicImageInstance * *,CGraphicImageInstance * *>

; 1732 :         if (_Myfirst) { // destroy and deallocate old array

  000da	8b 06		 mov	 eax, DWORD PTR [esi]

; 784  :             _Umove(_Whereptr, _Mylast, _Newvec + _Whereoff + 1);

  000dc	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1732 :         if (_Myfirst) { // destroy and deallocate old array

  000df	85 c0		 test	 eax, eax
  000e1	74 2c		 je	 SHORT $LN78@Emplace_re

; 1733 :             _Destroy(_Myfirst, _Mylast);
; 1734 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  000e3	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]
  000e6	2b c8		 sub	 ecx, eax
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory

; 797  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  000e8	83 e1 fc	 and	 ecx, -4			; fffffffcH

; 251  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  000eb	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  000f1	72 12		 jb	 SHORT $LN88@Emplace_re

; 150  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  000f3	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  000f6	83 c1 23	 add	 ecx, 35			; 00000023H

; 151  : 
; 152  :     // If the following asserts, it likely means that we are performing
; 153  :     // an aligned delete on memory coming from an unaligned allocation.
; 154  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 155  : 
; 156  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 157  :     // in range [_Min_back_shift, _Non_user_size]
; 158  : #ifdef _DEBUG
; 159  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 160  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 161  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 162  : #endif // _DEBUG
; 163  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  000f9	2b c2		 sub	 eax, edx

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  000fb	83 c0 fc	 add	 eax, -4			; fffffffcH
  000fe	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00101	77 29		 ja	 SHORT $LN85@Emplace_re

; 165  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  00103	8b c2		 mov	 eax, edx
$LN88@Emplace_re:

; 255  :         ::operator delete(_Ptr, _Bytes);

  00105	51		 push	 ecx
  00106	50		 push	 eax
  00107	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0010c	83 c4 08	 add	 esp, 8
$LN78@Emplace_re:
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\vector

; 1738 :         _Mylast  = _Newvec + _Newsize;

  0010f	8b 45 f8	 mov	 eax, DWORD PTR __Newsize$1$[ebp]
  00112	89 3e		 mov	 DWORD PTR [esi], edi
  00114	8d 0c 87	 lea	 ecx, DWORD PTR [edi+eax*4]

; 785  :         }
; 786  :         _CATCH_ALL
; 787  :         _Destroy(_Constructed_first, _Constructed_last);
; 788  :         _Al.deallocate(_Newvec, _Newcapacity);
; 789  :         _RERAISE;
; 790  :         _CATCH_END
; 791  : 
; 792  :         _Change_array(_Newvec, _Newsize, _Newcapacity);
; 793  :         return _Newvec + _Whereoff;

  00117	8b 45 fc	 mov	 eax, DWORD PTR tv641[ebp]

; 1738 :         _Mylast  = _Newvec + _Newsize;

  0011a	89 4e 04	 mov	 DWORD PTR [esi+4], ecx

; 1739 :         _Myend   = _Newvec + _Newcapacity;

  0011d	8d 0c 3b	 lea	 ecx, DWORD PTR [ebx+edi]

; 785  :         }
; 786  :         _CATCH_ALL
; 787  :         _Destroy(_Constructed_first, _Constructed_last);
; 788  :         _Al.deallocate(_Newvec, _Newcapacity);
; 789  :         _RERAISE;
; 790  :         _CATCH_END
; 791  : 
; 792  :         _Change_array(_Newvec, _Newsize, _Newcapacity);
; 793  :         return _Newvec + _Whereoff;

  00120	5f		 pop	 edi

; 1739 :         _Myend   = _Newvec + _Newcapacity;

  00121	89 4e 08	 mov	 DWORD PTR [esi+8], ecx

; 785  :         }
; 786  :         _CATCH_ALL
; 787  :         _Destroy(_Constructed_first, _Constructed_last);
; 788  :         _Al.deallocate(_Newvec, _Newcapacity);
; 789  :         _RERAISE;
; 790  :         _CATCH_END
; 791  : 
; 792  :         _Change_array(_Newvec, _Newsize, _Newcapacity);
; 793  :         return _Newvec + _Whereoff;

  00124	5e		 pop	 esi
  00125	5b		 pop	 ebx

; 794  :     }

  00126	8b e5		 mov	 esp, ebp
  00128	5d		 pop	 ebp
  00129	c2 08 00	 ret	 8
$LN85@Emplace_re:
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  0012c	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN96@Emplace_re:
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\vector

; 765  :             _Xlength();

  00131	e8 00 00 00 00	 call	 ?_Xlength@?$vector@PAVCGraphicImageInstance@@V?$allocator@PAVCGraphicImageInstance@@@std@@@std@@CAXXZ ; std::vector<CGraphicImageInstance *,std::allocator<CGraphicImageInstance *> >::_Xlength
$LN97@Emplace_re:
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory

; 61   :             _Throw_bad_array_new_length(); // multiply overflow

  00136	e8 00 00 00 00	 call	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length
$LN94@Emplace_re:
  0013b	cc		 int	 3
??$_Emplace_reallocate@ABQAVCGraphicImageInstance@@@?$vector@PAVCGraphicImageInstance@@V?$allocator@PAVCGraphicImageInstance@@@std@@@std@@QAEPAPAVCGraphicImageInstance@@QAPAV2@ABQAV2@@Z ENDP ; std::vector<CGraphicImageInstance *,std::allocator<CGraphicImageInstance *> >::_Emplace_reallocate<CGraphicImageInstance * const &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xstring
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\utility
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xstring
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xstring
;	COMDAT ??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@QBD@Z
_TEXT	SEGMENT
__New_size$1$ = -8					; size = 4
__Left_size$1$ = -4					; size = 4
___$ReturnUdt$ = 8					; size = 4
__Left$ = 12						; size = 4
__Right$ = 16						; size = 4
??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@QBD@Z PROC ; std::operator+<char,std::char_traits<char>,std::allocator<char> >, COMDAT

; 4688 :     const basic_string<_Elem, _Traits, _Alloc>& _Left, _In_z_ const _Elem* const _Right) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8

; 4689 :     using _Size_type       = typename basic_string<_Elem, _Traits, _Alloc>::size_type;
; 4690 :     const auto _Left_size  = _Left.size();

  00006	8b 4d 0c	 mov	 ecx, DWORD PTR __Left$[ebp]
  00009	53		 push	 ebx
  0000a	56		 push	 esi

; 404  :         return _CSTD strlen(reinterpret_cast<const char*>(_First));

  0000b	8b 75 10	 mov	 esi, DWORD PTR __Right$[ebp]

; 4689 :     using _Size_type       = typename basic_string<_Elem, _Traits, _Alloc>::size_type;
; 4690 :     const auto _Left_size  = _Left.size();

  0000e	8b 51 10	 mov	 edx, DWORD PTR [ecx+16]
  00011	57		 push	 edi
  00012	89 55 fc	 mov	 DWORD PTR __Left_size$1$[ebp], edx

; 404  :         return _CSTD strlen(reinterpret_cast<const char*>(_First));

  00015	8d 7e 01	 lea	 edi, DWORD PTR [esi+1]
$LL47@operator:
  00018	8a 06		 mov	 al, BYTE PTR [esi]
  0001a	46		 inc	 esi
  0001b	84 c0		 test	 al, al
  0001d	75 f9		 jne	 SHORT $LL47@operator

; 4691 :     const auto _Right_size = _Convert_size<_Size_type>(_Traits::length(_Right));
; 4692 :     if (_Left.max_size() - _Left_size < _Right_size) {

  0001f	b8 ff ff ff 7f	 mov	 eax, 2147483647		; 7fffffffH

; 404  :         return _CSTD strlen(reinterpret_cast<const char*>(_First));

  00024	2b f7		 sub	 esi, edi

; 4691 :     const auto _Right_size = _Convert_size<_Size_type>(_Traits::length(_Right));
; 4692 :     if (_Left.max_size() - _Left_size < _Right_size) {

  00026	2b c2		 sub	 eax, edx
  00028	3b c6		 cmp	 eax, esi
  0002a	0f 82 d5 00 00
	00		 jb	 $LN50@operator

; 2286 :         return _BUF_SIZE <= _Myres;

  00030	83 79 14 10	 cmp	 DWORD PTR [ecx+20], 16	; 00000010H

; 2273 :         if (_Large_string_engaged()) {

  00034	72 05		 jb	 SHORT $LN11@operator

; 2274 :             _Result = _Unfancy(_Bx._Ptr);

  00036	8b 09		 mov	 ecx, DWORD PTR [ecx]
  00038	89 4d 0c	 mov	 DWORD PTR __Left$[ebp], ecx
$LN11@operator:

; 2313 :         _CONSTEXPR20_CONTAINER _Bxty() noexcept : _Ptr() {} // user-provided, for fancy pointers

  0003b	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]

; 2601 :         const auto _New_size    = static_cast<size_type>(_Left_size + _Right_size);

  0003e	8d 1c 16	 lea	 ebx, DWORD PTR [esi+edx]

; 2602 :         size_type _New_capacity = _BUF_SIZE - 1;

  00041	bf 0f 00 00 00	 mov	 edi, 15			; 0000000fH
  00046	89 5d f8	 mov	 DWORD PTR __New_size$1$[ebp], ebx

; 2603 :         auto& _My_data          = _Mypair._Myval2;
; 2604 :         _Elem* _Ptr             = _My_data._Bx._Buf;

  00049	8d 0c 16	 lea	 ecx, DWORD PTR [esi+edx]
  0004c	8b d8		 mov	 ebx, eax

; 2313 :         _CONSTEXPR20_CONTAINER _Bxty() noexcept : _Ptr() {} // user-provided, for fancy pointers

  0004e	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 2322 :     size_type _Mysize = 0; // current length of string

  00054	c7 40 10 00 00
	00 00		 mov	 DWORD PTR [eax+16], 0

; 2323 :     size_type _Myres  = 0; // current storage reserved for string

  0005b	c7 40 14 00 00
	00 00		 mov	 DWORD PTR [eax+20], 0

; 2604 :         _Elem* _Ptr             = _My_data._Bx._Buf;

  00062	3b cf		 cmp	 ecx, edi

; 2605 :         auto&& _Alproxy         = _GET_PROXY_ALLOCATOR(_Alty, _Getal());
; 2606 :         _Container_proxy_ptr<_Alty> _Proxy(_Alproxy, _My_data); // throws
; 2607 : 
; 2608 : #ifdef __cpp_lib_constexpr_string
; 2609 :         const bool _Activate_large_mode = _New_capacity < _New_size || _STD is_constant_evaluated();
; 2610 : #else // ^^^ __cpp_lib_constexpr_string / !__cpp_lib_constexpr_string vvv
; 2611 :         const bool _Activate_large_mode = _New_capacity < _New_size;
; 2612 : #endif // __cpp_lib_constexpr_string
; 2613 : 
; 2614 :         if (_Activate_large_mode) {

  00064	76 68		 jbe	 SHORT $LN16@operator

; 4454 :         const size_type _Masked = _Requested | _ALLOC_MASK;

  00066	8b 7d f8	 mov	 edi, DWORD PTR __New_size$1$[ebp]
  00069	83 cf 0f	 or	 edi, 15			; 0000000fH
  0006c	81 ff ff ff ff
	7f		 cmp	 edi, 2147483647		; 7fffffffH

; 4455 :         if (_Masked > _Max) { // the mask overflows, settle for max_size()

  00072	76 1a		 jbe	 SHORT $LN29@operator

; 4456 :             return _Max;

  00074	ba 00 00 00 80	 mov	 edx, -2147483648	; 80000000H
  00079	bf ff ff ff 7f	 mov	 edi, 2147483647		; 7fffffffH
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory

; 229  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  0007e	52		 push	 edx
  0007f	e8 00 00 00 00	 call	 ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
  00084	8b d8		 mov	 ebx, eax
  00086	83 c4 04	 add	 esp, 4
  00089	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  0008c	eb 3b		 jmp	 SHORT $LN36@operator
$LN29@operator:
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\utility

; 43   :     return _Left < _Right ? _Right : _Left;

  0008e	ba 16 00 00 00	 mov	 edx, 22			; 00000016H
  00093	3b fa		 cmp	 edi, edx
  00095	0f 42 fa	 cmovb	 edi, edx
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xstring

; 2618 :             const pointer _Fancyptr         = _Getal().allocate(_New_capacity + 1); // throws

  00098	8d 57 01	 lea	 edx, DWORD PTR [edi+1]
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory

; 228  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  0009b	81 fa 00 10 00
	00		 cmp	 edx, 4096		; 00001000H
  000a1	72 10		 jb	 SHORT $LN37@operator

; 229  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  000a3	52		 push	 edx
  000a4	e8 00 00 00 00	 call	 ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
  000a9	8b d8		 mov	 ebx, eax
  000ab	83 c4 04	 add	 esp, 4
  000ae	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  000b1	eb 16		 jmp	 SHORT $LN36@operator
$LN37@operator:

; 230  :         }
; 231  :     }
; 232  : #endif // defined(_M_IX86) || defined(_M_X64)
; 233  : 
; 234  :     if (_Bytes != 0) {

  000b3	85 d2		 test	 edx, edx
  000b5	74 10		 je	 SHORT $LN38@operator

; 79   :         return ::operator new(_Bytes);

  000b7	52		 push	 edx
  000b8	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new

; 235  :         return _Traits::_Allocate(_Bytes);

  000bd	8b d8		 mov	 ebx, eax

; 79   :         return ::operator new(_Bytes);

  000bf	83 c4 04	 add	 esp, 4

; 235  :         return _Traits::_Allocate(_Bytes);

  000c2	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  000c5	eb 02		 jmp	 SHORT $LN36@operator
$LN38@operator:

; 236  :     }
; 237  : 
; 238  :     return nullptr;

  000c7	33 db		 xor	 ebx, ebx
$LN36@operator:
  000c9	8b 55 fc	 mov	 edx, DWORD PTR __Left_size$1$[ebp]
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xstring

; 2620 :             _Construct_in_place(_My_data._Bx._Ptr, _Fancyptr);

  000cc	89 18		 mov	 DWORD PTR [eax], ebx
$LN16@operator:

; 2621 :         }
; 2622 : 
; 2623 : #ifdef __cpp_lib_constexpr_string
; 2624 :         if (_STD is_constant_evaluated()) { // Begin the lifetimes of the objects before copying to avoid UB
; 2625 :             _Traits::assign(_Ptr, _New_capacity + 1, _Elem());
; 2626 :         }
; 2627 : #endif // __cpp_lib_constexpr_string
; 2628 : 
; 2629 :         _My_data._Mysize = _New_size;

  000ce	8d 0c 16	 lea	 ecx, DWORD PTR [esi+edx]

; 2630 :         _My_data._Myres  = _New_capacity;

  000d1	89 78 14	 mov	 DWORD PTR [eax+20], edi

; 64   :         _CSTD memcpy(_First1, _First2, _Count * sizeof(_Elem));

  000d4	52		 push	 edx

; 2629 :         _My_data._Mysize = _New_size;

  000d5	89 48 10	 mov	 DWORD PTR [eax+16], ecx

; 64   :         _CSTD memcpy(_First1, _First2, _Count * sizeof(_Elem));

  000d8	8b 4d 0c	 mov	 ecx, DWORD PTR __Left$[ebp]
  000db	51		 push	 ecx
  000dc	53		 push	 ebx
  000dd	e8 00 00 00 00	 call	 _memcpy

; 2632 :         _Traits::copy(_Ptr + static_cast<ptrdiff_t>(_Left_size), _Right_ptr, _Right_size);

  000e2	8b 4d fc	 mov	 ecx, DWORD PTR __Left_size$1$[ebp]

; 64   :         _CSTD memcpy(_First1, _First2, _Count * sizeof(_Elem));

  000e5	56		 push	 esi
  000e6	ff 75 10	 push	 DWORD PTR __Right$[ebp]

; 2632 :         _Traits::copy(_Ptr + static_cast<ptrdiff_t>(_Left_size), _Right_ptr, _Right_size);

  000e9	03 cb		 add	 ecx, ebx

; 64   :         _CSTD memcpy(_First1, _First2, _Count * sizeof(_Elem));

  000eb	51		 push	 ecx
  000ec	e8 00 00 00 00	 call	 _memcpy

; 2633 :         _Traits::assign(_Ptr[_New_size], _Elem());

  000f1	8b 45 f8	 mov	 eax, DWORD PTR __New_size$1$[ebp]

; 64   :         _CSTD memcpy(_First1, _First2, _Count * sizeof(_Elem));

  000f4	83 c4 18	 add	 esp, 24			; 00000018H

; 4694 :     }
; 4695 : 
; 4696 :     return {_String_constructor_concat_tag{}, _Left, _Left.c_str(), _Left_size, _Right, _Right_size};

  000f7	5f		 pop	 edi

; 2633 :         _Traits::assign(_Ptr[_New_size], _Elem());

  000f8	c6 04 03 00	 mov	 BYTE PTR [ebx+eax], 0

; 4694 :     }
; 4695 : 
; 4696 :     return {_String_constructor_concat_tag{}, _Left, _Left.c_str(), _Left_size, _Right, _Right_size};

  000fc	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  000ff	5e		 pop	 esi
  00100	5b		 pop	 ebx

; 4697 : }

  00101	8b e5		 mov	 esp, ebp
  00103	5d		 pop	 ebp
  00104	c3		 ret	 0
$LN50@operator:

; 4693 :         _Xlen_string();

  00105	e8 00 00 00 00	 call	 ?_Xlen_string@std@@YAXXZ ; std::_Xlen_string
$LN48@operator:
  0010a	cc		 int	 3
??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@QBD@Z ENDP ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\memory
;	COMDAT ??1?$shared_ptr@VCRenderTarget@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$shared_ptr@VCRenderTarget@@@std@@QAE@XZ PROC	; std::shared_ptr<CRenderTarget>::~shared_ptr<CRenderTarget>, COMDAT
; _this$ = ecx

; 1613 :     ~shared_ptr() noexcept { // release resource

  00000	56		 push	 esi

; 1330 :         if (_Rep) {

  00001	8b 71 04	 mov	 esi, DWORD PTR [ecx+4]
  00004	85 f6		 test	 esi, esi
  00006	74 25		 je	 SHORT $LN10@shared_ptr

; 1105 :         if (_MT_DECR(_Uses) == 0) {

  00008	57		 push	 edi
  00009	83 cf ff	 or	 edi, -1
  0000c	8b c7		 mov	 eax, edi
  0000e	f0 0f c1 46 04	 lock	  xadd	 DWORD PTR [esi+4], eax
  00013	75 17		 jne	 SHORT $LN12@shared_ptr

; 1106 :             _Destroy();

  00015	8b 06		 mov	 eax, DWORD PTR [esi]
  00017	8b ce		 mov	 ecx, esi
  00019	ff 10		 call	 DWORD PTR [eax]

; 1112 :         if (_MT_DECR(_Weaks) == 0) {

  0001b	f0 0f c1 7e 08	 lock	  xadd	 DWORD PTR [esi+8], edi
  00020	4f		 dec	 edi
  00021	75 09		 jne	 SHORT $LN12@shared_ptr

; 1113 :             _Delete_this();

  00023	8b 06		 mov	 eax, DWORD PTR [esi]
  00025	8b ce		 mov	 ecx, esi
  00027	5f		 pop	 edi
  00028	5e		 pop	 esi
  00029	ff 60 04	 jmp	 DWORD PTR [eax+4]
$LN12@shared_ptr:
  0002c	5f		 pop	 edi
$LN10@shared_ptr:
  0002d	5e		 pop	 esi

; 1614 :         this->_Decref();
; 1615 :     }

  0002e	c3		 ret	 0
??1?$shared_ptr@VCRenderTarget@@@std@@QAE@XZ ENDP	; std::shared_ptr<CRenderTarget>::~shared_ptr<CRenderTarget>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\functional
;	COMDAT ??$mem_fun@JVCWindow@UI@@@std@@YA?AV?$mem_fun_t@JVCWindow@UI@@@0@P8CWindow@UI@@AEJXZ@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Pm$ = 12						; size = 4
??$mem_fun@JVCWindow@UI@@@std@@YA?AV?$mem_fun_t@JVCWindow@UI@@@0@P8CWindow@UI@@AEJXZ@Z PROC ; std::mem_fun<long,UI::CWindow>, COMDAT

; 458  : _NODISCARD mem_fun_t<_Result, _Ty> mem_fun(_Result (_Ty::*_Pm)()) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 407  :     explicit mem_fun_t(_Result (_Ty::*_Pm)()) : _Pmemfun(_Pm) {}

  00003	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00006	8b 4d 0c	 mov	 ecx, DWORD PTR __Pm$[ebp]
  00009	89 08		 mov	 DWORD PTR [eax], ecx

; 459  :     return mem_fun_t<_Result, _Ty>(_Pm);
; 460  : }

  0000b	5d		 pop	 ebp
  0000c	c3		 ret	 0
??$mem_fun@JVCWindow@UI@@@std@@YA?AV?$mem_fun_t@JVCWindow@UI@@@0@P8CWindow@UI@@AEJXZ@Z ENDP ; std::mem_fun<long,UI::CWindow>
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_GCDragButton@UI@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCDragButton@UI@@UAEPAXI@Z PROC			; UI::CDragButton::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1CDragButton@UI@@UAE@XZ ; UI::CDragButton::~CDragButton
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0e		 je	 SHORT $LN4@scalar
  00011	68 44 01 00 00	 push	 324			; 00000144H
  00016	56		 push	 esi
  00017	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0001c	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001f	8b c6		 mov	 eax, esi
  00021	5e		 pop	 esi
  00022	5d		 pop	 ebp
  00023	c2 04 00	 ret	 4
??_GCDragButton@UI@@UAEPAXI@Z ENDP			; UI::CDragButton::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnMouseOverOut@CDragButton@UI@@MAEXXZ
_TEXT	SEGMENT
?OnMouseOverOut@CDragButton@UI@@MAEXXZ PROC		; UI::CDragButton::OnMouseOverOut, COMDAT
; _this$ = ecx

; 2235 : 	{

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 2236 : 		if (!IsEnable())

  00003	e8 00 00 00 00	 call	 ?IsEnable@CButton@UI@@IAEHXZ ; UI::CButton::IsEnable
  00008	85 c0		 test	 eax, eax
  0000a	74 1d		 je	 SHORT $LN1@OnMouseOve

; 2237 : 			return;
; 2238 : 
; 2239 : 		CButton::OnMouseOverIn();

  0000c	8b ce		 mov	 ecx, esi
  0000e	e8 00 00 00 00	 call	 ?OnMouseOverIn@CButton@UI@@MAEXXZ ; UI::CButton::OnMouseOverIn

; 2240 : 		PyCallClassMemberFunc(m_poHandler, "OnMouseOverOut", BuildEmptyTuple());

  00013	e8 00 00 00 00	 call	 ?BuildEmptyTuple@UI@@YAPAU_object@@XZ ; UI::BuildEmptyTuple
  00018	50		 push	 eax
  00019	68 00 00 00 00	 push	 OFFSET ??_C@_0P@KLLBNOAI@OnMouseOverOut@
  0001e	ff 76 5c	 push	 DWORD PTR [esi+92]
  00021	e8 00 00 00 00	 call	 ?PyCallClassMemberFunc@@YA_NPAU_object@@PBD0@Z ; PyCallClassMemberFunc
  00026	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN1@OnMouseOve:

; 2241 : 	}

  00029	5e		 pop	 esi
  0002a	c3		 ret	 0
?OnMouseOverOut@CDragButton@UI@@MAEXXZ ENDP		; UI::CDragButton::OnMouseOverOut
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnMouseOverIn@CDragButton@UI@@MAEXXZ
_TEXT	SEGMENT
?OnMouseOverIn@CDragButton@UI@@MAEXXZ PROC		; UI::CDragButton::OnMouseOverIn, COMDAT
; _this$ = ecx

; 2225 : 	{

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 2226 : 		if (!IsEnable())

  00003	e8 00 00 00 00	 call	 ?IsEnable@CButton@UI@@IAEHXZ ; UI::CButton::IsEnable
  00008	85 c0		 test	 eax, eax
  0000a	74 1d		 je	 SHORT $LN1@OnMouseOve

; 2227 : 
; 2228 : 			return;
; 2229 : 
; 2230 : 		CButton::OnMouseOverIn();

  0000c	8b ce		 mov	 ecx, esi
  0000e	e8 00 00 00 00	 call	 ?OnMouseOverIn@CButton@UI@@MAEXXZ ; UI::CButton::OnMouseOverIn

; 2231 : 		PyCallClassMemberFunc(m_poHandler, "OnMouseOverIn", BuildEmptyTuple());

  00013	e8 00 00 00 00	 call	 ?BuildEmptyTuple@UI@@YAPAU_object@@XZ ; UI::BuildEmptyTuple
  00018	50		 push	 eax
  00019	68 00 00 00 00	 push	 OFFSET ??_C@_0O@JKDAFDCC@OnMouseOverIn@
  0001e	ff 76 5c	 push	 DWORD PTR [esi+92]
  00021	e8 00 00 00 00	 call	 ?PyCallClassMemberFunc@@YA_NPAU_object@@PBD0@Z ; PyCallClassMemberFunc
  00026	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN1@OnMouseOve:

; 2232 : 	}

  00029	5e		 pop	 esi
  0002a	c3		 ret	 0
?OnMouseOverIn@CDragButton@UI@@MAEXXZ ENDP		; UI::CDragButton::OnMouseOverIn
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\list
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\list
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\list
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\algorithm
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\functional
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\list
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\algorithm
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnChangePosition@CDragButton@UI@@MAEXXZ
_TEXT	SEGMENT
$T1 = -12						; size = 4
_this$1$ = -8						; size = 4
tv902 = -4						; size = 4
?OnChangePosition@CDragButton@UI@@MAEXXZ PROC		; UI::CDragButton::OnChangePosition, COMDAT
; _this$ = ecx

; 2196 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	53		 push	 ebx
  00007	8b d9		 mov	 ebx, ecx
  00009	56		 push	 esi
  0000a	89 5d f8	 mov	 DWORD PTR _this$1$[ebp], ebx

; 2197 : 		m_x = max(m_x, m_restrictArea.left);

  0000d	8b 83 34 01 00
	00		 mov	 eax, DWORD PTR [ebx+308]
  00013	8b 53 24	 mov	 edx, DWORD PTR [ebx+36]
  00016	3b d0		 cmp	 edx, eax

; 2198 : 		m_y = max(m_y, m_restrictArea.top);

  00018	8b 4b 28	 mov	 ecx, DWORD PTR [ebx+40]

; 2199 : 		m_x = min(m_x, max(0, m_restrictArea.right - m_lWidth));

  0001b	8b b3 3c 01 00
	00		 mov	 esi, DWORD PTR [ebx+316]
  00021	0f 4e d0	 cmovle	 edx, eax
  00024	8b 83 38 01 00
	00		 mov	 eax, DWORD PTR [ebx+312]
  0002a	3b c8		 cmp	 ecx, eax
  0002c	0f 4e c8	 cmovle	 ecx, eax
  0002f	2b 73 2c	 sub	 esi, DWORD PTR [ebx+44]
  00032	b8 00 00 00 00	 mov	 eax, 0
  00037	0f 49 c6	 cmovns	 eax, esi
  0003a	3b d0		 cmp	 edx, eax
  0003c	7c 09		 jl	 SHORT $LN12@OnChangePo
  0003e	33 c0		 xor	 eax, eax
  00040	8b d6		 mov	 edx, esi
  00042	85 f6		 test	 esi, esi
  00044	0f 48 d0	 cmovs	 edx, eax
$LN12@OnChangePo:

; 2200 : 		m_y = min(m_y, max(0, m_restrictArea.bottom - m_lHeight));

  00047	8b b3 40 01 00
	00		 mov	 esi, DWORD PTR [ebx+320]
  0004d	b8 00 00 00 00	 mov	 eax, 0
  00052	57		 push	 edi
  00053	8b 7b 30	 mov	 edi, DWORD PTR [ebx+48]
  00056	2b f7		 sub	 esi, edi
  00058	89 53 24	 mov	 DWORD PTR [ebx+36], edx
  0005b	0f 49 c6	 cmovns	 eax, esi
  0005e	3b c8		 cmp	 ecx, eax
  00060	7c 09		 jl	 SHORT $LN18@OnChangePo
  00062	33 c0		 xor	 eax, eax
  00064	8b ce		 mov	 ecx, esi
  00066	85 f6		 test	 esi, esi
  00068	0f 48 c8	 cmovs	 ecx, eax
$LN18@OnChangePo:

; 2201 : 
; 2202 : 		m_rect.left = m_x;
; 2203 : 		m_rect.top = m_y;
; 2204 : 
; 2205 : 		if (m_pParent)

  0006b	8b 73 60	 mov	 esi, DWORD PTR [ebx+96]
  0006e	89 4b 28	 mov	 DWORD PTR [ebx+40], ecx
  00071	89 53 34	 mov	 DWORD PTR [ebx+52], edx
  00074	89 4b 38	 mov	 DWORD PTR [ebx+56], ecx
  00077	85 f6		 test	 esi, esi
  00079	74 0c		 je	 SHORT $LN2@OnChangePo

; 2206 : 		{
; 2207 : 			const RECT & c_rRect = m_pParent->GetRect();
; 2208 : 			m_rect.left += c_rRect.left;

  0007b	03 56 34	 add	 edx, DWORD PTR [esi+52]
  0007e	89 53 34	 mov	 DWORD PTR [ebx+52], edx

; 2209 : 			m_rect.top += c_rRect.top;

  00081	03 4e 38	 add	 ecx, DWORD PTR [esi+56]
  00084	89 4b 38	 mov	 DWORD PTR [ebx+56], ecx
$LN2@OnChangePo:

; 2210 : 		}
; 2211 : 
; 2212 : 		m_rect.right = m_rect.left + m_lWidth;

  00087	8b 43 2c	 mov	 eax, DWORD PTR [ebx+44]
  0008a	03 c2		 add	 eax, edx
  0008c	89 43 3c	 mov	 DWORD PTR [ebx+60], eax

; 2213 : 		m_rect.bottom = m_rect.top + m_lHeight;

  0008f	8d 04 0f	 lea	 eax, DWORD PTR [edi+ecx]
  00092	89 43 40	 mov	 DWORD PTR [ebx+64], eax
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\list

; 38   :     _List_unchecked_const_iterator(_Nodeptr _Pnode, const _Mylist* _Plist) noexcept : _Ptr(_Pnode) {

  00095	8b 43 64	 mov	 eax, DWORD PTR [ebx+100]
  00098	89 45 fc	 mov	 DWORD PTR tv902[ebp], eax
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp

; 2215 : 		std::for_each(m_pChildList.begin(), m_pChildList.end(), std::mem_fun(&CWindow::UpdateRect));

  0009b	68 00 00 00 00	 push	 OFFSET ?UpdateRect@CWindow@UI@@QAEJXZ ; UI::CWindow::UpdateRect
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\list

; 38   :     _List_unchecked_const_iterator(_Nodeptr _Pnode, const _Mylist* _Plist) noexcept : _Ptr(_Pnode) {

  000a0	8b 30		 mov	 esi, DWORD PTR [eax]
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp

; 2215 : 		std::for_each(m_pChildList.begin(), m_pChildList.end(), std::mem_fun(&CWindow::UpdateRect));

  000a2	8d 45 f4	 lea	 eax, DWORD PTR $T1[ebp]
  000a5	50		 push	 eax
  000a6	e8 00 00 00 00	 call	 ??$mem_fun@JVCWindow@UI@@@std@@YA?AV?$mem_fun_t@JVCWindow@UI@@@0@P8CWindow@UI@@AEJXZ@Z ; std::mem_fun<long,UI::CWindow>
  000ab	83 c4 08	 add	 esp, 8
  000ae	8b 38		 mov	 edi, DWORD PTR [eax]
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\list

; 73   :         return _Ptr == _Right._Ptr;

  000b0	3b 75 fc	 cmp	 esi, DWORD PTR tv902[ebp]
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\algorithm

; 232  :     for (; _UFirst != _ULast; ++_UFirst) {

  000b3	74 11		 je	 SHORT $LN40@OnChangePo
  000b5	8b 5d fc	 mov	 ebx, DWORD PTR tv902[ebp]
$LL62@OnChangePo:
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\functional

; 410  :         return (_Pleft->*_Pmemfun)();

  000b8	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]
  000bb	ff d7		 call	 edi
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\list

; 51   :         _Ptr = _Ptr->_Next;

  000bd	8b 36		 mov	 esi, DWORD PTR [esi]

; 73   :         return _Ptr == _Right._Ptr;

  000bf	3b f3		 cmp	 esi, ebx
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\algorithm

; 232  :     for (; _UFirst != _ULast; ++_UFirst) {

  000c1	75 f5		 jne	 SHORT $LL62@OnChangePo
  000c3	8b 5d f8	 mov	 ebx, DWORD PTR _this$1$[ebp]
$LN40@OnChangePo:
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp

; 2217 : 		if (m_pcurVisual)

  000c6	8b 8b 88 00 00
	00		 mov	 ecx, DWORD PTR [ebx+136]
  000cc	5f		 pop	 edi
  000cd	85 c9		 test	 ecx, ecx
  000cf	74 23		 je	 SHORT $LN3@OnChangePo

; 2218 : 			m_pcurVisual->SetPosition(m_rect.left, m_rect.top);

  000d1	66 0f 6e 43 38	 movd	 xmm0, DWORD PTR [ebx+56]
  000d6	83 ec 08	 sub	 esp, 8
  000d9	0f 5b c0	 cvtdq2ps xmm0, xmm0
  000dc	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  000e2	66 0f 6e 43 34	 movd	 xmm0, DWORD PTR [ebx+52]
  000e7	0f 5b c0	 cvtdq2ps xmm0, xmm0
  000ea	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000ef	e8 00 00 00 00	 call	 ?SetPosition@CGraphicImageInstance@@QAEXMM@Z ; CGraphicImageInstance::SetPosition
$LN3@OnChangePo:

; 2219 : 
; 2220 : 		if (IsPressed())

  000f4	8b cb		 mov	 ecx, ebx
  000f6	e8 00 00 00 00	 call	 ?IsPressed@CButton@UI@@QAEHXZ ; UI::CButton::IsPressed
  000fb	85 c0		 test	 eax, eax
  000fd	74 16		 je	 SHORT $LN4@OnChangePo

; 2221 : 			PyCallClassMemberFunc(m_poHandler, "OnMove", BuildEmptyTuple());

  000ff	e8 00 00 00 00	 call	 ?BuildEmptyTuple@UI@@YAPAU_object@@XZ ; UI::BuildEmptyTuple
  00104	50		 push	 eax
  00105	68 00 00 00 00	 push	 OFFSET ??_C@_06GJPOLLJG@OnMove@
  0010a	ff 73 5c	 push	 DWORD PTR [ebx+92]
  0010d	e8 00 00 00 00	 call	 ?PyCallClassMemberFunc@@YA_NPAU_object@@PBD0@Z ; PyCallClassMemberFunc
  00112	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN4@OnChangePo:

; 2222 : 	}

  00115	5e		 pop	 esi
  00116	5b		 pop	 ebx
  00117	8b e5		 mov	 esp, ebp
  00119	5d		 pop	 ebp
  0011a	c3		 ret	 0
?OnChangePosition@CDragButton@UI@@MAEXXZ ENDP		; UI::CDragButton::OnChangePosition
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?SetRestrictMovementArea@CDragButton@UI@@QAEXHHHH@Z
_TEXT	SEGMENT
_ix$ = 8						; size = 4
_iy$ = 12						; size = 4
_iwidth$ = 16						; size = 4
_iheight$ = 20						; size = 4
?SetRestrictMovementArea@CDragButton@UI@@QAEXHHHH@Z PROC ; UI::CDragButton::SetRestrictMovementArea, COMDAT
; _this$ = ecx

; 2188 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 2189 : 		m_restrictArea.left = ix;

  00003	8b 55 08	 mov	 edx, DWORD PTR _ix$[ebp]

; 2190 : 		m_restrictArea.top = iy;
; 2191 : 		m_restrictArea.right = ix + iwidth;

  00006	8b 45 10	 mov	 eax, DWORD PTR _iwidth$[ebp]
  00009	03 c2		 add	 eax, edx
  0000b	89 91 34 01 00
	00		 mov	 DWORD PTR [ecx+308], edx
  00011	89 81 3c 01 00
	00		 mov	 DWORD PTR [ecx+316], eax

; 2192 : 		m_restrictArea.bottom = iy + iheight;

  00017	8b 45 14	 mov	 eax, DWORD PTR _iheight$[ebp]
  0001a	56		 push	 esi
  0001b	8b 75 0c	 mov	 esi, DWORD PTR _iy$[ebp]
  0001e	03 c6		 add	 eax, esi
  00020	89 b1 38 01 00
	00		 mov	 DWORD PTR [ecx+312], esi
  00026	89 81 40 01 00
	00		 mov	 DWORD PTR [ecx+320], eax
  0002c	5e		 pop	 esi

; 2193 : 	}

  0002d	5d		 pop	 ebp
  0002e	c2 10 00	 ret	 16			; 00000010H
?SetRestrictMovementArea@CDragButton@UI@@QAEXHHHH@Z ENDP ; UI::CDragButton::SetRestrictMovementArea
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ??1CDragButton@UI@@UAE@XZ
_TEXT	SEGMENT
??1CDragButton@UI@@UAE@XZ PROC				; UI::CDragButton::~CDragButton, COMDAT
; _this$ = ecx

; 2184 : 	{

  00000	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7CDragButton@UI@@6B@

; 2185 : 	}

  00006	e9 00 00 00 00	 jmp	 ??1CButton@UI@@UAE@XZ	; UI::CButton::~CButton
??1CDragButton@UI@@UAE@XZ ENDP				; UI::CDragButton::~CDragButton
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.h
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ??0CDragButton@UI@@QAE@PAU_object@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_ppyObject$ = 8						; size = 4
??0CDragButton@UI@@QAE@PAU_object@@@Z PROC		; UI::CDragButton::CDragButton, COMDAT
; _this$ = ecx

; 2176 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	ff 75 08	 push	 DWORD PTR _ppyObject$[ebp]
  00008	8b f1		 mov	 esi, ecx
  0000a	89 75 fc	 mov	 DWORD PTR _this$[ebp], esi
  0000d	e8 00 00 00 00	 call	 ??0CButton@UI@@QAE@PAU_object@@@Z ; UI::CButton::CButton
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.h

; 98   : 			void			RemoveFlag(DWORD flag)	{ REMOVE_BIT(m_dwFlag, flag);	}

  00012	81 66 58 7f ff
	ff ff		 and	 DWORD PTR [esi+88], -129 ; ffffff7fH
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp

; 2176 : 	{

  00019	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CDragButton@UI@@6B@

; 2177 : 		CWindow::RemoveFlag(CWindow::FLAG_NOT_CAPTURE);
; 2178 : 		m_restrictArea.left = 0;

  0001f	c7 86 34 01 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+308], 0

; 2179 : 		m_restrictArea.top = 0;

  00029	c7 86 38 01 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+312], 0

; 2180 : 		m_restrictArea.right = CWindowManager::Instance().GetScreenWidth();

  00033	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ms_singleton@?$CSingleton@VCWindowManager@UI@@@@0PAVCWindowManager@UI@@A ; CSingleton<UI::CWindowManager>::ms_singleton
  00038	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0003b	89 86 3c 01 00
	00		 mov	 DWORD PTR [esi+316], eax

; 2181 : 		m_restrictArea.bottom = CWindowManager::Instance().GetScreenHeight();

  00041	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ms_singleton@?$CSingleton@VCWindowManager@UI@@@@0PAVCWindowManager@UI@@A ; CSingleton<UI::CWindowManager>::ms_singleton
  00046	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  00049	89 86 40 01 00
	00		 mov	 DWORD PTR [esi+320], eax

; 2182 : 	}

  0004f	8b c6		 mov	 eax, esi
  00051	5e		 pop	 esi
  00052	8b e5		 mov	 esp, ebp
  00054	5d		 pop	 ebp
  00055	c2 04 00	 ret	 4
??0CDragButton@UI@@QAE@PAU_object@@@Z ENDP		; UI::CDragButton::CDragButton
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_GCToggleButton@UI@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCToggleButton@UI@@UAEPAXI@Z PROC			; UI::CToggleButton::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1CToggleButton@UI@@UAE@XZ ; UI::CToggleButton::~CToggleButton
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0e		 je	 SHORT $LN4@scalar
  00011	68 34 01 00 00	 push	 308			; 00000134H
  00016	56		 push	 esi
  00017	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0001c	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001f	8b c6		 mov	 eax, esi
  00021	5e		 pop	 esi
  00022	5d		 pop	 ebp
  00023	c2 04 00	 ret	 4
??_GCToggleButton@UI@@UAEPAXI@Z ENDP			; UI::CToggleButton::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnMouseOverOut@CToggleButton@UI@@MAEXXZ
_TEXT	SEGMENT
?OnMouseOverOut@CToggleButton@UI@@MAEXXZ PROC		; UI::CToggleButton::OnMouseOverOut, COMDAT
; _this$ = ecx

; 2159 : 	{

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 2160 : 		if (!IsEnable())

  00003	e8 00 00 00 00	 call	 ?IsEnable@CButton@UI@@IAEHXZ ; UI::CButton::IsEnable
  00008	85 c0		 test	 eax, eax
  0000a	74 2d		 je	 SHORT $LN1@OnMouseOve

; 2161 : 			return;
; 2162 : 
; 2163 : 		if (!m_isPressed)

  0000c	83 be 80 00 00
	00 00		 cmp	 DWORD PTR [esi+128], 0
  00013	75 0e		 jne	 SHORT $LN3@OnMouseOve

; 2164 : 		{
; 2165 : 			SetCurrentVisual(&m_upVisual);

  00015	8d 86 8c 00 00
	00		 lea	 eax, DWORD PTR [esi+140]
  0001b	8b ce		 mov	 ecx, esi
  0001d	50		 push	 eax
  0001e	e8 00 00 00 00	 call	 ?SetCurrentVisual@CButton@UI@@IAEXPAVCGraphicImageInstance@@@Z ; UI::CButton::SetCurrentVisual
$LN3@OnMouseOve:

; 2166 : 		}
; 2167 : 
; 2168 : 		PyCallClassMemberFunc(m_poHandler, "HideToolTip", BuildEmptyTuple());

  00023	e8 00 00 00 00	 call	 ?BuildEmptyTuple@UI@@YAPAU_object@@XZ ; UI::BuildEmptyTuple
  00028	50		 push	 eax
  00029	68 00 00 00 00	 push	 OFFSET ??_C@_0M@HCIAMHJN@HideToolTip@
  0002e	ff 76 5c	 push	 DWORD PTR [esi+92]
  00031	e8 00 00 00 00	 call	 ?PyCallClassMemberFunc@@YA_NPAU_object@@PBD0@Z ; PyCallClassMemberFunc
  00036	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN1@OnMouseOve:

; 2169 : 	}

  00039	5e		 pop	 esi
  0003a	c3		 ret	 0
?OnMouseOverOut@CToggleButton@UI@@MAEXXZ ENDP		; UI::CToggleButton::OnMouseOverOut
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnMouseOverIn@CToggleButton@UI@@MAEXXZ
_TEXT	SEGMENT
?OnMouseOverIn@CToggleButton@UI@@MAEXXZ PROC		; UI::CToggleButton::OnMouseOverIn, COMDAT
; _this$ = ecx

; 2147 : 	{

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 2148 : 		if (!IsEnable())

  00003	e8 00 00 00 00	 call	 ?IsEnable@CButton@UI@@IAEHXZ ; UI::CButton::IsEnable
  00008	85 c0		 test	 eax, eax
  0000a	74 2d		 je	 SHORT $LN1@OnMouseOve

; 2149 : 			return;
; 2150 : 
; 2151 : 		if (!m_isPressed)

  0000c	83 be 80 00 00
	00 00		 cmp	 DWORD PTR [esi+128], 0
  00013	75 0e		 jne	 SHORT $LN3@OnMouseOve

; 2152 : 		{
; 2153 : 			SetCurrentVisual(&m_overVisual);

  00015	8d 86 b4 00 00
	00		 lea	 eax, DWORD PTR [esi+180]
  0001b	8b ce		 mov	 ecx, esi
  0001d	50		 push	 eax
  0001e	e8 00 00 00 00	 call	 ?SetCurrentVisual@CButton@UI@@IAEXPAVCGraphicImageInstance@@@Z ; UI::CButton::SetCurrentVisual
$LN3@OnMouseOve:

; 2154 : 		}
; 2155 : 
; 2156 : 		PyCallClassMemberFunc(m_poHandler, "ShowToolTip", BuildEmptyTuple());

  00023	e8 00 00 00 00	 call	 ?BuildEmptyTuple@UI@@YAPAU_object@@XZ ; UI::BuildEmptyTuple
  00028	50		 push	 eax
  00029	68 00 00 00 00	 push	 OFFSET ??_C@_0M@LEFCMAKP@ShowToolTip@
  0002e	ff 76 5c	 push	 DWORD PTR [esi+92]
  00031	e8 00 00 00 00	 call	 ?PyCallClassMemberFunc@@YA_NPAU_object@@PBD0@Z ; PyCallClassMemberFunc
  00036	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN1@OnMouseOve:

; 2157 : 	}

  00039	5e		 pop	 esi
  0003a	c3		 ret	 0
?OnMouseOverIn@CToggleButton@UI@@MAEXXZ ENDP		; UI::CToggleButton::OnMouseOverIn
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnMouseLeftButtonUp@CToggleButton@UI@@MAEHXZ
_TEXT	SEGMENT
?OnMouseLeftButtonUp@CToggleButton@UI@@MAEHXZ PROC	; UI::CToggleButton::OnMouseLeftButtonUp, COMDAT
; _this$ = ecx

; 2143 : 		return TRUE;

  00000	b8 01 00 00 00	 mov	 eax, 1

; 2144 : 	}

  00005	c3		 ret	 0
?OnMouseLeftButtonUp@CToggleButton@UI@@MAEHXZ ENDP	; UI::CToggleButton::OnMouseLeftButtonUp
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnMouseLeftButtonDown@CToggleButton@UI@@MAEHXZ
_TEXT	SEGMENT
?OnMouseLeftButtonDown@CToggleButton@UI@@MAEHXZ PROC	; UI::CToggleButton::OnMouseLeftButtonDown, COMDAT
; _this$ = ecx

; 2120 : 	{

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 2121 : 		if (!IsEnable())

  00003	e8 00 00 00 00	 call	 ?IsEnable@CButton@UI@@IAEHXZ ; UI::CButton::IsEnable
  00008	85 c0		 test	 eax, eax
  0000a	74 57		 je	 SHORT $LN8@OnMouseLef

; 2122 : 			return TRUE;
; 2123 : 
; 2124 : 		if (m_isPressed)

  0000c	83 be 80 00 00
	00 00		 cmp	 DWORD PTR [esi+128], 0
  00013	8b ce		 mov	 ecx, esi
  00015	57		 push	 edi
  00016	74 2d		 je	 SHORT $LN3@OnMouseLef

; 2125 : 		{
; 2126 : 			SetUp();

  00018	e8 00 00 00 00	 call	 ?SetUp@CButton@UI@@QAEXXZ ; UI::CButton::SetUp

; 2127 : 			if (IsIn())

  0001d	8b ce		 mov	 ecx, esi
  0001f	e8 00 00 00 00	 call	 ?IsIn@CWindow@UI@@QAE_NXZ ; UI::CWindow::IsIn
  00024	84 c0		 test	 al, al
  00026	ba b4 00 00 00	 mov	 edx, 180		; 000000b4H
  0002b	b9 8c 00 00 00	 mov	 ecx, 140		; 0000008cH
  00030	0f 45 ca	 cmovne	 ecx, edx

; 2128 : 				SetCurrentVisual(&m_overVisual);
; 2129 : 			else
; 2130 : 				SetCurrentVisual(&m_upVisual);
; 2131 : 			PyCallClassMemberFunc(m_poHandler, "OnToggleUp", BuildEmptyTuple());

  00033	8d 04 31	 lea	 eax, DWORD PTR [ecx+esi]
  00036	8b ce		 mov	 ecx, esi
  00038	50		 push	 eax
  00039	e8 00 00 00 00	 call	 ?SetCurrentVisual@CButton@UI@@IAEXPAVCGraphicImageInstance@@@Z ; UI::CButton::SetCurrentVisual
  0003e	bf 00 00 00 00	 mov	 edi, OFFSET ??_C@_0L@HGABHAMN@OnToggleUp@

; 2132 : 		}

  00043	eb 0a		 jmp	 SHORT $LN4@OnMouseLef
$LN3@OnMouseLef:

; 2133 : 		else
; 2134 : 		{
; 2135 : 			Down();

  00045	e8 00 00 00 00	 call	 ?Down@CButton@UI@@QAEXXZ ; UI::CButton::Down

; 2136 : 			PyCallClassMemberFunc(m_poHandler, "OnToggleDown", BuildEmptyTuple());

  0004a	bf 00 00 00 00	 mov	 edi, OFFSET ??_C@_0N@NBGLGPDJ@OnToggleDown@
$LN4@OnMouseLef:

; 2137 : 		}
; 2138 : 
; 2139 : 		return TRUE;

  0004f	e8 00 00 00 00	 call	 ?BuildEmptyTuple@UI@@YAPAU_object@@XZ ; UI::BuildEmptyTuple
  00054	50		 push	 eax
  00055	8b 46 5c	 mov	 eax, DWORD PTR [esi+92]
  00058	57		 push	 edi
  00059	50		 push	 eax
  0005a	e8 00 00 00 00	 call	 ?PyCallClassMemberFunc@@YA_NPAU_object@@PBD0@Z ; PyCallClassMemberFunc
  0005f	83 c4 0c	 add	 esp, 12			; 0000000cH
  00062	5f		 pop	 edi
$LN8@OnMouseLef:

; 2140 : 	}

  00063	b8 01 00 00 00	 mov	 eax, 1
  00068	5e		 pop	 esi
  00069	c3		 ret	 0
?OnMouseLeftButtonDown@CToggleButton@UI@@MAEHXZ ENDP	; UI::CToggleButton::OnMouseLeftButtonDown
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ??1CToggleButton@UI@@UAE@XZ
_TEXT	SEGMENT
??1CToggleButton@UI@@UAE@XZ PROC			; UI::CToggleButton::~CToggleButton, COMDAT
; _this$ = ecx

; 2116 : 	{

  00000	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7CToggleButton@UI@@6B@

; 2117 : 	}

  00006	e9 00 00 00 00	 jmp	 ??1CButton@UI@@UAE@XZ	; UI::CButton::~CButton
??1CToggleButton@UI@@UAE@XZ ENDP			; UI::CToggleButton::~CToggleButton
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ??0CToggleButton@UI@@QAE@PAU_object@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_ppyObject$ = 8						; size = 4
??0CToggleButton@UI@@QAE@PAU_object@@@Z PROC		; UI::CToggleButton::CToggleButton, COMDAT
; _this$ = ecx

; 2113 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	ff 75 08	 push	 DWORD PTR _ppyObject$[ebp]
  00008	8b f1		 mov	 esi, ecx
  0000a	89 75 fc	 mov	 DWORD PTR _this$[ebp], esi
  0000d	e8 00 00 00 00	 call	 ??0CButton@UI@@QAE@PAU_object@@@Z ; UI::CButton::CButton
  00012	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CToggleButton@UI@@6B@

; 2114 : 	}

  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	8b e5		 mov	 esp, ebp
  0001d	5d		 pop	 ebp
  0001e	c2 04 00	 ret	 4
??0CToggleButton@UI@@QAE@PAU_object@@@Z ENDP		; UI::CToggleButton::CToggleButton
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_GCRadioButton@UI@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCRadioButton@UI@@UAEPAXI@Z PROC			; UI::CRadioButton::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1CRadioButton@UI@@UAE@XZ ; UI::CRadioButton::~CRadioButton
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0e		 je	 SHORT $LN4@scalar
  00011	68 34 01 00 00	 push	 308			; 00000134H
  00016	56		 push	 esi
  00017	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0001c	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001f	8b c6		 mov	 eax, esi
  00021	5e		 pop	 esi
  00022	5d		 pop	 ebp
  00023	c2 04 00	 ret	 4
??_GCRadioButton@UI@@UAEPAXI@Z ENDP			; UI::CRadioButton::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnMouseOverOut@CRadioButton@UI@@MAEXXZ
_TEXT	SEGMENT
?OnMouseOverOut@CRadioButton@UI@@MAEXXZ PROC		; UI::CRadioButton::OnMouseOverOut, COMDAT
; _this$ = ecx

; 2096 : 	{

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 2097 : 		if (!IsEnable())

  00003	e8 00 00 00 00	 call	 ?IsEnable@CButton@UI@@IAEHXZ ; UI::CButton::IsEnable
  00008	85 c0		 test	 eax, eax
  0000a	74 2d		 je	 SHORT $LN1@OnMouseOve

; 2098 : 			return;
; 2099 : 
; 2100 : 		if (!m_isPressed)

  0000c	83 be 80 00 00
	00 00		 cmp	 DWORD PTR [esi+128], 0
  00013	75 0e		 jne	 SHORT $LN3@OnMouseOve

; 2101 : 		{
; 2102 : 			SetCurrentVisual(&m_upVisual);

  00015	8d 86 8c 00 00
	00		 lea	 eax, DWORD PTR [esi+140]
  0001b	8b ce		 mov	 ecx, esi
  0001d	50		 push	 eax
  0001e	e8 00 00 00 00	 call	 ?SetCurrentVisual@CButton@UI@@IAEXPAVCGraphicImageInstance@@@Z ; UI::CButton::SetCurrentVisual
$LN3@OnMouseOve:

; 2103 : 		}
; 2104 : 
; 2105 : 		PyCallClassMemberFunc(m_poHandler, "HideToolTip", BuildEmptyTuple());

  00023	e8 00 00 00 00	 call	 ?BuildEmptyTuple@UI@@YAPAU_object@@XZ ; UI::BuildEmptyTuple
  00028	50		 push	 eax
  00029	68 00 00 00 00	 push	 OFFSET ??_C@_0M@HCIAMHJN@HideToolTip@
  0002e	ff 76 5c	 push	 DWORD PTR [esi+92]
  00031	e8 00 00 00 00	 call	 ?PyCallClassMemberFunc@@YA_NPAU_object@@PBD0@Z ; PyCallClassMemberFunc
  00036	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN1@OnMouseOve:

; 2106 : 	}

  00039	5e		 pop	 esi
  0003a	c3		 ret	 0
?OnMouseOverOut@CRadioButton@UI@@MAEXXZ ENDP		; UI::CRadioButton::OnMouseOverOut
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnMouseOverIn@CRadioButton@UI@@MAEXXZ
_TEXT	SEGMENT
?OnMouseOverIn@CRadioButton@UI@@MAEXXZ PROC		; UI::CRadioButton::OnMouseOverIn, COMDAT
; _this$ = ecx

; 2084 : 	{

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 2085 : 		if (!IsEnable())

  00003	e8 00 00 00 00	 call	 ?IsEnable@CButton@UI@@IAEHXZ ; UI::CButton::IsEnable
  00008	85 c0		 test	 eax, eax
  0000a	74 2d		 je	 SHORT $LN1@OnMouseOve

; 2086 : 			return;
; 2087 : 
; 2088 : 		if (!m_isPressed)

  0000c	83 be 80 00 00
	00 00		 cmp	 DWORD PTR [esi+128], 0
  00013	75 0e		 jne	 SHORT $LN3@OnMouseOve

; 2089 : 		{
; 2090 : 			SetCurrentVisual(&m_overVisual);

  00015	8d 86 b4 00 00
	00		 lea	 eax, DWORD PTR [esi+180]
  0001b	8b ce		 mov	 ecx, esi
  0001d	50		 push	 eax
  0001e	e8 00 00 00 00	 call	 ?SetCurrentVisual@CButton@UI@@IAEXPAVCGraphicImageInstance@@@Z ; UI::CButton::SetCurrentVisual
$LN3@OnMouseOve:

; 2091 : 		}
; 2092 : 
; 2093 : 		PyCallClassMemberFunc(m_poHandler, "ShowToolTip", BuildEmptyTuple());

  00023	e8 00 00 00 00	 call	 ?BuildEmptyTuple@UI@@YAPAU_object@@XZ ; UI::BuildEmptyTuple
  00028	50		 push	 eax
  00029	68 00 00 00 00	 push	 OFFSET ??_C@_0M@LEFCMAKP@ShowToolTip@
  0002e	ff 76 5c	 push	 DWORD PTR [esi+92]
  00031	e8 00 00 00 00	 call	 ?PyCallClassMemberFunc@@YA_NPAU_object@@PBD0@Z ; PyCallClassMemberFunc
  00036	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN1@OnMouseOve:

; 2094 : 	}

  00039	5e		 pop	 esi
  0003a	c3		 ret	 0
?OnMouseOverIn@CRadioButton@UI@@MAEXXZ ENDP		; UI::CRadioButton::OnMouseOverIn
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnMouseLeftButtonUp@CRadioButton@UI@@MAEHXZ
_TEXT	SEGMENT
?OnMouseLeftButtonUp@CRadioButton@UI@@MAEHXZ PROC	; UI::CRadioButton::OnMouseLeftButtonUp, COMDAT
; _this$ = ecx

; 2081 : 		return TRUE;

  00000	b8 01 00 00 00	 mov	 eax, 1

; 2082 : 	}

  00005	c3		 ret	 0
?OnMouseLeftButtonUp@CRadioButton@UI@@MAEHXZ ENDP	; UI::CRadioButton::OnMouseLeftButtonUp
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnMouseLeftButtonDown@CRadioButton@UI@@MAEHXZ
_TEXT	SEGMENT
?OnMouseLeftButtonDown@CRadioButton@UI@@MAEHXZ PROC	; UI::CRadioButton::OnMouseLeftButtonDown, COMDAT
; _this$ = ecx

; 2067 : 	{

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 2068 : 		if (!IsEnable())

  00003	e8 00 00 00 00	 call	 ?IsEnable@CButton@UI@@IAEHXZ ; UI::CButton::IsEnable
  00008	85 c0		 test	 eax, eax
  0000a	74 26		 je	 SHORT $LN6@OnMouseLef

; 2069 : 			return TRUE;
; 2070 : 
; 2071 : 		if (!m_isPressed)

  0000c	83 be 80 00 00
	00 00		 cmp	 DWORD PTR [esi+128], 0
  00013	75 1d		 jne	 SHORT $LN6@OnMouseLef

; 2072 : 		{
; 2073 : 			Down();

  00015	8b ce		 mov	 ecx, esi
  00017	e8 00 00 00 00	 call	 ?Down@CButton@UI@@QAEXXZ ; UI::CButton::Down

; 2074 : 			PyCallClassMemberFunc(m_poHandler, "CallEvent", BuildEmptyTuple());

  0001c	e8 00 00 00 00	 call	 ?BuildEmptyTuple@UI@@YAPAU_object@@XZ ; UI::BuildEmptyTuple
  00021	50		 push	 eax
  00022	68 00 00 00 00	 push	 OFFSET ??_C@_09MFFHPOPB@CallEvent@
  00027	ff 76 5c	 push	 DWORD PTR [esi+92]
  0002a	e8 00 00 00 00	 call	 ?PyCallClassMemberFunc@@YA_NPAU_object@@PBD0@Z ; PyCallClassMemberFunc
  0002f	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN6@OnMouseLef:

; 2075 : 		}
; 2076 : 
; 2077 : 		return TRUE;
; 2078 : 	}

  00032	b8 01 00 00 00	 mov	 eax, 1
  00037	5e		 pop	 esi
  00038	c3		 ret	 0
?OnMouseLeftButtonDown@CRadioButton@UI@@MAEHXZ ENDP	; UI::CRadioButton::OnMouseLeftButtonDown
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ??1CRadioButton@UI@@UAE@XZ
_TEXT	SEGMENT
??1CRadioButton@UI@@UAE@XZ PROC				; UI::CRadioButton::~CRadioButton, COMDAT
; _this$ = ecx

; 2063 : 	{

  00000	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7CRadioButton@UI@@6B@

; 2064 : 	}

  00006	e9 00 00 00 00	 jmp	 ??1CButton@UI@@UAE@XZ	; UI::CButton::~CButton
??1CRadioButton@UI@@UAE@XZ ENDP				; UI::CRadioButton::~CRadioButton
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ??0CRadioButton@UI@@QAE@PAU_object@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_ppyObject$ = 8						; size = 4
??0CRadioButton@UI@@QAE@PAU_object@@@Z PROC		; UI::CRadioButton::CRadioButton, COMDAT
; _this$ = ecx

; 2060 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	ff 75 08	 push	 DWORD PTR _ppyObject$[ebp]
  00008	8b f1		 mov	 esi, ecx
  0000a	89 75 fc	 mov	 DWORD PTR _this$[ebp], esi
  0000d	e8 00 00 00 00	 call	 ??0CButton@UI@@QAE@PAU_object@@@Z ; UI::CButton::CButton
  00012	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CRadioButton@UI@@6B@

; 2061 : 	}

  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	8b e5		 mov	 esp, ebp
  0001d	5d		 pop	 ebp
  0001e	c2 04 00	 ret	 4
??0CRadioButton@UI@@QAE@PAU_object@@@Z ENDP		; UI::CRadioButton::CRadioButton
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_GCButton@UI@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCButton@UI@@UAEPAXI@Z PROC				; UI::CButton::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1CButton@UI@@UAE@XZ	; UI::CButton::~CButton
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0e		 je	 SHORT $LN4@scalar
  00011	68 34 01 00 00	 push	 308			; 00000134H
  00016	56		 push	 esi
  00017	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0001c	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001f	8b c6		 mov	 eax, esi
  00021	5e		 pop	 esi
  00022	5d		 pop	 ebp
  00023	c2 04 00	 ret	 4
??_GCButton@UI@@UAEPAXI@Z ENDP				; UI::CButton::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?SetCurrentVisual@CButton@UI@@IAEXPAVCGraphicImageInstance@@@Z
_TEXT	SEGMENT
_pVisual$ = 8						; size = 4
?SetCurrentVisual@CButton@UI@@IAEXPAVCGraphicImageInstance@@@Z PROC ; UI::CButton::SetCurrentVisual, COMDAT
; _this$ = ecx

; 2040 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	66 0f 6e 41 38	 movd	 xmm0, DWORD PTR [ecx+56]

; 2041 : 		m_pcurVisual = pVisual;
; 2042 : 		m_pcurVisual->SetPosition(m_rect.left, m_rect.top);

  00008	83 ec 08	 sub	 esp, 8
  0000b	8b 45 08	 mov	 eax, DWORD PTR _pVisual$[ebp]
  0000e	0f 5b c0	 cvtdq2ps xmm0, xmm0
  00011	89 81 88 00 00
	00		 mov	 DWORD PTR [ecx+136], eax
  00017	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  0001d	66 0f 6e 41 34	 movd	 xmm0, DWORD PTR [ecx+52]
  00022	8b c8		 mov	 ecx, eax
  00024	0f 5b c0	 cvtdq2ps xmm0, xmm0
  00027	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0002c	e8 00 00 00 00	 call	 ?SetPosition@CGraphicImageInstance@@QAEXMM@Z ; CGraphicImageInstance::SetPosition

; 2043 : 	}

  00031	5d		 pop	 ebp
  00032	c2 04 00	 ret	 4
?SetCurrentVisual@CButton@UI@@IAEXPAVCGraphicImageInstance@@@Z ENDP ; UI::CButton::SetCurrentVisual
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?IsEnable@CButton@UI@@IAEHXZ
_TEXT	SEGMENT
?IsEnable@CButton@UI@@IAEHXZ PROC			; UI::CButton::IsEnable, COMDAT
; _this$ = ecx

; 2047 : 		return m_bEnable;

  00000	8b 41 7c	 mov	 eax, DWORD PTR [ecx+124]

; 2048 : 	}

  00003	c3		 ret	 0
?IsEnable@CButton@UI@@IAEHXZ ENDP			; UI::CButton::IsEnable
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnMouseOverOut@CButton@UI@@MAEXXZ
_TEXT	SEGMENT
?OnMouseOverOut@CButton@UI@@MAEXXZ PROC			; UI::CButton::OnMouseOverOut, COMDAT
; _this$ = ecx

; 2028 : 	{

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 2029 : 		if (!IsEnable())

  00003	e8 00 00 00 00	 call	 ?IsEnable@CButton@UI@@IAEHXZ ; UI::CButton::IsEnable
  00008	85 c0		 test	 eax, eax
  0000a	74 30		 je	 SHORT $LN1@OnMouseOve

; 2030 : 			return;
; 2031 : 
; 2032 : 		SetUp();

  0000c	8b ce		 mov	 ecx, esi
  0000e	e8 00 00 00 00	 call	 ?SetUp@CButton@UI@@QAEXXZ ; UI::CButton::SetUp

; 2033 : 		PyCallClassMemberFunc(m_poHandler, "HideToolTip", BuildEmptyTuple());

  00013	e8 00 00 00 00	 call	 ?BuildEmptyTuple@UI@@YAPAU_object@@XZ ; UI::BuildEmptyTuple
  00018	50		 push	 eax
  00019	68 00 00 00 00	 push	 OFFSET ??_C@_0M@HCIAMHJN@HideToolTip@
  0001e	ff 76 5c	 push	 DWORD PTR [esi+92]
  00021	e8 00 00 00 00	 call	 ?PyCallClassMemberFunc@@YA_NPAU_object@@PBD0@Z ; PyCallClassMemberFunc

; 2034 : #if defined(ENABLE_DETAILS_UI) || defined(ENABLE_SKILL_COLOR_SYSTEM)
; 2035 : 		PyCallClassMemberFunc(m_poHandler, "OnMouseOverOut", BuildEmptyTuple());

  00026	e8 00 00 00 00	 call	 ?BuildEmptyTuple@UI@@YAPAU_object@@XZ ; UI::BuildEmptyTuple
  0002b	50		 push	 eax
  0002c	68 00 00 00 00	 push	 OFFSET ??_C@_0P@KLLBNOAI@OnMouseOverOut@
  00031	ff 76 5c	 push	 DWORD PTR [esi+92]
  00034	e8 00 00 00 00	 call	 ?PyCallClassMemberFunc@@YA_NPAU_object@@PBD0@Z ; PyCallClassMemberFunc
  00039	83 c4 18	 add	 esp, 24			; 00000018H
$LN1@OnMouseOve:

; 2036 : #endif
; 2037 : 	}

  0003c	5e		 pop	 esi
  0003d	c3		 ret	 0
?OnMouseOverOut@CButton@UI@@MAEXXZ ENDP			; UI::CButton::OnMouseOverOut
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnMouseOverIn@CButton@UI@@MAEXXZ
_TEXT	SEGMENT
?OnMouseOverIn@CButton@UI@@MAEXXZ PROC			; UI::CButton::OnMouseOverIn, COMDAT
; _this$ = ecx

; 2017 : 	{

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 2018 : 		if (!IsEnable())

  00003	e8 00 00 00 00	 call	 ?IsEnable@CButton@UI@@IAEHXZ ; UI::CButton::IsEnable
  00008	85 c0		 test	 eax, eax
  0000a	74 30		 je	 SHORT $LN1@OnMouseOve

; 2019 : 			return;
; 2020 : 
; 2021 : 		Over();

  0000c	8b ce		 mov	 ecx, esi
  0000e	e8 00 00 00 00	 call	 ?Over@CButton@UI@@QAEXXZ ; UI::CButton::Over

; 2022 : 		PyCallClassMemberFunc(m_poHandler, "ShowToolTip", BuildEmptyTuple());

  00013	e8 00 00 00 00	 call	 ?BuildEmptyTuple@UI@@YAPAU_object@@XZ ; UI::BuildEmptyTuple
  00018	50		 push	 eax
  00019	68 00 00 00 00	 push	 OFFSET ??_C@_0M@LEFCMAKP@ShowToolTip@
  0001e	ff 76 5c	 push	 DWORD PTR [esi+92]
  00021	e8 00 00 00 00	 call	 ?PyCallClassMemberFunc@@YA_NPAU_object@@PBD0@Z ; PyCallClassMemberFunc

; 2023 : #if defined(ENABLE_DETAILS_UI) || defined(ENABLE_SKILL_COLOR_SYSTEM)
; 2024 : 		PyCallClassMemberFunc(m_poHandler, "OnMouseOverIn", BuildEmptyTuple());

  00026	e8 00 00 00 00	 call	 ?BuildEmptyTuple@UI@@YAPAU_object@@XZ ; UI::BuildEmptyTuple
  0002b	50		 push	 eax
  0002c	68 00 00 00 00	 push	 OFFSET ??_C@_0O@JKDAFDCC@OnMouseOverIn@
  00031	ff 76 5c	 push	 DWORD PTR [esi+92]
  00034	e8 00 00 00 00	 call	 ?PyCallClassMemberFunc@@YA_NPAU_object@@PBD0@Z ; PyCallClassMemberFunc
  00039	83 c4 18	 add	 esp, 24			; 00000018H
$LN1@OnMouseOve:

; 2025 : #endif
; 2026 : 	}

  0003c	5e		 pop	 esi
  0003d	c3		 ret	 0
?OnMouseOverIn@CButton@UI@@MAEXXZ ENDP			; UI::CButton::OnMouseOverIn
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnMouseLeftButtonUp@CButton@UI@@MAEHXZ
_TEXT	SEGMENT
?OnMouseLeftButtonUp@CButton@UI@@MAEHXZ PROC		; UI::CButton::OnMouseLeftButtonUp, COMDAT
; _this$ = ecx

; 2005 : 	{

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 2006 : 		if (!IsEnable())

  00003	e8 00 00 00 00	 call	 ?IsEnable@CButton@UI@@IAEHXZ ; UI::CButton::IsEnable
  00008	85 c0		 test	 eax, eax
  0000a	74 1c		 je	 SHORT $LN5@OnMouseLef

; 2007 : 			return TRUE;
; 2008 : 		if (!IsPressed())

  0000c	8b ce		 mov	 ecx, esi
  0000e	e8 00 00 00 00	 call	 ?IsPressed@CButton@UI@@QAEHXZ ; UI::CButton::IsPressed
  00013	85 c0		 test	 eax, eax
  00015	74 11		 je	 SHORT $LN5@OnMouseLef

; 2009 : 			return TRUE;
; 2010 : 
; 2011 : 		m_isPressed = FALSE;
; 2012 : 		Up();

  00017	8b ce		 mov	 ecx, esi
  00019	c7 86 80 00 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+128], 0
  00023	e8 00 00 00 00	 call	 ?Up@CButton@UI@@QAEXXZ	; UI::CButton::Up
$LN5@OnMouseLef:

; 2013 : 
; 2014 : 		return TRUE;
; 2015 : 	}

  00028	b8 01 00 00 00	 mov	 eax, 1
  0002d	5e		 pop	 esi
  0002e	c3		 ret	 0
?OnMouseLeftButtonUp@CButton@UI@@MAEHXZ ENDP		; UI::CButton::OnMouseLeftButtonUp
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnMouseLeftButtonDoubleClick@CButton@UI@@MAEHXZ
_TEXT	SEGMENT
?OnMouseLeftButtonDoubleClick@CButton@UI@@MAEHXZ PROC	; UI::CButton::OnMouseLeftButtonDoubleClick, COMDAT
; _this$ = ecx

; 1996 : 	{

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 1997 : 		if (!IsEnable())

  00003	e8 00 00 00 00	 call	 ?IsEnable@CButton@UI@@IAEHXZ ; UI::CButton::IsEnable
  00008	85 c0		 test	 eax, eax
  0000a	74 07		 je	 SHORT $LN4@OnMouseLef

; 1998 : 			return TRUE;
; 1999 : 
; 2000 : 		OnMouseLeftButtonDown();

  0000c	8b 06		 mov	 eax, DWORD PTR [esi]
  0000e	8b ce		 mov	 ecx, esi
  00010	ff 50 58	 call	 DWORD PTR [eax+88]
$LN4@OnMouseLef:

; 2001 : 
; 2002 : 		return TRUE;
; 2003 : 	}

  00013	b8 01 00 00 00	 mov	 eax, 1
  00018	5e		 pop	 esi
  00019	c3		 ret	 0
?OnMouseLeftButtonDoubleClick@CButton@UI@@MAEHXZ ENDP	; UI::CButton::OnMouseLeftButtonDoubleClick
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnMouseLeftButtonDown@CButton@UI@@MAEHXZ
_TEXT	SEGMENT
?OnMouseLeftButtonDown@CButton@UI@@MAEHXZ PROC		; UI::CButton::OnMouseLeftButtonDown, COMDAT
; _this$ = ecx

; 1986 : 	{

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 1987 : 		if (!IsEnable())

  00003	e8 00 00 00 00	 call	 ?IsEnable@CButton@UI@@IAEHXZ ; UI::CButton::IsEnable
  00008	85 c0		 test	 eax, eax
  0000a	74 11		 je	 SHORT $LN4@OnMouseLef

; 1988 : 			return TRUE;
; 1989 : 
; 1990 : 		m_isPressed = TRUE;
; 1991 : 		Down();

  0000c	8b ce		 mov	 ecx, esi
  0000e	c7 86 80 00 00
	00 01 00 00 00	 mov	 DWORD PTR [esi+128], 1
  00018	e8 00 00 00 00	 call	 ?Down@CButton@UI@@QAEXXZ ; UI::CButton::Down
$LN4@OnMouseLef:

; 1992 : 
; 1993 : 		return TRUE;
; 1994 : 	}

  0001d	b8 01 00 00 00	 mov	 eax, 1
  00022	5e		 pop	 esi
  00023	c3		 ret	 0
?OnMouseLeftButtonDown@CButton@UI@@MAEHXZ ENDP		; UI::CButton::OnMouseLeftButtonDown
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnChangePosition@CButton@UI@@MAEXXZ
_TEXT	SEGMENT
?OnChangePosition@CButton@UI@@MAEXXZ PROC		; UI::CButton::OnChangePosition, COMDAT
; _this$ = ecx

; 1981 : 		if (m_pcurVisual)

  00000	8b 81 88 00 00
	00		 mov	 eax, DWORD PTR [ecx+136]
  00006	85 c0		 test	 eax, eax
  00008	74 25		 je	 SHORT $LN2@OnChangePo

; 1982 : 			m_pcurVisual->SetPosition(m_rect.left, m_rect.top);

  0000a	66 0f 6e 41 38	 movd	 xmm0, DWORD PTR [ecx+56]
  0000f	83 ec 08	 sub	 esp, 8
  00012	0f 5b c0	 cvtdq2ps xmm0, xmm0
  00015	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  0001b	66 0f 6e 41 34	 movd	 xmm0, DWORD PTR [ecx+52]
  00020	8b c8		 mov	 ecx, eax
  00022	0f 5b c0	 cvtdq2ps xmm0, xmm0
  00025	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0002a	e8 00 00 00 00	 call	 ?SetPosition@CGraphicImageInstance@@QAEXMM@Z ; CGraphicImageInstance::SetPosition
$LN2@OnChangePo:

; 1983 : 	}

  0002f	c3		 ret	 0
?OnChangePosition@CButton@UI@@MAEXXZ ENDP		; UI::CButton::OnChangePosition
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnRender@CButton@UI@@MAEXXZ
_TEXT	SEGMENT
?OnRender@CButton@UI@@MAEXXZ PROC			; UI::CButton::OnRender, COMDAT
; _this$ = ecx

; 1915 : 	{

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 1916 : 		if (!IsShow())

  00003	80 7e 55 00	 cmp	 BYTE PTR [esi+85], 0
  00007	0f 84 d8 00 00
	00		 je	 $LN1@OnRender

; 1917 : 			return;
; 1918 : 
; 1919 : 		if (m_pcurVisual)

  0000d	83 be 88 00 00
	00 00		 cmp	 DWORD PTR [esi+136], 0
  00014	57		 push	 edi
  00015	0f 84 b3 00 00
	00		 je	 $LN3@OnRender

; 1920 : 		{
; 1921 : 			if (m_isFlash)

  0001b	83 be 84 00 00
	00 00		 cmp	 DWORD PTR [esi+132], 0
  00022	74 4e		 je	 SHORT $LN4@OnRender

; 1922 : 			{
; 1923 : 				if (!IsIn() && !IsPressed())

  00024	e8 00 00 00 00	 call	 ?IsIn@CWindow@UI@@QAE_NXZ ; UI::CWindow::IsIn
  00029	84 c0		 test	 al, al
  0002b	0f 85 92 00 00
	00		 jne	 $LN12@OnRender
  00031	8b ce		 mov	 ecx, esi
  00033	e8 00 00 00 00	 call	 ?IsPressed@CButton@UI@@QAEHXZ ; UI::CButton::IsPressed
  00038	85 c0		 test	 eax, eax
  0003a	0f 85 83 00 00
	00		 jne	 $LN12@OnRender

; 1924 : 				{
; 1925 : 					if (!m_overVisual.IsEmpty())

  00040	8d be b4 00 00
	00		 lea	 edi, DWORD PTR [esi+180]
  00046	8b cf		 mov	 ecx, edi
  00048	e8 00 00 00 00	 call	 ?IsEmpty@CGraphicImageInstance@@QBE_NXZ ; CGraphicImageInstance::IsEmpty
  0004d	84 c0		 test	 al, al
  0004f	75 08		 jne	 SHORT $LN7@OnRender

; 1926 : 						SetCurrentVisual(&m_overVisual);

  00051	57		 push	 edi
  00052	8b ce		 mov	 ecx, esi
  00054	e8 00 00 00 00	 call	 ?SetCurrentVisual@CButton@UI@@IAEXPAVCGraphicImageInstance@@@Z ; UI::CButton::SetCurrentVisual
$LN7@OnRender:

; 1927 : 
; 1928 : 					if (int(timeGetTime() / 500) % 2)

  00059	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__timeGetTime@0
  0005f	8b c8		 mov	 ecx, eax
  00061	b8 d3 4d 62 10	 mov	 eax, 274877907		; 10624dd3H
  00066	f7 e1		 mul	 ecx
  00068	c1 ea 05	 shr	 edx, 5
  0006b	f6 c2 01	 test	 dl, 1
  0006e	75 74		 jne	 SHORT $LN14@OnRender

; 1929 : 						return;
; 1930 : 				}
; 1931 : 			}

  00070	eb 51		 jmp	 SHORT $LN12@OnRender
$LN4@OnRender:

; 1932 : 			else
; 1933 : 			{
; 1934 : 				if (!IsIn() && !IsPressed())

  00072	e8 00 00 00 00	 call	 ?IsIn@CWindow@UI@@QAE_NXZ ; UI::CWindow::IsIn
  00077	84 c0		 test	 al, al
  00079	75 24		 jne	 SHORT $LN10@OnRender
  0007b	8b ce		 mov	 ecx, esi
  0007d	e8 00 00 00 00	 call	 ?IsPressed@CButton@UI@@QAEHXZ ; UI::CButton::IsPressed
  00082	85 c0		 test	 eax, eax
  00084	75 19		 jne	 SHORT $LN10@OnRender

; 1935 : 				{
; 1936 : 					if (!m_upVisual.IsEmpty())

  00086	8d be 8c 00 00
	00		 lea	 edi, DWORD PTR [esi+140]
  0008c	8b cf		 mov	 ecx, edi
  0008e	e8 00 00 00 00	 call	 ?IsEmpty@CGraphicImageInstance@@QBE_NXZ ; CGraphicImageInstance::IsEmpty
  00093	84 c0		 test	 al, al
  00095	75 08		 jne	 SHORT $LN10@OnRender

; 1937 : 						SetCurrentVisual(&m_upVisual);

  00097	57		 push	 edi
  00098	8b ce		 mov	 ecx, esi
  0009a	e8 00 00 00 00	 call	 ?SetCurrentVisual@CButton@UI@@IAEXPAVCGraphicImageInstance@@@Z ; UI::CButton::SetCurrentVisual
$LN10@OnRender:

; 1938 : 				}
; 1939 : 				
; 1940 : 				if (!IsDisable())

  0009f	8b ce		 mov	 ecx, esi
  000a1	e8 00 00 00 00	 call	 ?IsDisable@CButton@UI@@QAEHXZ ; UI::CButton::IsDisable
  000a6	85 c0		 test	 eax, eax
  000a8	75 19		 jne	 SHORT $LN12@OnRender

; 1941 : 				{
; 1942 : 					if (!m_disableVisual.IsEmpty())

  000aa	8d be 04 01 00
	00		 lea	 edi, DWORD PTR [esi+260]
  000b0	8b cf		 mov	 ecx, edi
  000b2	e8 00 00 00 00	 call	 ?IsEmpty@CGraphicImageInstance@@QBE_NXZ ; CGraphicImageInstance::IsEmpty
  000b7	84 c0		 test	 al, al
  000b9	75 08		 jne	 SHORT $LN12@OnRender

; 1943 : 						SetCurrentVisual(&m_disableVisual);

  000bb	57		 push	 edi
  000bc	8b ce		 mov	 ecx, esi
  000be	e8 00 00 00 00	 call	 ?SetCurrentVisual@CButton@UI@@IAEXPAVCGraphicImageInstance@@@Z ; UI::CButton::SetCurrentVisual
$LN12@OnRender:

; 1944 : 				}
; 1945 : 			}
; 1946 : 
; 1947 : 			m_pcurVisual->Render();

  000c3	8b 8e 88 00 00
	00		 mov	 ecx, DWORD PTR [esi+136]
  000c9	e8 00 00 00 00	 call	 ?Render@CGraphicImageInstance@@QAEXXZ ; CGraphicImageInstance::Render
$LN3@OnRender:

; 1948 : 		}
; 1949 : 
; 1950 : 		PyCallClassMemberFunc(m_poHandler, "OnRender", BuildEmptyTuple());

  000ce	e8 00 00 00 00	 call	 ?BuildEmptyTuple@UI@@YAPAU_object@@XZ ; UI::BuildEmptyTuple
  000d3	50		 push	 eax
  000d4	68 00 00 00 00	 push	 OFFSET ??_C@_08PAJMEILO@OnRender@
  000d9	ff 76 5c	 push	 DWORD PTR [esi+92]
  000dc	e8 00 00 00 00	 call	 ?PyCallClassMemberFunc@@YA_NPAU_object@@PBD0@Z ; PyCallClassMemberFunc
  000e1	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN14@OnRender:
  000e4	5f		 pop	 edi
$LN1@OnRender:
  000e5	5e		 pop	 esi

; 1951 : 	}

  000e6	c3		 ret	 0
?OnRender@CButton@UI@@MAEXXZ ENDP			; UI::CButton::OnRender
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnUpdate@CButton@UI@@MAEXXZ
_TEXT	SEGMENT
?OnUpdate@CButton@UI@@MAEXXZ PROC			; UI::CButton::OnUpdate, COMDAT
; _this$ = ecx

; 1913 : 	}

  00000	c2 00 00	 ret	 0
?OnUpdate@CButton@UI@@MAEXXZ ENDP			; UI::CButton::OnUpdate
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?SetScale@CButton@UI@@QAEXMM@Z
_TEXT	SEGMENT
_fx$ = 8						; size = 4
_fy$ = 12						; size = 4
?SetScale@CButton@UI@@QAEXMM@Z PROC			; UI::CButton::SetScale, COMDAT
; _this$ = ecx

; 1954 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1955 : 		m_fScaleX = fx;

  00003	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _fx$[ebp]

; 1956 : 		m_fScaleY = fy;

  00008	f3 0f 10 4d 0c	 movss	 xmm1, DWORD PTR _fy$[ebp]
  0000d	56		 push	 esi
  0000e	8b f1		 mov	 esi, ecx
  00010	57		 push	 edi

; 1957 : 
; 1958 : 		if(m_pcurVisual)

  00011	8b 8e 88 00 00
	00		 mov	 ecx, DWORD PTR [esi+136]
  00017	f3 0f 11 86 2c
	01 00 00	 movss	 DWORD PTR [esi+300], xmm0
  0001f	f3 0f 11 8e 30
	01 00 00	 movss	 DWORD PTR [esi+304], xmm1
  00027	85 c9		 test	 ecx, ecx
  00029	74 13		 je	 SHORT $LN2@SetScale

; 1959 : 			m_pcurVisual->SetScale(fx, fy);

  0002b	83 ec 08	 sub	 esp, 8
  0002e	f3 0f 11 4c 24
	04		 movss	 DWORD PTR [esp+4], xmm1
  00034	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00039	e8 00 00 00 00	 call	 ?SetScale@CGraphicImageInstance@@QAEXMM@Z ; CGraphicImageInstance::SetScale
$LN2@SetScale:

; 1960 : 
; 1961 : 		if(!m_upVisual.IsEmpty())

  0003e	8d 8e 8c 00 00
	00		 lea	 ecx, DWORD PTR [esi+140]
  00044	e8 00 00 00 00	 call	 ?IsEmpty@CGraphicImageInstance@@QBE_NXZ ; CGraphicImageInstance::IsEmpty
  00049	84 c0		 test	 al, al
  0004b	75 23		 jne	 SHORT $LN3@SetScale

; 1962 : 			m_upVisual.SetScale(fx, fy);

  0004d	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR _fy$[ebp]
  00052	8d 8e 8c 00 00
	00		 lea	 ecx, DWORD PTR [esi+140]
  00058	83 ec 08	 sub	 esp, 8
  0005b	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  00061	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _fx$[ebp]
  00066	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0006b	e8 00 00 00 00	 call	 ?SetScale@CGraphicImageInstance@@QAEXMM@Z ; CGraphicImageInstance::SetScale
$LN3@SetScale:

; 1963 : 
; 1964 : 		if (!m_overVisual.IsEmpty())

  00070	8d 8e b4 00 00
	00		 lea	 ecx, DWORD PTR [esi+180]
  00076	e8 00 00 00 00	 call	 ?IsEmpty@CGraphicImageInstance@@QBE_NXZ ; CGraphicImageInstance::IsEmpty
  0007b	84 c0		 test	 al, al
  0007d	75 23		 jne	 SHORT $LN4@SetScale

; 1965 : 			m_overVisual.SetScale(fx, fy);

  0007f	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR _fy$[ebp]
  00084	8d 8e b4 00 00
	00		 lea	 ecx, DWORD PTR [esi+180]
  0008a	83 ec 08	 sub	 esp, 8
  0008d	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  00093	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _fx$[ebp]
  00098	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0009d	e8 00 00 00 00	 call	 ?SetScale@CGraphicImageInstance@@QAEXMM@Z ; CGraphicImageInstance::SetScale
$LN4@SetScale:

; 1966 : 
; 1967 : 		if (!m_downVisual.IsEmpty())

  000a2	8d 8e dc 00 00
	00		 lea	 ecx, DWORD PTR [esi+220]
  000a8	e8 00 00 00 00	 call	 ?IsEmpty@CGraphicImageInstance@@QBE_NXZ ; CGraphicImageInstance::IsEmpty
  000ad	84 c0		 test	 al, al
  000af	75 23		 jne	 SHORT $LN5@SetScale

; 1968 : 			m_downVisual.SetScale(fx, fy);

  000b1	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR _fy$[ebp]
  000b6	8d 8e dc 00 00
	00		 lea	 ecx, DWORD PTR [esi+220]
  000bc	83 ec 08	 sub	 esp, 8
  000bf	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  000c5	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _fx$[ebp]
  000ca	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000cf	e8 00 00 00 00	 call	 ?SetScale@CGraphicImageInstance@@QAEXMM@Z ; CGraphicImageInstance::SetScale
$LN5@SetScale:

; 1969 : 
; 1970 : 		if (!m_disableVisual.IsEmpty())

  000d4	8d 8e 04 01 00
	00		 lea	 ecx, DWORD PTR [esi+260]
  000da	e8 00 00 00 00	 call	 ?IsEmpty@CGraphicImageInstance@@QBE_NXZ ; CGraphicImageInstance::IsEmpty
  000df	84 c0		 test	 al, al
  000e1	75 23		 jne	 SHORT $LN6@SetScale

; 1971 : 			m_disableVisual.SetScale(fx, fy);

  000e3	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR _fy$[ebp]
  000e8	8d 8e 04 01 00
	00		 lea	 ecx, DWORD PTR [esi+260]
  000ee	83 ec 08	 sub	 esp, 8
  000f1	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  000f7	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _fx$[ebp]
  000fc	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00101	e8 00 00 00 00	 call	 ?SetScale@CGraphicImageInstance@@QAEXMM@Z ; CGraphicImageInstance::SetScale
$LN6@SetScale:

; 1972 : 		
; 1973 :         const float width = static_cast<float>(GetWidth()) * fx;
; 1974 :         const float height = static_cast<float>(GetHeight()) * fy;
; 1975 : 
; 1976 :         SetSize(static_cast<long>(width), static_cast<long>(height));

  00106	66 0f 6e 46 30	 movd	 xmm0, DWORD PTR [esi+48]
  0010b	8b ce		 mov	 ecx, esi
  0010d	0f 5b c0	 cvtdq2ps xmm0, xmm0
  00110	f3 0f 59 45 0c	 mulss	 xmm0, DWORD PTR _fy$[ebp]
  00115	f3 0f 2c c0	 cvttss2si eax, xmm0
  00119	66 0f 6e 46 2c	 movd	 xmm0, DWORD PTR [esi+44]
  0011e	0f 5b c0	 cvtdq2ps xmm0, xmm0
  00121	50		 push	 eax
  00122	f3 0f 59 45 08	 mulss	 xmm0, DWORD PTR _fx$[ebp]
  00127	f3 0f 2c c0	 cvttss2si eax, xmm0
  0012b	50		 push	 eax
  0012c	e8 00 00 00 00	 call	 ?SetSize@CWindow@UI@@QAEXJJ@Z ; UI::CWindow::SetSize
  00131	5f		 pop	 edi
  00132	5e		 pop	 esi

; 1977 : 	}

  00133	5d		 pop	 ebp
  00134	c2 08 00	 ret	 8
?SetScale@CButton@UI@@QAEXMM@Z ENDP			; UI::CButton::SetScale
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?IsPressed@CButton@UI@@QAEHXZ
_TEXT	SEGMENT
?IsPressed@CButton@UI@@QAEHXZ PROC			; UI::CButton::IsPressed, COMDAT
; _this$ = ecx

; 2052 : 		return m_isPressed;

  00000	8b 81 80 00 00
	00		 mov	 eax, DWORD PTR [ecx+128]

; 2053 : 	}

  00006	c3		 ret	 0
?IsPressed@CButton@UI@@QAEHXZ ENDP			; UI::CButton::IsPressed
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?IsDisable@CButton@UI@@QAEHXZ
_TEXT	SEGMENT
?IsDisable@CButton@UI@@QAEHXZ PROC			; UI::CButton::IsDisable, COMDAT
; _this$ = ecx

; 1883 : 		return m_bEnable;

  00000	8b 41 7c	 mov	 eax, DWORD PTR [ecx+124]

; 1884 : 	}

  00003	c3		 ret	 0
?IsDisable@CButton@UI@@QAEHXZ ENDP			; UI::CButton::IsDisable
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?Down@CButton@UI@@QAEXXZ
_TEXT	SEGMENT
?Down@CButton@UI@@QAEXXZ PROC				; UI::CButton::Down, COMDAT
; _this$ = ecx

; 1905 : 	{

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 1906 : 		m_isPressed = TRUE;
; 1907 : 		SetCurrentVisual(&m_downVisual);

  00003	8d 86 dc 00 00
	00		 lea	 eax, DWORD PTR [esi+220]
  00009	c7 86 80 00 00
	00 01 00 00 00	 mov	 DWORD PTR [esi+128], 1
  00013	50		 push	 eax
  00014	e8 00 00 00 00	 call	 ?SetCurrentVisual@CButton@UI@@IAEXPAVCGraphicImageInstance@@@Z ; UI::CButton::SetCurrentVisual

; 1908 : 		PyCallClassMemberFunc(m_poHandler, "DownEvent", BuildEmptyTuple());

  00019	e8 00 00 00 00	 call	 ?BuildEmptyTuple@UI@@YAPAU_object@@XZ ; UI::BuildEmptyTuple
  0001e	50		 push	 eax
  0001f	68 00 00 00 00	 push	 OFFSET ??_C@_09FJAHACEO@DownEvent@
  00024	ff 76 5c	 push	 DWORD PTR [esi+92]
  00027	e8 00 00 00 00	 call	 ?PyCallClassMemberFunc@@YA_NPAU_object@@PBD0@Z ; PyCallClassMemberFunc
  0002c	83 c4 0c	 add	 esp, 12			; 0000000cH
  0002f	5e		 pop	 esi

; 1909 : 	}

  00030	c3		 ret	 0
?Down@CButton@UI@@QAEXXZ ENDP				; UI::CButton::Down
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?Over@CButton@UI@@QAEXXZ
_TEXT	SEGMENT
?Over@CButton@UI@@QAEXXZ PROC				; UI::CButton::Over, COMDAT
; _this$ = ecx

; 1902 : 		SetCurrentVisual(&m_overVisual);

  00000	8d 81 b4 00 00
	00		 lea	 eax, DWORD PTR [ecx+180]
  00006	50		 push	 eax
  00007	e8 00 00 00 00	 call	 ?SetCurrentVisual@CButton@UI@@IAEXPAVCGraphicImageInstance@@@Z ; UI::CButton::SetCurrentVisual

; 1903 : 	}

  0000c	c3		 ret	 0
?Over@CButton@UI@@QAEXXZ ENDP				; UI::CButton::Over
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?Up@CButton@UI@@QAEXXZ
_TEXT	SEGMENT
?Up@CButton@UI@@QAEXXZ PROC				; UI::CButton::Up, COMDAT
; _this$ = ecx

; 1892 : 	{

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 1893 : 		if (IsIn())

  00003	e8 00 00 00 00	 call	 ?IsIn@CWindow@UI@@QAE_NXZ ; UI::CWindow::IsIn
  00008	84 c0		 test	 al, al
  0000a	b9 b4 00 00 00	 mov	 ecx, 180		; 000000b4H
  0000f	ba 8c 00 00 00	 mov	 edx, 140		; 0000008cH
  00014	0f 45 d1	 cmovne	 edx, ecx

; 1894 : 			SetCurrentVisual(&m_overVisual);
; 1895 : 		else
; 1896 : 			SetCurrentVisual(&m_upVisual);
; 1897 : 
; 1898 : 		PyCallClassMemberFunc(m_poHandler, "CallEvent", BuildEmptyTuple());

  00017	8b ce		 mov	 ecx, esi
  00019	8d 04 32	 lea	 eax, DWORD PTR [edx+esi]
  0001c	50		 push	 eax
  0001d	e8 00 00 00 00	 call	 ?SetCurrentVisual@CButton@UI@@IAEXPAVCGraphicImageInstance@@@Z ; UI::CButton::SetCurrentVisual
  00022	e8 00 00 00 00	 call	 ?BuildEmptyTuple@UI@@YAPAU_object@@XZ ; UI::BuildEmptyTuple
  00027	50		 push	 eax
  00028	68 00 00 00 00	 push	 OFFSET ??_C@_09MFFHPOPB@CallEvent@
  0002d	ff 76 5c	 push	 DWORD PTR [esi+92]
  00030	e8 00 00 00 00	 call	 ?PyCallClassMemberFunc@@YA_NPAU_object@@PBD0@Z ; PyCallClassMemberFunc
  00035	83 c4 0c	 add	 esp, 12			; 0000000cH
  00038	5e		 pop	 esi

; 1899 : 	}

  00039	c3		 ret	 0
?Up@CButton@UI@@QAEXXZ ENDP				; UI::CButton::Up
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?SetUp@CButton@UI@@QAEXXZ
_TEXT	SEGMENT
?SetUp@CButton@UI@@QAEXXZ PROC				; UI::CButton::SetUp, COMDAT
; _this$ = ecx

; 1887 : 	{

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 1888 : 		SetCurrentVisual(&m_upVisual);

  00003	8d 86 8c 00 00
	00		 lea	 eax, DWORD PTR [esi+140]
  00009	50		 push	 eax
  0000a	e8 00 00 00 00	 call	 ?SetCurrentVisual@CButton@UI@@IAEXPAVCGraphicImageInstance@@@Z ; UI::CButton::SetCurrentVisual

; 1889 : 		m_isPressed = FALSE;

  0000f	c7 86 80 00 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+128], 0
  00019	5e		 pop	 esi

; 1890 : 	}

  0001a	c3		 ret	 0
?SetUp@CButton@UI@@QAEXXZ ENDP				; UI::CButton::SetUp
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?Disable@CButton@UI@@QAEXXZ
_TEXT	SEGMENT
?Disable@CButton@UI@@QAEXXZ PROC			; UI::CButton::Disable, COMDAT
; _this$ = ecx

; 1875 : 	{

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	57		 push	 edi

; 1876 : 		m_bEnable = FALSE;
; 1877 : 		if (!m_disableVisual.IsEmpty())

  00004	8d be 04 01 00
	00		 lea	 edi, DWORD PTR [esi+260]
  0000a	c7 46 7c 00 00
	00 00		 mov	 DWORD PTR [esi+124], 0
  00011	8b cf		 mov	 ecx, edi
  00013	e8 00 00 00 00	 call	 ?IsEmpty@CGraphicImageInstance@@QBE_NXZ ; CGraphicImageInstance::IsEmpty
  00018	84 c0		 test	 al, al
  0001a	75 08		 jne	 SHORT $LN2@Disable

; 1878 : 			SetCurrentVisual(&m_disableVisual);

  0001c	57		 push	 edi
  0001d	8b ce		 mov	 ecx, esi
  0001f	e8 00 00 00 00	 call	 ?SetCurrentVisual@CButton@UI@@IAEXPAVCGraphicImageInstance@@@Z ; UI::CButton::SetCurrentVisual
$LN2@Disable:

; 1879 : 	}

  00024	5f		 pop	 edi
  00025	5e		 pop	 esi
  00026	c3		 ret	 0
?Disable@CButton@UI@@QAEXXZ ENDP			; UI::CButton::Disable
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?Enable@CButton@UI@@QAEXXZ
_TEXT	SEGMENT
?Enable@CButton@UI@@QAEXXZ PROC				; UI::CButton::Enable, COMDAT
; _this$ = ecx

; 1869 : 	{

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 1870 : 		SetUp();

  00003	e8 00 00 00 00	 call	 ?SetUp@CButton@UI@@QAEXXZ ; UI::CButton::SetUp

; 1871 : 		m_bEnable = TRUE;

  00008	c7 46 7c 01 00
	00 00		 mov	 DWORD PTR [esi+124], 1
  0000f	5e		 pop	 esi

; 1872 : 	}

  00010	c3		 ret	 0
?Enable@CButton@UI@@QAEXXZ ENDP				; UI::CButton::Enable
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?DisableFlash@CButton@UI@@QAEXXZ
_TEXT	SEGMENT
?DisableFlash@CButton@UI@@QAEXXZ PROC			; UI::CButton::DisableFlash, COMDAT
; _this$ = ecx

; 1865 : 		m_isFlash = FALSE;

  00000	c7 81 84 00 00
	00 00 00 00 00	 mov	 DWORD PTR [ecx+132], 0

; 1866 : 	}

  0000a	c3		 ret	 0
?DisableFlash@CButton@UI@@QAEXXZ ENDP			; UI::CButton::DisableFlash
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?EnableFlash@CButton@UI@@QAEXXZ
_TEXT	SEGMENT
?EnableFlash@CButton@UI@@QAEXXZ PROC			; UI::CButton::EnableFlash, COMDAT
; _this$ = ecx

; 1860 : 		m_isFlash = TRUE;

  00000	c7 81 84 00 00
	00 01 00 00 00	 mov	 DWORD PTR [ecx+132], 1

; 1861 : 	}

  0000a	c3		 ret	 0
?EnableFlash@CButton@UI@@QAEXXZ ENDP			; UI::CButton::EnableFlash
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?Flash@CButton@UI@@QAEXXZ
_TEXT	SEGMENT
?Flash@CButton@UI@@QAEXXZ PROC				; UI::CButton::Flash, COMDAT
; _this$ = ecx

; 1855 : 		m_isFlash = TRUE;

  00000	c7 81 84 00 00
	00 01 00 00 00	 mov	 DWORD PTR [ecx+132], 1

; 1856 : 	}

  0000a	c3		 ret	 0
?Flash@CButton@UI@@QAEXXZ ENDP				; UI::CButton::Flash
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?GetDownVisualFileName@CButton@UI@@QAEPBDXZ
_TEXT	SEGMENT
?GetDownVisualFileName@CButton@UI@@QAEPBDXZ PROC	; UI::CButton::GetDownVisualFileName, COMDAT
; _this$ = ecx

; 1850 : 		return m_downVisual.GetGraphicImagePointer()->GetFileName();

  00000	81 c1 dc 00 00
	00		 add	 ecx, 220		; 000000dcH
  00006	e8 00 00 00 00	 call	 ?GetGraphicImagePointer@CGraphicImageInstance@@QAEPAVCGraphicImage@@XZ ; CGraphicImageInstance::GetGraphicImagePointer
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xstring

; 3888 :         return _Mypair._Myval2._Myptr();

  0000b	83 c0 0c	 add	 eax, 12			; 0000000cH

; 2286 :         return _BUF_SIZE <= _Myres;

  0000e	83 78 14 10	 cmp	 DWORD PTR [eax+20], 16	; 00000010H

; 2273 :         if (_Large_string_engaged()) {

  00012	72 02		 jb	 SHORT $LN8@GetDownVis
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp

; 1850 : 		return m_downVisual.GetGraphicImagePointer()->GetFileName();

  00014	8b 00		 mov	 eax, DWORD PTR [eax]
$LN8@GetDownVis:

; 1851 : 	}

  00016	c3		 ret	 0
?GetDownVisualFileName@CButton@UI@@QAEPBDXZ ENDP	; UI::CButton::GetDownVisualFileName
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?GetOverVisualFileName@CButton@UI@@QAEPBDXZ
_TEXT	SEGMENT
?GetOverVisualFileName@CButton@UI@@QAEPBDXZ PROC	; UI::CButton::GetOverVisualFileName, COMDAT
; _this$ = ecx

; 1846 : 		return m_overVisual.GetGraphicImagePointer()->GetFileName();

  00000	81 c1 b4 00 00
	00		 add	 ecx, 180		; 000000b4H
  00006	e8 00 00 00 00	 call	 ?GetGraphicImagePointer@CGraphicImageInstance@@QAEPAVCGraphicImage@@XZ ; CGraphicImageInstance::GetGraphicImagePointer
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xstring

; 3888 :         return _Mypair._Myval2._Myptr();

  0000b	83 c0 0c	 add	 eax, 12			; 0000000cH

; 2286 :         return _BUF_SIZE <= _Myres;

  0000e	83 78 14 10	 cmp	 DWORD PTR [eax+20], 16	; 00000010H

; 2273 :         if (_Large_string_engaged()) {

  00012	72 02		 jb	 SHORT $LN8@GetOverVis
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp

; 1846 : 		return m_overVisual.GetGraphicImagePointer()->GetFileName();

  00014	8b 00		 mov	 eax, DWORD PTR [eax]
$LN8@GetOverVis:

; 1847 : 	}

  00016	c3		 ret	 0
?GetOverVisualFileName@CButton@UI@@QAEPBDXZ ENDP	; UI::CButton::GetOverVisualFileName
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?GetUpVisualFileName@CButton@UI@@QAEPBDXZ
_TEXT	SEGMENT
?GetUpVisualFileName@CButton@UI@@QAEPBDXZ PROC		; UI::CButton::GetUpVisualFileName, COMDAT
; _this$ = ecx

; 1842 : 		return m_upVisual.GetGraphicImagePointer()->GetFileName();

  00000	81 c1 8c 00 00
	00		 add	 ecx, 140		; 0000008cH
  00006	e8 00 00 00 00	 call	 ?GetGraphicImagePointer@CGraphicImageInstance@@QAEPAVCGraphicImage@@XZ ; CGraphicImageInstance::GetGraphicImagePointer
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xstring

; 3888 :         return _Mypair._Myval2._Myptr();

  0000b	83 c0 0c	 add	 eax, 12			; 0000000cH

; 2286 :         return _BUF_SIZE <= _Myres;

  0000e	83 78 14 10	 cmp	 DWORD PTR [eax+20], 16	; 00000010H

; 2273 :         if (_Large_string_engaged()) {

  00012	72 02		 jb	 SHORT $LN8@GetUpVisua
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp

; 1842 : 		return m_upVisual.GetGraphicImagePointer()->GetFileName();

  00014	8b 00		 mov	 eax, DWORD PTR [eax]
$LN8@GetUpVisua:

; 1843 : 	}

  00016	c3		 ret	 0
?GetUpVisualFileName@CButton@UI@@QAEPBDXZ ENDP		; UI::CButton::GetUpVisualFileName
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?SetDisableVisual@CButton@UI@@QAEHPBD@Z
_TEXT	SEGMENT
_c_szFileName$ = 8					; size = 4
?SetDisableVisual@CButton@UI@@QAEHPBD@Z PROC		; UI::CButton::SetDisableVisual, COMDAT
; _this$ = ecx

; 1826 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx
  00004	56		 push	 esi
  00005	57		 push	 edi

; 1827 : 		CResource * pResource = CResourceManager::Instance().GetResourcePointer(c_szFileName);

  00006	ff 75 08	 push	 DWORD PTR _c_szFileName$[ebp]
  00009	8b f9		 mov	 edi, ecx
  0000b	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCResourceManager@@@@0PAVCResourceManager@@A ; CSingleton<CResourceManager>::ms_singleton
  00011	e8 00 00 00 00	 call	 ?GetResourcePointer@CResourceManager@@QAEPAVCResource@@PBD@Z ; CResourceManager::GetResourcePointer
  00016	8b d8		 mov	 ebx, eax

; 1828 : 		if (!pResource->IsType(CGraphicImage::Type()))

  00018	e8 00 00 00 00	 call	 ?Type@CGraphicImage@@SAKXZ ; CGraphicImage::Type
  0001d	50		 push	 eax
  0001e	8b cb		 mov	 ecx, ebx
  00020	e8 00 00 00 00	 call	 ?IsType@CResource@@QAE_NK@Z ; CResource::IsType
  00025	84 c0		 test	 al, al
  00027	74 46		 je	 SHORT $LN5@SetDisable

; 1829 : 			return FALSE;
; 1830 : 
; 1831 : 		m_disableVisual.SetImagePointer(static_cast<CGraphicImage*>(pResource));

  00029	53		 push	 ebx
  0002a	8d 8f 04 01 00
	00		 lea	 ecx, DWORD PTR [edi+260]
  00030	e8 00 00 00 00	 call	 ?SetImagePointer@CGraphicImageInstance@@QAEXPAVCGraphicImage@@@Z ; CGraphicImageInstance::SetImagePointer

; 1832 : 		if (m_downVisual.IsEmpty())

  00035	8d 8f dc 00 00
	00		 lea	 ecx, DWORD PTR [edi+220]
  0003b	e8 00 00 00 00	 call	 ?IsEmpty@CGraphicImageInstance@@QBE_NXZ ; CGraphicImageInstance::IsEmpty
  00040	84 c0		 test	 al, al
  00042	75 2b		 jne	 SHORT $LN5@SetDisable

; 1833 : 			return FALSE;
; 1834 : 
; 1835 : 		SetSize(m_disableVisual.GetWidth(), m_disableVisual.GetHeight());

  00044	8d 8f 04 01 00
	00		 lea	 ecx, DWORD PTR [edi+260]
  0004a	e8 00 00 00 00	 call	 ?GetHeight@CGraphicImageInstance@@QAEHXZ ; CGraphicImageInstance::GetHeight
  0004f	50		 push	 eax
  00050	8d 8f 04 01 00
	00		 lea	 ecx, DWORD PTR [edi+260]
  00056	e8 00 00 00 00	 call	 ?GetWidth@CGraphicImageInstance@@QAEHXZ ; CGraphicImageInstance::GetWidth
  0005b	50		 push	 eax
  0005c	8b cf		 mov	 ecx, edi
  0005e	e8 00 00 00 00	 call	 ?SetSize@CWindow@UI@@QAEXJJ@Z ; UI::CWindow::SetSize
  00063	5f		 pop	 edi

; 1836 : 
; 1837 : 		return TRUE;
; 1838 : 	}

  00064	5e		 pop	 esi
  00065	b8 01 00 00 00	 mov	 eax, 1
  0006a	5b		 pop	 ebx
  0006b	5d		 pop	 ebp
  0006c	c2 04 00	 ret	 4
$LN5@SetDisable:
  0006f	5f		 pop	 edi
  00070	5e		 pop	 esi
  00071	33 c0		 xor	 eax, eax
  00073	5b		 pop	 ebx
  00074	5d		 pop	 ebp
  00075	c2 04 00	 ret	 4
?SetDisableVisual@CButton@UI@@QAEHPBD@Z ENDP		; UI::CButton::SetDisableVisual
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?SetDownVisual@CButton@UI@@QAEHPBD@Z
_TEXT	SEGMENT
_c_szFileName$ = 8					; size = 4
?SetDownVisual@CButton@UI@@QAEHPBD@Z PROC		; UI::CButton::SetDownVisual, COMDAT
; _this$ = ecx

; 1812 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx
  00004	56		 push	 esi
  00005	57		 push	 edi

; 1813 : 		CResource * pResource = CResourceManager::Instance().GetResourcePointer(c_szFileName);

  00006	ff 75 08	 push	 DWORD PTR _c_szFileName$[ebp]
  00009	8b f9		 mov	 edi, ecx
  0000b	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCResourceManager@@@@0PAVCResourceManager@@A ; CSingleton<CResourceManager>::ms_singleton
  00011	e8 00 00 00 00	 call	 ?GetResourcePointer@CResourceManager@@QAEPAVCResource@@PBD@Z ; CResourceManager::GetResourcePointer
  00016	8b d8		 mov	 ebx, eax

; 1814 : 		if (!pResource->IsType(CGraphicImage::Type()))

  00018	e8 00 00 00 00	 call	 ?Type@CGraphicImage@@SAKXZ ; CGraphicImage::Type
  0001d	50		 push	 eax
  0001e	8b cb		 mov	 ecx, ebx
  00020	e8 00 00 00 00	 call	 ?IsType@CResource@@QAE_NK@Z ; CResource::IsType
  00025	84 c0		 test	 al, al
  00027	74 46		 je	 SHORT $LN5@SetDownVis

; 1815 : 			return FALSE;
; 1816 : 
; 1817 : 		m_downVisual.SetImagePointer(static_cast<CGraphicImage*>(pResource));

  00029	53		 push	 ebx
  0002a	8d 8f dc 00 00
	00		 lea	 ecx, DWORD PTR [edi+220]
  00030	e8 00 00 00 00	 call	 ?SetImagePointer@CGraphicImageInstance@@QAEXPAVCGraphicImage@@@Z ; CGraphicImageInstance::SetImagePointer

; 1818 : 		if (m_downVisual.IsEmpty())

  00035	8d 8f dc 00 00
	00		 lea	 ecx, DWORD PTR [edi+220]
  0003b	e8 00 00 00 00	 call	 ?IsEmpty@CGraphicImageInstance@@QBE_NXZ ; CGraphicImageInstance::IsEmpty
  00040	84 c0		 test	 al, al
  00042	75 2b		 jne	 SHORT $LN5@SetDownVis

; 1819 : 			return FALSE;
; 1820 : 
; 1821 : 		SetSize(m_downVisual.GetWidth(), m_downVisual.GetHeight());

  00044	8d 8f dc 00 00
	00		 lea	 ecx, DWORD PTR [edi+220]
  0004a	e8 00 00 00 00	 call	 ?GetHeight@CGraphicImageInstance@@QAEHXZ ; CGraphicImageInstance::GetHeight
  0004f	50		 push	 eax
  00050	8d 8f dc 00 00
	00		 lea	 ecx, DWORD PTR [edi+220]
  00056	e8 00 00 00 00	 call	 ?GetWidth@CGraphicImageInstance@@QAEHXZ ; CGraphicImageInstance::GetWidth
  0005b	50		 push	 eax
  0005c	8b cf		 mov	 ecx, edi
  0005e	e8 00 00 00 00	 call	 ?SetSize@CWindow@UI@@QAEXJJ@Z ; UI::CWindow::SetSize
  00063	5f		 pop	 edi

; 1822 : 
; 1823 : 		return TRUE;
; 1824 : 	}

  00064	5e		 pop	 esi
  00065	b8 01 00 00 00	 mov	 eax, 1
  0006a	5b		 pop	 ebx
  0006b	5d		 pop	 ebp
  0006c	c2 04 00	 ret	 4
$LN5@SetDownVis:
  0006f	5f		 pop	 edi
  00070	5e		 pop	 esi
  00071	33 c0		 xor	 eax, eax
  00073	5b		 pop	 ebx
  00074	5d		 pop	 ebp
  00075	c2 04 00	 ret	 4
?SetDownVisual@CButton@UI@@QAEHPBD@Z ENDP		; UI::CButton::SetDownVisual
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?SetOverVisual@CButton@UI@@QAEHPBD@Z
_TEXT	SEGMENT
_c_szFileName$ = 8					; size = 4
?SetOverVisual@CButton@UI@@QAEHPBD@Z PROC		; UI::CButton::SetOverVisual, COMDAT
; _this$ = ecx

; 1798 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx
  00004	56		 push	 esi
  00005	57		 push	 edi

; 1799 : 		CResource * pResource = CResourceManager::Instance().GetResourcePointer(c_szFileName);

  00006	ff 75 08	 push	 DWORD PTR _c_szFileName$[ebp]
  00009	8b f9		 mov	 edi, ecx
  0000b	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCResourceManager@@@@0PAVCResourceManager@@A ; CSingleton<CResourceManager>::ms_singleton
  00011	e8 00 00 00 00	 call	 ?GetResourcePointer@CResourceManager@@QAEPAVCResource@@PBD@Z ; CResourceManager::GetResourcePointer
  00016	8b d8		 mov	 ebx, eax

; 1800 : 		if (!pResource->IsType(CGraphicImage::Type()))

  00018	e8 00 00 00 00	 call	 ?Type@CGraphicImage@@SAKXZ ; CGraphicImage::Type
  0001d	50		 push	 eax
  0001e	8b cb		 mov	 ecx, ebx
  00020	e8 00 00 00 00	 call	 ?IsType@CResource@@QAE_NK@Z ; CResource::IsType
  00025	84 c0		 test	 al, al
  00027	74 46		 je	 SHORT $LN5@SetOverVis

; 1801 : 			return FALSE;
; 1802 : 
; 1803 : 		m_overVisual.SetImagePointer(static_cast<CGraphicImage*>(pResource));

  00029	53		 push	 ebx
  0002a	8d 8f b4 00 00
	00		 lea	 ecx, DWORD PTR [edi+180]
  00030	e8 00 00 00 00	 call	 ?SetImagePointer@CGraphicImageInstance@@QAEXPAVCGraphicImage@@@Z ; CGraphicImageInstance::SetImagePointer

; 1804 : 		if (m_overVisual.IsEmpty())

  00035	8d 8f b4 00 00
	00		 lea	 ecx, DWORD PTR [edi+180]
  0003b	e8 00 00 00 00	 call	 ?IsEmpty@CGraphicImageInstance@@QBE_NXZ ; CGraphicImageInstance::IsEmpty
  00040	84 c0		 test	 al, al
  00042	75 2b		 jne	 SHORT $LN5@SetOverVis

; 1805 : 			return FALSE;
; 1806 : 
; 1807 : 		SetSize(m_overVisual.GetWidth(), m_overVisual.GetHeight());

  00044	8d 8f b4 00 00
	00		 lea	 ecx, DWORD PTR [edi+180]
  0004a	e8 00 00 00 00	 call	 ?GetHeight@CGraphicImageInstance@@QAEHXZ ; CGraphicImageInstance::GetHeight
  0004f	50		 push	 eax
  00050	8d 8f b4 00 00
	00		 lea	 ecx, DWORD PTR [edi+180]
  00056	e8 00 00 00 00	 call	 ?GetWidth@CGraphicImageInstance@@QAEHXZ ; CGraphicImageInstance::GetWidth
  0005b	50		 push	 eax
  0005c	8b cf		 mov	 ecx, edi
  0005e	e8 00 00 00 00	 call	 ?SetSize@CWindow@UI@@QAEXJJ@Z ; UI::CWindow::SetSize
  00063	5f		 pop	 edi

; 1808 : 
; 1809 : 		return TRUE;
; 1810 : 	}

  00064	5e		 pop	 esi
  00065	b8 01 00 00 00	 mov	 eax, 1
  0006a	5b		 pop	 ebx
  0006b	5d		 pop	 ebp
  0006c	c2 04 00	 ret	 4
$LN5@SetOverVis:
  0006f	5f		 pop	 edi
  00070	5e		 pop	 esi
  00071	33 c0		 xor	 eax, eax
  00073	5b		 pop	 ebx
  00074	5d		 pop	 ebp
  00075	c2 04 00	 ret	 4
?SetOverVisual@CButton@UI@@QAEHPBD@Z ENDP		; UI::CButton::SetOverVisual
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?SetUpVisual@CButton@UI@@QAEHPBD@Z
_TEXT	SEGMENT
_c_szFileName$ = 8					; size = 4
?SetUpVisual@CButton@UI@@QAEHPBD@Z PROC			; UI::CButton::SetUpVisual, COMDAT
; _this$ = ecx

; 1781 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx
  00004	56		 push	 esi
  00005	57		 push	 edi

; 1782 : 		CResource * pResource = CResourceManager::Instance().GetResourcePointer(c_szFileName);

  00006	ff 75 08	 push	 DWORD PTR _c_szFileName$[ebp]
  00009	8b f9		 mov	 edi, ecx
  0000b	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCResourceManager@@@@0PAVCResourceManager@@A ; CSingleton<CResourceManager>::ms_singleton
  00011	e8 00 00 00 00	 call	 ?GetResourcePointer@CResourceManager@@QAEPAVCResource@@PBD@Z ; CResourceManager::GetResourcePointer
  00016	8b d8		 mov	 ebx, eax

; 1783 : 		if (!pResource->IsType(CGraphicImage::Type()))

  00018	e8 00 00 00 00	 call	 ?Type@CGraphicImage@@SAKXZ ; CGraphicImage::Type
  0001d	50		 push	 eax
  0001e	8b cb		 mov	 ecx, ebx
  00020	e8 00 00 00 00	 call	 ?IsType@CResource@@QAE_NK@Z ; CResource::IsType
  00025	84 c0		 test	 al, al
  00027	74 44		 je	 SHORT $LN5@SetUpVisua

; 1784 : 			return FALSE;
; 1785 : 
; 1786 : 		m_upVisual.SetImagePointer(static_cast<CGraphicImage*>(pResource));

  00029	8d b7 8c 00 00
	00		 lea	 esi, DWORD PTR [edi+140]
  0002f	53		 push	 ebx
  00030	8b ce		 mov	 ecx, esi
  00032	e8 00 00 00 00	 call	 ?SetImagePointer@CGraphicImageInstance@@QAEXPAVCGraphicImage@@@Z ; CGraphicImageInstance::SetImagePointer

; 1787 : 		if (m_upVisual.IsEmpty())

  00037	8b ce		 mov	 ecx, esi
  00039	e8 00 00 00 00	 call	 ?IsEmpty@CGraphicImageInstance@@QBE_NXZ ; CGraphicImageInstance::IsEmpty
  0003e	84 c0		 test	 al, al
  00040	75 2b		 jne	 SHORT $LN5@SetUpVisua

; 1788 : 			return FALSE;
; 1789 : 
; 1790 : 		SetSize(m_upVisual.GetWidth(), m_upVisual.GetHeight());

  00042	8b ce		 mov	 ecx, esi
  00044	e8 00 00 00 00	 call	 ?GetHeight@CGraphicImageInstance@@QAEHXZ ; CGraphicImageInstance::GetHeight
  00049	50		 push	 eax
  0004a	8b ce		 mov	 ecx, esi
  0004c	e8 00 00 00 00	 call	 ?GetWidth@CGraphicImageInstance@@QAEHXZ ; CGraphicImageInstance::GetWidth
  00051	50		 push	 eax
  00052	8b cf		 mov	 ecx, edi
  00054	e8 00 00 00 00	 call	 ?SetSize@CWindow@UI@@QAEXJJ@Z ; UI::CWindow::SetSize

; 1791 : 		//
; 1792 : 		SetCurrentVisual(&m_upVisual);

  00059	56		 push	 esi
  0005a	8b cf		 mov	 ecx, edi
  0005c	e8 00 00 00 00	 call	 ?SetCurrentVisual@CButton@UI@@IAEXPAVCGraphicImageInstance@@@Z ; UI::CButton::SetCurrentVisual
  00061	5f		 pop	 edi

; 1793 : 		//
; 1794 : 
; 1795 : 		return TRUE;
; 1796 : 	}

  00062	5e		 pop	 esi
  00063	b8 01 00 00 00	 mov	 eax, 1
  00068	5b		 pop	 ebx
  00069	5d		 pop	 ebp
  0006a	c2 04 00	 ret	 4
$LN5@SetUpVisua:
  0006d	5f		 pop	 edi
  0006e	5e		 pop	 esi
  0006f	33 c0		 xor	 eax, eax
  00071	5b		 pop	 ebx
  00072	5d		 pop	 ebp
  00073	c2 04 00	 ret	 4
?SetUpVisual@CButton@UI@@QAEHPBD@Z ENDP			; UI::CButton::SetUpVisual
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ??1CButton@UI@@UAE@XZ
_TEXT	SEGMENT
??1CButton@UI@@UAE@XZ PROC				; UI::CButton::~CButton, COMDAT
; _this$ = ecx

; 1777 : 	{

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 1778 : 	}

  00003	8d 8e 04 01 00
	00		 lea	 ecx, DWORD PTR [esi+260]
  00009	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CButton@UI@@6B@
  0000f	e8 00 00 00 00	 call	 ??1CGraphicImageInstance@@UAE@XZ ; CGraphicImageInstance::~CGraphicImageInstance
  00014	8d 8e dc 00 00
	00		 lea	 ecx, DWORD PTR [esi+220]
  0001a	e8 00 00 00 00	 call	 ??1CGraphicImageInstance@@UAE@XZ ; CGraphicImageInstance::~CGraphicImageInstance
  0001f	8d 8e b4 00 00
	00		 lea	 ecx, DWORD PTR [esi+180]
  00025	e8 00 00 00 00	 call	 ??1CGraphicImageInstance@@UAE@XZ ; CGraphicImageInstance::~CGraphicImageInstance
  0002a	8d 8e 8c 00 00
	00		 lea	 ecx, DWORD PTR [esi+140]
  00030	e8 00 00 00 00	 call	 ??1CGraphicImageInstance@@UAE@XZ ; CGraphicImageInstance::~CGraphicImageInstance
  00035	8b ce		 mov	 ecx, esi
  00037	5e		 pop	 esi
  00038	e9 00 00 00 00	 jmp	 ??1CWindow@UI@@UAE@XZ	; UI::CWindow::~CWindow
??1CButton@UI@@UAE@XZ ENDP				; UI::CButton::~CButton
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.h
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ??0CButton@UI@@QAE@PAU_object@@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_ppyObject$ = 8						; size = 4
??0CButton@UI@@QAE@PAU_object@@@Z PROC			; UI::CButton::CButton, COMDAT
; _this$ = ecx

; 1773 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0CButton@UI@@QAE@PAU_object@@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	56		 push	 esi
  00013	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00018	33 c5		 xor	 eax, ebp
  0001a	50		 push	 eax
  0001b	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001e	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00024	8b f1		 mov	 esi, ecx
  00026	89 75 f0	 mov	 DWORD PTR _this$[ebp], esi

; 1766 : 		:	CWindow(ppyObject),

  00029	ff 75 08	 push	 DWORD PTR _ppyObject$[ebp]
  0002c	e8 00 00 00 00	 call	 ??0CWindow@UI@@QAE@PAU_object@@@Z ; UI::CWindow::CWindow

; 1773 : 	{

  00031	8d 8e 8c 00 00
	00		 lea	 ecx, DWORD PTR [esi+140]
  00037	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0003e	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CButton@UI@@6B@
  00044	c7 46 7c 01 00
	00 00		 mov	 DWORD PTR [esi+124], 1
  0004b	c7 86 80 00 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+128], 0
  00055	c7 86 84 00 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+132], 0
  0005f	c7 86 88 00 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+136], 0
  00069	e8 00 00 00 00	 call	 ??0CGraphicImageInstance@@QAE@XZ ; CGraphicImageInstance::CGraphicImageInstance
  0006e	8d 8e b4 00 00
	00		 lea	 ecx, DWORD PTR [esi+180]
  00074	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  00078	e8 00 00 00 00	 call	 ??0CGraphicImageInstance@@QAE@XZ ; CGraphicImageInstance::CGraphicImageInstance
  0007d	8d 8e dc 00 00
	00		 lea	 ecx, DWORD PTR [esi+220]
  00083	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  00087	e8 00 00 00 00	 call	 ??0CGraphicImageInstance@@QAE@XZ ; CGraphicImageInstance::CGraphicImageInstance
  0008c	8d 8e 04 01 00
	00		 lea	 ecx, DWORD PTR [esi+260]
  00092	c6 45 fc 03	 mov	 BYTE PTR __$EHRec$[ebp+8], 3
  00096	e8 00 00 00 00	 call	 ??0CGraphicImageInstance@@QAE@XZ ; CGraphicImageInstance::CGraphicImageInstance
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.h

; 97   : 			void			AddFlag(DWORD flag)		{ SET_BIT(m_dwFlag, flag);		}

  0009b	81 4e 58 80 00
	00 00		 or	 DWORD PTR [esi+88], 128	; 00000080H
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp

; 1775 : 	}

  000a2	8b c6		 mov	 eax, esi
  000a4	c7 86 2c 01 00
	00 00 00 80 3f	 mov	 DWORD PTR [esi+300], 1065353216 ; 3f800000H
  000ae	c7 86 30 01 00
	00 00 00 80 3f	 mov	 DWORD PTR [esi+304], 1065353216 ; 3f800000H
  000b8	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000bb	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000c2	59		 pop	 ecx
  000c3	5e		 pop	 esi
  000c4	8b e5		 mov	 esp, ebp
  000c6	5d		 pop	 ebp
  000c7	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0CButton@UI@@QAE@PAU_object@@@Z$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1CWindow@UI@@UAE@XZ	; UI::CWindow::~CWindow
__unwindfunclet$??0CButton@UI@@QAE@PAU_object@@@Z$1:
  00008	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0000b	81 c1 8c 00 00
	00		 add	 ecx, 140		; 0000008cH
  00011	e9 00 00 00 00	 jmp	 ??1CGraphicImageInstance@@UAE@XZ ; CGraphicImageInstance::~CGraphicImageInstance
__unwindfunclet$??0CButton@UI@@QAE@PAU_object@@@Z$2:
  00016	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00019	81 c1 b4 00 00
	00		 add	 ecx, 180		; 000000b4H
  0001f	e9 00 00 00 00	 jmp	 ??1CGraphicImageInstance@@UAE@XZ ; CGraphicImageInstance::~CGraphicImageInstance
__unwindfunclet$??0CButton@UI@@QAE@PAU_object@@@Z$3:
  00024	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00027	81 c1 dc 00 00
	00		 add	 ecx, 220		; 000000dcH
  0002d	e9 00 00 00 00	 jmp	 ??1CGraphicImageInstance@@UAE@XZ ; CGraphicImageInstance::~CGraphicImageInstance
  00032	cc		 int	 3
  00033	cc		 int	 3
  00034	cc		 int	 3
  00035	cc		 int	 3
  00036	cc		 int	 3
__ehhandler$??0CButton@UI@@QAE@PAU_object@@@Z:
  00037	90		 npad	 1
  00038	90		 npad	 1
  00039	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0003d	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00040	8b 4a f4	 mov	 ecx, DWORD PTR [edx-12]
  00043	33 c8		 xor	 ecx, eax
  00045	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0004a	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0CButton@UI@@QAE@PAU_object@@@Z
  0004f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0CButton@UI@@QAE@PAU_object@@@Z ENDP			; UI::CButton::CButton
; Function compile flags: /Ogtp
;	COMDAT ??_GCAniImageBox@UI@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCAniImageBox@UI@@UAEPAXI@Z PROC			; UI::CAniImageBox::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1CAniImageBox@UI@@UAE@XZ ; UI::CAniImageBox::~CAniImageBox
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0e		 je	 SHORT $LN4@scalar
  00011	68 94 00 00 00	 push	 148			; 00000094H
  00016	56		 push	 esi
  00017	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0001c	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001f	8b c6		 mov	 eax, esi
  00021	5e		 pop	 esi
  00022	5d		 pop	 ebp
  00023	c2 04 00	 ret	 4
??_GCAniImageBox@UI@@UAEPAXI@Z ENDP			; UI::CAniImageBox::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnIsType@CAniImageBox@UI@@MAEHK@Z
_TEXT	SEGMENT
_dwType$ = 8						; size = 4
?OnIsType@CAniImageBox@UI@@MAEHK@Z PROC			; UI::CAniImageBox::OnIsType, COMDAT
; _this$ = ecx

; 1573 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1574 : 		if (CAniImageBox::Type() == dwType)

  00003	e8 00 00 00 00	 call	 ?Type@CAniImageBox@UI@@SAKXZ ; UI::CAniImageBox::Type
  00008	33 c9		 xor	 ecx, ecx
  0000a	3b 45 08	 cmp	 eax, DWORD PTR _dwType$[ebp]
  0000d	0f 94 c1	 sete	 cl
  00010	8b c1		 mov	 eax, ecx

; 1575 : 			return TRUE;
; 1576 : 
; 1577 : 		return FALSE;
; 1578 : 	}

  00012	5d		 pop	 ebp
  00013	c2 04 00	 ret	 4
?OnIsType@CAniImageBox@UI@@MAEHK@Z ENDP			; UI::CAniImageBox::OnIsType
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnEndFrame@CAniImageBox@UI@@MAEXXZ
_TEXT	SEGMENT
?OnEndFrame@CAniImageBox@UI@@MAEXXZ PROC		; UI::CAniImageBox::OnEndFrame, COMDAT
; _this$ = ecx

; 1757 : 	{

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 1758 : 		PyCallClassMemberFunc(m_poHandler, "OnEndFrame", BuildEmptyTuple());

  00003	e8 00 00 00 00	 call	 ?BuildEmptyTuple@UI@@YAPAU_object@@XZ ; UI::BuildEmptyTuple
  00008	50		 push	 eax
  00009	68 00 00 00 00	 push	 OFFSET ??_C@_0L@LBHHAGOH@OnEndFrame@
  0000e	ff 76 5c	 push	 DWORD PTR [esi+92]
  00011	e8 00 00 00 00	 call	 ?PyCallClassMemberFunc@@YA_NPAU_object@@PBD0@Z ; PyCallClassMemberFunc
  00016	83 c4 0c	 add	 esp, 12			; 0000000cH
  00019	5e		 pop	 esi

; 1759 : 	}

  0001a	c3		 ret	 0
?OnEndFrame@CAniImageBox@UI@@MAEXXZ ENDP		; UI::CAniImageBox::OnEndFrame
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\algorithm
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\algorithm
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\algorithm
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnChangePosition@CAniImageBox@UI@@MAEXXZ
_TEXT	SEGMENT
_changePosition$$sroa$149$1$ = -8			; size = 4
_changePosition$$sroa$150$1$ = -4			; size = 4
?OnChangePosition@CAniImageBox@UI@@MAEXXZ PROC		; UI::CAniImageBox::OnChangePosition, COMDAT
; _this$ = ecx

; 1749 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	66 0f 6e 41 34	 movd	 xmm0, DWORD PTR [ecx+52]
  0000b	66 0f 6e 49 38	 movd	 xmm1, DWORD PTR [ecx+56]

; 1750 : 		FChangePosition changePosition;
; 1751 : 		changePosition.fx = m_rect.left;

  00010	0f 5b c0	 cvtdq2ps xmm0, xmm0
  00013	56		 push	 esi
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\algorithm

; 232  :     for (; _UFirst != _ULast; ++_UFirst) {

  00014	8b b1 80 00 00
	00		 mov	 esi, DWORD PTR [ecx+128]
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp

; 1749 : 	{

  0001a	57		 push	 edi
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\vector

; 41   :     _CONSTEXPR20_CONTAINER _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  0001b	8b b9 84 00 00
	00		 mov	 edi, DWORD PTR [ecx+132]
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp

; 1752 : 		changePosition.fy = m_rect.top;

  00021	0f 5b c9	 cvtdq2ps xmm1, xmm1
  00024	f3 0f 11 45 fc	 movss	 DWORD PTR _changePosition$$sroa$150$1$[ebp], xmm0
  00029	f3 0f 11 4d f8	 movss	 DWORD PTR _changePosition$$sroa$149$1$[ebp], xmm1
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\algorithm

; 232  :     for (; _UFirst != _ULast; ++_UFirst) {

  0002e	3b f7		 cmp	 esi, edi
  00030	74 26		 je	 SHORT $LN17@OnChangePo
$LL18@OnChangePo:
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp

; 1744 : 			pInstance->SetPosition(fx, fy);

  00032	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00034	83 ec 08	 sub	 esp, 8
  00037	f3 0f 11 4c 24
	04		 movss	 DWORD PTR [esp+4], xmm1
  0003d	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00042	e8 00 00 00 00	 call	 ?SetPosition@CGraphicImageInstance@@QAEXMM@Z ; CGraphicImageInstance::SetPosition
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\algorithm

; 232  :     for (; _UFirst != _ULast; ++_UFirst) {

  00047	f3 0f 10 45 fc	 movss	 xmm0, DWORD PTR _changePosition$$sroa$150$1$[ebp]
  0004c	83 c6 04	 add	 esi, 4
  0004f	f3 0f 10 4d f8	 movss	 xmm1, DWORD PTR _changePosition$$sroa$149$1$[ebp]
  00054	3b f7		 cmp	 esi, edi
  00056	75 da		 jne	 SHORT $LL18@OnChangePo
$LN17@OnChangePo:
  00058	5f		 pop	 edi
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp

; 1754 : 	}

  00059	5e		 pop	 esi
  0005a	8b e5		 mov	 esp, ebp
  0005c	5d		 pop	 ebp
  0005d	c3		 ret	 0
?OnChangePosition@CAniImageBox@UI@@MAEXXZ ENDP		; UI::CAniImageBox::OnChangePosition
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnRender@CAniImageBox@UI@@MAEXXZ
_TEXT	SEGMENT
?OnRender@CAniImageBox@UI@@MAEXXZ PROC			; UI::CAniImageBox::OnRender, COMDAT
; _this$ = ecx
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\vector

; 1536 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00000	8b 81 84 00 00
	00		 mov	 eax, DWORD PTR [ecx+132]
  00006	8b 91 80 00 00
	00		 mov	 edx, DWORD PTR [ecx+128]
  0000c	2b c2		 sub	 eax, edx
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp

; 1731 : 	{

  0000e	56		 push	 esi

; 1732 : 		if (m_bycurIndex < m_ImageVector.size())

  0000f	0f b6 71 7e	 movzx	 esi, BYTE PTR [ecx+126]
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\vector

; 1536 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00013	c1 f8 02	 sar	 eax, 2
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp

; 1732 : 		if (m_bycurIndex < m_ImageVector.size())

  00016	3b f0		 cmp	 esi, eax
  00018	73 09		 jae	 SHORT $LN2@OnRender

; 1733 : 		{
; 1734 : 			CGraphicExpandedImageInstance * pImage = m_ImageVector[m_bycurIndex];
; 1735 : 			pImage->Render();

  0001a	8b 0c b2	 mov	 ecx, DWORD PTR [edx+esi*4]
  0001d	5e		 pop	 esi
  0001e	e9 00 00 00 00	 jmp	 ?Render@CGraphicImageInstance@@QAEXXZ ; CGraphicImageInstance::Render
$LN2@OnRender:
  00023	5e		 pop	 esi

; 1736 : 		}
; 1737 : 	}

  00024	c3		 ret	 0
?OnRender@CAniImageBox@UI@@MAEXXZ ENDP			; UI::CAniImageBox::OnRender
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnUpdate@CAniImageBox@UI@@MAEXXZ
_TEXT	SEGMENT
?OnUpdate@CAniImageBox@UI@@MAEXXZ PROC			; UI::CAniImageBox::OnUpdate, COMDAT
; _this$ = ecx

; 1715 : 	{

  00000	8b d1		 mov	 edx, ecx

; 1716 : 		++m_bycurDelay;

  00002	fe 42 7c	 inc	 BYTE PTR [edx+124]
  00005	8a 42 7c	 mov	 al, BYTE PTR [edx+124]

; 1717 : 		if (m_bycurDelay < m_byDelay)

  00008	3a 42 7d	 cmp	 al, BYTE PTR [edx+125]
  0000b	72 2c		 jb	 SHORT $LN3@OnUpdate

; 1718 : 			return;
; 1719 : 
; 1720 : 		m_bycurDelay = 0;
; 1721 : 
; 1722 : 		++m_bycurIndex;

  0000d	fe 42 7e	 inc	 BYTE PTR [edx+126]

; 1723 : 		if (m_bycurIndex >= m_ImageVector.size())

  00010	0f b6 42 7e	 movzx	 eax, BYTE PTR [edx+126]
  00014	c6 42 7c 00	 mov	 BYTE PTR [edx+124], 0
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\vector

; 1536 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00018	8b 8a 84 00 00
	00		 mov	 ecx, DWORD PTR [edx+132]
  0001e	2b 8a 80 00 00
	00		 sub	 ecx, DWORD PTR [edx+128]
  00024	c1 f9 02	 sar	 ecx, 2
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp

; 1723 : 		if (m_bycurIndex >= m_ImageVector.size())

  00027	3b c1		 cmp	 eax, ecx
  00029	72 0e		 jb	 SHORT $LN3@OnUpdate

; 1724 : 		{
; 1725 : 			m_bycurIndex = 0;
; 1726 : 
; 1727 : 			OnEndFrame();

  0002b	8b 02		 mov	 eax, DWORD PTR [edx]
  0002d	8b ca		 mov	 ecx, edx
  0002f	c6 42 7e 00	 mov	 BYTE PTR [edx+126], 0
  00033	ff a0 a0 00 00
	00		 jmp	 DWORD PTR [eax+160]
$LN3@OnUpdate:

; 1728 : 		}
; 1729 : 	}

  00039	c3		 ret	 0
?OnUpdate@CAniImageBox@UI@@MAEXXZ ENDP			; UI::CAniImageBox::OnUpdate
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?SetRotation@CAniImageBox@UI@@QAEXM@Z
_TEXT	SEGMENT
_fRotation$ = 8						; size = 4
?SetRotation@CAniImageBox@UI@@QAEXM@Z PROC		; UI::CAniImageBox::SetRotation, COMDAT
; _this$ = ecx

; 1601 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx
  00004	56		 push	 esi
  00005	8b f1		 mov	 esi, ecx

; 1602 : 		for (BYTE a = 0; a < m_ImageVector.size(); a++)

  00007	32 db		 xor	 bl, bl
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\vector

; 1536 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00009	8b 86 84 00 00
	00		 mov	 eax, DWORD PTR [esi+132]
  0000f	8b 96 80 00 00
	00		 mov	 edx, DWORD PTR [esi+128]
  00015	2b c2		 sub	 eax, edx
  00017	c1 f8 02	 sar	 eax, 2
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp

; 1602 : 		for (BYTE a = 0; a < m_ImageVector.size(); a++)

  0001a	85 c0		 test	 eax, eax
  0001c	74 33		 je	 SHORT $LN3@SetRotatio
  0001e	33 c9		 xor	 ecx, ecx
$LL4@SetRotatio:

; 1603 : 		{
; 1604 : 			CGraphicExpandedImageInstance* pImage = m_ImageVector[a];

  00020	8b 0c 8a	 mov	 ecx, DWORD PTR [edx+ecx*4]

; 1605 : 			if (pImage)

  00023	85 c9		 test	 ecx, ecx
  00025	74 10		 je	 SHORT $LN2@SetRotatio

; 1606 : 				pImage->SetRotation(fRotation);

  00027	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _fRotation$[ebp]
  0002c	51		 push	 ecx
  0002d	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00032	e8 00 00 00 00	 call	 ?SetRotation@CGraphicExpandedImageInstance@@QAEXM@Z ; CGraphicExpandedImageInstance::SetRotation
$LN2@SetRotatio:
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\vector

; 1536 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00037	8b 86 84 00 00
	00		 mov	 eax, DWORD PTR [esi+132]
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp

; 1602 : 		for (BYTE a = 0; a < m_ImageVector.size(); a++)

  0003d	fe c3		 inc	 bl
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\vector

; 1536 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  0003f	8b 96 80 00 00
	00		 mov	 edx, DWORD PTR [esi+128]
  00045	2b c2		 sub	 eax, edx
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp

; 1602 : 		for (BYTE a = 0; a < m_ImageVector.size(); a++)

  00047	0f b6 cb	 movzx	 ecx, bl
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\vector

; 1536 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  0004a	c1 f8 02	 sar	 eax, 2
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp

; 1602 : 		for (BYTE a = 0; a < m_ImageVector.size(); a++)

  0004d	3b c8		 cmp	 ecx, eax
  0004f	72 cf		 jb	 SHORT $LL4@SetRotatio
$LN3@SetRotatio:
  00051	5e		 pop	 esi

; 1607 : 		}
; 1608 : 	}

  00052	5b		 pop	 ebx
  00053	5d		 pop	 ebp
  00054	c2 04 00	 ret	 4
?SetRotation@CAniImageBox@UI@@QAEXM@Z ENDP		; UI::CAniImageBox::SetRotation
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?ResetFrame@CAniImageBox@UI@@QAEXXZ
_TEXT	SEGMENT
?ResetFrame@CAniImageBox@UI@@QAEXXZ PROC		; UI::CAniImageBox::ResetFrame, COMDAT
; _this$ = ecx

; 1711 : 		m_bycurIndex = 0;

  00000	c6 41 7e 00	 mov	 BYTE PTR [ecx+126], 0

; 1712 : 	}

  00004	c3		 ret	 0
?ResetFrame@CAniImageBox@UI@@QAEXXZ ENDP		; UI::CAniImageBox::ResetFrame
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\algorithm
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\algorithm
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\algorithm
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?SetAniImgScale@CAniImageBox@UI@@QAEXMM@Z
_TEXT	SEGMENT
_fScaleX$ = 8						; size = 4
_fScaleY$ = 12						; size = 4
?SetAniImgScale@CAniImageBox@UI@@QAEXMM@Z PROC		; UI::CAniImageBox::SetAniImgScale, COMDAT
; _this$ = ecx

; 1698 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1699 : 		m_fScaleX = fScaleX;

  00003	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _fScaleX$[ebp]

; 1700 : 		m_fScaleY = fScaleY;

  00008	f3 0f 10 4d 0c	 movss	 xmm1, DWORD PTR _fScaleY$[ebp]
  0000d	56		 push	 esi
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\algorithm

; 232  :     for (; _UFirst != _ULast; ++_UFirst) {

  0000e	8b b1 80 00 00
	00		 mov	 esi, DWORD PTR [ecx+128]
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp

; 1698 : 	{

  00014	57		 push	 edi
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\vector

; 41   :     _CONSTEXPR20_CONTAINER _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  00015	8b b9 84 00 00
	00		 mov	 edi, DWORD PTR [ecx+132]
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp

; 1699 : 		m_fScaleX = fScaleX;

  0001b	f3 0f 11 81 8c
	00 00 00	 movss	 DWORD PTR [ecx+140], xmm0

; 1700 : 		m_fScaleY = fScaleY;

  00023	f3 0f 11 89 90
	00 00 00	 movss	 DWORD PTR [ecx+144], xmm1
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\algorithm

; 232  :     for (; _UFirst != _ULast; ++_UFirst) {

  0002b	3b f7		 cmp	 esi, edi
  0002d	74 27		 je	 SHORT $LN17@SetAniImgS
  0002f	90		 npad	 1
$LL18@SetAniImgS:
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp

; 1694 : 			pInstance->SetScale(fScaleX, fScaleY);

  00030	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00032	83 ec 08	 sub	 esp, 8
  00035	f3 0f 11 4c 24
	04		 movss	 DWORD PTR [esp+4], xmm1
  0003b	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00040	e8 00 00 00 00	 call	 ?SetScale@CGraphicExpandedImageInstance@@QAEXMM@Z ; CGraphicExpandedImageInstance::SetScale
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\algorithm

; 232  :     for (; _UFirst != _ULast; ++_UFirst) {

  00045	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _fScaleX$[ebp]
  0004a	83 c6 04	 add	 esi, 4
  0004d	f3 0f 10 4d 0c	 movss	 xmm1, DWORD PTR _fScaleY$[ebp]
  00052	3b f7		 cmp	 esi, edi
  00054	75 da		 jne	 SHORT $LL18@SetAniImgS
$LN17@SetAniImgS:
  00056	5f		 pop	 edi
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp

; 1707 : 	}

  00057	5e		 pop	 esi
  00058	5d		 pop	 ebp
  00059	c2 08 00	 ret	 8
?SetAniImgScale@CAniImageBox@UI@@QAEXMM@Z ENDP		; UI::CAniImageBox::SetAniImgScale
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\algorithm
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\vector
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\algorithm
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\algorithm
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?SetRenderingMode@CAniImageBox@UI@@QAEXH@Z
_TEXT	SEGMENT
_iMode$ = 8						; size = 4
?SetRenderingMode@CAniImageBox@UI@@QAEXH@Z PROC		; UI::CAniImageBox::SetRenderingMode, COMDAT
; _this$ = ecx

; 1683 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\algorithm

; 232  :     for (; _UFirst != _ULast; ++_UFirst) {

  00004	8b b1 80 00 00
	00		 mov	 esi, DWORD PTR [ecx+128]
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp

; 1683 : 	{

  0000a	57		 push	 edi
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\vector

; 41   :     _CONSTEXPR20_CONTAINER _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  0000b	8b b9 84 00 00
	00		 mov	 edi, DWORD PTR [ecx+132]
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\algorithm

; 232  :     for (; _UFirst != _ULast; ++_UFirst) {

  00011	3b f7		 cmp	 esi, edi
  00013	74 1b		 je	 SHORT $LN17@SetRenderi
  00015	53		 push	 ebx
  00016	8b 5d 08	 mov	 ebx, DWORD PTR _iMode$[ebp]
  00019	0f 1f 80 00 00
	00 00		 npad	 7
$LL18@SetRenderi:
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp

; 1679 : 			pInstance->SetRenderingMode(iMode);

  00020	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00022	53		 push	 ebx
  00023	e8 00 00 00 00	 call	 ?SetRenderingMode@CGraphicExpandedImageInstance@@QAEXH@Z ; CGraphicExpandedImageInstance::SetRenderingMode
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\algorithm

; 232  :     for (; _UFirst != _ULast; ++_UFirst) {

  00028	83 c6 04	 add	 esi, 4
  0002b	3b f7		 cmp	 esi, edi
  0002d	75 f1		 jne	 SHORT $LL18@SetRenderi
  0002f	5b		 pop	 ebx
$LN17@SetRenderi:
  00030	5f		 pop	 edi
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp

; 1687 : 	}

  00031	5e		 pop	 esi
  00032	5d		 pop	 ebp
  00033	c2 04 00	 ret	 4
?SetRenderingMode@CAniImageBox@UI@@QAEXH@Z ENDP		; UI::CAniImageBox::SetRenderingMode
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\algorithm
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\vector
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\algorithm
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\algorithm
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?SetRenderingRectWithScale@CAniImageBox@UI@@QAEXMMMM@Z
_TEXT	SEGMENT
__$ArrayPad$ = -4					; size = 4
_fLeft$ = 8						; size = 4
_fTop$ = 12						; size = 4
_fRight$ = 16						; size = 4
_fBottom$ = 20						; size = 4
?SetRenderingRectWithScale@CAniImageBox@UI@@QAEXMMMM@Z PROC ; UI::CAniImageBox::SetRenderingRectWithScale, COMDAT
; _this$ = ecx

; 1665 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00009	33 c5		 xor	 eax, ebp
  0000b	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  0000e	56		 push	 esi
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\algorithm

; 232  :     for (; _UFirst != _ULast; ++_UFirst) {

  0000f	8b b1 80 00 00
	00		 mov	 esi, DWORD PTR [ecx+128]
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp

; 1665 : 	{

  00015	57		 push	 edi
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\vector

; 41   :     _CONSTEXPR20_CONTAINER _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  00016	8b b9 84 00 00
	00		 mov	 edi, DWORD PTR [ecx+132]
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\algorithm

; 232  :     for (; _UFirst != _ULast; ++_UFirst) {

  0001c	3b f7		 cmp	 esi, edi
  0001e	74 3c		 je	 SHORT $LN17@SetRenderi
$LL18@SetRenderi:
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp

; 1660 : 			pInstance->SetRenderingRectWithScale(fLeft, fTop, fRight, fBottom);

  00020	f3 0f 10 45 14	 movss	 xmm0, DWORD PTR _fBottom$[ebp]
  00025	83 ec 10	 sub	 esp, 16			; 00000010H
  00028	8b 0e		 mov	 ecx, DWORD PTR [esi]
  0002a	f3 0f 11 44 24
	0c		 movss	 DWORD PTR [esp+12], xmm0
  00030	f3 0f 10 45 10	 movss	 xmm0, DWORD PTR _fRight$[ebp]
  00035	f3 0f 11 44 24
	08		 movss	 DWORD PTR [esp+8], xmm0
  0003b	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR _fTop$[ebp]
  00040	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  00046	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _fLeft$[ebp]
  0004b	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00050	e8 00 00 00 00	 call	 ?SetRenderingRectWithScale@CGraphicExpandedImageInstance@@QAEXMMMM@Z ; CGraphicExpandedImageInstance::SetRenderingRectWithScale
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\algorithm

; 232  :     for (; _UFirst != _ULast; ++_UFirst) {

  00055	83 c6 04	 add	 esi, 4
  00058	3b f7		 cmp	 esi, edi
  0005a	75 c4		 jne	 SHORT $LL18@SetRenderi
$LN17@SetRenderi:
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp

; 1672 : 	}

  0005c	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0005f	5f		 pop	 edi
  00060	33 cd		 xor	 ecx, ebp
  00062	5e		 pop	 esi
  00063	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00068	8b e5		 mov	 esp, ebp
  0006a	5d		 pop	 ebp
  0006b	c2 10 00	 ret	 16			; 00000010H
?SetRenderingRectWithScale@CAniImageBox@UI@@QAEXMMMM@Z ENDP ; UI::CAniImageBox::SetRenderingRectWithScale
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\algorithm
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\vector
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\algorithm
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\algorithm
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?SetRenderingRect@CAniImageBox@UI@@QAEXMMMM@Z
_TEXT	SEGMENT
__$ArrayPad$ = -4					; size = 4
_fLeft$ = 8						; size = 4
_fTop$ = 12						; size = 4
_fRight$ = 16						; size = 4
_fBottom$ = 20						; size = 4
?SetRenderingRect@CAniImageBox@UI@@QAEXMMMM@Z PROC	; UI::CAniImageBox::SetRenderingRect, COMDAT
; _this$ = ecx

; 1646 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00009	33 c5		 xor	 eax, ebp
  0000b	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  0000e	56		 push	 esi
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\algorithm

; 232  :     for (; _UFirst != _ULast; ++_UFirst) {

  0000f	8b b1 80 00 00
	00		 mov	 esi, DWORD PTR [ecx+128]
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp

; 1646 : 	{

  00015	57		 push	 edi
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\vector

; 41   :     _CONSTEXPR20_CONTAINER _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  00016	8b b9 84 00 00
	00		 mov	 edi, DWORD PTR [ecx+132]
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\algorithm

; 232  :     for (; _UFirst != _ULast; ++_UFirst) {

  0001c	3b f7		 cmp	 esi, edi
  0001e	74 3c		 je	 SHORT $LN17@SetRenderi
$LL18@SetRenderi:
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp

; 1642 : 			pInstance->SetRenderingRect(fLeft, fTop, fRight, fBottom);

  00020	f3 0f 10 45 14	 movss	 xmm0, DWORD PTR _fBottom$[ebp]
  00025	83 ec 10	 sub	 esp, 16			; 00000010H
  00028	8b 0e		 mov	 ecx, DWORD PTR [esi]
  0002a	f3 0f 11 44 24
	0c		 movss	 DWORD PTR [esp+12], xmm0
  00030	f3 0f 10 45 10	 movss	 xmm0, DWORD PTR _fRight$[ebp]
  00035	f3 0f 11 44 24
	08		 movss	 DWORD PTR [esp+8], xmm0
  0003b	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR _fTop$[ebp]
  00040	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  00046	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _fLeft$[ebp]
  0004b	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00050	e8 00 00 00 00	 call	 ?SetRenderingRect@CGraphicExpandedImageInstance@@QAEXMMMM@Z ; CGraphicExpandedImageInstance::SetRenderingRect
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\algorithm

; 232  :     for (; _UFirst != _ULast; ++_UFirst) {

  00055	83 c6 04	 add	 esi, 4
  00058	3b f7		 cmp	 esi, edi
  0005a	75 c4		 jne	 SHORT $LL18@SetRenderi
$LN17@SetRenderi:
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp

; 1653 : 	}

  0005c	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0005f	5f		 pop	 edi
  00060	33 cd		 xor	 ecx, ebp
  00062	5e		 pop	 esi
  00063	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00068	8b e5		 mov	 esp, ebp
  0006a	5d		 pop	 ebp
  0006b	c2 10 00	 ret	 16			; 00000010H
?SetRenderingRect@CAniImageBox@UI@@QAEXMMMM@Z ENDP	; UI::CAniImageBox::SetRenderingRect
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?AppendImage@CAniImageBox@UI@@QAEXPBDMMMM@Z
_TEXT	SEGMENT
_pImageInstance$ = 8					; size = 4
_c_szFileName$ = 8					; size = 4
_r$ = 12						; size = 4
_g$ = 16						; size = 4
_b$ = 20						; size = 4
_a$ = 24						; size = 4
?AppendImage@CAniImageBox@UI@@QAEXPBDMMMM@Z PROC	; UI::CAniImageBox::AppendImage, COMDAT
; _this$ = ecx

; 1615 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx
  00004	56		 push	 esi

; 1616 : 		CResource * pResource = CResourceManager::Instance().GetResourcePointer(c_szFileName);

  00005	ff 75 08	 push	 DWORD PTR _c_szFileName$[ebp]
  00008	8b d9		 mov	 ebx, ecx
  0000a	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCResourceManager@@@@0PAVCResourceManager@@A ; CSingleton<CResourceManager>::ms_singleton
  00010	e8 00 00 00 00	 call	 ?GetResourcePointer@CResourceManager@@QAEPAVCResource@@PBD@Z ; CResourceManager::GetResourcePointer
  00015	8b f0		 mov	 esi, eax

; 1617 : 		if (!pResource->IsType(CGraphicImage::Type()))

  00017	e8 00 00 00 00	 call	 ?Type@CGraphicImage@@SAKXZ ; CGraphicImage::Type
  0001c	50		 push	 eax
  0001d	8b ce		 mov	 ecx, esi
  0001f	e8 00 00 00 00	 call	 ?IsType@CResource@@QAE_NK@Z ; CResource::IsType
  00024	84 c0		 test	 al, al
  00026	0f 84 c2 00 00
	00		 je	 $LN1@AppendImag

; 1618 : 			return;
; 1619 : 
; 1620 : 		CGraphicExpandedImageInstance * pImageInstance = CGraphicExpandedImageInstance::New();

  0002c	57		 push	 edi
  0002d	e8 00 00 00 00	 call	 ?New@CGraphicExpandedImageInstance@@SAPAV1@XZ ; CGraphicExpandedImageInstance::New
  00032	8b f8		 mov	 edi, eax

; 1621 : 		pImageInstance->SetImagePointer(static_cast<CGraphicImage*>(pResource));

  00034	56		 push	 esi
  00035	8b cf		 mov	 ecx, edi
  00037	89 7d 08	 mov	 DWORD PTR _pImageInstance$[ebp], edi
  0003a	e8 00 00 00 00	 call	 ?SetImagePointer@CGraphicImageInstance@@QAEXPAVCGraphicImage@@@Z ; CGraphicImageInstance::SetImagePointer

; 1622 : #ifdef ENABLE_ACCE_SYSTEM
; 1623 : 		pImageInstance->SetDiffuseColor(r, g, b, a);

  0003f	f3 0f 10 45 18	 movss	 xmm0, DWORD PTR _a$[ebp]
  00044	83 ec 10	 sub	 esp, 16			; 00000010H
  00047	8b cf		 mov	 ecx, edi
  00049	f3 0f 11 44 24
	0c		 movss	 DWORD PTR [esp+12], xmm0
  0004f	f3 0f 10 45 14	 movss	 xmm0, DWORD PTR _b$[ebp]
  00054	f3 0f 11 44 24
	08		 movss	 DWORD PTR [esp+8], xmm0
  0005a	f3 0f 10 45 10	 movss	 xmm0, DWORD PTR _g$[ebp]
  0005f	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  00065	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR _r$[ebp]
  0006a	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0006f	e8 00 00 00 00	 call	 ?SetDiffuseColor@CGraphicImageInstance@@QAEXMMMM@Z ; CGraphicImageInstance::SetDiffuseColor

; 1624 : #endif
; 1625 : 		pImageInstance->SetScale(m_fScaleX, m_fScaleY);

  00074	f3 0f 10 83 90
	00 00 00	 movss	 xmm0, DWORD PTR [ebx+144]
  0007c	83 ec 08	 sub	 esp, 8
  0007f	8b cf		 mov	 ecx, edi
  00081	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  00087	f3 0f 10 83 8c
	00 00 00	 movss	 xmm0, DWORD PTR [ebx+140]
  0008f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00094	e8 00 00 00 00	 call	 ?SetScale@CGraphicExpandedImageInstance@@QAEXMM@Z ; CGraphicExpandedImageInstance::SetScale

; 1626 : 
; 1627 : 		if (pImageInstance->IsEmpty())

  00099	8b cf		 mov	 ecx, edi
  0009b	e8 00 00 00 00	 call	 ?IsEmpty@CGraphicImageInstance@@QBE_NXZ ; CGraphicImageInstance::IsEmpty
  000a0	84 c0		 test	 al, al
  000a2	74 10		 je	 SHORT $LN3@AppendImag

; 1628 : 		{
; 1629 : 			CGraphicExpandedImageInstance::Delete(pImageInstance);

  000a4	57		 push	 edi
  000a5	e8 00 00 00 00	 call	 ?Delete@CGraphicExpandedImageInstance@@SAXPAV1@@Z ; CGraphicExpandedImageInstance::Delete
  000aa	83 c4 04	 add	 esp, 4
  000ad	5f		 pop	 edi
  000ae	5e		 pop	 esi

; 1635 : 	}

  000af	5b		 pop	 ebx
  000b0	5d		 pop	 ebp
  000b1	c2 14 00	 ret	 20			; 00000014H
$LN3@AppendImag:
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\vector

; 730  :         if (_Mylast != _My_data._Myend) {

  000b4	8b 83 84 00 00
	00		 mov	 eax, DWORD PTR [ebx+132]
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp

; 1633 : 		m_ImageVector.push_back(pImageInstance);

  000ba	8d b3 80 00 00
	00		 lea	 esi, DWORD PTR [ebx+128]
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\vector

; 730  :         if (_Mylast != _My_data._Myend) {

  000c0	3b 46 08	 cmp	 eax, DWORD PTR [esi+8]
  000c3	74 08		 je	 SHORT $LN8@AppendImag

; 713  :         _Alty_traits::construct(_Getal(), _Unfancy(_Mylast), _STD forward<_Valty>(_Val)...);

  000c5	89 38		 mov	 DWORD PTR [eax], edi

; 714  :         _Orphan_range(_Mylast, _Mylast);
; 715  :         _Ty& _Result = *_Mylast;
; 716  :         ++_Mylast;

  000c7	83 46 04 04	 add	 DWORD PTR [esi+4], 4

; 731  :             return _Emplace_back_with_unused_capacity(_STD forward<_Valty>(_Val)...);

  000cb	eb 0c		 jmp	 SHORT $LN15@AppendImag
$LN8@AppendImag:

; 732  :         }
; 733  : 
; 734  :         _Ty& _Result = *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

  000cd	8d 4d 08	 lea	 ecx, DWORD PTR _pImageInstance$[ebp]
  000d0	51		 push	 ecx
  000d1	50		 push	 eax
  000d2	8b ce		 mov	 ecx, esi
  000d4	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@ABQAVCGraphicExpandedImageInstance@@@?$vector@PAVCGraphicExpandedImageInstance@@V?$allocator@PAVCGraphicExpandedImageInstance@@@std@@@std@@QAEPAPAVCGraphicExpandedImageInstance@@QAPAV2@ABQAV2@@Z ; std::vector<CGraphicExpandedImageInstance *,std::allocator<CGraphicExpandedImageInstance *> >::_Emplace_reallocate<CGraphicExpandedImageInstance * const &>
$LN15@AppendImag:

; 1536 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  000d9	8b 7e 04	 mov	 edi, DWORD PTR [esi+4]
  000dc	2b 3e		 sub	 edi, DWORD PTR [esi]
  000de	c1 ff 02	 sar	 edi, 2
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp

; 1634 : 		m_bycurIndex = rand() % m_ImageVector.size();

  000e1	e8 00 00 00 00	 call	 _rand
  000e6	33 d2		 xor	 edx, edx
  000e8	f7 f7		 div	 edi
  000ea	5f		 pop	 edi
  000eb	88 53 7e	 mov	 BYTE PTR [ebx+126], dl
$LN1@AppendImag:

; 1635 : 	}

  000ee	5e		 pop	 esi
  000ef	5b		 pop	 ebx
  000f0	5d		 pop	 ebp
  000f1	c2 14 00	 ret	 20			; 00000014H
?AppendImage@CAniImageBox@UI@@QAEXPBDMMMM@Z ENDP	; UI::CAniImageBox::AppendImage
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?SetDelay@CAniImageBox@UI@@QAEXH@Z
_TEXT	SEGMENT
_iDelay$ = 8						; size = 4
?SetDelay@CAniImageBox@UI@@QAEXH@Z PROC			; UI::CAniImageBox::SetDelay, COMDAT
; _this$ = ecx

; 1596 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1597 : 		m_byDelay = iDelay;

  00003	8a 45 08	 mov	 al, BYTE PTR _iDelay$[ebp]
  00006	88 41 7d	 mov	 BYTE PTR [ecx+125], al

; 1598 : 	}

  00009	5d		 pop	 ebp
  0000a	c2 04 00	 ret	 4
?SetDelay@CAniImageBox@UI@@QAEXH@Z ENDP			; UI::CAniImageBox::SetDelay
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\vector
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\algorithm
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterlib\GrpExpandedImageInstance.h
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterlib\GrpExpandedImageInstance.h
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\vector
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\algorithm
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\vector
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\vector
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ??1CAniImageBox@UI@@UAE@XZ
_TEXT	SEGMENT
_this$1$ = -20						; size = 4
tv388 = -16						; size = 4
_pkData$2 = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1CAniImageBox@UI@@UAE@XZ PROC				; UI::CAniImageBox::~CAniImageBox, COMDAT
; _this$ = ecx

; 1591 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1CAniImageBox@UI@@UAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 08	 sub	 esp, 8
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00028	8b d9		 mov	 ebx, ecx
  0002a	89 5d ec	 mov	 DWORD PTR _this$1$[ebp], ebx
  0002d	c7 03 00 00 00
	00		 mov	 DWORD PTR [ebx], OFFSET ??_7CAniImageBox@UI@@6B@
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\vector

; 41   :     _CONSTEXPR20_CONTAINER _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  00033	8b 83 84 00 00
	00		 mov	 eax, DWORD PTR [ebx+132]
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\algorithm

; 232  :     for (; _UFirst != _ULast; ++_UFirst) {

  00039	8b b3 80 00 00
	00		 mov	 esi, DWORD PTR [ebx+128]
  0003f	3b f0		 cmp	 esi, eax
  00041	74 3f		 je	 SHORT $LN17@CAniImageB
  00043	8b d8		 mov	 ebx, eax
$LL18@CAniImageB:

; 233  :         _Func(*_UFirst);

  00045	8b 3e		 mov	 edi, DWORD PTR [esi]
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterlib\GrpExpandedImageInstance.h

; 11   : 			pkInstance->Destroy();

  00047	8b cf		 mov	 ecx, edi
  00049	e8 00 00 00 00	 call	 ?Destroy@CGraphicExpandedImageInstance@@QAEXXZ ; CGraphicExpandedImageInstance::Destroy
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\vector

; 730  :         if (_Mylast != _My_data._Myend) {

  0004e	a1 14 00 00 00	 mov	 eax, DWORD PTR ?ms_kPool@CGraphicExpandedImageInstance@@2V?$CDynamicPool@VCGraphicExpandedImageInstance@@@@A+20
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterlib\GrpExpandedImageInstance.h

; 12   : 			ms_kPool.Free(pkInstance);

  00053	89 7d f0	 mov	 DWORD PTR _pkData$2[ebp], edi
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\vector

; 730  :         if (_Mylast != _My_data._Myend) {

  00056	3b 05 18 00 00
	00		 cmp	 eax, DWORD PTR ?ms_kPool@CGraphicExpandedImageInstance@@2V?$CDynamicPool@VCGraphicExpandedImageInstance@@@@A+24
  0005c	74 0b		 je	 SHORT $LN27@CAniImageB

; 713  :         _Alty_traits::construct(_Getal(), _Unfancy(_Mylast), _STD forward<_Valty>(_Val)...);

  0005e	89 38		 mov	 DWORD PTR [eax], edi

; 714  :         _Orphan_range(_Mylast, _Mylast);
; 715  :         _Ty& _Result = *_Mylast;
; 716  :         ++_Mylast;

  00060	83 05 14 00 00
	00 04		 add	 DWORD PTR ?ms_kPool@CGraphicExpandedImageInstance@@2V?$CDynamicPool@VCGraphicExpandedImageInstance@@@@A+20, 4

; 731  :             return _Emplace_back_with_unused_capacity(_STD forward<_Valty>(_Val)...);

  00067	eb 0f		 jmp	 SHORT $LN16@CAniImageB
$LN27@CAniImageB:

; 732  :         }
; 733  : 
; 734  :         _Ty& _Result = *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

  00069	8d 4d f0	 lea	 ecx, DWORD PTR _pkData$2[ebp]
  0006c	51		 push	 ecx
  0006d	50		 push	 eax
  0006e	b9 10 00 00 00	 mov	 ecx, OFFSET ?ms_kPool@CGraphicExpandedImageInstance@@2V?$CDynamicPool@VCGraphicExpandedImageInstance@@@@A+16
  00073	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@ABQAVCGraphicExpandedImageInstance@@@?$vector@PAVCGraphicExpandedImageInstance@@V?$allocator@PAVCGraphicExpandedImageInstance@@@std@@@std@@QAEPAPAVCGraphicExpandedImageInstance@@QAPAV2@ABQAV2@@Z ; std::vector<CGraphicExpandedImageInstance *,std::allocator<CGraphicExpandedImageInstance *> >::_Emplace_reallocate<CGraphicExpandedImageInstance * const &>
$LN16@CAniImageB:
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\algorithm

; 232  :     for (; _UFirst != _ULast; ++_UFirst) {

  00078	83 c6 04	 add	 esi, 4
  0007b	3b f3		 cmp	 esi, ebx
  0007d	75 c6		 jne	 SHORT $LL18@CAniImageB
  0007f	8b 5d ec	 mov	 ebx, DWORD PTR _this$1$[ebp]
$LN17@CAniImageB:
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\vector

; 1750 :         if (_Myfirst) { // destroy and deallocate old array

  00082	8b 83 80 00 00
	00		 mov	 eax, DWORD PTR [ebx+128]
  00088	85 c0		 test	 eax, eax
  0008a	74 4d		 je	 SHORT $LN34@CAniImageB

; 1751 :             _Destroy(_Myfirst, _Mylast);
; 1752 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  0008c	8b 8b 88 00 00
	00		 mov	 ecx, DWORD PTR [ebx+136]
  00092	2b c8		 sub	 ecx, eax
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory

; 797  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00094	83 e1 fc	 and	 ecx, -4			; fffffffcH

; 251  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00097	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  0009d	72 12		 jb	 SHORT $LN50@CAniImageB

; 150  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  0009f	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  000a2	83 c1 23	 add	 ecx, 35			; 00000023H

; 151  : 
; 152  :     // If the following asserts, it likely means that we are performing
; 153  :     // an aligned delete on memory coming from an unaligned allocation.
; 154  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 155  : 
; 156  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 157  :     // in range [_Min_back_shift, _Non_user_size]
; 158  : #ifdef _DEBUG
; 159  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 160  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 161  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 162  : #endif // _DEBUG
; 163  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  000a5	2b c2		 sub	 eax, edx

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  000a7	83 c0 fc	 add	 eax, -4			; fffffffcH
  000aa	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  000ad	77 43		 ja	 SHORT $LN47@CAniImageB

; 165  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  000af	8b c2		 mov	 eax, edx
$LN50@CAniImageB:

; 255  :         ::operator delete(_Ptr, _Bytes);

  000b1	51		 push	 ecx
  000b2	50		 push	 eax
  000b3	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\vector

; 1754 :             _Myfirst = nullptr;

  000b8	c7 83 80 00 00
	00 00 00 00 00	 mov	 DWORD PTR [ebx+128], 0
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory

; 255  :         ::operator delete(_Ptr, _Bytes);

  000c2	83 c4 08	 add	 esp, 8
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\vector

; 1755 :             _Mylast  = nullptr;

  000c5	c7 83 84 00 00
	00 00 00 00 00	 mov	 DWORD PTR [ebx+132], 0

; 1756 :             _Myend   = nullptr;

  000cf	c7 83 88 00 00
	00 00 00 00 00	 mov	 DWORD PTR [ebx+136], 0
$LN34@CAniImageB:
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp

; 1593 : 	}

  000d9	8b cb		 mov	 ecx, ebx
  000db	e8 00 00 00 00	 call	 ??1CWindow@UI@@UAE@XZ	; UI::CWindow::~CWindow
  000e0	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000e3	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000ea	59		 pop	 ecx
  000eb	5f		 pop	 edi
  000ec	5e		 pop	 esi
  000ed	5b		 pop	 ebx
  000ee	8b e5		 mov	 esp, ebp
  000f0	5d		 pop	 ebp
  000f1	c3		 ret	 0
$LN47@CAniImageB:
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  000f2	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN61@CAniImageB:
  000f7	cc		 int	 3
  000f8	cc		 int	 3
  000f9	cc		 int	 3
  000fa	cc		 int	 3
  000fb	cc		 int	 3
  000fc	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1CAniImageBox@UI@@UAE@XZ:
  00000	90		 npad	 1
  00001	90		 npad	 1
  00002	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00006	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00009	8b 4a e8	 mov	 ecx, DWORD PTR [edx-24]
  0000c	33 c8		 xor	 ecx, eax
  0000e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00013	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1CAniImageBox@UI@@UAE@XZ
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1CAniImageBox@UI@@UAE@XZ ENDP				; UI::CAniImageBox::~CAniImageBox
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ??0CAniImageBox@UI@@QAE@PAU_object@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_ppyObject$ = 8						; size = 4
??0CAniImageBox@UI@@QAE@PAU_object@@@Z PROC		; UI::CAniImageBox::CAniImageBox, COMDAT
; _this$ = ecx

; 1587 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	ff 75 08	 push	 DWORD PTR _ppyObject$[ebp]
  00008	8b f1		 mov	 esi, ecx
  0000a	89 75 fc	 mov	 DWORD PTR _this$[ebp], esi
  0000d	e8 00 00 00 00	 call	 ??0CWindow@UI@@QAE@PAU_object@@@Z ; UI::CWindow::CWindow
  00012	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CAniImageBox@UI@@6B@

; 1589 : 	}

  00018	8b c6		 mov	 eax, esi
  0001a	66 c7 46 7c 00
	04		 mov	 WORD PTR [esi+124], 1024 ; 00000400H
  00020	c6 46 7e 00	 mov	 BYTE PTR [esi+126], 0
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\vector

; 390  :     _CONSTEXPR20_CONTAINER _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

  00024	c7 86 80 00 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+128], 0
  0002e	c7 86 88 00 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+136], 0
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp

; 1585 : 			m_fScaleX(1.0f),

  00038	c7 86 8c 00 00
	00 00 00 80 3f	 mov	 DWORD PTR [esi+140], 1065353216 ; 3f800000H

; 1586 : 			m_fScaleY(1.0f)

  00042	c7 86 90 00 00
	00 00 00 80 3f	 mov	 DWORD PTR [esi+144], 1065353216 ; 3f800000H

; 1588 : 		m_ImageVector.clear();

  0004c	c7 86 84 00 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+132], 0

; 1589 : 	}

  00056	5e		 pop	 esi
  00057	8b e5		 mov	 esp, ebp
  00059	5d		 pop	 ebp
  0005a	c2 04 00	 ret	 4
??0CAniImageBox@UI@@QAE@PAU_object@@@Z ENDP		; UI::CAniImageBox::CAniImageBox
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?Type@CAniImageBox@UI@@SAKXZ
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
?Type@CAniImageBox@UI@@SAKXZ PROC			; UI::CAniImageBox::Type, COMDAT

; 1567 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?Type@CAniImageBox@UI@@SAKXZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00016	33 c5		 xor	 eax, ebp
  00018	50		 push	 eax
  00019	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001c	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax

; 1568 : 		static DWORD s_dwType = GetCRC32("CAniImageBox", strlen("CAniImageBox"));

  00022	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__tls_array
  00028	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR __tls_index
  0002e	8b 0c 88	 mov	 ecx, DWORD PTR [eax+ecx*4]
  00031	a1 00 00 00 00	 mov	 eax, DWORD PTR ?$TSS0@?1??Type@CAniImageBox@UI@@SAKXZ@4HA
  00036	3b 81 00 00 00
	00		 cmp	 eax, DWORD PTR __Init_thread_epoch[ecx]
  0003c	7f 14		 jg	 SHORT $LN9@Type
$LN5@Type:

; 1569 : 		return (s_dwType);
; 1570 : 	}

  0003e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?s_dwType@?1??Type@CAniImageBox@UI@@SAKXZ@4KA
  00043	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00046	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0004d	59		 pop	 ecx
  0004e	8b e5		 mov	 esp, ebp
  00050	5d		 pop	 ebp
  00051	c3		 ret	 0
$LN9@Type:

; 1568 : 		static DWORD s_dwType = GetCRC32("CAniImageBox", strlen("CAniImageBox"));

  00052	68 00 00 00 00	 push	 OFFSET ?$TSS0@?1??Type@CAniImageBox@UI@@SAKXZ@4HA
  00057	e8 00 00 00 00	 call	 __Init_thread_header
  0005c	83 c4 04	 add	 esp, 4
  0005f	83 3d 00 00 00
	00 ff		 cmp	 DWORD PTR ?$TSS0@?1??Type@CAniImageBox@UI@@SAKXZ@4HA, -1
  00066	75 d6		 jne	 SHORT $LN5@Type
  00068	6a 0c		 push	 12			; 0000000cH
  0006a	68 00 00 00 00	 push	 OFFSET ??_C@_0N@LBBHECOO@CAniImageBox@
  0006f	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00076	e8 00 00 00 00	 call	 ?GetCRC32@@YAKPBDI@Z	; GetCRC32
  0007b	68 00 00 00 00	 push	 OFFSET ?$TSS0@?1??Type@CAniImageBox@UI@@SAKXZ@4HA
  00080	a3 00 00 00 00	 mov	 DWORD PTR ?s_dwType@?1??Type@CAniImageBox@UI@@SAKXZ@4KA, eax
  00085	e8 00 00 00 00	 call	 __Init_thread_footer
  0008a	83 c4 0c	 add	 esp, 12			; 0000000cH
  0008d	eb af		 jmp	 SHORT $LN5@Type
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?Type@CAniImageBox@UI@@SAKXZ$0:
  00000	68 00 00 00 00	 push	 OFFSET ?$TSS0@?1??Type@CAniImageBox@UI@@SAKXZ@4HA
  00005	e8 00 00 00 00	 call	 __Init_thread_abort
  0000a	59		 pop	 ecx
  0000b	c3		 ret	 0
  0000c	cc		 int	 3
  0000d	cc		 int	 3
  0000e	cc		 int	 3
  0000f	cc		 int	 3
  00010	cc		 int	 3
__ehhandler$?Type@CAniImageBox@UI@@SAKXZ:
  00011	90		 npad	 1
  00012	90		 npad	 1
  00013	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00017	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0001a	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  0001d	33 c8		 xor	 ecx, eax
  0001f	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00024	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?Type@CAniImageBox@UI@@SAKXZ
  00029	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?Type@CAniImageBox@UI@@SAKXZ ENDP			; UI::CAniImageBox::Type
; Function compile flags: /Ogtp
;	COMDAT ??_GCExpandedImageBox@UI@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCExpandedImageBox@UI@@UAEPAXI@Z PROC		; UI::CExpandedImageBox::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1CExpandedImageBox@UI@@UAE@XZ ; UI::CExpandedImageBox::~CExpandedImageBox
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0e		 je	 SHORT $LN4@scalar
  00011	68 80 00 00 00	 push	 128			; 00000080H
  00016	56		 push	 esi
  00017	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0001c	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001f	8b c6		 mov	 eax, esi
  00021	5e		 pop	 esi
  00022	5d		 pop	 ebp
  00023	c2 04 00	 ret	 4
??_GCExpandedImageBox@UI@@UAEPAXI@Z ENDP		; UI::CExpandedImageBox::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnIsType@CExpandedImageBox@UI@@MAEHK@Z
_TEXT	SEGMENT
_dwType$ = 8						; size = 4
?OnIsType@CExpandedImageBox@UI@@MAEHK@Z PROC		; UI::CExpandedImageBox::OnIsType, COMDAT
; _this$ = ecx

; 1477 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1478 : 		if (CExpandedImageBox::Type() == dwType)

  00003	e8 00 00 00 00	 call	 ?Type@CExpandedImageBox@UI@@SAKXZ ; UI::CExpandedImageBox::Type
  00008	33 c9		 xor	 ecx, ecx
  0000a	3b 45 08	 cmp	 eax, DWORD PTR _dwType$[ebp]
  0000d	0f 94 c1	 sete	 cl
  00010	8b c1		 mov	 eax, ecx

; 1479 : 			return TRUE;
; 1480 : 
; 1481 : 		return FALSE;
; 1482 : 	}

  00012	5d		 pop	 ebp
  00013	c2 04 00	 ret	 4
?OnIsType@CExpandedImageBox@UI@@MAEHK@Z ENDP		; UI::CExpandedImageBox::OnIsType
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnRender@CExpandedImageBox@UI@@MAEXXZ
_TEXT	SEGMENT
?OnRender@CExpandedImageBox@UI@@MAEXXZ PROC		; UI::CExpandedImageBox::OnRender, COMDAT
; _this$ = ecx

; 1555 : 		if (!m_pImageInstance)

  00000	8b 41 7c	 mov	 eax, DWORD PTR [ecx+124]
  00003	85 c0		 test	 eax, eax
  00005	74 0d		 je	 SHORT $LN3@OnRender

; 1556 : 			return;
; 1557 : 
; 1558 : 		if (IsShow())

  00007	80 79 55 00	 cmp	 BYTE PTR [ecx+85], 0
  0000b	74 07		 je	 SHORT $LN3@OnRender

; 1559 : 			m_pImageInstance->Render();

  0000d	8b c8		 mov	 ecx, eax
  0000f	e9 00 00 00 00	 jmp	 ?Render@CGraphicImageInstance@@QAEXXZ ; CGraphicImageInstance::Render
$LN3@OnRender:

; 1560 : 	}

  00014	c3		 ret	 0
?OnRender@CExpandedImageBox@UI@@MAEXXZ ENDP		; UI::CExpandedImageBox::OnRender
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnUpdate@CExpandedImageBox@UI@@MAEXXZ
_TEXT	SEGMENT
?OnUpdate@CExpandedImageBox@UI@@MAEXXZ PROC		; UI::CExpandedImageBox::OnUpdate, COMDAT
; _this$ = ecx

; 1552 : 	}

  00000	c2 00 00	 ret	 0
?OnUpdate@CExpandedImageBox@UI@@MAEXXZ ENDP		; UI::CExpandedImageBox::OnUpdate
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnDestroyInstance@CExpandedImageBox@UI@@MAEXXZ
_TEXT	SEGMENT
?OnDestroyInstance@CExpandedImageBox@UI@@MAEXXZ PROC	; UI::CExpandedImageBox::OnDestroyInstance, COMDAT
; _this$ = ecx

; 1499 : 	{

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 1500 : 		if (m_pImageInstance)

  00003	8b 46 7c	 mov	 eax, DWORD PTR [esi+124]
  00006	85 c0		 test	 eax, eax
  00008	74 10		 je	 SHORT $LN2@OnDestroyI

; 1501 : 		{
; 1502 : 			CGraphicExpandedImageInstance::Delete((CGraphicExpandedImageInstance*)m_pImageInstance);

  0000a	50		 push	 eax
  0000b	e8 00 00 00 00	 call	 ?Delete@CGraphicExpandedImageInstance@@SAXPAV1@@Z ; CGraphicExpandedImageInstance::Delete
  00010	83 c4 04	 add	 esp, 4

; 1503 : 			m_pImageInstance=NULL;

  00013	c7 46 7c 00 00
	00 00		 mov	 DWORD PTR [esi+124], 0
$LN2@OnDestroyI:

; 1504 : 		}
; 1505 : 	}

  0001a	5e		 pop	 esi
  0001b	c3		 ret	 0
?OnDestroyInstance@CExpandedImageBox@UI@@MAEXXZ ENDP	; UI::CExpandedImageBox::OnDestroyInstance
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnCreateInstance@CExpandedImageBox@UI@@MAEXXZ
_TEXT	SEGMENT
?OnCreateInstance@CExpandedImageBox@UI@@MAEXXZ PROC	; UI::CExpandedImageBox::OnCreateInstance, COMDAT
; _this$ = ecx

; 1493 : 	{

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 1494 : 		OnDestroyInstance();

  00003	8b 06		 mov	 eax, DWORD PTR [esi]
  00005	ff 90 a4 00 00
	00		 call	 DWORD PTR [eax+164]

; 1495 : 
; 1496 : 		m_pImageInstance = CGraphicExpandedImageInstance::New();

  0000b	e8 00 00 00 00	 call	 ?New@CGraphicExpandedImageInstance@@SAPAV1@XZ ; CGraphicExpandedImageInstance::New
  00010	89 46 7c	 mov	 DWORD PTR [esi+124], eax
  00013	5e		 pop	 esi

; 1497 : 	}

  00014	c3		 ret	 0
?OnCreateInstance@CExpandedImageBox@UI@@MAEXXZ ENDP	; UI::CExpandedImageBox::OnCreateInstance
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?SetRenderingMode@CExpandedImageBox@UI@@QAEXH@Z
_TEXT	SEGMENT
_iMode$ = 8						; size = 4
?SetRenderingMode@CExpandedImageBox@UI@@QAEXH@Z PROC	; UI::CExpandedImageBox::SetRenderingMode, COMDAT
; _this$ = ecx

; 1546 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1547 : 		((CGraphicExpandedImageInstance*)m_pImageInstance)->SetRenderingMode(iMode);

  00003	8b 49 7c	 mov	 ecx, DWORD PTR [ecx+124]

; 1548 : 	}

  00006	5d		 pop	 ebp

; 1547 : 		((CGraphicExpandedImageInstance*)m_pImageInstance)->SetRenderingMode(iMode);

  00007	e9 00 00 00 00	 jmp	 ?SetRenderingMode@CGraphicExpandedImageInstance@@QAEXH@Z ; CGraphicExpandedImageInstance::SetRenderingMode
?SetRenderingMode@CExpandedImageBox@UI@@QAEXH@Z ENDP	; UI::CExpandedImageBox::SetRenderingMode
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?SetRenderingRectWithScale@CExpandedImageBox@UI@@QAEXMMMM@Z
_TEXT	SEGMENT
_fLeft$ = 8						; size = 4
_fTop$ = 12						; size = 4
_fRight$ = 16						; size = 4
_fBottom$ = 20						; size = 4
?SetRenderingRectWithScale@CExpandedImageBox@UI@@QAEXMMMM@Z PROC ; UI::CExpandedImageBox::SetRenderingRectWithScale, COMDAT
; _this$ = ecx

; 1538 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1539 : 		if (!m_pImageInstance)

  00003	8b 49 7c	 mov	 ecx, DWORD PTR [ecx+124]
  00006	85 c9		 test	 ecx, ecx
  00008	74 33		 je	 SHORT $LN1@SetRenderi

; 1540 : 			return;
; 1541 : 
; 1542 : 		((CGraphicExpandedImageInstance*)m_pImageInstance)->SetRenderingRectWithScale(fLeft, fTop, fRight, fBottom);

  0000a	f3 0f 10 45 14	 movss	 xmm0, DWORD PTR _fBottom$[ebp]
  0000f	83 ec 10	 sub	 esp, 16			; 00000010H
  00012	f3 0f 11 44 24
	0c		 movss	 DWORD PTR [esp+12], xmm0
  00018	f3 0f 10 45 10	 movss	 xmm0, DWORD PTR _fRight$[ebp]
  0001d	f3 0f 11 44 24
	08		 movss	 DWORD PTR [esp+8], xmm0
  00023	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR _fTop$[ebp]
  00028	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  0002e	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _fLeft$[ebp]
  00033	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00038	e8 00 00 00 00	 call	 ?SetRenderingRectWithScale@CGraphicExpandedImageInstance@@QAEXMMMM@Z ; CGraphicExpandedImageInstance::SetRenderingRectWithScale
$LN1@SetRenderi:

; 1543 : 	}

  0003d	5d		 pop	 ebp
  0003e	c2 10 00	 ret	 16			; 00000010H
?SetRenderingRectWithScale@CExpandedImageBox@UI@@QAEXMMMM@Z ENDP ; UI::CExpandedImageBox::SetRenderingRectWithScale
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?SetRenderingRect@CExpandedImageBox@UI@@QAEXMMMM@Z
_TEXT	SEGMENT
_fLeft$ = 8						; size = 4
_fTop$ = 12						; size = 4
_fRight$ = 16						; size = 4
_fBottom$ = 20						; size = 4
?SetRenderingRect@CExpandedImageBox@UI@@QAEXMMMM@Z PROC	; UI::CExpandedImageBox::SetRenderingRect, COMDAT
; _this$ = ecx

; 1530 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1531 : 		if (!m_pImageInstance)

  00003	8b 49 7c	 mov	 ecx, DWORD PTR [ecx+124]
  00006	85 c9		 test	 ecx, ecx
  00008	74 33		 je	 SHORT $LN1@SetRenderi

; 1532 : 			return;
; 1533 : 
; 1534 : 		((CGraphicExpandedImageInstance*)m_pImageInstance)->SetRenderingRect(fLeft, fTop, fRight, fBottom);

  0000a	f3 0f 10 45 14	 movss	 xmm0, DWORD PTR _fBottom$[ebp]
  0000f	83 ec 10	 sub	 esp, 16			; 00000010H
  00012	f3 0f 11 44 24
	0c		 movss	 DWORD PTR [esp+12], xmm0
  00018	f3 0f 10 45 10	 movss	 xmm0, DWORD PTR _fRight$[ebp]
  0001d	f3 0f 11 44 24
	08		 movss	 DWORD PTR [esp+8], xmm0
  00023	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR _fTop$[ebp]
  00028	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  0002e	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _fLeft$[ebp]
  00033	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00038	e8 00 00 00 00	 call	 ?SetRenderingRect@CGraphicExpandedImageInstance@@QAEXMMMM@Z ; CGraphicExpandedImageInstance::SetRenderingRect
$LN1@SetRenderi:

; 1535 : 	}

  0003d	5d		 pop	 ebp
  0003e	c2 10 00	 ret	 16			; 00000010H
?SetRenderingRect@CExpandedImageBox@UI@@QAEXMMMM@Z ENDP	; UI::CExpandedImageBox::SetRenderingRect
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?SetRotation@CExpandedImageBox@UI@@QAEXM@Z
_TEXT	SEGMENT
_fRotation$ = 8						; size = 4
?SetRotation@CExpandedImageBox@UI@@QAEXM@Z PROC		; UI::CExpandedImageBox::SetRotation, COMDAT
; _this$ = ecx

; 1523 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1524 : 		if (!m_pImageInstance)

  00003	8b 49 7c	 mov	 ecx, DWORD PTR [ecx+124]
  00006	85 c9		 test	 ecx, ecx
  00008	74 10		 je	 SHORT $LN1@SetRotatio

; 1525 : 			return;
; 1526 : 
; 1527 : 		((CGraphicExpandedImageInstance*)m_pImageInstance)->SetRotation(fRotation);

  0000a	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _fRotation$[ebp]
  0000f	51		 push	 ecx
  00010	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00015	e8 00 00 00 00	 call	 ?SetRotation@CGraphicExpandedImageInstance@@QAEXM@Z ; CGraphicExpandedImageInstance::SetRotation
$LN1@SetRotatio:

; 1528 : 	}

  0001a	5d		 pop	 ebp
  0001b	c2 04 00	 ret	 4
?SetRotation@CExpandedImageBox@UI@@QAEXM@Z ENDP		; UI::CExpandedImageBox::SetRotation
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?SetOrigin@CExpandedImageBox@UI@@QAEXMM@Z
_TEXT	SEGMENT
_fx$ = 8						; size = 4
_fy$ = 12						; size = 4
?SetOrigin@CExpandedImageBox@UI@@QAEXMM@Z PROC		; UI::CExpandedImageBox::SetOrigin, COMDAT
; _this$ = ecx

; 1516 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1517 : 		if (!m_pImageInstance)

  00003	8b 49 7c	 mov	 ecx, DWORD PTR [ecx+124]
  00006	85 c9		 test	 ecx, ecx
  00008	74 1d		 je	 SHORT $LN1@SetOrigin

; 1518 : 			return;
; 1519 : 
; 1520 : 		((CGraphicExpandedImageInstance*)m_pImageInstance)->SetOrigin(fx, fy);

  0000a	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR _fy$[ebp]
  0000f	83 ec 08	 sub	 esp, 8
  00012	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  00018	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _fx$[ebp]
  0001d	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00022	e8 00 00 00 00	 call	 ?SetOrigin@CGraphicExpandedImageInstance@@QAEXMM@Z ; CGraphicExpandedImageInstance::SetOrigin
$LN1@SetOrigin:

; 1521 : 	}

  00027	5d		 pop	 ebp
  00028	c2 08 00	 ret	 8
?SetOrigin@CExpandedImageBox@UI@@QAEXMM@Z ENDP		; UI::CExpandedImageBox::SetOrigin
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?SetScale@CExpandedImageBox@UI@@QAEXMM@Z
_TEXT	SEGMENT
_fx$ = 8						; size = 4
_fy$ = 12						; size = 4
?SetScale@CExpandedImageBox@UI@@QAEXMM@Z PROC		; UI::CExpandedImageBox::SetScale, COMDAT
; _this$ = ecx

; 1508 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 1509 : 		if (!m_pImageInstance)

  00006	8b 4e 7c	 mov	 ecx, DWORD PTR [esi+124]
  00009	85 c9		 test	 ecx, ecx
  0000b	74 54		 je	 SHORT $LN1@SetScale

; 1510 : 			return;
; 1511 : 
; 1512 : 		((CGraphicExpandedImageInstance*)m_pImageInstance)->SetScale(fx, fy);

  0000d	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR _fy$[ebp]
  00012	83 ec 08	 sub	 esp, 8
  00015	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  0001b	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _fx$[ebp]
  00020	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00025	e8 00 00 00 00	 call	 ?SetScale@CGraphicExpandedImageInstance@@QAEXMM@Z ; CGraphicExpandedImageInstance::SetScale

; 1513 : 		CWindow::SetSize(long(float(GetWidth())*fx), long(float(GetHeight())*fy));

  0002a	8b ce		 mov	 ecx, esi
  0002c	e8 00 00 00 00	 call	 ?GetHeight@CImageBox@UI@@QAEHXZ ; UI::CImageBox::GetHeight
  00031	8b ce		 mov	 ecx, esi
  00033	66 0f 6e c0	 movd	 xmm0, eax
  00037	0f 5b c0	 cvtdq2ps xmm0, xmm0
  0003a	f3 0f 59 45 0c	 mulss	 xmm0, DWORD PTR _fy$[ebp]
  0003f	f3 0f 2c c0	 cvttss2si eax, xmm0
  00043	50		 push	 eax
  00044	e8 00 00 00 00	 call	 ?GetWidth@CImageBox@UI@@QAEHXZ ; UI::CImageBox::GetWidth
  00049	8b ce		 mov	 ecx, esi
  0004b	66 0f 6e c0	 movd	 xmm0, eax
  0004f	0f 5b c0	 cvtdq2ps xmm0, xmm0
  00052	f3 0f 59 45 08	 mulss	 xmm0, DWORD PTR _fx$[ebp]
  00057	f3 0f 2c c0	 cvttss2si eax, xmm0
  0005b	50		 push	 eax
  0005c	e8 00 00 00 00	 call	 ?SetSize@CWindow@UI@@QAEXJJ@Z ; UI::CWindow::SetSize
$LN1@SetScale:
  00061	5e		 pop	 esi

; 1514 : 	}

  00062	5d		 pop	 ebp
  00063	c2 08 00	 ret	 8
?SetScale@CExpandedImageBox@UI@@QAEXMM@Z ENDP		; UI::CExpandedImageBox::SetScale
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ??1CExpandedImageBox@UI@@UAE@XZ
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
??1CExpandedImageBox@UI@@UAE@XZ PROC			; UI::CExpandedImageBox::~CExpandedImageBox, COMDAT
; _this$ = ecx

; 1488 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1CExpandedImageBox@UI@@UAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	56		 push	 esi
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00017	33 c5		 xor	 eax, ebp
  00019	50		 push	 eax
  0001a	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001d	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00023	8b f1		 mov	 esi, ecx
  00025	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CExpandedImageBox@UI@@6B@

; 1489 : 		OnDestroyInstance();

  0002b	e8 00 00 00 00	 call	 ?OnDestroyInstance@CExpandedImageBox@UI@@MAEXXZ ; UI::CExpandedImageBox::OnDestroyInstance

; 1490 : 	}

  00030	8b ce		 mov	 ecx, esi
  00032	e8 00 00 00 00	 call	 ??1CImageBox@UI@@UAE@XZ	; UI::CImageBox::~CImageBox
  00037	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0003a	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00041	59		 pop	 ecx
  00042	5e		 pop	 esi
  00043	8b e5		 mov	 esp, ebp
  00045	5d		 pop	 ebp
  00046	c3		 ret	 0
  00047	cc		 int	 3
  00048	cc		 int	 3
  00049	cc		 int	 3
  0004a	cc		 int	 3
  0004b	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1CExpandedImageBox@UI@@UAE@XZ:
  00000	90		 npad	 1
  00001	90		 npad	 1
  00002	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00006	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00009	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  0000c	33 c8		 xor	 ecx, eax
  0000e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00013	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1CExpandedImageBox@UI@@UAE@XZ
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1CExpandedImageBox@UI@@UAE@XZ ENDP			; UI::CExpandedImageBox::~CExpandedImageBox
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ??0CExpandedImageBox@UI@@QAE@PAU_object@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_ppyObject$ = 8						; size = 4
??0CExpandedImageBox@UI@@QAE@PAU_object@@@Z PROC	; UI::CExpandedImageBox::CExpandedImageBox, COMDAT
; _this$ = ecx

; 1485 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	ff 75 08	 push	 DWORD PTR _ppyObject$[ebp]
  00008	8b f1		 mov	 esi, ecx
  0000a	89 75 fc	 mov	 DWORD PTR _this$[ebp], esi
  0000d	e8 00 00 00 00	 call	 ??0CImageBox@UI@@QAE@PAU_object@@@Z ; UI::CImageBox::CImageBox
  00012	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CExpandedImageBox@UI@@6B@

; 1486 : 	}

  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	8b e5		 mov	 esp, ebp
  0001d	5d		 pop	 ebp
  0001e	c2 04 00	 ret	 4
??0CExpandedImageBox@UI@@QAE@PAU_object@@@Z ENDP	; UI::CExpandedImageBox::CExpandedImageBox
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?Type@CExpandedImageBox@UI@@SAKXZ
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
?Type@CExpandedImageBox@UI@@SAKXZ PROC			; UI::CExpandedImageBox::Type, COMDAT

; 1471 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?Type@CExpandedImageBox@UI@@SAKXZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00016	33 c5		 xor	 eax, ebp
  00018	50		 push	 eax
  00019	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001c	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax

; 1472 : 		static DWORD s_dwType = GetCRC32("CExpandedImageBox", strlen("CExpandedImageBox"));

  00022	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__tls_array
  00028	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR __tls_index
  0002e	8b 0c 88	 mov	 ecx, DWORD PTR [eax+ecx*4]
  00031	a1 00 00 00 00	 mov	 eax, DWORD PTR ?$TSS0@?1??Type@CExpandedImageBox@UI@@SAKXZ@4HA
  00036	3b 81 00 00 00
	00		 cmp	 eax, DWORD PTR __Init_thread_epoch[ecx]
  0003c	7f 14		 jg	 SHORT $LN9@Type
$LN5@Type:

; 1473 : 		return (s_dwType);
; 1474 : 	}

  0003e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?s_dwType@?1??Type@CExpandedImageBox@UI@@SAKXZ@4KA
  00043	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00046	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0004d	59		 pop	 ecx
  0004e	8b e5		 mov	 esp, ebp
  00050	5d		 pop	 ebp
  00051	c3		 ret	 0
$LN9@Type:

; 1472 : 		static DWORD s_dwType = GetCRC32("CExpandedImageBox", strlen("CExpandedImageBox"));

  00052	68 00 00 00 00	 push	 OFFSET ?$TSS0@?1??Type@CExpandedImageBox@UI@@SAKXZ@4HA
  00057	e8 00 00 00 00	 call	 __Init_thread_header
  0005c	83 c4 04	 add	 esp, 4
  0005f	83 3d 00 00 00
	00 ff		 cmp	 DWORD PTR ?$TSS0@?1??Type@CExpandedImageBox@UI@@SAKXZ@4HA, -1
  00066	75 d6		 jne	 SHORT $LN5@Type
  00068	6a 11		 push	 17			; 00000011H
  0006a	68 00 00 00 00	 push	 OFFSET ??_C@_0BC@DJHPPMGJ@CExpandedImageBox@
  0006f	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00076	e8 00 00 00 00	 call	 ?GetCRC32@@YAKPBDI@Z	; GetCRC32
  0007b	68 00 00 00 00	 push	 OFFSET ?$TSS0@?1??Type@CExpandedImageBox@UI@@SAKXZ@4HA
  00080	a3 00 00 00 00	 mov	 DWORD PTR ?s_dwType@?1??Type@CExpandedImageBox@UI@@SAKXZ@4KA, eax
  00085	e8 00 00 00 00	 call	 __Init_thread_footer
  0008a	83 c4 0c	 add	 esp, 12			; 0000000cH
  0008d	eb af		 jmp	 SHORT $LN5@Type
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?Type@CExpandedImageBox@UI@@SAKXZ$0:
  00000	68 00 00 00 00	 push	 OFFSET ?$TSS0@?1??Type@CExpandedImageBox@UI@@SAKXZ@4HA
  00005	e8 00 00 00 00	 call	 __Init_thread_abort
  0000a	59		 pop	 ecx
  0000b	c3		 ret	 0
  0000c	cc		 int	 3
  0000d	cc		 int	 3
  0000e	cc		 int	 3
  0000f	cc		 int	 3
  00010	cc		 int	 3
__ehhandler$?Type@CExpandedImageBox@UI@@SAKXZ:
  00011	90		 npad	 1
  00012	90		 npad	 1
  00013	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00017	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0001a	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  0001d	33 c8		 xor	 ecx, eax
  0001f	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00024	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?Type@CExpandedImageBox@UI@@SAKXZ
  00029	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?Type@CExpandedImageBox@UI@@SAKXZ ENDP			; UI::CExpandedImageBox::Type
; Function compile flags: /Ogtp
;	COMDAT ??_GCMarkBox@UI@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCMarkBox@UI@@UAEPAXI@Z PROC				; UI::CMarkBox::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1CMarkBox@UI@@UAE@XZ	; UI::CMarkBox::~CMarkBox
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0e		 je	 SHORT $LN4@scalar
  00011	68 80 00 00 00	 push	 128			; 00000080H
  00016	56		 push	 esi
  00017	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0001c	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001f	8b c6		 mov	 eax, esi
  00021	5e		 pop	 esi
  00022	5d		 pop	 ebp
  00023	c2 04 00	 ret	 4
??_GCMarkBox@UI@@UAEPAXI@Z ENDP				; UI::CMarkBox::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnChangePosition@CMarkBox@UI@@MAEXXZ
_TEXT	SEGMENT
?OnChangePosition@CMarkBox@UI@@MAEXXZ PROC		; UI::CMarkBox::OnChangePosition, COMDAT
; _this$ = ecx

; 1460 : 		if (!m_pMarkInstance)

  00000	8b 41 7c	 mov	 eax, DWORD PTR [ecx+124]
  00003	85 c0		 test	 eax, eax
  00005	74 25		 je	 SHORT $LN1@OnChangePo

; 1461 : 			return;
; 1462 : 
; 1463 : 		m_pMarkInstance->SetPosition(m_rect.left, m_rect.top);

  00007	66 0f 6e 41 38	 movd	 xmm0, DWORD PTR [ecx+56]
  0000c	83 ec 08	 sub	 esp, 8
  0000f	0f 5b c0	 cvtdq2ps xmm0, xmm0
  00012	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  00018	66 0f 6e 41 34	 movd	 xmm0, DWORD PTR [ecx+52]
  0001d	8b c8		 mov	 ecx, eax
  0001f	0f 5b c0	 cvtdq2ps xmm0, xmm0
  00022	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00027	e8 00 00 00 00	 call	 ?SetPosition@CGraphicMarkInstance@@QAEXMM@Z ; CGraphicMarkInstance::SetPosition
$LN1@OnChangePo:

; 1464 : 	}

  0002c	c3		 ret	 0
?OnChangePosition@CMarkBox@UI@@MAEXXZ ENDP		; UI::CMarkBox::OnChangePosition
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnRender@CMarkBox@UI@@MAEXXZ
_TEXT	SEGMENT
?OnRender@CMarkBox@UI@@MAEXXZ PROC			; UI::CMarkBox::OnRender, COMDAT
; _this$ = ecx

; 1451 : 		if (!m_pMarkInstance)

  00000	8b 41 7c	 mov	 eax, DWORD PTR [ecx+124]
  00003	85 c0		 test	 eax, eax
  00005	74 0d		 je	 SHORT $LN3@OnRender

; 1452 : 			return;
; 1453 : 
; 1454 : 		if (IsShow())

  00007	80 79 55 00	 cmp	 BYTE PTR [ecx+85], 0
  0000b	74 07		 je	 SHORT $LN3@OnRender

; 1455 : 			m_pMarkInstance->Render();

  0000d	8b c8		 mov	 ecx, eax
  0000f	e9 00 00 00 00	 jmp	 ?Render@CGraphicMarkInstance@@QAEXXZ ; CGraphicMarkInstance::Render
$LN3@OnRender:

; 1456 : 	}

  00014	c3		 ret	 0
?OnRender@CMarkBox@UI@@MAEXXZ ENDP			; UI::CMarkBox::OnRender
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnUpdate@CMarkBox@UI@@MAEXXZ
_TEXT	SEGMENT
?OnUpdate@CMarkBox@UI@@MAEXXZ PROC			; UI::CMarkBox::OnUpdate, COMDAT
; _this$ = ecx

; 1447 : 	}

  00000	c2 00 00	 ret	 0
?OnUpdate@CMarkBox@UI@@MAEXXZ ENDP			; UI::CMarkBox::OnUpdate
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnDestroyInstance@CMarkBox@UI@@MAEXXZ
_TEXT	SEGMENT
?OnDestroyInstance@CMarkBox@UI@@MAEXXZ PROC		; UI::CMarkBox::OnDestroyInstance, COMDAT
; _this$ = ecx

; 1402 : 	{

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 1403 : 		if (m_pMarkInstance)

  00003	8b 46 7c	 mov	 eax, DWORD PTR [esi+124]
  00006	85 c0		 test	 eax, eax
  00008	74 10		 je	 SHORT $LN2@OnDestroyI

; 1404 : 		{
; 1405 : 			CGraphicMarkInstance::Delete(m_pMarkInstance);

  0000a	50		 push	 eax
  0000b	e8 00 00 00 00	 call	 ?Delete@CGraphicMarkInstance@@SAXPAV1@@Z ; CGraphicMarkInstance::Delete
  00010	83 c4 04	 add	 esp, 4

; 1406 : 			m_pMarkInstance=NULL;

  00013	c7 46 7c 00 00
	00 00		 mov	 DWORD PTR [esi+124], 0
$LN2@OnDestroyI:

; 1407 : 		}
; 1408 : 	}

  0001a	5e		 pop	 esi
  0001b	c3		 ret	 0
?OnDestroyInstance@CMarkBox@UI@@MAEXXZ ENDP		; UI::CMarkBox::OnDestroyInstance
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnCreateInstance@CMarkBox@UI@@MAEXXZ
_TEXT	SEGMENT
?OnCreateInstance@CMarkBox@UI@@MAEXXZ PROC		; UI::CMarkBox::OnCreateInstance, COMDAT
; _this$ = ecx

; 1396 : 	{

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 1397 : 		OnDestroyInstance();

  00003	8b 06		 mov	 eax, DWORD PTR [esi]
  00005	ff 90 a4 00 00
	00		 call	 DWORD PTR [eax+164]

; 1398 : 		m_pMarkInstance = CGraphicMarkInstance::New();

  0000b	e8 00 00 00 00	 call	 ?New@CGraphicMarkInstance@@SAPAV1@XZ ; CGraphicMarkInstance::New
  00010	89 46 7c	 mov	 DWORD PTR [esi+124], eax
  00013	5e		 pop	 esi

; 1399 : 	}

  00014	c3		 ret	 0
?OnCreateInstance@CMarkBox@UI@@MAEXXZ ENDP		; UI::CMarkBox::OnCreateInstance
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?SetScale@CMarkBox@UI@@QAEXM@Z
_TEXT	SEGMENT
_fScale$ = 8						; size = 4
?SetScale@CMarkBox@UI@@QAEXM@Z PROC			; UI::CMarkBox::SetScale, COMDAT
; _this$ = ecx

; 1422 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1423 : 		if (!m_pMarkInstance)

  00003	8b 49 7c	 mov	 ecx, DWORD PTR [ecx+124]
  00006	85 c9		 test	 ecx, ecx
  00008	74 10		 je	 SHORT $LN1@SetScale

; 1424 : 			return;
; 1425 : 
; 1426 : 		m_pMarkInstance->SetScale(fScale);

  0000a	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _fScale$[ebp]
  0000f	51		 push	 ecx
  00010	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00015	e8 00 00 00 00	 call	 ?SetScale@CGraphicMarkInstance@@QAEXM@Z ; CGraphicMarkInstance::SetScale
$LN1@SetScale:

; 1427 : 	}

  0001a	5d		 pop	 ebp
  0001b	c2 04 00	 ret	 4
?SetScale@CMarkBox@UI@@QAEXM@Z ENDP			; UI::CMarkBox::SetScale
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?SetIndex@CMarkBox@UI@@QAEXI@Z
_TEXT	SEGMENT
_uIndex$ = 8						; size = 4
?SetIndex@CMarkBox@UI@@QAEXI@Z PROC			; UI::CMarkBox::SetIndex, COMDAT
; _this$ = ecx

; 1430 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1431 : 		if (!m_pMarkInstance)

  00003	8b 49 7c	 mov	 ecx, DWORD PTR [ecx+124]
  00006	85 c9		 test	 ecx, ecx
  00008	74 06		 je	 SHORT $LN1@SetIndex

; 1435 : 	}

  0000a	5d		 pop	 ebp

; 1432 : 			return;
; 1433 : 
; 1434 : 		m_pMarkInstance->SetIndex(uIndex);

  0000b	e9 00 00 00 00	 jmp	 ?SetIndex@CGraphicMarkInstance@@QAEXI@Z ; CGraphicMarkInstance::SetIndex
$LN1@SetIndex:

; 1435 : 	}

  00010	5d		 pop	 ebp
  00011	c2 04 00	 ret	 4
?SetIndex@CMarkBox@UI@@QAEXI@Z ENDP			; UI::CMarkBox::SetIndex
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?SetDiffuseColor@CMarkBox@UI@@QAEXMMMM@Z
_TEXT	SEGMENT
_fr$ = 8						; size = 4
_fg$ = 12						; size = 4
_fb$ = 16						; size = 4
_fa$ = 20						; size = 4
?SetDiffuseColor@CMarkBox@UI@@QAEXMMMM@Z PROC		; UI::CMarkBox::SetDiffuseColor, COMDAT
; _this$ = ecx

; 1438 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1439 : 		if (!m_pMarkInstance)

  00003	8b 49 7c	 mov	 ecx, DWORD PTR [ecx+124]
  00006	85 c9		 test	 ecx, ecx
  00008	74 33		 je	 SHORT $LN1@SetDiffuse

; 1440 : 			return;
; 1441 : 
; 1442 : 		m_pMarkInstance->SetDiffuseColor(fr, fg, fb, fa);

  0000a	f3 0f 10 45 14	 movss	 xmm0, DWORD PTR _fa$[ebp]
  0000f	83 ec 10	 sub	 esp, 16			; 00000010H
  00012	f3 0f 11 44 24
	0c		 movss	 DWORD PTR [esp+12], xmm0
  00018	f3 0f 10 45 10	 movss	 xmm0, DWORD PTR _fb$[ebp]
  0001d	f3 0f 11 44 24
	08		 movss	 DWORD PTR [esp+8], xmm0
  00023	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR _fg$[ebp]
  00028	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  0002e	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _fr$[ebp]
  00033	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00038	e8 00 00 00 00	 call	 ?SetDiffuseColor@CGraphicMarkInstance@@QAEXMMMM@Z ; CGraphicMarkInstance::SetDiffuseColor
$LN1@SetDiffuse:

; 1443 : 	}

  0003d	5d		 pop	 ebp
  0003e	c2 10 00	 ret	 16			; 00000010H
?SetDiffuseColor@CMarkBox@UI@@QAEXMMMM@Z ENDP		; UI::CMarkBox::SetDiffuseColor
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?LoadImageA@CMarkBox@UI@@QAEXPBD@Z
_TEXT	SEGMENT
_c_szFilename$ = 8					; size = 4
?LoadImageA@CMarkBox@UI@@QAEXPBD@Z PROC			; UI::CMarkBox::LoadImageA, COMDAT
; _this$ = ecx

; 1411 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 1412 : 		OnCreateInstance();

  00006	8b 06		 mov	 eax, DWORD PTR [esi]
  00008	ff 90 a0 00 00
	00		 call	 DWORD PTR [eax+160]

; 1413 : 
; 1414 : 		m_pMarkInstance->SetImageFileName(c_szFilename);

  0000e	ff 75 08	 push	 DWORD PTR _c_szFilename$[ebp]
  00011	8b 4e 7c	 mov	 ecx, DWORD PTR [esi+124]
  00014	e8 00 00 00 00	 call	 ?SetImageFileName@CGraphicMarkInstance@@QAEXPBD@Z ; CGraphicMarkInstance::SetImageFileName

; 1415 : 		m_pMarkInstance->Load();

  00019	8b 4e 7c	 mov	 ecx, DWORD PTR [esi+124]
  0001c	e8 00 00 00 00	 call	 ?Load@CGraphicMarkInstance@@QAEXXZ ; CGraphicMarkInstance::Load

; 1416 : 		SetSize(m_pMarkInstance->GetWidth(), m_pMarkInstance->GetHeight());

  00021	8b 4e 7c	 mov	 ecx, DWORD PTR [esi+124]
  00024	e8 00 00 00 00	 call	 ?GetHeight@CGraphicMarkInstance@@QAEHXZ ; CGraphicMarkInstance::GetHeight
  00029	8b 4e 7c	 mov	 ecx, DWORD PTR [esi+124]
  0002c	50		 push	 eax
  0002d	e8 00 00 00 00	 call	 ?GetWidth@CGraphicMarkInstance@@QAEHXZ ; CGraphicMarkInstance::GetWidth
  00032	50		 push	 eax
  00033	8b ce		 mov	 ecx, esi
  00035	e8 00 00 00 00	 call	 ?SetSize@CWindow@UI@@QAEXJJ@Z ; UI::CWindow::SetSize

; 1417 : 
; 1418 : 		UpdateRect();

  0003a	8b ce		 mov	 ecx, esi
  0003c	e8 00 00 00 00	 call	 ?UpdateRect@CWindow@UI@@QAEJXZ ; UI::CWindow::UpdateRect
  00041	5e		 pop	 esi

; 1419 : 	}

  00042	5d		 pop	 ebp
  00043	c2 04 00	 ret	 4
?LoadImageA@CMarkBox@UI@@QAEXPBD@Z ENDP			; UI::CMarkBox::LoadImageA
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ??1CMarkBox@UI@@UAE@XZ
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
??1CMarkBox@UI@@UAE@XZ PROC				; UI::CMarkBox::~CMarkBox, COMDAT
; _this$ = ecx

; 1391 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1CMarkBox@UI@@UAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	56		 push	 esi
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00017	33 c5		 xor	 eax, ebp
  00019	50		 push	 eax
  0001a	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001d	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00023	8b f1		 mov	 esi, ecx
  00025	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CMarkBox@UI@@6B@

; 1392 : 		OnDestroyInstance();

  0002b	e8 00 00 00 00	 call	 ?OnDestroyInstance@CMarkBox@UI@@MAEXXZ ; UI::CMarkBox::OnDestroyInstance

; 1393 : 	}

  00030	8b ce		 mov	 ecx, esi
  00032	e8 00 00 00 00	 call	 ??1CWindow@UI@@UAE@XZ	; UI::CWindow::~CWindow
  00037	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0003a	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00041	59		 pop	 ecx
  00042	5e		 pop	 esi
  00043	8b e5		 mov	 esp, ebp
  00045	5d		 pop	 ebp
  00046	c3		 ret	 0
  00047	cc		 int	 3
  00048	cc		 int	 3
  00049	cc		 int	 3
  0004a	cc		 int	 3
  0004b	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1CMarkBox@UI@@UAE@XZ:
  00000	90		 npad	 1
  00001	90		 npad	 1
  00002	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00006	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00009	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  0000c	33 c8		 xor	 ecx, eax
  0000e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00013	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1CMarkBox@UI@@UAE@XZ
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1CMarkBox@UI@@UAE@XZ ENDP				; UI::CMarkBox::~CMarkBox
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ??0CMarkBox@UI@@QAE@PAU_object@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_ppyObject$ = 8						; size = 4
??0CMarkBox@UI@@QAE@PAU_object@@@Z PROC			; UI::CMarkBox::CMarkBox, COMDAT
; _this$ = ecx

; 1386 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	ff 75 08	 push	 DWORD PTR _ppyObject$[ebp]
  00008	8b f1		 mov	 esi, ecx
  0000a	89 75 fc	 mov	 DWORD PTR _this$[ebp], esi
  0000d	e8 00 00 00 00	 call	 ??0CWindow@UI@@QAE@PAU_object@@@Z ; UI::CWindow::CWindow
  00012	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CMarkBox@UI@@6B@

; 1387 : 		m_pMarkInstance = NULL;
; 1388 : 	}

  00018	8b c6		 mov	 eax, esi
  0001a	c7 46 7c 00 00
	00 00		 mov	 DWORD PTR [esi+124], 0
  00021	5e		 pop	 esi
  00022	8b e5		 mov	 esp, ebp
  00024	5d		 pop	 ebp
  00025	c2 04 00	 ret	 4
??0CMarkBox@UI@@QAE@PAU_object@@@Z ENDP			; UI::CMarkBox::CMarkBox
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_GCImageBox@UI@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCImageBox@UI@@UAEPAXI@Z PROC			; UI::CImageBox::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1CImageBox@UI@@UAE@XZ	; UI::CImageBox::~CImageBox
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0e		 je	 SHORT $LN4@scalar
  00011	68 80 00 00 00	 push	 128			; 00000080H
  00016	56		 push	 esi
  00017	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0001c	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001f	8b c6		 mov	 eax, esi
  00021	5e		 pop	 esi
  00022	5d		 pop	 ebp
  00023	c2 04 00	 ret	 4
??_GCImageBox@UI@@UAEPAXI@Z ENDP			; UI::CImageBox::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnChangePosition@CImageBox@UI@@MAEXXZ
_TEXT	SEGMENT
?OnChangePosition@CImageBox@UI@@MAEXXZ PROC		; UI::CImageBox::OnChangePosition, COMDAT
; _this$ = ecx

; 1377 : 		if (!m_pImageInstance)

  00000	8b 41 7c	 mov	 eax, DWORD PTR [ecx+124]
  00003	85 c0		 test	 eax, eax
  00005	74 25		 je	 SHORT $LN1@OnChangePo

; 1378 : 			return;
; 1379 : 
; 1380 : 		m_pImageInstance->SetPosition(m_rect.left, m_rect.top);

  00007	66 0f 6e 41 38	 movd	 xmm0, DWORD PTR [ecx+56]
  0000c	83 ec 08	 sub	 esp, 8
  0000f	0f 5b c0	 cvtdq2ps xmm0, xmm0
  00012	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  00018	66 0f 6e 41 34	 movd	 xmm0, DWORD PTR [ecx+52]
  0001d	8b c8		 mov	 ecx, eax
  0001f	0f 5b c0	 cvtdq2ps xmm0, xmm0
  00022	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00027	e8 00 00 00 00	 call	 ?SetPosition@CGraphicImageInstance@@QAEXMM@Z ; CGraphicImageInstance::SetPosition
$LN1@OnChangePo:

; 1381 : 	}

  0002c	c3		 ret	 0
?OnChangePosition@CImageBox@UI@@MAEXXZ ENDP		; UI::CImageBox::OnChangePosition
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnRender@CImageBox@UI@@MAEXXZ
_TEXT	SEGMENT
?OnRender@CImageBox@UI@@MAEXXZ PROC			; UI::CImageBox::OnRender, COMDAT
; _this$ = ecx

; 1369 : 		if (!m_pImageInstance)

  00000	8b 41 7c	 mov	 eax, DWORD PTR [ecx+124]
  00003	85 c0		 test	 eax, eax
  00005	74 0d		 je	 SHORT $LN3@OnRender

; 1370 : 			return;
; 1371 : 
; 1372 : 		if (IsShow())

  00007	80 79 55 00	 cmp	 BYTE PTR [ecx+85], 0
  0000b	74 07		 je	 SHORT $LN3@OnRender

; 1373 : 			m_pImageInstance->Render();

  0000d	8b c8		 mov	 ecx, eax
  0000f	e9 00 00 00 00	 jmp	 ?Render@CGraphicImageInstance@@QAEXXZ ; CGraphicImageInstance::Render
$LN3@OnRender:

; 1374 : 	}

  00014	c3		 ret	 0
?OnRender@CImageBox@UI@@MAEXXZ ENDP			; UI::CImageBox::OnRender
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnUpdate@CImageBox@UI@@MAEXXZ
_TEXT	SEGMENT
?OnUpdate@CImageBox@UI@@MAEXXZ PROC			; UI::CImageBox::OnUpdate, COMDAT
; _this$ = ecx

; 1366 : 	}

  00000	c2 00 00	 ret	 0
?OnUpdate@CImageBox@UI@@MAEXXZ ENDP			; UI::CImageBox::OnUpdate
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnDestroyInstance@CImageBox@UI@@MAEXXZ
_TEXT	SEGMENT
?OnDestroyInstance@CImageBox@UI@@MAEXXZ PROC		; UI::CImageBox::OnDestroyInstance, COMDAT
; _this$ = ecx

; 1309 : 	{

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 1310 : 		if (m_pImageInstance)

  00003	8b 46 7c	 mov	 eax, DWORD PTR [esi+124]
  00006	85 c0		 test	 eax, eax
  00008	74 10		 je	 SHORT $LN2@OnDestroyI

; 1311 : 		{
; 1312 : 			CGraphicImageInstance::Delete(m_pImageInstance);

  0000a	50		 push	 eax
  0000b	e8 00 00 00 00	 call	 ?Delete@CGraphicImageInstance@@SAXPAV1@@Z ; CGraphicImageInstance::Delete
  00010	83 c4 04	 add	 esp, 4

; 1313 : 			m_pImageInstance=NULL;

  00013	c7 46 7c 00 00
	00 00		 mov	 DWORD PTR [esi+124], 0
$LN2@OnDestroyI:

; 1314 : 		}
; 1315 : 	}

  0001a	5e		 pop	 esi
  0001b	c3		 ret	 0
?OnDestroyInstance@CImageBox@UI@@MAEXXZ ENDP		; UI::CImageBox::OnDestroyInstance
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnCreateInstance@CImageBox@UI@@MAEXXZ
_TEXT	SEGMENT
?OnCreateInstance@CImageBox@UI@@MAEXXZ PROC		; UI::CImageBox::OnCreateInstance, COMDAT
; _this$ = ecx

; 1303 : 	{

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 1304 : 		OnDestroyInstance();

  00003	8b 06		 mov	 eax, DWORD PTR [esi]
  00005	ff 90 a4 00 00
	00		 call	 DWORD PTR [eax+164]

; 1305 : 
; 1306 : 		m_pImageInstance = CGraphicImageInstance::New();

  0000b	e8 00 00 00 00	 call	 ?New@CGraphicImageInstance@@SAPAV1@XZ ; CGraphicImageInstance::New
  00010	89 46 7c	 mov	 DWORD PTR [esi+124], eax
  00013	5e		 pop	 esi

; 1307 : 	}

  00014	c3		 ret	 0
?OnCreateInstance@CImageBox@UI@@MAEXXZ ENDP		; UI::CImageBox::OnCreateInstance
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?GetHeight@CImageBox@UI@@QAEHXZ
_TEXT	SEGMENT
?GetHeight@CImageBox@UI@@QAEHXZ PROC			; UI::CImageBox::GetHeight, COMDAT
; _this$ = ecx

; 1358 : 		if (!m_pImageInstance)

  00000	8b 49 7c	 mov	 ecx, DWORD PTR [ecx+124]
  00003	85 c9		 test	 ecx, ecx
  00005	75 03		 jne	 SHORT $LN2@GetHeight

; 1359 : 			return 0;

  00007	33 c0		 xor	 eax, eax

; 1362 : 	}

  00009	c3		 ret	 0
$LN2@GetHeight:

; 1360 : 
; 1361 : 		return m_pImageInstance->GetHeight();

  0000a	e9 00 00 00 00	 jmp	 ?GetHeight@CGraphicImageInstance@@QAEHXZ ; CGraphicImageInstance::GetHeight
?GetHeight@CImageBox@UI@@QAEHXZ ENDP			; UI::CImageBox::GetHeight
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?GetWidth@CImageBox@UI@@QAEHXZ
_TEXT	SEGMENT
?GetWidth@CImageBox@UI@@QAEHXZ PROC			; UI::CImageBox::GetWidth, COMDAT
; _this$ = ecx

; 1350 : 		if (!m_pImageInstance)

  00000	8b 49 7c	 mov	 ecx, DWORD PTR [ecx+124]
  00003	85 c9		 test	 ecx, ecx
  00005	75 03		 jne	 SHORT $LN2@GetWidth

; 1351 : 			return 0;

  00007	33 c0		 xor	 eax, eax

; 1354 : 	}

  00009	c3		 ret	 0
$LN2@GetWidth:

; 1352 : 
; 1353 : 		return m_pImageInstance->GetWidth();

  0000a	e9 00 00 00 00	 jmp	 ?GetWidth@CGraphicImageInstance@@QAEHXZ ; CGraphicImageInstance::GetWidth
?GetWidth@CImageBox@UI@@QAEHXZ ENDP			; UI::CImageBox::GetWidth
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?SetDiffuseColor@CImageBox@UI@@QAEXMMMM@Z
_TEXT	SEGMENT
_fr$ = 8						; size = 4
_fg$ = 12						; size = 4
_fb$ = 16						; size = 4
_fa$ = 20						; size = 4
?SetDiffuseColor@CImageBox@UI@@QAEXMMMM@Z PROC		; UI::CImageBox::SetDiffuseColor, COMDAT
; _this$ = ecx

; 1341 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1342 : 		if (!m_pImageInstance)

  00003	8b 49 7c	 mov	 ecx, DWORD PTR [ecx+124]
  00006	85 c9		 test	 ecx, ecx
  00008	74 33		 je	 SHORT $LN1@SetDiffuse

; 1343 : 			return;
; 1344 : 
; 1345 : 		m_pImageInstance->SetDiffuseColor(fr, fg, fb, fa);

  0000a	f3 0f 10 45 14	 movss	 xmm0, DWORD PTR _fa$[ebp]
  0000f	83 ec 10	 sub	 esp, 16			; 00000010H
  00012	f3 0f 11 44 24
	0c		 movss	 DWORD PTR [esp+12], xmm0
  00018	f3 0f 10 45 10	 movss	 xmm0, DWORD PTR _fb$[ebp]
  0001d	f3 0f 11 44 24
	08		 movss	 DWORD PTR [esp+8], xmm0
  00023	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR _fg$[ebp]
  00028	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  0002e	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _fr$[ebp]
  00033	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00038	e8 00 00 00 00	 call	 ?SetDiffuseColor@CGraphicImageInstance@@QAEXMMMM@Z ; CGraphicImageInstance::SetDiffuseColor
$LN1@SetDiffuse:

; 1346 : 	}

  0003d	5d		 pop	 ebp
  0003e	c2 10 00	 ret	 16			; 00000010H
?SetDiffuseColor@CImageBox@UI@@QAEXMMMM@Z ENDP		; UI::CImageBox::SetDiffuseColor
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?LoadImageA@CImageBox@UI@@QAEHPBD@Z
_TEXT	SEGMENT
_c_szFileName$ = 8					; size = 4
?LoadImageA@CImageBox@UI@@QAEHPBD@Z PROC		; UI::CImageBox::LoadImageA, COMDAT
; _this$ = ecx

; 1318 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	57		 push	 edi

; 1319 : 		if (!c_szFileName[0])

  00005	8b 7d 08	 mov	 edi, DWORD PTR _c_szFileName$[ebp]
  00008	8b f1		 mov	 esi, ecx
  0000a	80 3f 00	 cmp	 BYTE PTR [edi], 0
  0000d	74 6b		 je	 SHORT $LN7@LoadImageA

; 1320 : 			return FALSE;
; 1321 : 
; 1322 : 		OnCreateInstance();

  0000f	8b 06		 mov	 eax, DWORD PTR [esi]
  00011	ff 90 a0 00 00
	00		 call	 DWORD PTR [eax+160]

; 1323 : 
; 1324 : 		CResource * pResource = CResourceManager::Instance().GetResourcePointer(c_szFileName);

  00017	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCResourceManager@@@@0PAVCResourceManager@@A ; CSingleton<CResourceManager>::ms_singleton
  0001d	57		 push	 edi
  0001e	e8 00 00 00 00	 call	 ?GetResourcePointer@CResourceManager@@QAEPAVCResource@@PBD@Z ; CResourceManager::GetResourcePointer
  00023	8b f8		 mov	 edi, eax

; 1325 : 		if (!pResource)

  00025	85 ff		 test	 edi, edi
  00027	74 51		 je	 SHORT $LN7@LoadImageA

; 1326 : 			return FALSE;
; 1327 : 		if (!pResource->IsType(CGraphicImage::Type()))

  00029	e8 00 00 00 00	 call	 ?Type@CGraphicImage@@SAKXZ ; CGraphicImage::Type
  0002e	50		 push	 eax
  0002f	8b cf		 mov	 ecx, edi
  00031	e8 00 00 00 00	 call	 ?IsType@CResource@@QAE_NK@Z ; CResource::IsType
  00036	84 c0		 test	 al, al
  00038	74 40		 je	 SHORT $LN7@LoadImageA

; 1328 : 			return FALSE;
; 1329 : 
; 1330 : 		m_pImageInstance->SetImagePointer(static_cast<CGraphicImage*>(pResource));

  0003a	8b 4e 7c	 mov	 ecx, DWORD PTR [esi+124]
  0003d	57		 push	 edi
  0003e	e8 00 00 00 00	 call	 ?SetImagePointer@CGraphicImageInstance@@QAEXPAVCGraphicImage@@@Z ; CGraphicImageInstance::SetImagePointer

; 1331 : 		if (m_pImageInstance->IsEmpty())

  00043	8b 4e 7c	 mov	 ecx, DWORD PTR [esi+124]
  00046	e8 00 00 00 00	 call	 ?IsEmpty@CGraphicImageInstance@@QBE_NXZ ; CGraphicImageInstance::IsEmpty
  0004b	84 c0		 test	 al, al
  0004d	75 2b		 jne	 SHORT $LN7@LoadImageA

; 1333 : 
; 1334 : 		SetSize(m_pImageInstance->GetWidth(), m_pImageInstance->GetHeight());

  0004f	8b 4e 7c	 mov	 ecx, DWORD PTR [esi+124]
  00052	e8 00 00 00 00	 call	 ?GetHeight@CGraphicImageInstance@@QAEHXZ ; CGraphicImageInstance::GetHeight
  00057	8b 4e 7c	 mov	 ecx, DWORD PTR [esi+124]
  0005a	50		 push	 eax
  0005b	e8 00 00 00 00	 call	 ?GetWidth@CGraphicImageInstance@@QAEHXZ ; CGraphicImageInstance::GetWidth
  00060	50		 push	 eax
  00061	8b ce		 mov	 ecx, esi
  00063	e8 00 00 00 00	 call	 ?SetSize@CWindow@UI@@QAEXJJ@Z ; UI::CWindow::SetSize

; 1335 : 		UpdateRect();

  00068	8b ce		 mov	 ecx, esi
  0006a	e8 00 00 00 00	 call	 ?UpdateRect@CWindow@UI@@QAEJXZ ; UI::CWindow::UpdateRect
  0006f	5f		 pop	 edi

; 1336 : 
; 1337 : 		return TRUE;

  00070	b8 01 00 00 00	 mov	 eax, 1

; 1338 : 	}

  00075	5e		 pop	 esi
  00076	5d		 pop	 ebp
  00077	c2 04 00	 ret	 4
$LN7@LoadImageA:
  0007a	5f		 pop	 edi

; 1332 : 			return FALSE;

  0007b	33 c0		 xor	 eax, eax

; 1338 : 	}

  0007d	5e		 pop	 esi
  0007e	5d		 pop	 ebp
  0007f	c2 04 00	 ret	 4
?LoadImageA@CImageBox@UI@@QAEHPBD@Z ENDP		; UI::CImageBox::LoadImageA
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ??1CImageBox@UI@@UAE@XZ
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
??1CImageBox@UI@@UAE@XZ PROC				; UI::CImageBox::~CImageBox, COMDAT
; _this$ = ecx

; 1298 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1CImageBox@UI@@UAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	56		 push	 esi
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00017	33 c5		 xor	 eax, ebp
  00019	50		 push	 eax
  0001a	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001d	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00023	8b f1		 mov	 esi, ecx
  00025	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CImageBox@UI@@6B@

; 1299 : 		OnDestroyInstance();

  0002b	e8 00 00 00 00	 call	 ?OnDestroyInstance@CImageBox@UI@@MAEXXZ ; UI::CImageBox::OnDestroyInstance

; 1300 : 	}

  00030	8b ce		 mov	 ecx, esi
  00032	e8 00 00 00 00	 call	 ??1CWindow@UI@@UAE@XZ	; UI::CWindow::~CWindow
  00037	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0003a	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00041	59		 pop	 ecx
  00042	5e		 pop	 esi
  00043	8b e5		 mov	 esp, ebp
  00045	5d		 pop	 ebp
  00046	c3		 ret	 0
  00047	cc		 int	 3
  00048	cc		 int	 3
  00049	cc		 int	 3
  0004a	cc		 int	 3
  0004b	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1CImageBox@UI@@UAE@XZ:
  00000	90		 npad	 1
  00001	90		 npad	 1
  00002	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00006	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00009	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  0000c	33 c8		 xor	 ecx, eax
  0000e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00013	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1CImageBox@UI@@UAE@XZ
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1CImageBox@UI@@UAE@XZ ENDP				; UI::CImageBox::~CImageBox
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ??0CImageBox@UI@@QAE@PAU_object@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_ppyObject$ = 8						; size = 4
??0CImageBox@UI@@QAE@PAU_object@@@Z PROC		; UI::CImageBox::CImageBox, COMDAT
; _this$ = ecx

; 1294 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	ff 75 08	 push	 DWORD PTR _ppyObject$[ebp]
  00008	8b f1		 mov	 esi, ecx
  0000a	89 75 fc	 mov	 DWORD PTR _this$[ebp], esi
  0000d	e8 00 00 00 00	 call	 ??0CWindow@UI@@QAE@PAU_object@@@Z ; UI::CWindow::CWindow
  00012	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CImageBox@UI@@6B@

; 1295 : 		m_pImageInstance = NULL;
; 1296 : 	}

  00018	8b c6		 mov	 eax, esi
  0001a	c7 46 7c 00 00
	00 00		 mov	 DWORD PTR [esi+124], 0
  00021	5e		 pop	 esi
  00022	8b e5		 mov	 esp, ebp
  00024	5d		 pop	 ebp
  00025	c2 04 00	 ret	 4
??0CImageBox@UI@@QAE@PAU_object@@@Z ENDP		; UI::CImageBox::CImageBox
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_GCNumberLine@UI@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCNumberLine@UI@@UAEPAXI@Z PROC			; UI::CNumberLine::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1CNumberLine@UI@@UAE@XZ ; UI::CNumberLine::~CNumberLine
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0e		 je	 SHORT $LN4@scalar
  00011	68 c0 00 00 00	 push	 192			; 000000c0H
  00016	56		 push	 esi
  00017	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0001c	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001f	8b c6		 mov	 eax, esi
  00021	5e		 pop	 esi
  00022	5d		 pop	 ebp
  00023	c2 04 00	 ret	 4
??_GCNumberLine@UI@@UAEPAXI@Z ENDP			; UI::CNumberLine::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\vector
;	COMDAT ?_Xlength@?$vector@PAVCGraphicImageInstance@@V?$allocator@PAVCGraphicImageInstance@@@std@@@std@@CAXXZ
_TEXT	SEGMENT
?_Xlength@?$vector@PAVCGraphicImageInstance@@V?$allocator@PAVCGraphicImageInstance@@@std@@@std@@CAXXZ PROC ; std::vector<CGraphicImageInstance *,std::allocator<CGraphicImageInstance *> >::_Xlength, COMDAT

; 1761 :         _Xlength_error("vector too long");

  00000	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@FOIKENOD@vector?5too?5long@
  00005	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPBD@Z ; std::_Xlength_error
$LN3@Xlength:
  0000a	cc		 int	 3
?_Xlength@?$vector@PAVCGraphicImageInstance@@V?$allocator@PAVCGraphicImageInstance@@@std@@@std@@CAXXZ ENDP ; std::vector<CGraphicImageInstance *,std::allocator<CGraphicImageInstance *> >::_Xlength
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\vector
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\vector
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\vector
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\vector
;	COMDAT ??1?$vector@PAVCGraphicImageInstance@@V?$allocator@PAVCGraphicImageInstance@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$vector@PAVCGraphicImageInstance@@V?$allocator@PAVCGraphicImageInstance@@@std@@@std@@QAE@XZ PROC ; std::vector<CGraphicImageInstance *,std::allocator<CGraphicImageInstance *> >::~vector<CGraphicImageInstance *,std::allocator<CGraphicImageInstance *> >, COMDAT
; _this$ = ecx

; 698  :     _CONSTEXPR20_CONTAINER ~vector() noexcept {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 1750 :         if (_Myfirst) { // destroy and deallocate old array

  00003	8b 06		 mov	 eax, DWORD PTR [esi]
  00005	85 c0		 test	 eax, eax
  00007	74 40		 je	 SHORT $LN4@vector

; 1751 :             _Destroy(_Myfirst, _Mylast);
; 1752 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00009	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]
  0000c	2b c8		 sub	 ecx, eax
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory

; 797  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0000e	83 e1 fc	 and	 ecx, -4			; fffffffcH

; 251  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00011	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  00017	72 12		 jb	 SHORT $LN20@vector

; 150  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00019	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  0001c	83 c1 23	 add	 ecx, 35			; 00000023H

; 151  : 
; 152  :     // If the following asserts, it likely means that we are performing
; 153  :     // an aligned delete on memory coming from an unaligned allocation.
; 154  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 155  : 
; 156  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 157  :     // in range [_Min_back_shift, _Non_user_size]
; 158  : #ifdef _DEBUG
; 159  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 160  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 161  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 162  : #endif // _DEBUG
; 163  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  0001f	2b c2		 sub	 eax, edx

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00021	83 c0 fc	 add	 eax, -4			; fffffffcH
  00024	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00027	77 22		 ja	 SHORT $LN17@vector

; 165  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  00029	8b c2		 mov	 eax, edx
$LN20@vector:

; 255  :         ::operator delete(_Ptr, _Bytes);

  0002b	51		 push	 ecx
  0002c	50		 push	 eax
  0002d	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\vector

; 1754 :             _Myfirst = nullptr;

  00032	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], 0
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory

; 255  :         ::operator delete(_Ptr, _Bytes);

  00038	83 c4 08	 add	 esp, 8
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\vector

; 1755 :             _Mylast  = nullptr;

  0003b	c7 46 04 00 00
	00 00		 mov	 DWORD PTR [esi+4], 0

; 1756 :             _Myend   = nullptr;

  00042	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0
$LN4@vector:
  00049	5e		 pop	 esi

; 704  :     }

  0004a	c3		 ret	 0
$LN17@vector:
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  0004b	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN25@vector:
  00050	cc		 int	 3
??1?$vector@PAVCGraphicImageInstance@@V?$allocator@PAVCGraphicImageInstance@@@std@@@std@@QAE@XZ ENDP ; std::vector<CGraphicImageInstance *,std::allocator<CGraphicImageInstance *> >::~vector<CGraphicImageInstance *,std::allocator<CGraphicImageInstance *> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnChangePosition@CNumberLine@UI@@MAEXXZ
_TEXT	SEGMENT
tv264 = -8						; size = 4
_i$1$ = -4						; size = 4
?OnChangePosition@CNumberLine@UI@@MAEXXZ PROC		; UI::CNumberLine::OnChangePosition, COMDAT
; _this$ = ecx

; 1260 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	8b f9		 mov	 edi, ecx

; 1261 : 		int ix = m_x;
; 1262 : 		int iy = m_y;
; 1263 : 
; 1264 : 		if (m_pParent)

  0000b	83 7f 60 00	 cmp	 DWORD PTR [edi+96], 0
  0000f	8b 5f 24	 mov	 ebx, DWORD PTR [edi+36]
  00012	8b 77 28	 mov	 esi, DWORD PTR [edi+40]
  00015	74 06		 je	 SHORT $LN7@OnChangePo

; 1265 : 		{
; 1266 : 			ix = m_rect.left;

  00017	8b 5f 34	 mov	 ebx, DWORD PTR [edi+52]

; 1267 : 			iy = m_rect.top;

  0001a	8b 77 38	 mov	 esi, DWORD PTR [edi+56]
$LN7@OnChangePo:

; 1268 : 		}
; 1269 : 
; 1270 : 		switch (m_iHorizontalAlign)

  0001d	8b 87 b8 00 00
	00		 mov	 eax, DWORD PTR [edi+184]
  00023	83 e8 01	 sub	 eax, 1
  00026	74 0d		 je	 SHORT $LN9@OnChangePo
  00028	83 e8 01	 sub	 eax, 1
  0002b	75 17		 jne	 SHORT $LN2@OnChangePo

; 1276 : 				break;
; 1277 : 			case HORIZONTAL_ALIGN_RIGHT:
; 1278 : 				ix -= int(m_dwWidthSummary);

  0002d	2b 9f bc 00 00
	00		 sub	 ebx, DWORD PTR [edi+188]
  00033	eb 0f		 jmp	 SHORT $LN2@OnChangePo
$LN9@OnChangePo:

; 1271 : 		{
; 1272 : 			case HORIZONTAL_ALIGN_LEFT:
; 1273 : 				break;
; 1274 : 			case HORIZONTAL_ALIGN_CENTER:
; 1275 : 				ix -= int(m_dwWidthSummary) / 2;

  00035	8b 87 bc 00 00
	00		 mov	 eax, DWORD PTR [edi+188]
  0003b	99		 cdq
  0003c	2b c2		 sub	 eax, edx
  0003e	d1 f8		 sar	 eax, 1
  00040	f7 d8		 neg	 eax
  00042	03 d8		 add	 ebx, eax
$LN2@OnChangePo:
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\vector

; 1536 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00044	8b 87 b0 00 00
	00		 mov	 eax, DWORD PTR [edi+176]
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp

; 1282 : 		for (DWORD i = 0; i < m_ImageInstanceVector.size(); ++i)

  0004a	33 c9		 xor	 ecx, ecx
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\vector

; 1536 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  0004c	2b 87 ac 00 00
	00		 sub	 eax, DWORD PTR [edi+172]
  00052	c1 f8 02	 sar	 eax, 2
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp

; 1282 : 		for (DWORD i = 0; i < m_ImageInstanceVector.size(); ++i)

  00055	89 4d fc	 mov	 DWORD PTR _i$1$[ebp], ecx
  00058	85 c0		 test	 eax, eax
  0005a	74 6d		 je	 SHORT $LN5@OnChangePo
  0005c	66 0f 6e c6	 movd	 xmm0, esi
  00060	0f 5b c0	 cvtdq2ps xmm0, xmm0
  00063	f3 0f 11 45 f8	 movss	 DWORD PTR tv264[ebp], xmm0
  00068	0f 1f 84 00 00
	00 00 00	 npad	 8
$LL6@OnChangePo:

; 1284 : 			m_ImageInstanceVector[i]->SetPosition(ix, iy);

  00070	83 ec 08	 sub	 esp, 8
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\vector

; 1556 :         return _My_data._Myfirst[_Pos];

  00073	8d 34 8d 00 00
	00 00		 lea	 esi, DWORD PTR [ecx*4]
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp

; 1284 : 			m_ImageInstanceVector[i]->SetPosition(ix, iy);

  0007a	8b 8f ac 00 00
	00		 mov	 ecx, DWORD PTR [edi+172]
  00080	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  00086	8b 0c 0e	 mov	 ecx, DWORD PTR [esi+ecx]
  00089	66 0f 6e c3	 movd	 xmm0, ebx
  0008d	0f 5b c0	 cvtdq2ps xmm0, xmm0
  00090	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00095	e8 00 00 00 00	 call	 ?SetPosition@CGraphicImageInstance@@QAEXMM@Z ; CGraphicImageInstance::SetPosition
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\vector

; 1556 :         return _My_data._Myfirst[_Pos];

  0009a	8b 8f ac 00 00
	00		 mov	 ecx, DWORD PTR [edi+172]
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp

; 1285 : 			ix += m_ImageInstanceVector[i]->GetWidth();

  000a0	8b 0c 31	 mov	 ecx, DWORD PTR [ecx+esi]
  000a3	e8 00 00 00 00	 call	 ?GetWidth@CGraphicImageInstance@@QAEHXZ ; CGraphicImageInstance::GetWidth
  000a8	8b 4d fc	 mov	 ecx, DWORD PTR _i$1$[ebp]
  000ab	03 d8		 add	 ebx, eax
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\vector

; 1536 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  000ad	8b 87 b0 00 00
	00		 mov	 eax, DWORD PTR [edi+176]
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp

; 1282 : 		for (DWORD i = 0; i < m_ImageInstanceVector.size(); ++i)

  000b3	41		 inc	 ecx
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\vector

; 1536 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  000b4	2b 87 ac 00 00
	00		 sub	 eax, DWORD PTR [edi+172]
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp

; 1282 : 		for (DWORD i = 0; i < m_ImageInstanceVector.size(); ++i)

  000ba	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR tv264[ebp]
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\vector

; 1536 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  000bf	c1 f8 02	 sar	 eax, 2
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp

; 1282 : 		for (DWORD i = 0; i < m_ImageInstanceVector.size(); ++i)

  000c2	89 4d fc	 mov	 DWORD PTR _i$1$[ebp], ecx
  000c5	3b c8		 cmp	 ecx, eax
  000c7	72 a7		 jb	 SHORT $LL6@OnChangePo
$LN5@OnChangePo:
  000c9	5f		 pop	 edi

; 1286 : 		}
; 1287 : 	}

  000ca	5e		 pop	 esi
  000cb	5b		 pop	 ebx
  000cc	8b e5		 mov	 esp, ebp
  000ce	5d		 pop	 ebp
  000cf	c3		 ret	 0
?OnChangePosition@CNumberLine@UI@@MAEXXZ ENDP		; UI::CNumberLine::OnChangePosition
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnRender@CNumberLine@UI@@MAEXXZ
_TEXT	SEGMENT
?OnRender@CNumberLine@UI@@MAEXXZ PROC			; UI::CNumberLine::OnRender, COMDAT
; _this$ = ecx

; 1252 : 	{

  00000	56		 push	 esi
  00001	57		 push	 edi
  00002	8b f9		 mov	 edi, ecx

; 1253 : 		for (DWORD i = 0; i < m_ImageInstanceVector.size(); ++i)

  00004	33 f6		 xor	 esi, esi
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\vector

; 1536 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00006	8b 87 b0 00 00
	00		 mov	 eax, DWORD PTR [edi+176]
  0000c	2b 87 ac 00 00
	00		 sub	 eax, DWORD PTR [edi+172]
  00012	c1 f8 02	 sar	 eax, 2
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp

; 1253 : 		for (DWORD i = 0; i < m_ImageInstanceVector.size(); ++i)

  00015	85 c0		 test	 eax, eax
  00017	74 29		 je	 SHORT $LN3@OnRender
  00019	0f 1f 80 00 00
	00 00		 npad	 7
$LL4@OnRender:

; 1254 : 		{
; 1255 : 			m_ImageInstanceVector[i]->Render();

  00020	8b 8f ac 00 00
	00		 mov	 ecx, DWORD PTR [edi+172]
  00026	8b 0c b1	 mov	 ecx, DWORD PTR [ecx+esi*4]
  00029	e8 00 00 00 00	 call	 ?Render@CGraphicImageInstance@@QAEXXZ ; CGraphicImageInstance::Render
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\vector

; 1536 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  0002e	8b 87 b0 00 00
	00		 mov	 eax, DWORD PTR [edi+176]
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp

; 1253 : 		for (DWORD i = 0; i < m_ImageInstanceVector.size(); ++i)

  00034	46		 inc	 esi
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\vector

; 1536 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00035	2b 87 ac 00 00
	00		 sub	 eax, DWORD PTR [edi+172]
  0003b	c1 f8 02	 sar	 eax, 2
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp

; 1253 : 		for (DWORD i = 0; i < m_ImageInstanceVector.size(); ++i)

  0003e	3b f0		 cmp	 esi, eax
  00040	72 de		 jb	 SHORT $LL4@OnRender
$LN3@OnRender:
  00042	5f		 pop	 edi

; 1256 : 		}
; 1257 : 	}

  00043	5e		 pop	 esi
  00044	c3		 ret	 0
?OnRender@CNumberLine@UI@@MAEXXZ ENDP			; UI::CNumberLine::OnRender
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?ClearNumber@CNumberLine@UI@@IAEXXZ
_TEXT	SEGMENT
?ClearNumber@CNumberLine@UI@@IAEXXZ PROC		; UI::CNumberLine::ClearNumber, COMDAT
; _this$ = ecx

; 1246 : 		m_ImageInstanceVector.clear();

  00000	8b 81 ac 00 00
	00		 mov	 eax, DWORD PTR [ecx+172]
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xstring

; 3230 :         return assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

  00006	6a 00		 push	 0
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp

; 1246 : 		m_ImageInstanceVector.clear();

  00008	89 81 b0 00 00
	00		 mov	 DWORD PTR [ecx+176], eax

; 1247 : 		m_dwWidthSummary = 0;

  0000e	c7 81 bc 00 00
	00 00 00 00 00	 mov	 DWORD PTR [ecx+188], 0

; 1248 : 		m_strNumber = "";

  00018	81 c1 94 00 00
	00		 add	 ecx, 148		; 00000094H
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xstring

; 3230 :         return assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

  0001e	68 00 00 00 00	 push	 OFFSET ??_C@_00CNPNBAHC@@
  00023	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp

; 1249 : 	}

  00028	c3		 ret	 0
?ClearNumber@CNumberLine@UI@@IAEXXZ ENDP		; UI::CNumberLine::ClearNumber
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xstring
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xstring
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xstring
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xstring
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xstring
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xstring
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xstring
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xstring
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xstring
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xstring
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xstring
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xstring
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xstring
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xstring
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xstring
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xstring
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xstring
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xstring
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xstring
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xstring
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xstring
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xstring
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xstring
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xstring
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xstring
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xstring
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xstring
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xstring
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xstring
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xstring
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xstring
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xstring
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xstring
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xstring
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xstring
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xstring
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xstring
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xstring
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xstring
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?SetNumber@CNumberLine@UI@@QAEXPBD@Z
_TEXT	SEGMENT
tv4284 = -92						; size = 4
tv4285 = -88						; size = 4
_pInstance$2 = -88					; size = 4
_c_szNumber$GSCopy$1$ = -84				; size = 4
_i$1$ = -84						; size = 4
_this$GSCopy$1$ = -80					; size = 4
__Old_capacity$1$ = -76					; size = 4
__Left_size$1$ = -76					; size = 4
$T3 = -72						; size = 4
__Result$1$ = -72					; size = 4
_this$1$ = -72						; size = 4
_cChar$1$ = -65						; size = 1
$T4 = -64						; size = 24
$T5 = -64						; size = 24
$T6 = -64						; size = 24
$T7 = -64						; size = 24
$T8 = -64						; size = 24
$T9 = -64						; size = 24
$T10 = -64						; size = 24
$T11 = -64						; size = 24
_strImageFileName$12 = -40				; size = 24
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_c_szNumber$ = 8					; size = 4
?SetNumber@CNumberLine@UI@@QAEXPBD@Z PROC		; UI::CNumberLine::SetNumber, COMDAT
; _this$ = ecx

; 1177 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?SetNumber@CNumberLine@UI@@QAEXPBD@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 50	 sub	 esp, 80			; 00000050H
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	89 45 f0	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  0001e	56		 push	 esi
  0001f	57		 push	 edi
  00020	50		 push	 eax
  00021	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00024	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002a	8b c1		 mov	 eax, ecx
  0002c	89 45 b0	 mov	 DWORD PTR _this$GSCopy$1$[ebp], eax
  0002f	8b 7d 08	 mov	 edi, DWORD PTR _c_szNumber$[ebp]

; 1178 : 		if (0 == m_strNumber.compare(c_szNumber))

  00032	05 94 00 00 00	 add	 eax, 148		; 00000094H
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xstring

; 404  :         return _CSTD strlen(reinterpret_cast<const char*>(_First));

  00037	8b d7		 mov	 edx, edi
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp

; 1177 : 	{

  00039	89 7d ac	 mov	 DWORD PTR _c_szNumber$GSCopy$1$[ebp], edi

; 1178 : 		if (0 == m_strNumber.compare(c_szNumber))

  0003c	89 45 b8	 mov	 DWORD PTR _this$1$[ebp], eax
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xstring

; 404  :         return _CSTD strlen(reinterpret_cast<const char*>(_First));

  0003f	8d 72 01	 lea	 esi, DWORD PTR [edx+1]
$LL882@SetNumber:
  00042	8a 02		 mov	 al, BYTE PTR [edx]
  00044	42		 inc	 edx
  00045	84 c0		 test	 al, al
  00047	75 f9		 jne	 SHORT $LL882@SetNumber

; 2272 :         const value_type* _Result = _Bx._Buf;

  00049	8b 45 b8	 mov	 eax, DWORD PTR _this$1$[ebp]

; 404  :         return _CSTD strlen(reinterpret_cast<const char*>(_First));

  0004c	2b d6		 sub	 edx, esi

; 2272 :         const value_type* _Result = _Bx._Buf;

  0004e	8b c8		 mov	 ecx, eax

; 2273 :         if (_Large_string_engaged()) {

  00050	83 78 14 10	 cmp	 DWORD PTR [eax+20], 16	; 00000010H
  00054	72 02		 jb	 SHORT $LN878@SetNumber

; 2274 :             _Result = _Unfancy(_Bx._Ptr);

  00056	8b 08		 mov	 ecx, DWORD PTR [eax]
$LN878@SetNumber:

; 4402 :         return _Traits_compare<_Traits>(_Mypair._Myval2._Myptr(), _Mypair._Myval2._Mysize, _Ptr, _Traits::length(_Ptr));

  00058	8b 40 10	 mov	 eax, DWORD PTR [eax+16]

; 578  :     const int _Ans = _Traits::compare(_Left, _Right, (_STD min)(_Left_size, _Right_size));

  0005b	3b d0		 cmp	 edx, eax
  0005d	8b f0		 mov	 esi, eax
  0005f	0f 42 f2	 cmovb	 esi, edx

; 384  :         return _CSTD memcmp(_First1, _First2, _Count);

  00062	83 ee 04	 sub	 esi, 4
  00065	72 11		 jb	 SHORT $LN885@SetNumber
$LL886@SetNumber:
  00067	8b 01		 mov	 eax, DWORD PTR [ecx]
  00069	3b 07		 cmp	 eax, DWORD PTR [edi]
  0006b	75 10		 jne	 SHORT $LN884@SetNumber
  0006d	83 c1 04	 add	 ecx, 4
  00070	83 c7 04	 add	 edi, 4
  00073	83 ee 04	 sub	 esi, 4
  00076	73 ef		 jae	 SHORT $LL886@SetNumber
$LN885@SetNumber:
  00078	83 fe fc	 cmp	 esi, -4			; fffffffcH
  0007b	74 34		 je	 SHORT $LN883@SetNumber
$LN884@SetNumber:
  0007d	8a 01		 mov	 al, BYTE PTR [ecx]
  0007f	3a 07		 cmp	 al, BYTE PTR [edi]
  00081	75 27		 jne	 SHORT $LN887@SetNumber
  00083	83 fe fd	 cmp	 esi, -3			; fffffffdH
  00086	74 29		 je	 SHORT $LN883@SetNumber
  00088	8a 41 01	 mov	 al, BYTE PTR [ecx+1]
  0008b	3a 47 01	 cmp	 al, BYTE PTR [edi+1]
  0008e	75 1a		 jne	 SHORT $LN887@SetNumber
  00090	83 fe fe	 cmp	 esi, -2			; fffffffeH
  00093	74 1c		 je	 SHORT $LN883@SetNumber
  00095	8a 41 02	 mov	 al, BYTE PTR [ecx+2]
  00098	3a 47 02	 cmp	 al, BYTE PTR [edi+2]
  0009b	75 0d		 jne	 SHORT $LN887@SetNumber
  0009d	83 fe ff	 cmp	 esi, -1
  000a0	74 0f		 je	 SHORT $LN883@SetNumber
  000a2	8a 41 03	 mov	 al, BYTE PTR [ecx+3]
  000a5	3a 47 03	 cmp	 al, BYTE PTR [edi+3]
  000a8	74 07		 je	 SHORT $LN883@SetNumber
$LN887@SetNumber:
  000aa	1b c0		 sbb	 eax, eax
  000ac	83 c8 01	 or	 eax, 1
  000af	eb 02		 jmp	 SHORT $LN888@SetNumber
$LN883@SetNumber:
  000b1	33 c0		 xor	 eax, eax
$LN888@SetNumber:

; 580  :     if (_Ans != 0) {

  000b3	8b 7d b8	 mov	 edi, DWORD PTR _this$1$[ebp]
  000b6	85 c0		 test	 eax, eax
  000b8	75 0b		 jne	 SHORT $LN44@SetNumber

; 581  :         return _Ans;
; 582  :     }
; 583  : 
; 584  :     if (_Left_size < _Right_size) {

  000ba	39 57 10	 cmp	 DWORD PTR [edi+16], edx
  000bd	72 06		 jb	 SHORT $LN44@SetNumber

; 585  :         return -1;
; 586  :     }
; 587  : 
; 588  :     if (_Left_size > _Right_size) {

  000bf	0f 86 bf 09 00
	00		 jbe	 $LN881@SetNumber
$LN44@SetNumber:
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp

; 1181 : 		ClearNumber();

  000c5	8b 4d b0	 mov	 ecx, DWORD PTR _this$GSCopy$1$[ebp]
  000c8	e8 00 00 00 00	 call	 ?ClearNumber@CNumberLine@UI@@IAEXXZ ; UI::CNumberLine::ClearNumber
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xstring

; 404  :         return _CSTD strlen(reinterpret_cast<const char*>(_First));

  000cd	8b 55 ac	 mov	 edx, DWORD PTR _c_szNumber$GSCopy$1$[ebp]
  000d0	8b ca		 mov	 ecx, edx
  000d2	8d 71 01	 lea	 esi, DWORD PTR [ecx+1]
$LL889@SetNumber:
  000d5	8a 01		 mov	 al, BYTE PTR [ecx]
  000d7	41		 inc	 ecx
  000d8	84 c0		 test	 al, al
  000da	75 f9		 jne	 SHORT $LL889@SetNumber
  000dc	2b ce		 sub	 ecx, esi

; 3230 :         return assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

  000de	51		 push	 ecx
  000df	52		 push	 edx
  000e0	8b cf		 mov	 ecx, edi
  000e2	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp

; 1185 : 		for (DWORD i = 0; i < m_strNumber.size(); ++i)

  000e7	8b 75 b0	 mov	 esi, DWORD PTR _this$GSCopy$1$[ebp]
  000ea	33 c9		 xor	 ecx, ecx
  000ec	89 4d ac	 mov	 DWORD PTR _i$1$[ebp], ecx
  000ef	39 8e a4 00 00
	00		 cmp	 DWORD PTR [esi+164], ecx
  000f5	0f 86 89 09 00
	00		 jbe	 $LN881@SetNumber
  000fb	0f 1f 44 00 00	 npad	 5
$LL4@SetNumber:
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xstring

; 2264 :         if (_Large_string_engaged()) {

  00100	83 7f 14 10	 cmp	 DWORD PTR [edi+20], 16	; 00000010H
  00104	8b c7		 mov	 eax, edi
  00106	72 02		 jb	 SHORT $LN62@SetNumber

; 2265 :             _Result = _Unfancy(_Bx._Ptr);

  00108	8b 07		 mov	 eax, DWORD PTR [edi]
$LN62@SetNumber:
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp

; 1187 : 			char cChar = m_strNumber[i];

  0010a	8a 0c 08	 mov	 cl, BYTE PTR [eax+ecx]
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xstring

; 4576 :             _My_data._Myres = _BUF_SIZE - 1;

  0010d	ba 0f 00 00 00	 mov	 edx, 15			; 0000000fH
  00112	33 ff		 xor	 edi, edi

; 2313 :         _CONSTEXPR20_CONTAINER _Bxty() noexcept : _Ptr() {} // user-provided, for fancy pointers

  00114	c7 45 d8 00 00
	00 00		 mov	 DWORD PTR _strImageFileName$12[ebp], 0
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp

; 1187 : 			char cChar = m_strNumber[i];

  0011b	88 4d bf	 mov	 BYTE PTR _cChar$1$[ebp], cl
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xstring

; 4562 :         _My_data._Mysize = 0;

  0011e	89 7d e8	 mov	 DWORD PTR _strImageFileName$12[ebp+16], edi

; 4576 :             _My_data._Myres = _BUF_SIZE - 1;

  00121	89 55 b4	 mov	 DWORD PTR __Old_capacity$1$[ebp], edx
  00124	89 55 ec	 mov	 DWORD PTR _strImageFileName$12[ebp+20], edx

; 4577 :             // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4578 :             _Traits::assign(_My_data._Bx._Buf[0], _Elem());

  00127	c6 45 d8 00	 mov	 BYTE PTR _strImageFileName$12[ebp], 0
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp

; 1188 : 			std::string strImageFileName;

  0012b	89 7d fc	 mov	 DWORD PTR __$EHRec$[ebp+8], edi

; 1189 : 
; 1190 : 			if (':' == cChar)

  0012e	80 f9 3a	 cmp	 cl, 58			; 0000003aH
  00131	0f 85 18 01 00
	00		 jne	 $LN6@SetNumber
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xstring

; 4690 :     const auto _Left_size  = _Left.size();

  00137	8b 96 8c 00 00
	00		 mov	 edx, DWORD PTR [esi+140]
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp

; 1192 : 				strImageFileName = m_strPath + "colon.sub";

  0013d	8d 4e 7c	 lea	 ecx, DWORD PTR [esi+124]
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xstring

; 4692 :     if (_Left.max_size() - _Left_size < _Right_size) {

  00140	b8 ff ff ff 7f	 mov	 eax, 2147483647		; 7fffffffH
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp

; 1192 : 				strImageFileName = m_strPath + "colon.sub";

  00145	89 4d b8	 mov	 DWORD PTR __Result$1$[ebp], ecx
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xstring

; 4692 :     if (_Left.max_size() - _Left_size < _Right_size) {

  00148	2b c2		 sub	 eax, edx
  0014a	89 55 b4	 mov	 DWORD PTR __Left_size$1$[ebp], edx
  0014d	83 f8 09	 cmp	 eax, 9
  00150	0f 82 50 09 00
	00		 jb	 $LN872@SetNumber

; 2273 :         if (_Large_string_engaged()) {

  00156	83 79 14 10	 cmp	 DWORD PTR [ecx+20], 16	; 00000010H
  0015a	72 05		 jb	 SHORT $LN89@SetNumber

; 2274 :             _Result = _Unfancy(_Bx._Ptr);

  0015c	8b 09		 mov	 ecx, DWORD PTR [ecx]
  0015e	89 4d b8	 mov	 DWORD PTR __Result$1$[ebp], ecx
$LN89@SetNumber:

; 2601 :         const auto _New_size    = static_cast<size_type>(_Left_size + _Right_size);

  00161	8d 42 09	 lea	 eax, DWORD PTR [edx+9]

; 2313 :         _CONSTEXPR20_CONTAINER _Bxty() noexcept : _Ptr() {} // user-provided, for fancy pointers

  00164	c7 45 c0 00 00
	00 00		 mov	 DWORD PTR $T11[ebp], 0

; 2602 :         size_type _New_capacity = _BUF_SIZE - 1;

  0016b	be 0f 00 00 00	 mov	 esi, 15			; 0000000fH

; 2603 :         auto& _My_data          = _Mypair._Myval2;
; 2604 :         _Elem* _Ptr             = _My_data._Bx._Buf;

  00170	8d 7d c0	 lea	 edi, DWORD PTR $T11[ebp]

; 2605 :         auto&& _Alproxy         = _GET_PROXY_ALLOCATOR(_Alty, _Getal());
; 2606 :         _Container_proxy_ptr<_Alty> _Proxy(_Alproxy, _My_data); // throws
; 2607 : 
; 2608 : #ifdef __cpp_lib_constexpr_string
; 2609 :         const bool _Activate_large_mode = _New_capacity < _New_size || _STD is_constant_evaluated();
; 2610 : #else // ^^^ __cpp_lib_constexpr_string / !__cpp_lib_constexpr_string vvv
; 2611 :         const bool _Activate_large_mode = _New_capacity < _New_size;
; 2612 : #endif // __cpp_lib_constexpr_string
; 2613 : 
; 2614 :         if (_Activate_large_mode) {

  00173	3b c6		 cmp	 eax, esi
  00175	76 5e		 jbe	 SHORT $LN94@SetNumber

; 2615 :             // we should never allocate less than _BUF_SIZE space (_New_size could be small if constant evaluated)
; 2616 :             const size_type _Requested_size = (_STD max)(_New_size, _BUF_SIZE);

  00177	8b f0		 mov	 esi, eax

; 4454 :         const size_type _Masked = _Requested | _ALLOC_MASK;

  00179	83 ce 0f	 or	 esi, 15			; 0000000fH
  0017c	81 fe ff ff ff
	7f		 cmp	 esi, 2147483647		; 7fffffffH

; 4455 :         if (_Masked > _Max) { // the mask overflows, settle for max_size()

  00182	76 0a		 jbe	 SHORT $LN107@SetNumber

; 4456 :             return _Max;

  00184	be ff ff ff 7f	 mov	 esi, 2147483647		; 7fffffffH
  00189	8d 46 01	 lea	 eax, DWORD PTR [esi+1]
  0018c	eb 15		 jmp	 SHORT $LN880@SetNumber
$LN107@SetNumber:

; 4463 :         return (_STD max)(_Masked, _Old + _Old / 2);

  0018e	83 fe 16	 cmp	 esi, 22			; 00000016H
  00191	b8 16 00 00 00	 mov	 eax, 22			; 00000016H
  00196	0f 42 f0	 cmovb	 esi, eax

; 2618 :             const pointer _Fancyptr         = _Getal().allocate(_New_capacity + 1); // throws

  00199	8d 46 01	 lea	 eax, DWORD PTR [esi+1]
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory

; 228  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  0019c	3d 00 10 00 00	 cmp	 eax, 4096		; 00001000H
  001a1	72 13		 jb	 SHORT $LN115@SetNumber
$LN880@SetNumber:

; 229  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  001a3	50		 push	 eax
  001a4	e8 00 00 00 00	 call	 ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
  001a9	8b 4d b8	 mov	 ecx, DWORD PTR __Result$1$[ebp]
  001ac	83 c4 04	 add	 esp, 4
  001af	8b 55 b4	 mov	 edx, DWORD PTR __Left_size$1$[ebp]
  001b2	8b f8		 mov	 edi, eax
  001b4	eb 19		 jmp	 SHORT $LN114@SetNumber
$LN115@SetNumber:

; 230  :         }
; 231  :     }
; 232  : #endif // defined(_M_IX86) || defined(_M_X64)
; 233  : 
; 234  :     if (_Bytes != 0) {

  001b6	85 c0		 test	 eax, eax
  001b8	74 13		 je	 SHORT $LN116@SetNumber

; 79   :         return ::operator new(_Bytes);

  001ba	50		 push	 eax
  001bb	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new

; 235  :         return _Traits::_Allocate(_Bytes);

  001c0	8b 4d b8	 mov	 ecx, DWORD PTR __Result$1$[ebp]

; 79   :         return ::operator new(_Bytes);

  001c3	83 c4 04	 add	 esp, 4

; 235  :         return _Traits::_Allocate(_Bytes);

  001c6	8b 55 b4	 mov	 edx, DWORD PTR __Left_size$1$[ebp]
  001c9	8b f8		 mov	 edi, eax
  001cb	eb 02		 jmp	 SHORT $LN114@SetNumber
$LN116@SetNumber:

; 236  :     }
; 237  : 
; 238  :     return nullptr;

  001cd	33 ff		 xor	 edi, edi
$LN114@SetNumber:
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xstring

; 2620 :             _Construct_in_place(_My_data._Bx._Ptr, _Fancyptr);

  001cf	89 7d c0	 mov	 DWORD PTR $T11[ebp], edi
  001d2	8d 42 09	 lea	 eax, DWORD PTR [edx+9]
$LN94@SetNumber:

; 64   :         _CSTD memcpy(_First1, _First2, _Count * sizeof(_Elem));

  001d5	52		 push	 edx
  001d6	51		 push	 ecx
  001d7	57		 push	 edi

; 2629 :         _My_data._Mysize = _New_size;

  001d8	89 45 d0	 mov	 DWORD PTR $T11[ebp+16], eax

; 2630 :         _My_data._Myres  = _New_capacity;

  001db	89 75 d4	 mov	 DWORD PTR $T11[ebp+20], esi

; 64   :         _CSTD memcpy(_First1, _First2, _Count * sizeof(_Elem));

  001de	e8 00 00 00 00	 call	 _memcpy
  001e3	8b 4d b4	 mov	 ecx, DWORD PTR __Left_size$1$[ebp]
  001e6	83 c4 0c	 add	 esp, 12			; 0000000cH
  001e9	f3 0f 7e 05 00
	00 00 00	 movq	 xmm0, QWORD PTR ??_C@_09GPLBLMNE@colon?4sub@
  001f1	66 0f d6 04 0f	 movq	 QWORD PTR [edi+ecx], xmm0
  001f6	a0 08 00 00 00	 mov	 al, BYTE PTR ??_C@_09GPLBLMNE@colon?4sub@+8
  001fb	88 44 0f 08	 mov	 BYTE PTR [edi+ecx+8], al

; 2633 :         _Traits::assign(_Ptr[_New_size], _Elem());

  001ff	c6 44 0f 09 00	 mov	 BYTE PTR [edi+ecx+9], 0

; 4584 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00204	8b 55 ec	 mov	 edx, DWORD PTR _strImageFileName$12[ebp+20]
  00207	83 fa 10	 cmp	 edx, 16			; 00000010H
  0020a	72 2c		 jb	 SHORT $LN139@SetNumber
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory

; 797  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0020c	8b 4d d8	 mov	 ecx, DWORD PTR _strImageFileName$12[ebp]
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xstring

; 4588 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  0020f	42		 inc	 edx
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory

; 797  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00210	8b c1		 mov	 eax, ecx

; 251  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00212	81 fa 00 10 00
	00		 cmp	 edx, 4096		; 00001000H
  00218	72 14		 jb	 SHORT $LN149@SetNumber

; 150  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  0021a	8b 49 fc	 mov	 ecx, DWORD PTR [ecx-4]
  0021d	83 c2 23	 add	 edx, 35			; 00000023H
  00220	2b c1		 sub	 eax, ecx

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00222	83 c0 fc	 add	 eax, -4			; fffffffcH
  00225	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00228	0f 87 73 08 00
	00		 ja	 $LN259@SetNumber
$LN149@SetNumber:

; 255  :         ::operator delete(_Ptr, _Bytes);

  0022e	52		 push	 edx
  0022f	51		 push	 ecx
  00230	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00235	83 c4 08	 add	 esp, 8
$LN139@SetNumber:
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xstring

; 2835 :         _CSTD memcpy(_My_data_mem, _Right_data_mem, _Memcpy_val_size);

  00238	0f 10 45 c0	 movups	 xmm0, XMMWORD PTR $T11[ebp]
  0023c	0f 11 45 d8	 movups	 XMMWORD PTR _strImageFileName$12[ebp], xmm0
  00240	f3 0f 7e 45 d0	 movq	 xmm0, QWORD PTR $T11[ebp+16]
  00245	66 0f d6 45 e8	 movq	 QWORD PTR _strImageFileName$12[ebp+16], xmm0
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp

; 1193 : 			}

  0024a	e9 14 07 00 00	 jmp	 $LN23@SetNumber
$LN6@SetNumber:

; 1194 : 			else if ('?' == cChar)

  0024f	80 f9 3f	 cmp	 cl, 63			; 0000003fH
  00252	0f 85 c3 00 00
	00		 jne	 $LN8@SetNumber

; 1195 : 			{
; 1196 : 				strImageFileName = m_strPath + "questionmark.sub";

  00258	68 00 00 00 00	 push	 OFFSET ??_C@_0BB@POBNNLPJ@questionmark?4sub@
  0025d	8d 46 7c	 lea	 eax, DWORD PTR [esi+124]
  00260	50		 push	 eax
  00261	8d 45 c0	 lea	 eax, DWORD PTR $T10[ebp]
  00264	50		 push	 eax
  00265	e8 00 00 00 00	 call	 ??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@QBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
  0026a	8b f0		 mov	 esi, eax
  0026c	83 c4 0c	 add	 esp, 12			; 0000000cH
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xstring

; 2816 :         if (this != _STD addressof(_Right)) {

  0026f	8d 45 d8	 lea	 eax, DWORD PTR _strImageFileName$12[ebp]
  00272	3b c6		 cmp	 eax, esi
  00274	74 68		 je	 SHORT $LN238@SetNumber

; 4584 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00276	8b 55 ec	 mov	 edx, DWORD PTR _strImageFileName$12[ebp+20]
  00279	83 fa 10	 cmp	 edx, 16			; 00000010H
  0027c	72 2c		 jb	 SHORT $LN210@SetNumber
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory

; 797  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0027e	8b 4d d8	 mov	 ecx, DWORD PTR _strImageFileName$12[ebp]
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xstring

; 4588 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  00281	42		 inc	 edx
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory

; 797  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00282	8b c1		 mov	 eax, ecx

; 251  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00284	81 fa 00 10 00
	00		 cmp	 edx, 4096		; 00001000H
  0028a	72 14		 jb	 SHORT $LN220@SetNumber

; 150  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  0028c	8b 49 fc	 mov	 ecx, DWORD PTR [ecx-4]
  0028f	83 c2 23	 add	 edx, 35			; 00000023H
  00292	2b c1		 sub	 eax, ecx

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00294	83 c0 fc	 add	 eax, -4			; fffffffcH
  00297	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  0029a	0f 87 01 08 00
	00		 ja	 $LN259@SetNumber
$LN220@SetNumber:

; 255  :         ::operator delete(_Ptr, _Bytes);

  002a0	52		 push	 edx
  002a1	51		 push	 ecx
  002a2	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  002a7	83 c4 08	 add	 esp, 8
$LN210@SetNumber:
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xstring

; 4599 :             _Mypair._Myval2._Mysize = 0;

  002aa	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR _strImageFileName$12[ebp+16], 0

; 4600 :             _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  002b1	c7 45 ec 0f 00
	00 00		 mov	 DWORD PTR _strImageFileName$12[ebp+20], 15 ; 0000000fH

; 4601 :             // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4602 :             _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  002b8	c6 45 d8 00	 mov	 BYTE PTR _strImageFileName$12[ebp], 0

; 2835 :         _CSTD memcpy(_My_data_mem, _Right_data_mem, _Memcpy_val_size);

  002bc	0f 10 06	 movups	 xmm0, XMMWORD PTR [esi]
  002bf	0f 11 45 d8	 movups	 XMMWORD PTR _strImageFileName$12[ebp], xmm0
  002c3	f3 0f 7e 46 10	 movq	 xmm0, QWORD PTR [esi+16]
  002c8	66 0f d6 45 e8	 movq	 QWORD PTR _strImageFileName$12[ebp+16], xmm0

; 4562 :         _My_data._Mysize = 0;

  002cd	c7 46 10 00 00
	00 00		 mov	 DWORD PTR [esi+16], 0

; 4576 :             _My_data._Myres = _BUF_SIZE - 1;

  002d4	c7 46 14 0f 00
	00 00		 mov	 DWORD PTR [esi+20], 15	; 0000000fH

; 4577 :             // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4578 :             _Traits::assign(_My_data._Bx._Buf[0], _Elem());

  002db	c6 06 00	 mov	 BYTE PTR [esi], 0
$LN238@SetNumber:

; 4584 :         if (_Mypair._Myval2._Large_string_engaged()) {

  002de	8b 55 d4	 mov	 edx, DWORD PTR $T10[ebp+20]
  002e1	83 fa 10	 cmp	 edx, 16			; 00000010H
  002e4	0f 82 79 06 00
	00		 jb	 $LN23@SetNumber
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory

; 797  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  002ea	8b 4d c0	 mov	 ecx, DWORD PTR $T10[ebp]
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xstring

; 4588 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  002ed	42		 inc	 edx
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory

; 797  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  002ee	8b c1		 mov	 eax, ecx

; 251  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  002f0	81 fa 00 10 00
	00		 cmp	 edx, 4096		; 00001000H
  002f6	72 14		 jb	 SHORT $LN262@SetNumber

; 150  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  002f8	8b 49 fc	 mov	 ecx, DWORD PTR [ecx-4]
  002fb	83 c2 23	 add	 edx, 35			; 00000023H
  002fe	2b c1		 sub	 eax, ecx

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00300	83 c0 fc	 add	 eax, -4			; fffffffcH
  00303	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00306	0f 87 95 07 00
	00		 ja	 $LN259@SetNumber
$LN262@SetNumber:

; 255  :         ::operator delete(_Ptr, _Bytes);

  0030c	52		 push	 edx
  0030d	51		 push	 ecx
  0030e	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00313	83 c4 08	 add	 esp, 8
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp

; 1197 : 			}

  00316	e9 48 06 00 00	 jmp	 $LN23@SetNumber
$LN8@SetNumber:

; 1198 : 			else if ('/' == cChar)

  0031b	80 f9 2f	 cmp	 cl, 47			; 0000002fH
  0031e	0f 85 c3 00 00
	00		 jne	 $LN10@SetNumber

; 1199 : 			{
; 1200 : 				strImageFileName = m_strPath + "slash.sub";

  00324	68 00 00 00 00	 push	 OFFSET ??_C@_09JMLAABIP@slash?4sub@
  00329	8d 46 7c	 lea	 eax, DWORD PTR [esi+124]
  0032c	50		 push	 eax
  0032d	8d 45 c0	 lea	 eax, DWORD PTR $T9[ebp]
  00330	50		 push	 eax
  00331	e8 00 00 00 00	 call	 ??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@QBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
  00336	8b f0		 mov	 esi, eax
  00338	83 c4 0c	 add	 esp, 12			; 0000000cH
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xstring

; 2816 :         if (this != _STD addressof(_Right)) {

  0033b	8d 45 d8	 lea	 eax, DWORD PTR _strImageFileName$12[ebp]
  0033e	3b c6		 cmp	 eax, esi
  00340	74 68		 je	 SHORT $LN309@SetNumber

; 4584 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00342	8b 55 ec	 mov	 edx, DWORD PTR _strImageFileName$12[ebp+20]
  00345	83 fa 10	 cmp	 edx, 16			; 00000010H
  00348	72 2c		 jb	 SHORT $LN281@SetNumber
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory

; 797  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0034a	8b 4d d8	 mov	 ecx, DWORD PTR _strImageFileName$12[ebp]
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xstring

; 4588 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  0034d	42		 inc	 edx
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory

; 797  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0034e	8b c1		 mov	 eax, ecx

; 251  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00350	81 fa 00 10 00
	00		 cmp	 edx, 4096		; 00001000H
  00356	72 14		 jb	 SHORT $LN291@SetNumber

; 150  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00358	8b 49 fc	 mov	 ecx, DWORD PTR [ecx-4]
  0035b	83 c2 23	 add	 edx, 35			; 00000023H
  0035e	2b c1		 sub	 eax, ecx

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00360	83 c0 fc	 add	 eax, -4			; fffffffcH
  00363	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00366	0f 87 35 07 00
	00		 ja	 $LN259@SetNumber
$LN291@SetNumber:

; 255  :         ::operator delete(_Ptr, _Bytes);

  0036c	52		 push	 edx
  0036d	51		 push	 ecx
  0036e	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00373	83 c4 08	 add	 esp, 8
$LN281@SetNumber:
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xstring

; 4599 :             _Mypair._Myval2._Mysize = 0;

  00376	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR _strImageFileName$12[ebp+16], 0

; 4600 :             _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  0037d	c7 45 ec 0f 00
	00 00		 mov	 DWORD PTR _strImageFileName$12[ebp+20], 15 ; 0000000fH

; 4601 :             // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4602 :             _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  00384	c6 45 d8 00	 mov	 BYTE PTR _strImageFileName$12[ebp], 0

; 2835 :         _CSTD memcpy(_My_data_mem, _Right_data_mem, _Memcpy_val_size);

  00388	0f 10 06	 movups	 xmm0, XMMWORD PTR [esi]
  0038b	0f 11 45 d8	 movups	 XMMWORD PTR _strImageFileName$12[ebp], xmm0
  0038f	f3 0f 7e 46 10	 movq	 xmm0, QWORD PTR [esi+16]
  00394	66 0f d6 45 e8	 movq	 QWORD PTR _strImageFileName$12[ebp+16], xmm0

; 4562 :         _My_data._Mysize = 0;

  00399	c7 46 10 00 00
	00 00		 mov	 DWORD PTR [esi+16], 0

; 4576 :             _My_data._Myres = _BUF_SIZE - 1;

  003a0	c7 46 14 0f 00
	00 00		 mov	 DWORD PTR [esi+20], 15	; 0000000fH

; 4577 :             // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4578 :             _Traits::assign(_My_data._Bx._Buf[0], _Elem());

  003a7	c6 06 00	 mov	 BYTE PTR [esi], 0
$LN309@SetNumber:

; 4584 :         if (_Mypair._Myval2._Large_string_engaged()) {

  003aa	8b 55 d4	 mov	 edx, DWORD PTR $T9[ebp+20]
  003ad	83 fa 10	 cmp	 edx, 16			; 00000010H
  003b0	0f 82 ad 05 00
	00		 jb	 $LN23@SetNumber
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory

; 797  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  003b6	8b 4d c0	 mov	 ecx, DWORD PTR $T9[ebp]
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xstring

; 4588 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  003b9	42		 inc	 edx
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory

; 797  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  003ba	8b c1		 mov	 eax, ecx

; 251  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  003bc	81 fa 00 10 00
	00		 cmp	 edx, 4096		; 00001000H
  003c2	72 14		 jb	 SHORT $LN333@SetNumber

; 150  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  003c4	8b 49 fc	 mov	 ecx, DWORD PTR [ecx-4]
  003c7	83 c2 23	 add	 edx, 35			; 00000023H
  003ca	2b c1		 sub	 eax, ecx

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  003cc	83 c0 fc	 add	 eax, -4			; fffffffcH
  003cf	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  003d2	0f 87 c9 06 00
	00		 ja	 $LN259@SetNumber
$LN333@SetNumber:

; 255  :         ::operator delete(_Ptr, _Bytes);

  003d8	52		 push	 edx
  003d9	51		 push	 ecx
  003da	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  003df	83 c4 08	 add	 esp, 8
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp

; 1201 : 			}

  003e2	e9 7c 05 00 00	 jmp	 $LN23@SetNumber
$LN10@SetNumber:

; 1202 : 			else if ('%' == cChar)

  003e7	80 f9 25	 cmp	 cl, 37			; 00000025H
  003ea	0f 85 c3 00 00
	00		 jne	 $LN12@SetNumber

; 1203 : 			{
; 1204 : 				strImageFileName = m_strPath + "percent.sub";

  003f0	68 00 00 00 00	 push	 OFFSET ??_C@_0M@MHAKIBOD@percent?4sub@
  003f5	8d 46 7c	 lea	 eax, DWORD PTR [esi+124]
  003f8	50		 push	 eax
  003f9	8d 45 c0	 lea	 eax, DWORD PTR $T8[ebp]
  003fc	50		 push	 eax
  003fd	e8 00 00 00 00	 call	 ??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@QBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
  00402	8b f0		 mov	 esi, eax
  00404	83 c4 0c	 add	 esp, 12			; 0000000cH
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xstring

; 2816 :         if (this != _STD addressof(_Right)) {

  00407	8d 45 d8	 lea	 eax, DWORD PTR _strImageFileName$12[ebp]
  0040a	3b c6		 cmp	 eax, esi
  0040c	74 68		 je	 SHORT $LN380@SetNumber

; 4584 :         if (_Mypair._Myval2._Large_string_engaged()) {

  0040e	8b 55 ec	 mov	 edx, DWORD PTR _strImageFileName$12[ebp+20]
  00411	83 fa 10	 cmp	 edx, 16			; 00000010H
  00414	72 2c		 jb	 SHORT $LN352@SetNumber
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory

; 797  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00416	8b 4d d8	 mov	 ecx, DWORD PTR _strImageFileName$12[ebp]
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xstring

; 4588 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  00419	42		 inc	 edx
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory

; 797  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0041a	8b c1		 mov	 eax, ecx

; 251  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  0041c	81 fa 00 10 00
	00		 cmp	 edx, 4096		; 00001000H
  00422	72 14		 jb	 SHORT $LN362@SetNumber

; 150  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00424	8b 49 fc	 mov	 ecx, DWORD PTR [ecx-4]
  00427	83 c2 23	 add	 edx, 35			; 00000023H
  0042a	2b c1		 sub	 eax, ecx

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  0042c	83 c0 fc	 add	 eax, -4			; fffffffcH
  0042f	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00432	0f 87 69 06 00
	00		 ja	 $LN259@SetNumber
$LN362@SetNumber:

; 255  :         ::operator delete(_Ptr, _Bytes);

  00438	52		 push	 edx
  00439	51		 push	 ecx
  0043a	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0043f	83 c4 08	 add	 esp, 8
$LN352@SetNumber:
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xstring

; 4599 :             _Mypair._Myval2._Mysize = 0;

  00442	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR _strImageFileName$12[ebp+16], 0

; 4600 :             _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  00449	c7 45 ec 0f 00
	00 00		 mov	 DWORD PTR _strImageFileName$12[ebp+20], 15 ; 0000000fH

; 4601 :             // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4602 :             _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  00450	c6 45 d8 00	 mov	 BYTE PTR _strImageFileName$12[ebp], 0

; 2835 :         _CSTD memcpy(_My_data_mem, _Right_data_mem, _Memcpy_val_size);

  00454	0f 10 06	 movups	 xmm0, XMMWORD PTR [esi]
  00457	0f 11 45 d8	 movups	 XMMWORD PTR _strImageFileName$12[ebp], xmm0
  0045b	f3 0f 7e 46 10	 movq	 xmm0, QWORD PTR [esi+16]
  00460	66 0f d6 45 e8	 movq	 QWORD PTR _strImageFileName$12[ebp+16], xmm0

; 4562 :         _My_data._Mysize = 0;

  00465	c7 46 10 00 00
	00 00		 mov	 DWORD PTR [esi+16], 0

; 4576 :             _My_data._Myres = _BUF_SIZE - 1;

  0046c	c7 46 14 0f 00
	00 00		 mov	 DWORD PTR [esi+20], 15	; 0000000fH

; 4577 :             // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4578 :             _Traits::assign(_My_data._Bx._Buf[0], _Elem());

  00473	c6 06 00	 mov	 BYTE PTR [esi], 0
$LN380@SetNumber:

; 4584 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00476	8b 55 d4	 mov	 edx, DWORD PTR $T8[ebp+20]
  00479	83 fa 10	 cmp	 edx, 16			; 00000010H
  0047c	0f 82 e1 04 00
	00		 jb	 $LN23@SetNumber
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory

; 797  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00482	8b 4d c0	 mov	 ecx, DWORD PTR $T8[ebp]
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xstring

; 4588 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  00485	42		 inc	 edx
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory

; 797  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00486	8b c1		 mov	 eax, ecx

; 251  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00488	81 fa 00 10 00
	00		 cmp	 edx, 4096		; 00001000H
  0048e	72 14		 jb	 SHORT $LN404@SetNumber

; 150  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00490	8b 49 fc	 mov	 ecx, DWORD PTR [ecx-4]
  00493	83 c2 23	 add	 edx, 35			; 00000023H
  00496	2b c1		 sub	 eax, ecx

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00498	83 c0 fc	 add	 eax, -4			; fffffffcH
  0049b	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  0049e	0f 87 fd 05 00
	00		 ja	 $LN259@SetNumber
$LN404@SetNumber:

; 255  :         ::operator delete(_Ptr, _Bytes);

  004a4	52		 push	 edx
  004a5	51		 push	 ecx
  004a6	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  004ab	83 c4 08	 add	 esp, 8
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp

; 1205 : 			}

  004ae	e9 b0 04 00 00	 jmp	 $LN23@SetNumber
$LN12@SetNumber:

; 1206 : 			else if ('+' == cChar)

  004b3	80 f9 2b	 cmp	 cl, 43			; 0000002bH
  004b6	0f 85 c3 00 00
	00		 jne	 $LN14@SetNumber

; 1207 : 			{
; 1208 : 				strImageFileName = m_strPath + "plus.sub";

  004bc	68 00 00 00 00	 push	 OFFSET ??_C@_08FPHNCABK@plus?4sub@
  004c1	8d 46 7c	 lea	 eax, DWORD PTR [esi+124]
  004c4	50		 push	 eax
  004c5	8d 45 c0	 lea	 eax, DWORD PTR $T7[ebp]
  004c8	50		 push	 eax
  004c9	e8 00 00 00 00	 call	 ??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@QBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
  004ce	8b f0		 mov	 esi, eax
  004d0	83 c4 0c	 add	 esp, 12			; 0000000cH
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xstring

; 2816 :         if (this != _STD addressof(_Right)) {

  004d3	8d 45 d8	 lea	 eax, DWORD PTR _strImageFileName$12[ebp]
  004d6	3b c6		 cmp	 eax, esi
  004d8	74 68		 je	 SHORT $LN451@SetNumber

; 4584 :         if (_Mypair._Myval2._Large_string_engaged()) {

  004da	8b 55 ec	 mov	 edx, DWORD PTR _strImageFileName$12[ebp+20]
  004dd	83 fa 10	 cmp	 edx, 16			; 00000010H
  004e0	72 2c		 jb	 SHORT $LN423@SetNumber
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory

; 797  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  004e2	8b 4d d8	 mov	 ecx, DWORD PTR _strImageFileName$12[ebp]
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xstring

; 4588 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  004e5	42		 inc	 edx
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory

; 797  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  004e6	8b c1		 mov	 eax, ecx

; 251  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  004e8	81 fa 00 10 00
	00		 cmp	 edx, 4096		; 00001000H
  004ee	72 14		 jb	 SHORT $LN433@SetNumber

; 150  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  004f0	8b 49 fc	 mov	 ecx, DWORD PTR [ecx-4]
  004f3	83 c2 23	 add	 edx, 35			; 00000023H
  004f6	2b c1		 sub	 eax, ecx

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  004f8	83 c0 fc	 add	 eax, -4			; fffffffcH
  004fb	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  004fe	0f 87 9d 05 00
	00		 ja	 $LN259@SetNumber
$LN433@SetNumber:

; 255  :         ::operator delete(_Ptr, _Bytes);

  00504	52		 push	 edx
  00505	51		 push	 ecx
  00506	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0050b	83 c4 08	 add	 esp, 8
$LN423@SetNumber:
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xstring

; 4599 :             _Mypair._Myval2._Mysize = 0;

  0050e	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR _strImageFileName$12[ebp+16], 0

; 4600 :             _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  00515	c7 45 ec 0f 00
	00 00		 mov	 DWORD PTR _strImageFileName$12[ebp+20], 15 ; 0000000fH

; 4601 :             // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4602 :             _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  0051c	c6 45 d8 00	 mov	 BYTE PTR _strImageFileName$12[ebp], 0

; 2835 :         _CSTD memcpy(_My_data_mem, _Right_data_mem, _Memcpy_val_size);

  00520	0f 10 06	 movups	 xmm0, XMMWORD PTR [esi]
  00523	0f 11 45 d8	 movups	 XMMWORD PTR _strImageFileName$12[ebp], xmm0
  00527	f3 0f 7e 46 10	 movq	 xmm0, QWORD PTR [esi+16]
  0052c	66 0f d6 45 e8	 movq	 QWORD PTR _strImageFileName$12[ebp+16], xmm0

; 4562 :         _My_data._Mysize = 0;

  00531	c7 46 10 00 00
	00 00		 mov	 DWORD PTR [esi+16], 0

; 4576 :             _My_data._Myres = _BUF_SIZE - 1;

  00538	c7 46 14 0f 00
	00 00		 mov	 DWORD PTR [esi+20], 15	; 0000000fH

; 4577 :             // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4578 :             _Traits::assign(_My_data._Bx._Buf[0], _Elem());

  0053f	c6 06 00	 mov	 BYTE PTR [esi], 0
$LN451@SetNumber:

; 4584 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00542	8b 55 d4	 mov	 edx, DWORD PTR $T7[ebp+20]
  00545	83 fa 10	 cmp	 edx, 16			; 00000010H
  00548	0f 82 15 04 00
	00		 jb	 $LN23@SetNumber
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory

; 797  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0054e	8b 4d c0	 mov	 ecx, DWORD PTR $T7[ebp]
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xstring

; 4588 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  00551	42		 inc	 edx
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory

; 797  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00552	8b c1		 mov	 eax, ecx

; 251  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00554	81 fa 00 10 00
	00		 cmp	 edx, 4096		; 00001000H
  0055a	72 14		 jb	 SHORT $LN475@SetNumber

; 150  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  0055c	8b 49 fc	 mov	 ecx, DWORD PTR [ecx-4]
  0055f	83 c2 23	 add	 edx, 35			; 00000023H
  00562	2b c1		 sub	 eax, ecx

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00564	83 c0 fc	 add	 eax, -4			; fffffffcH
  00567	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  0056a	0f 87 31 05 00
	00		 ja	 $LN259@SetNumber
$LN475@SetNumber:

; 255  :         ::operator delete(_Ptr, _Bytes);

  00570	52		 push	 edx
  00571	51		 push	 ecx
  00572	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00577	83 c4 08	 add	 esp, 8
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp

; 1209 : 			}

  0057a	e9 e4 03 00 00	 jmp	 $LN23@SetNumber
$LN14@SetNumber:

; 1210 : 			else if ('m' == cChar)

  0057f	80 f9 6d	 cmp	 cl, 109			; 0000006dH
  00582	0f 85 c3 00 00
	00		 jne	 $LN16@SetNumber

; 1211 : 			{
; 1212 : 				strImageFileName = m_strPath + "m.sub";

  00588	68 00 00 00 00	 push	 OFFSET ??_C@_05PINNHPFB@m?4sub@
  0058d	8d 46 7c	 lea	 eax, DWORD PTR [esi+124]
  00590	50		 push	 eax
  00591	8d 45 c0	 lea	 eax, DWORD PTR $T6[ebp]
  00594	50		 push	 eax
  00595	e8 00 00 00 00	 call	 ??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@QBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
  0059a	8b f0		 mov	 esi, eax
  0059c	83 c4 0c	 add	 esp, 12			; 0000000cH
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xstring

; 2816 :         if (this != _STD addressof(_Right)) {

  0059f	8d 45 d8	 lea	 eax, DWORD PTR _strImageFileName$12[ebp]
  005a2	3b c6		 cmp	 eax, esi
  005a4	74 68		 je	 SHORT $LN522@SetNumber

; 4584 :         if (_Mypair._Myval2._Large_string_engaged()) {

  005a6	8b 55 ec	 mov	 edx, DWORD PTR _strImageFileName$12[ebp+20]
  005a9	83 fa 10	 cmp	 edx, 16			; 00000010H
  005ac	72 2c		 jb	 SHORT $LN494@SetNumber
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory

; 797  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  005ae	8b 4d d8	 mov	 ecx, DWORD PTR _strImageFileName$12[ebp]
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xstring

; 4588 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  005b1	42		 inc	 edx
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory

; 797  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  005b2	8b c1		 mov	 eax, ecx

; 251  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  005b4	81 fa 00 10 00
	00		 cmp	 edx, 4096		; 00001000H
  005ba	72 14		 jb	 SHORT $LN504@SetNumber

; 150  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  005bc	8b 49 fc	 mov	 ecx, DWORD PTR [ecx-4]
  005bf	83 c2 23	 add	 edx, 35			; 00000023H
  005c2	2b c1		 sub	 eax, ecx

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  005c4	83 c0 fc	 add	 eax, -4			; fffffffcH
  005c7	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  005ca	0f 87 d1 04 00
	00		 ja	 $LN259@SetNumber
$LN504@SetNumber:

; 255  :         ::operator delete(_Ptr, _Bytes);

  005d0	52		 push	 edx
  005d1	51		 push	 ecx
  005d2	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  005d7	83 c4 08	 add	 esp, 8
$LN494@SetNumber:
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xstring

; 4599 :             _Mypair._Myval2._Mysize = 0;

  005da	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR _strImageFileName$12[ebp+16], 0

; 4600 :             _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  005e1	c7 45 ec 0f 00
	00 00		 mov	 DWORD PTR _strImageFileName$12[ebp+20], 15 ; 0000000fH

; 4601 :             // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4602 :             _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  005e8	c6 45 d8 00	 mov	 BYTE PTR _strImageFileName$12[ebp], 0

; 2835 :         _CSTD memcpy(_My_data_mem, _Right_data_mem, _Memcpy_val_size);

  005ec	0f 10 06	 movups	 xmm0, XMMWORD PTR [esi]
  005ef	0f 11 45 d8	 movups	 XMMWORD PTR _strImageFileName$12[ebp], xmm0
  005f3	f3 0f 7e 46 10	 movq	 xmm0, QWORD PTR [esi+16]
  005f8	66 0f d6 45 e8	 movq	 QWORD PTR _strImageFileName$12[ebp+16], xmm0

; 4562 :         _My_data._Mysize = 0;

  005fd	c7 46 10 00 00
	00 00		 mov	 DWORD PTR [esi+16], 0

; 4576 :             _My_data._Myres = _BUF_SIZE - 1;

  00604	c7 46 14 0f 00
	00 00		 mov	 DWORD PTR [esi+20], 15	; 0000000fH

; 4577 :             // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4578 :             _Traits::assign(_My_data._Bx._Buf[0], _Elem());

  0060b	c6 06 00	 mov	 BYTE PTR [esi], 0
$LN522@SetNumber:

; 4584 :         if (_Mypair._Myval2._Large_string_engaged()) {

  0060e	8b 55 d4	 mov	 edx, DWORD PTR $T6[ebp+20]
  00611	83 fa 10	 cmp	 edx, 16			; 00000010H
  00614	0f 82 49 03 00
	00		 jb	 $LN23@SetNumber
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory

; 797  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0061a	8b 4d c0	 mov	 ecx, DWORD PTR $T6[ebp]
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xstring

; 4588 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  0061d	42		 inc	 edx
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory

; 797  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0061e	8b c1		 mov	 eax, ecx

; 251  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00620	81 fa 00 10 00
	00		 cmp	 edx, 4096		; 00001000H
  00626	72 14		 jb	 SHORT $LN546@SetNumber

; 150  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00628	8b 49 fc	 mov	 ecx, DWORD PTR [ecx-4]
  0062b	83 c2 23	 add	 edx, 35			; 00000023H
  0062e	2b c1		 sub	 eax, ecx

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00630	83 c0 fc	 add	 eax, -4			; fffffffcH
  00633	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00636	0f 87 65 04 00
	00		 ja	 $LN259@SetNumber
$LN546@SetNumber:

; 255  :         ::operator delete(_Ptr, _Bytes);

  0063c	52		 push	 edx
  0063d	51		 push	 ecx
  0063e	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00643	83 c4 08	 add	 esp, 8
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp

; 1213 : 			}

  00646	e9 18 03 00 00	 jmp	 $LN23@SetNumber
$LN16@SetNumber:

; 1214 : 			else if ('g' == cChar)

  0064b	80 f9 67	 cmp	 cl, 103			; 00000067H
  0064e	0f 85 c3 00 00
	00		 jne	 $LN18@SetNumber

; 1215 : 			{
; 1216 : 				strImageFileName = m_strPath + "g.sub";

  00654	68 00 00 00 00	 push	 OFFSET ??_C@_05FJEGFMDH@g?4sub@
  00659	8d 46 7c	 lea	 eax, DWORD PTR [esi+124]
  0065c	50		 push	 eax
  0065d	8d 45 c0	 lea	 eax, DWORD PTR $T5[ebp]
  00660	50		 push	 eax
  00661	e8 00 00 00 00	 call	 ??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@QBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
  00666	8b f0		 mov	 esi, eax
  00668	83 c4 0c	 add	 esp, 12			; 0000000cH
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xstring

; 2816 :         if (this != _STD addressof(_Right)) {

  0066b	8d 45 d8	 lea	 eax, DWORD PTR _strImageFileName$12[ebp]
  0066e	3b c6		 cmp	 eax, esi
  00670	74 68		 je	 SHORT $LN593@SetNumber

; 4584 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00672	8b 55 ec	 mov	 edx, DWORD PTR _strImageFileName$12[ebp+20]
  00675	83 fa 10	 cmp	 edx, 16			; 00000010H
  00678	72 2c		 jb	 SHORT $LN565@SetNumber
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory

; 797  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0067a	8b 4d d8	 mov	 ecx, DWORD PTR _strImageFileName$12[ebp]
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xstring

; 4588 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  0067d	42		 inc	 edx
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory

; 797  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0067e	8b c1		 mov	 eax, ecx

; 251  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00680	81 fa 00 10 00
	00		 cmp	 edx, 4096		; 00001000H
  00686	72 14		 jb	 SHORT $LN575@SetNumber

; 150  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00688	8b 49 fc	 mov	 ecx, DWORD PTR [ecx-4]
  0068b	83 c2 23	 add	 edx, 35			; 00000023H
  0068e	2b c1		 sub	 eax, ecx

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00690	83 c0 fc	 add	 eax, -4			; fffffffcH
  00693	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00696	0f 87 05 04 00
	00		 ja	 $LN259@SetNumber
$LN575@SetNumber:

; 255  :         ::operator delete(_Ptr, _Bytes);

  0069c	52		 push	 edx
  0069d	51		 push	 ecx
  0069e	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  006a3	83 c4 08	 add	 esp, 8
$LN565@SetNumber:
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xstring

; 4599 :             _Mypair._Myval2._Mysize = 0;

  006a6	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR _strImageFileName$12[ebp+16], 0

; 4600 :             _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  006ad	c7 45 ec 0f 00
	00 00		 mov	 DWORD PTR _strImageFileName$12[ebp+20], 15 ; 0000000fH

; 4601 :             // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4602 :             _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  006b4	c6 45 d8 00	 mov	 BYTE PTR _strImageFileName$12[ebp], 0

; 2835 :         _CSTD memcpy(_My_data_mem, _Right_data_mem, _Memcpy_val_size);

  006b8	0f 10 06	 movups	 xmm0, XMMWORD PTR [esi]
  006bb	0f 11 45 d8	 movups	 XMMWORD PTR _strImageFileName$12[ebp], xmm0
  006bf	f3 0f 7e 46 10	 movq	 xmm0, QWORD PTR [esi+16]
  006c4	66 0f d6 45 e8	 movq	 QWORD PTR _strImageFileName$12[ebp+16], xmm0

; 4562 :         _My_data._Mysize = 0;

  006c9	c7 46 10 00 00
	00 00		 mov	 DWORD PTR [esi+16], 0

; 4576 :             _My_data._Myres = _BUF_SIZE - 1;

  006d0	c7 46 14 0f 00
	00 00		 mov	 DWORD PTR [esi+20], 15	; 0000000fH

; 4577 :             // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4578 :             _Traits::assign(_My_data._Bx._Buf[0], _Elem());

  006d7	c6 06 00	 mov	 BYTE PTR [esi], 0
$LN593@SetNumber:

; 4584 :         if (_Mypair._Myval2._Large_string_engaged()) {

  006da	8b 55 d4	 mov	 edx, DWORD PTR $T5[ebp+20]
  006dd	83 fa 10	 cmp	 edx, 16			; 00000010H
  006e0	0f 82 7d 02 00
	00		 jb	 $LN23@SetNumber
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory

; 797  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  006e6	8b 4d c0	 mov	 ecx, DWORD PTR $T5[ebp]
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xstring

; 4588 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  006e9	42		 inc	 edx
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory

; 797  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  006ea	8b c1		 mov	 eax, ecx

; 251  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  006ec	81 fa 00 10 00
	00		 cmp	 edx, 4096		; 00001000H
  006f2	72 14		 jb	 SHORT $LN617@SetNumber

; 150  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  006f4	8b 49 fc	 mov	 ecx, DWORD PTR [ecx-4]
  006f7	83 c2 23	 add	 edx, 35			; 00000023H
  006fa	2b c1		 sub	 eax, ecx

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  006fc	83 c0 fc	 add	 eax, -4			; fffffffcH
  006ff	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00702	0f 87 99 03 00
	00		 ja	 $LN259@SetNumber
$LN617@SetNumber:

; 255  :         ::operator delete(_Ptr, _Bytes);

  00708	52		 push	 edx
  00709	51		 push	 ecx
  0070a	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0070f	83 c4 08	 add	 esp, 8
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp

; 1217 : 			}

  00712	e9 4c 02 00 00	 jmp	 $LN23@SetNumber
$LN18@SetNumber:

; 1218 : 			else if ('p' == cChar)

  00717	80 f9 70	 cmp	 cl, 112			; 00000070H
  0071a	0f 85 c3 00 00
	00		 jne	 $LN20@SetNumber

; 1219 : 			{
; 1220 : 				strImageFileName = m_strPath + "p.sub";

  00720	68 00 00 00 00	 push	 OFFSET ??_C@_05EHJFGOBE@p?4sub@
  00725	8d 46 7c	 lea	 eax, DWORD PTR [esi+124]
  00728	50		 push	 eax
  00729	8d 45 c0	 lea	 eax, DWORD PTR $T4[ebp]
  0072c	50		 push	 eax
  0072d	e8 00 00 00 00	 call	 ??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@QBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
  00732	8b f0		 mov	 esi, eax
  00734	83 c4 0c	 add	 esp, 12			; 0000000cH
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xstring

; 2816 :         if (this != _STD addressof(_Right)) {

  00737	8d 45 d8	 lea	 eax, DWORD PTR _strImageFileName$12[ebp]
  0073a	3b c6		 cmp	 eax, esi
  0073c	74 68		 je	 SHORT $LN664@SetNumber

; 4584 :         if (_Mypair._Myval2._Large_string_engaged()) {

  0073e	8b 55 ec	 mov	 edx, DWORD PTR _strImageFileName$12[ebp+20]
  00741	83 fa 10	 cmp	 edx, 16			; 00000010H
  00744	72 2c		 jb	 SHORT $LN636@SetNumber
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory

; 797  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00746	8b 4d d8	 mov	 ecx, DWORD PTR _strImageFileName$12[ebp]
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xstring

; 4588 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  00749	42		 inc	 edx
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory

; 797  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0074a	8b c1		 mov	 eax, ecx

; 251  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  0074c	81 fa 00 10 00
	00		 cmp	 edx, 4096		; 00001000H
  00752	72 14		 jb	 SHORT $LN646@SetNumber

; 150  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00754	8b 49 fc	 mov	 ecx, DWORD PTR [ecx-4]
  00757	83 c2 23	 add	 edx, 35			; 00000023H
  0075a	2b c1		 sub	 eax, ecx

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  0075c	83 c0 fc	 add	 eax, -4			; fffffffcH
  0075f	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00762	0f 87 39 03 00
	00		 ja	 $LN259@SetNumber
$LN646@SetNumber:

; 255  :         ::operator delete(_Ptr, _Bytes);

  00768	52		 push	 edx
  00769	51		 push	 ecx
  0076a	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0076f	83 c4 08	 add	 esp, 8
$LN636@SetNumber:
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xstring

; 4599 :             _Mypair._Myval2._Mysize = 0;

  00772	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR _strImageFileName$12[ebp+16], 0

; 4600 :             _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  00779	c7 45 ec 0f 00
	00 00		 mov	 DWORD PTR _strImageFileName$12[ebp+20], 15 ; 0000000fH

; 4601 :             // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4602 :             _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  00780	c6 45 d8 00	 mov	 BYTE PTR _strImageFileName$12[ebp], 0

; 2835 :         _CSTD memcpy(_My_data_mem, _Right_data_mem, _Memcpy_val_size);

  00784	0f 10 06	 movups	 xmm0, XMMWORD PTR [esi]
  00787	0f 11 45 d8	 movups	 XMMWORD PTR _strImageFileName$12[ebp], xmm0
  0078b	f3 0f 7e 46 10	 movq	 xmm0, QWORD PTR [esi+16]
  00790	66 0f d6 45 e8	 movq	 QWORD PTR _strImageFileName$12[ebp+16], xmm0

; 4562 :         _My_data._Mysize = 0;

  00795	c7 46 10 00 00
	00 00		 mov	 DWORD PTR [esi+16], 0

; 4576 :             _My_data._Myres = _BUF_SIZE - 1;

  0079c	c7 46 14 0f 00
	00 00		 mov	 DWORD PTR [esi+20], 15	; 0000000fH

; 4577 :             // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4578 :             _Traits::assign(_My_data._Bx._Buf[0], _Elem());

  007a3	c6 06 00	 mov	 BYTE PTR [esi], 0
$LN664@SetNumber:

; 4584 :         if (_Mypair._Myval2._Large_string_engaged()) {

  007a6	8b 55 d4	 mov	 edx, DWORD PTR $T4[ebp+20]
  007a9	83 fa 10	 cmp	 edx, 16			; 00000010H
  007ac	0f 82 b1 01 00
	00		 jb	 $LN23@SetNumber
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory

; 797  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  007b2	8b 4d c0	 mov	 ecx, DWORD PTR $T4[ebp]
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xstring

; 4588 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  007b5	42		 inc	 edx
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory

; 797  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  007b6	8b c1		 mov	 eax, ecx

; 251  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  007b8	81 fa 00 10 00
	00		 cmp	 edx, 4096		; 00001000H
  007be	72 14		 jb	 SHORT $LN688@SetNumber

; 150  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  007c0	8b 49 fc	 mov	 ecx, DWORD PTR [ecx-4]
  007c3	83 c2 23	 add	 edx, 35			; 00000023H
  007c6	2b c1		 sub	 eax, ecx

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  007c8	83 c0 fc	 add	 eax, -4			; fffffffcH
  007cb	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  007ce	0f 87 cd 02 00
	00		 ja	 $LN259@SetNumber
$LN688@SetNumber:

; 255  :         ::operator delete(_Ptr, _Bytes);

  007d4	52		 push	 edx
  007d5	51		 push	 ecx
  007d6	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  007db	83 c4 08	 add	 esp, 8
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp

; 1221 : 			}

  007de	e9 80 01 00 00	 jmp	 $LN23@SetNumber
$LN20@SetNumber:

; 1222 : 			else if (cChar >= '0' && cChar <= '9')

  007e3	8a c1		 mov	 al, cl
  007e5	2c 30		 sub	 al, 48			; 00000030H
  007e7	3c 09		 cmp	 al, 9
  007e9	0f 87 89 02 00
	00		 ja	 $LN22@SetNumber

; 1223 : 			{
; 1224 : 				strImageFileName = m_strPath;

  007ef	8d 46 7c	 lea	 eax, DWORD PTR [esi+124]
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xstring

; 3043 :         if (this != _STD addressof(_Right)) {

  007f2	8d 75 d8	 lea	 esi, DWORD PTR _strImageFileName$12[ebp]
  007f5	3b f0		 cmp	 esi, eax
  007f7	74 22		 je	 SHORT $LN694@SetNumber

; 2273 :         if (_Large_string_engaged()) {

  007f9	83 78 14 10	 cmp	 DWORD PTR [eax+20], 16	; 00000010H
  007fd	8b c8		 mov	 ecx, eax
  007ff	72 02		 jb	 SHORT $LN699@SetNumber

; 2274 :             _Result = _Unfancy(_Bx._Ptr);

  00801	8b 08		 mov	 ecx, DWORD PTR [eax]
$LN699@SetNumber:

; 3001 :         assign(_Right._Mypair._Myval2._Myptr(), _Right._Mypair._Myval2._Mysize);

  00803	ff 70 10	 push	 DWORD PTR [eax+16]
  00806	51		 push	 ecx
  00807	8d 4d d8	 lea	 ecx, DWORD PTR _strImageFileName$12[ebp]
  0080a	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  0080f	8b 55 ec	 mov	 edx, DWORD PTR _strImageFileName$12[ebp+20]
  00812	8b 7d e8	 mov	 edi, DWORD PTR _strImageFileName$12[ebp+16]
  00815	8a 4d bf	 mov	 cl, BYTE PTR _cChar$1$[ebp]
  00818	89 55 b4	 mov	 DWORD PTR __Old_capacity$1$[ebp], edx
$LN694@SetNumber:

; 3828 :         const size_type _Old_size = _Mypair._Myval2._Mysize;

  0081b	3b fa		 cmp	 edi, edx

; 3829 :         if (_Old_size < _Mypair._Myval2._Myres) {

  0081d	73 1d		 jae	 SHORT $LN706@SetNumber

; 3830 :             _Mypair._Myval2._Mysize = _Old_size + 1;

  0081f	8d 47 01	 lea	 eax, DWORD PTR [edi+1]

; 2264 :         if (_Large_string_engaged()) {

  00822	83 fa 10	 cmp	 edx, 16			; 00000010H

; 3830 :             _Mypair._Myval2._Mysize = _Old_size + 1;

  00825	89 45 e8	 mov	 DWORD PTR _strImageFileName$12[ebp+16], eax

; 2263 :         value_type* _Result = _Bx._Buf;

  00828	8d 45 d8	 lea	 eax, DWORD PTR _strImageFileName$12[ebp]

; 2264 :         if (_Large_string_engaged()) {

  0082b	0f 43 45 d8	 cmovae	 eax, DWORD PTR _strImageFileName$12[ebp]

; 3832 :             _Traits::assign(_Ptr[_Old_size], _Ch);

  0082f	88 0c 38	 mov	 BYTE PTR [eax+edi], cl

; 3833 :             _Traits::assign(_Ptr[_Old_size + 1], _Elem());

  00832	c6 44 38 01 00	 mov	 BYTE PTR [eax+edi+1], 0

; 3834 :             return;

  00837	e9 18 01 00 00	 jmp	 $LN716@SetNumber
$LN706@SetNumber:

; 4508 :         const size_type _Old_size = _My_data._Mysize;

  0083c	b8 ff ff ff 7f	 mov	 eax, 2147483647		; 7fffffffH
  00841	2b c7		 sub	 eax, edi

; 4509 :         if (max_size() - _Old_size < _Size_increase) {

  00843	83 f8 01	 cmp	 eax, 1
  00846	0f 82 5a 02 00
	00		 jb	 $LN872@SetNumber

; 4511 :         }
; 4512 : 
; 4513 :         const size_type _New_size     = _Old_size + _Size_increase;

  0084c	8d 77 01	 lea	 esi, DWORD PTR [edi+1]

; 4454 :         const size_type _Masked = _Requested | _ALLOC_MASK;

  0084f	83 ce 0f	 or	 esi, 15			; 0000000fH
  00852	81 fe ff ff ff
	7f		 cmp	 esi, 2147483647		; 7fffffffH

; 4455 :         if (_Masked > _Max) { // the mask overflows, settle for max_size()

  00858	76 18		 jbe	 SHORT $LN721@SetNumber

; 4456 :             return _Max;

  0085a	b8 00 00 00 80	 mov	 eax, -2147483648	; 80000000H
  0085f	be ff ff ff 7f	 mov	 esi, 2147483647		; 7fffffffH
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory

; 229  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  00864	50		 push	 eax
  00865	e8 00 00 00 00	 call	 ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
  0086a	8b 55 b4	 mov	 edx, DWORD PTR __Old_capacity$1$[ebp]
  0086d	83 c4 04	 add	 esp, 4
  00870	eb 5b		 jmp	 SHORT $LN894@SetNumber
$LN721@SetNumber:
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xstring

; 4459 :         if (_Old > _Max - _Old / 2) { // similarly, geometric overflows

  00872	8b ca		 mov	 ecx, edx
  00874	b8 ff ff ff 7f	 mov	 eax, 2147483647		; 7fffffffH
  00879	d1 e9		 shr	 ecx, 1
  0087b	2b c1		 sub	 eax, ecx
  0087d	3b d0		 cmp	 edx, eax
  0087f	76 18		 jbe	 SHORT $LN722@SetNumber

; 4460 :             return _Max;

  00881	b8 00 00 00 80	 mov	 eax, -2147483648	; 80000000H
  00886	be ff ff ff 7f	 mov	 esi, 2147483647		; 7fffffffH
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory

; 229  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  0088b	50		 push	 eax
  0088c	e8 00 00 00 00	 call	 ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
  00891	8b 55 b4	 mov	 edx, DWORD PTR __Old_capacity$1$[ebp]
  00894	83 c4 04	 add	 esp, 4
  00897	eb 34		 jmp	 SHORT $LN894@SetNumber
$LN722@SetNumber:
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xstring

; 4463 :         return (_STD max)(_Masked, _Old + _Old / 2);

  00899	8d 04 0a	 lea	 eax, DWORD PTR [edx+ecx]
  0089c	3b f0		 cmp	 esi, eax
  0089e	0f 42 f0	 cmovb	 esi, eax

; 4517 :         const pointer _New_ptr        = _Al.allocate(_New_capacity + 1); // throws

  008a1	8d 46 01	 lea	 eax, DWORD PTR [esi+1]
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory

; 228  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  008a4	3d 00 10 00 00	 cmp	 eax, 4096		; 00001000H
  008a9	72 0e		 jb	 SHORT $LN729@SetNumber

; 229  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  008ab	50		 push	 eax
  008ac	e8 00 00 00 00	 call	 ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
  008b1	8b 55 b4	 mov	 edx, DWORD PTR __Old_capacity$1$[ebp]
  008b4	83 c4 04	 add	 esp, 4
  008b7	eb 14		 jmp	 SHORT $LN894@SetNumber
$LN729@SetNumber:

; 230  :         }
; 231  :     }
; 232  : #endif // defined(_M_IX86) || defined(_M_X64)
; 233  : 
; 234  :     if (_Bytes != 0) {

  008b9	85 c0		 test	 eax, eax
  008bb	74 0e		 je	 SHORT $LN730@SetNumber

; 79   :         return ::operator new(_Bytes);

  008bd	50		 push	 eax
  008be	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new

; 235  :         return _Traits::_Allocate(_Bytes);

  008c3	8b 55 b4	 mov	 edx, DWORD PTR __Old_capacity$1$[ebp]

; 79   :         return ::operator new(_Bytes);

  008c6	83 c4 04	 add	 esp, 4

; 235  :         return _Traits::_Allocate(_Bytes);

  008c9	eb 02		 jmp	 SHORT $LN894@SetNumber
$LN730@SetNumber:

; 236  :     }
; 237  : 
; 238  :     return nullptr;

  008cb	33 c0		 xor	 eax, eax
$LN894@SetNumber:
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xstring

; 4525 :         _My_data._Mysize      = _New_size;

  008cd	8d 4f 01	 lea	 ecx, DWORD PTR [edi+1]

; 4526 :         _My_data._Myres       = _New_capacity;

  008d0	89 75 ec	 mov	 DWORD PTR _strImageFileName$12[ebp+20], esi
  008d3	89 4d e8	 mov	 DWORD PTR _strImageFileName$12[ebp+16], ecx

; 4527 :         _Elem* const _Raw_new = _Unfancy(_New_ptr);

  008d6	8d 34 07	 lea	 esi, DWORD PTR [edi+eax]
  008d9	8d 48 01	 lea	 ecx, DWORD PTR [eax+1]
  008dc	89 45 b8	 mov	 DWORD PTR $T3[ebp], eax
  008df	03 cf		 add	 ecx, edi
  008e1	89 75 a8	 mov	 DWORD PTR tv4285[ebp], esi
  008e4	89 4d a4	 mov	 DWORD PTR tv4284[ebp], ecx

; 4528 :         if (_BUF_SIZE <= _Old_capacity) {

  008e7	57		 push	 edi
  008e8	83 fa 10	 cmp	 edx, 16			; 00000010H
  008eb	72 49		 jb	 SHORT $LN715@SetNumber

; 4529 :             const pointer _Old_ptr = _My_data._Bx._Ptr;

  008ed	8b 75 d8	 mov	 esi, DWORD PTR _strImageFileName$12[ebp]

; 64   :         _CSTD memcpy(_First1, _First2, _Count * sizeof(_Elem));

  008f0	56		 push	 esi
  008f1	50		 push	 eax
  008f2	e8 00 00 00 00	 call	 _memcpy

; 3841 :                 _Traits::assign(_New_ptr[_Old_size], _Ch);

  008f7	8b 4d a8	 mov	 ecx, DWORD PTR tv4285[ebp]

; 64   :         _CSTD memcpy(_First1, _First2, _Count * sizeof(_Elem));

  008fa	83 c4 0c	 add	 esp, 12			; 0000000cH

; 3841 :                 _Traits::assign(_New_ptr[_Old_size], _Ch);

  008fd	8a 45 bf	 mov	 al, BYTE PTR _cChar$1$[ebp]
  00900	88 01		 mov	 BYTE PTR [ecx], al

; 3842 :                 _Traits::assign(_New_ptr[_Old_size + 1], _Elem());

  00902	8b 45 a4	 mov	 eax, DWORD PTR tv4284[ebp]

; 4531 :             _Al.deallocate(_Old_ptr, _Old_capacity + 1);

  00905	8b 4d b4	 mov	 ecx, DWORD PTR __Old_capacity$1$[ebp]
  00908	41		 inc	 ecx

; 3842 :                 _Traits::assign(_New_ptr[_Old_size + 1], _Elem());

  00909	c6 00 00	 mov	 BYTE PTR [eax], 0
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory

; 251  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  0090c	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  00912	72 16		 jb	 SHORT $LN752@SetNumber

; 150  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00914	8b 56 fc	 mov	 edx, DWORD PTR [esi-4]
  00917	83 c1 23	 add	 ecx, 35			; 00000023H

; 151  : 
; 152  :     // If the following asserts, it likely means that we are performing
; 153  :     // an aligned delete on memory coming from an unaligned allocation.
; 154  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 155  : 
; 156  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 157  :     // in range [_Min_back_shift, _Non_user_size]
; 158  : #ifdef _DEBUG
; 159  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 160  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 161  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 162  : #endif // _DEBUG
; 163  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  0091a	2b f2		 sub	 esi, edx

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  0091c	8d 46 fc	 lea	 eax, DWORD PTR [esi-4]
  0091f	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00922	0f 87 79 01 00
	00		 ja	 $LN259@SetNumber

; 165  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  00928	8b f2		 mov	 esi, edx
$LN752@SetNumber:

; 255  :         ::operator delete(_Ptr, _Bytes);

  0092a	51		 push	 ecx
  0092b	56		 push	 esi
  0092c	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00931	83 c4 08	 add	 esp, 8
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xstring

; 4533 :         } else {

  00934	eb 18		 jmp	 SHORT $LN895@SetNumber
$LN715@SetNumber:

; 64   :         _CSTD memcpy(_First1, _First2, _Count * sizeof(_Elem));

  00936	8d 4d d8	 lea	 ecx, DWORD PTR _strImageFileName$12[ebp]
  00939	51		 push	 ecx
  0093a	50		 push	 eax
  0093b	e8 00 00 00 00	 call	 _memcpy

; 3841 :                 _Traits::assign(_New_ptr[_Old_size], _Ch);

  00940	8a 45 bf	 mov	 al, BYTE PTR _cChar$1$[ebp]

; 64   :         _CSTD memcpy(_First1, _First2, _Count * sizeof(_Elem));

  00943	83 c4 0c	 add	 esp, 12			; 0000000cH

; 3841 :                 _Traits::assign(_New_ptr[_Old_size], _Ch);

  00946	88 06		 mov	 BYTE PTR [esi], al

; 3842 :                 _Traits::assign(_New_ptr[_Old_size + 1], _Elem());

  00948	8b 45 a4	 mov	 eax, DWORD PTR tv4284[ebp]
  0094b	c6 00 00	 mov	 BYTE PTR [eax], 0
$LN895@SetNumber:

; 3141 :         return append(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

  0094e	8b 45 b8	 mov	 eax, DWORD PTR $T3[ebp]
  00951	89 45 d8	 mov	 DWORD PTR _strImageFileName$12[ebp], eax
$LN716@SetNumber:
  00954	6a 04		 push	 4
  00956	68 00 00 00 00	 push	 OFFSET ??_C@_04DLFHDFGL@?4sub@
  0095b	8d 4d d8	 lea	 ecx, DWORD PTR _strImageFileName$12[ebp]
  0095e	e8 00 00 00 00	 call	 ?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
$LN23@SetNumber:

; 2273 :         if (_Large_string_engaged()) {

  00963	83 7d ec 10	 cmp	 DWORD PTR _strImageFileName$12[ebp+20], 16 ; 00000010H
  00967	8d 45 d8	 lea	 eax, DWORD PTR _strImageFileName$12[ebp]
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp

; 1231 : 			if (!CResourceManager::Instance().IsFileExist(strImageFileName.c_str()))

  0096a	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCResourceManager@@@@0PAVCResourceManager@@A ; CSingleton<CResourceManager>::ms_singleton
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xstring

; 2273 :         if (_Large_string_engaged()) {

  00970	0f 43 45 d8	 cmovae	 eax, DWORD PTR _strImageFileName$12[ebp]
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp

; 1231 : 			if (!CResourceManager::Instance().IsFileExist(strImageFileName.c_str()))

  00974	50		 push	 eax
  00975	e8 00 00 00 00	 call	 ?IsFileExist@CResourceManager@@QAE_NPBD@Z ; CResourceManager::IsFileExist
  0097a	84 c0		 test	 al, al
  0097c	75 5c		 jne	 SHORT $LN24@SetNumber
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xstring

; 2286 :         return _BUF_SIZE <= _Myres;

  0097e	8b 55 ec	 mov	 edx, DWORD PTR _strImageFileName$12[ebp+20]
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp

; 1232 : 				continue;

  00981	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xstring

; 2286 :         return _BUF_SIZE <= _Myres;

  00988	83 fa 10	 cmp	 edx, 16			; 00000010H

; 4584 :         if (_Mypair._Myval2._Large_string_engaged()) {

  0098b	72 2c		 jb	 SHORT $LN890@SetNumber
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory

; 797  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0098d	8b 4d d8	 mov	 ecx, DWORD PTR _strImageFileName$12[ebp]
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xstring

; 4588 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  00990	42		 inc	 edx
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory

; 797  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00991	8b c1		 mov	 eax, ecx

; 251  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00993	81 fa 00 10 00
	00		 cmp	 edx, 4096		; 00001000H
  00999	72 14		 jb	 SHORT $LN824@SetNumber

; 150  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  0099b	8b 49 fc	 mov	 ecx, DWORD PTR [ecx-4]
  0099e	83 c2 23	 add	 edx, 35			; 00000023H
  009a1	2b c1		 sub	 eax, ecx

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  009a3	83 c0 fc	 add	 eax, -4			; fffffffcH
  009a6	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  009a9	0f 87 f2 00 00
	00		 ja	 $LN259@SetNumber
$LN824@SetNumber:

; 255  :         ::operator delete(_Ptr, _Bytes);

  009af	52		 push	 edx
  009b0	51		 push	 ecx
  009b1	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  009b6	83 c4 08	 add	 esp, 8
$LN890@SetNumber:
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp

; 1185 : 		for (DWORD i = 0; i < m_strNumber.size(); ++i)

  009b9	8b 75 b0	 mov	 esi, DWORD PTR _this$GSCopy$1$[ebp]
$LN2@SetNumber:
  009bc	8b 4d ac	 mov	 ecx, DWORD PTR _i$1$[ebp]
  009bf	41		 inc	 ecx
  009c0	89 4d ac	 mov	 DWORD PTR _i$1$[ebp], ecx
  009c3	3b 8e a4 00 00
	00		 cmp	 ecx, DWORD PTR [esi+164]
  009c9	0f 83 b5 00 00
	00		 jae	 $LN881@SetNumber
  009cf	8d be 94 00 00
	00		 lea	 edi, DWORD PTR [esi+148]
  009d5	e9 26 f7 ff ff	 jmp	 $LL4@SetNumber
$LN24@SetNumber:
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xstring

; 2273 :         if (_Large_string_engaged()) {

  009da	83 7d ec 10	 cmp	 DWORD PTR _strImageFileName$12[ebp+20], 16 ; 00000010H
  009de	8d 45 d8	 lea	 eax, DWORD PTR _strImageFileName$12[ebp]
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp

; 1234 : 			CGraphicImage * pImage = (CGraphicImage *)CResourceManager::Instance().GetResourcePointer(strImageFileName.c_str());

  009e1	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCResourceManager@@@@0PAVCResourceManager@@A ; CSingleton<CResourceManager>::ms_singleton
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xstring

; 2273 :         if (_Large_string_engaged()) {

  009e7	0f 43 45 d8	 cmovae	 eax, DWORD PTR _strImageFileName$12[ebp]
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp

; 1234 : 			CGraphicImage * pImage = (CGraphicImage *)CResourceManager::Instance().GetResourcePointer(strImageFileName.c_str());

  009eb	50		 push	 eax
  009ec	e8 00 00 00 00	 call	 ?GetResourcePointer@CResourceManager@@QAEPAVCResource@@PBD@Z ; CResourceManager::GetResourcePointer
  009f1	8b f0		 mov	 esi, eax

; 1235 : 
; 1236 : 			CGraphicImageInstance * pInstance = CGraphicImageInstance::New();

  009f3	e8 00 00 00 00	 call	 ?New@CGraphicImageInstance@@SAPAV1@XZ ; CGraphicImageInstance::New
  009f8	8b f8		 mov	 edi, eax

; 1237 : 			pInstance->SetImagePointer(pImage);

  009fa	56		 push	 esi
  009fb	8b cf		 mov	 ecx, edi
  009fd	89 7d a8	 mov	 DWORD PTR _pInstance$2[ebp], edi
  00a00	e8 00 00 00 00	 call	 ?SetImagePointer@CGraphicImageInstance@@QAEXPAVCGraphicImage@@@Z ; CGraphicImageInstance::SetImagePointer

; 1238 : 			m_ImageInstanceVector.push_back(pInstance);

  00a05	8b 75 b0	 mov	 esi, DWORD PTR _this$GSCopy$1$[ebp]
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\vector

; 730  :         if (_Mylast != _My_data._Myend) {

  00a08	8b 86 b0 00 00
	00		 mov	 eax, DWORD PTR [esi+176]
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp

; 1238 : 			m_ImageInstanceVector.push_back(pInstance);

  00a0e	8d 8e ac 00 00
	00		 lea	 ecx, DWORD PTR [esi+172]
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\vector

; 730  :         if (_Mylast != _My_data._Myend) {

  00a14	3b 41 08	 cmp	 eax, DWORD PTR [ecx+8]
  00a17	74 08		 je	 SHORT $LN839@SetNumber

; 713  :         _Alty_traits::construct(_Getal(), _Unfancy(_Mylast), _STD forward<_Valty>(_Val)...);

  00a19	89 38		 mov	 DWORD PTR [eax], edi

; 714  :         _Orphan_range(_Mylast, _Mylast);
; 715  :         _Ty& _Result = *_Mylast;
; 716  :         ++_Mylast;

  00a1b	83 41 04 04	 add	 DWORD PTR [ecx+4], 4

; 731  :             return _Emplace_back_with_unused_capacity(_STD forward<_Valty>(_Val)...);

  00a1f	eb 0a		 jmp	 SHORT $LN838@SetNumber
$LN839@SetNumber:

; 732  :         }
; 733  : 
; 734  :         _Ty& _Result = *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

  00a21	8d 55 a8	 lea	 edx, DWORD PTR _pInstance$2[ebp]
  00a24	52		 push	 edx
  00a25	50		 push	 eax
  00a26	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@ABQAVCGraphicImageInstance@@@?$vector@PAVCGraphicImageInstance@@V?$allocator@PAVCGraphicImageInstance@@@std@@@std@@QAEPAPAVCGraphicImageInstance@@QAPAV2@ABQAV2@@Z ; std::vector<CGraphicImageInstance *,std::allocator<CGraphicImageInstance *> >::_Emplace_reallocate<CGraphicImageInstance * const &>
$LN838@SetNumber:
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp

; 1240 : 			m_dwWidthSummary += pInstance->GetWidth();

  00a2b	8b cf		 mov	 ecx, edi
  00a2d	e8 00 00 00 00	 call	 ?GetWidth@CGraphicImageInstance@@QAEHXZ ; CGraphicImageInstance::GetWidth
  00a32	01 86 bc 00 00
	00		 add	 DWORD PTR [esi+188], eax
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xstring

; 2286 :         return _BUF_SIZE <= _Myres;

  00a38	8b 55 ec	 mov	 edx, DWORD PTR _strImageFileName$12[ebp+20]
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp

; 1241 : 		}

  00a3b	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xstring

; 2286 :         return _BUF_SIZE <= _Myres;

  00a42	83 fa 10	 cmp	 edx, 16			; 00000010H

; 4584 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00a45	0f 82 71 ff ff
	ff		 jb	 $LN2@SetNumber
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory

; 797  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00a4b	8b 4d d8	 mov	 ecx, DWORD PTR _strImageFileName$12[ebp]
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xstring

; 4588 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  00a4e	42		 inc	 edx
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory

; 797  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00a4f	8b c1		 mov	 eax, ecx

; 251  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00a51	81 fa 00 10 00
	00		 cmp	 edx, 4096		; 00001000H
  00a57	72 10		 jb	 SHORT $LN865@SetNumber

; 150  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00a59	8b 49 fc	 mov	 ecx, DWORD PTR [ecx-4]
  00a5c	83 c2 23	 add	 edx, 35			; 00000023H
  00a5f	2b c1		 sub	 eax, ecx

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00a61	83 c0 fc	 add	 eax, -4			; fffffffcH
  00a64	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00a67	77 38		 ja	 SHORT $LN259@SetNumber
$LN865@SetNumber:

; 255  :         ::operator delete(_Ptr, _Bytes);

  00a69	52		 push	 edx
  00a6a	51		 push	 ecx
  00a6b	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00a70	83 c4 08	 add	 esp, 8
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp

; 1241 : 		}

  00a73	e9 44 ff ff ff	 jmp	 $LN2@SetNumber
$LN22@SetNumber:

; 1225 : 				strImageFileName += cChar;
; 1226 : 				strImageFileName += ".sub";
; 1227 : 			}
; 1228 : 			else
; 1229 : 				continue;

  00a78	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xstring

; 4584 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00a7f	e9 38 ff ff ff	 jmp	 $LN2@SetNumber
$LN881@SetNumber:
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp

; 1242 : 	}

  00a84	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00a87	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00a8e	59		 pop	 ecx
  00a8f	5f		 pop	 edi
  00a90	5e		 pop	 esi
  00a91	8b 4d f0	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00a94	33 cd		 xor	 ecx, ebp
  00a96	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00a9b	8b e5		 mov	 esp, ebp
  00a9d	5d		 pop	 ebp
  00a9e	c2 04 00	 ret	 4
$LN259@SetNumber:
  00aa1	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN872@SetNumber:
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xstring

; 4510 :             _Xlen_string(); // result too long

  00aa6	e8 00 00 00 00	 call	 ?_Xlen_string@std@@YAXXZ ; std::_Xlen_string
$LN893@SetNumber:
  00aab	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?SetNumber@CNumberLine@UI@@QAEXPBD@Z$0:
  00000	8d 4d d8	 lea	 ecx, DWORD PTR _strImageFileName$12[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00008	cc		 int	 3
  00009	cc		 int	 3
  0000a	cc		 int	 3
  0000b	cc		 int	 3
  0000c	cc		 int	 3
__ehhandler$?SetNumber@CNumberLine@UI@@QAEXPBD@Z:
  0000d	90		 npad	 1
  0000e	90		 npad	 1
  0000f	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00013	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00016	8b 4a a4	 mov	 ecx, DWORD PTR [edx-92]
  00019	33 c8		 xor	 ecx, eax
  0001b	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00020	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  00023	33 c8		 xor	 ecx, eax
  00025	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0002a	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?SetNumber@CNumberLine@UI@@QAEXPBD@Z
  0002f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?SetNumber@CNumberLine@UI@@QAEXPBD@Z ENDP		; UI::CNumberLine::SetNumber
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?SetHorizontalAlign@CNumberLine@UI@@QAEXH@Z
_TEXT	SEGMENT
_iType$ = 8						; size = 4
?SetHorizontalAlign@CNumberLine@UI@@QAEXH@Z PROC	; UI::CNumberLine::SetHorizontalAlign, COMDAT
; _this$ = ecx

; 1173 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1174 : 		m_iHorizontalAlign = iType;

  00003	8b 45 08	 mov	 eax, DWORD PTR _iType$[ebp]
  00006	89 81 b8 00 00
	00		 mov	 DWORD PTR [ecx+184], eax

; 1175 : 	}

  0000c	5d		 pop	 ebp
  0000d	c2 04 00	 ret	 4
?SetHorizontalAlign@CNumberLine@UI@@QAEXH@Z ENDP	; UI::CNumberLine::SetHorizontalAlign
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?SetPath@CNumberLine@UI@@QAEXPBD@Z
_TEXT	SEGMENT
_c_szPath$ = 8						; size = 4
?SetPath@CNumberLine@UI@@QAEXPBD@Z PROC			; UI::CNumberLine::SetPath, COMDAT
; _this$ = ecx

; 1169 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xstring

; 404  :         return _CSTD strlen(reinterpret_cast<const char*>(_First));

  00003	8b 55 08	 mov	 edx, DWORD PTR _c_szPath$[ebp]
  00006	8b c2		 mov	 eax, edx
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp

; 1169 : 	{

  00008	56		 push	 esi
  00009	57		 push	 edi
  0000a	8b f1		 mov	 esi, ecx
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xstring

; 404  :         return _CSTD strlen(reinterpret_cast<const char*>(_First));

  0000c	8d 78 01	 lea	 edi, DWORD PTR [eax+1]
  0000f	90		 npad	 1
$LL9@SetPath:
  00010	8a 08		 mov	 cl, BYTE PTR [eax]
  00012	40		 inc	 eax
  00013	84 c9		 test	 cl, cl
  00015	75 f9		 jne	 SHORT $LL9@SetPath
  00017	2b c7		 sub	 eax, edi
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp

; 1170 : 		m_strPath = c_szPath;

  00019	8d 4e 7c	 lea	 ecx, DWORD PTR [esi+124]
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xstring

; 3230 :         return assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

  0001c	50		 push	 eax
  0001d	52		 push	 edx
  0001e	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00023	5f		 pop	 edi
  00024	5e		 pop	 esi
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp

; 1171 : 	}

  00025	5d		 pop	 ebp
  00026	c2 04 00	 ret	 4
?SetPath@CNumberLine@UI@@QAEXPBD@Z ENDP			; UI::CNumberLine::SetPath
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\vector
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\vector
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\vector
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xstring
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xstring
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xstring
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xstring
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ??1CNumberLine@UI@@UAE@XZ
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
??1CNumberLine@UI@@UAE@XZ PROC				; UI::CNumberLine::~CNumberLine, COMDAT
; _this$ = ecx

; 1164 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1CNumberLine@UI@@UAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	56		 push	 esi
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00017	33 c5		 xor	 eax, ebp
  00019	50		 push	 eax
  0001a	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001d	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00023	8b f1		 mov	 esi, ecx
  00025	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CNumberLine@UI@@6B@

; 1165 : 		ClearNumber();

  0002b	e8 00 00 00 00	 call	 ?ClearNumber@CNumberLine@UI@@IAEXXZ ; UI::CNumberLine::ClearNumber
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\vector

; 1750 :         if (_Myfirst) { // destroy and deallocate old array

  00030	8b 86 ac 00 00
	00		 mov	 eax, DWORD PTR [esi+172]
  00036	85 c0		 test	 eax, eax
  00038	74 51		 je	 SHORT $LN6@CNumberLin

; 1751 :             _Destroy(_Myfirst, _Mylast);
; 1752 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  0003a	8b 8e b4 00 00
	00		 mov	 ecx, DWORD PTR [esi+180]
  00040	2b c8		 sub	 ecx, eax
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory

; 797  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00042	83 e1 fc	 and	 ecx, -4			; fffffffcH

; 251  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00045	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  0004b	72 16		 jb	 SHORT $LN22@CNumberLin

; 150  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  0004d	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  00050	83 c1 23	 add	 ecx, 35			; 00000023H

; 151  : 
; 152  :     // If the following asserts, it likely means that we are performing
; 153  :     // an aligned delete on memory coming from an unaligned allocation.
; 154  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 155  : 
; 156  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 157  :     // in range [_Min_back_shift, _Non_user_size]
; 158  : #ifdef _DEBUG
; 159  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 160  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 161  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 162  : #endif // _DEBUG
; 163  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  00053	2b c2		 sub	 eax, edx

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00055	83 c0 fc	 add	 eax, -4			; fffffffcH
  00058	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  0005b	0f 87 e1 00 00
	00		 ja	 $LN74@CNumberLin

; 165  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  00061	8b c2		 mov	 eax, edx
$LN22@CNumberLin:

; 255  :         ::operator delete(_Ptr, _Bytes);

  00063	51		 push	 ecx
  00064	50		 push	 eax
  00065	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\vector

; 1754 :             _Myfirst = nullptr;

  0006a	c7 86 ac 00 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+172], 0
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory

; 255  :         ::operator delete(_Ptr, _Bytes);

  00074	83 c4 08	 add	 esp, 8
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\vector

; 1755 :             _Mylast  = nullptr;

  00077	c7 86 b0 00 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+176], 0

; 1756 :             _Myend   = nullptr;

  00081	c7 86 b4 00 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+180], 0
$LN6@CNumberLin:
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xstring

; 2286 :         return _BUF_SIZE <= _Myres;

  0008b	8b 8e a8 00 00
	00		 mov	 ecx, DWORD PTR [esi+168]
  00091	83 f9 10	 cmp	 ecx, 16			; 00000010H

; 4584 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00094	72 2f		 jb	 SHORT $LN40@CNumberLin
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory

; 797  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00096	8b 86 94 00 00
	00		 mov	 eax, DWORD PTR [esi+148]
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xstring

; 4588 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  0009c	41		 inc	 ecx
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory

; 251  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  0009d	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  000a3	72 16		 jb	 SHORT $LN50@CNumberLin

; 150  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  000a5	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  000a8	83 c1 23	 add	 ecx, 35			; 00000023H

; 151  : 
; 152  :     // If the following asserts, it likely means that we are performing
; 153  :     // an aligned delete on memory coming from an unaligned allocation.
; 154  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 155  : 
; 156  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 157  :     // in range [_Min_back_shift, _Non_user_size]
; 158  : #ifdef _DEBUG
; 159  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 160  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 161  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 162  : #endif // _DEBUG
; 163  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  000ab	2b c2		 sub	 eax, edx

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  000ad	83 c0 fc	 add	 eax, -4			; fffffffcH
  000b0	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  000b3	0f 87 89 00 00
	00		 ja	 $LN74@CNumberLin

; 165  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  000b9	8b c2		 mov	 eax, edx
$LN50@CNumberLin:

; 255  :         ::operator delete(_Ptr, _Bytes);

  000bb	51		 push	 ecx
  000bc	50		 push	 eax
  000bd	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  000c2	83 c4 08	 add	 esp, 8
$LN40@CNumberLin:
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xstring

; 4599 :             _Mypair._Myval2._Mysize = 0;

  000c5	c7 86 a4 00 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+164], 0

; 4600 :             _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  000cf	c7 86 a8 00 00
	00 0f 00 00 00	 mov	 DWORD PTR [esi+168], 15	; 0000000fH

; 4601 :             // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4602 :             _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  000d9	c6 86 94 00 00
	00 00		 mov	 BYTE PTR [esi+148], 0

; 2286 :         return _BUF_SIZE <= _Myres;

  000e0	8b 8e 90 00 00
	00		 mov	 ecx, DWORD PTR [esi+144]
  000e6	83 f9 10	 cmp	 ecx, 16			; 00000010H

; 4584 :         if (_Mypair._Myval2._Large_string_engaged()) {

  000e9	72 28		 jb	 SHORT $LN67@CNumberLin
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory

; 797  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  000eb	8b 46 7c	 mov	 eax, DWORD PTR [esi+124]
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xstring

; 4588 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  000ee	41		 inc	 ecx
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory

; 251  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  000ef	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  000f5	72 12		 jb	 SHORT $LN77@CNumberLin

; 150  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  000f7	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  000fa	83 c1 23	 add	 ecx, 35			; 00000023H

; 151  : 
; 152  :     // If the following asserts, it likely means that we are performing
; 153  :     // an aligned delete on memory coming from an unaligned allocation.
; 154  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 155  : 
; 156  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 157  :     // in range [_Min_back_shift, _Non_user_size]
; 158  : #ifdef _DEBUG
; 159  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 160  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 161  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 162  : #endif // _DEBUG
; 163  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  000fd	2b c2		 sub	 eax, edx

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  000ff	83 c0 fc	 add	 eax, -4			; fffffffcH
  00102	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00105	77 3b		 ja	 SHORT $LN74@CNumberLin

; 165  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  00107	8b c2		 mov	 eax, edx
$LN77@CNumberLin:

; 255  :         ::operator delete(_Ptr, _Bytes);

  00109	51		 push	 ecx
  0010a	50		 push	 eax
  0010b	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00110	83 c4 08	 add	 esp, 8
$LN67@CNumberLin:
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp

; 1166 : 	}

  00113	8b ce		 mov	 ecx, esi
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xstring

; 4599 :             _Mypair._Myval2._Mysize = 0;

  00115	c7 86 8c 00 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+140], 0

; 4600 :             _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  0011f	c7 86 90 00 00
	00 0f 00 00 00	 mov	 DWORD PTR [esi+144], 15	; 0000000fH

; 4601 :             // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4602 :             _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  00129	c6 46 7c 00	 mov	 BYTE PTR [esi+124], 0
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp

; 1166 : 	}

  0012d	e8 00 00 00 00	 call	 ??1CWindow@UI@@UAE@XZ	; UI::CWindow::~CWindow
  00132	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00135	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0013c	59		 pop	 ecx
  0013d	5e		 pop	 esi
  0013e	8b e5		 mov	 esp, ebp
  00140	5d		 pop	 ebp
  00141	c3		 ret	 0
$LN74@CNumberLin:
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00142	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN83@CNumberLin:
  00147	cc		 int	 3
  00148	cc		 int	 3
  00149	cc		 int	 3
  0014a	cc		 int	 3
  0014b	cc		 int	 3
  0014c	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1CNumberLine@UI@@UAE@XZ:
  00000	90		 npad	 1
  00001	90		 npad	 1
  00002	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00006	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00009	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  0000c	33 c8		 xor	 ecx, eax
  0000e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00013	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1CNumberLine@UI@@UAE@XZ
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1CNumberLine@UI@@UAE@XZ ENDP				; UI::CNumberLine::~CNumberLine
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xstring
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\vector
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ??0CNumberLine@UI@@QAE@PAVCWindow@1@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pParent$ = 8						; size = 4
??0CNumberLine@UI@@QAE@PAVCWindow@1@@Z PROC		; UI::CNumberLine::CNumberLine, COMDAT
; _this$ = ecx

; 1156 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0CNumberLine@UI@@QAE@PAVCWindow@1@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	56		 push	 esi
  00013	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00018	33 c5		 xor	 eax, ebp
  0001a	50		 push	 eax
  0001b	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001e	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00024	8b f1		 mov	 esi, ecx
  00026	89 75 f0	 mov	 DWORD PTR _this$[ebp], esi

; 1155 : 	CNumberLine::CNumberLine(CWindow * pParent) : CWindow(NULL)

  00029	6a 00		 push	 0
  0002b	e8 00 00 00 00	 call	 ??0CWindow@UI@@QAE@PAU_object@@@Z ; UI::CWindow::CWindow

; 1156 : 	{

  00030	8d 4e 7c	 lea	 ecx, DWORD PTR [esi+124]
  00033	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CNumberLine@UI@@6B@
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xstring

; 2313 :         _CONSTEXPR20_CONTAINER _Bxty() noexcept : _Ptr() {} // user-provided, for fancy pointers

  00039	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], 0
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp

; 1155 : 	CNumberLine::CNumberLine(CWindow * pParent) : CWindow(NULL)

  0003f	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xstring

; 4562 :         _My_data._Mysize = 0;

  00046	c7 41 10 00 00
	00 00		 mov	 DWORD PTR [ecx+16], 0

; 4563 : 
; 4564 : #ifdef __cpp_lib_constexpr_string
; 4565 :         if (_STD is_constant_evaluated()) {
; 4566 :             _My_data._Myres        = _BUF_SIZE; // SSO disabled in constexpr context
; 4567 :             auto& _Al              = _Getal();
; 4568 :             const pointer _New_ptr = _Al.allocate(_BUF_SIZE + 1); // throws
; 4569 :             _My_data._Bx._Ptr      = _New_ptr;
; 4570 : 
; 4571 :             _Elem* const _Raw_new = _Unfancy(_New_ptr);
; 4572 :             _Traits::assign(_Raw_new, _BUF_SIZE + 1, _Elem());
; 4573 :         } else
; 4574 : #endif // __cpp_lib_constexpr_string
; 4575 :         {
; 4576 :             _My_data._Myres = _BUF_SIZE - 1;

  0004d	c7 41 14 0f 00
	00 00		 mov	 DWORD PTR [ecx+20], 15	; 0000000fH

; 4577 :             // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4578 :             _Traits::assign(_My_data._Bx._Buf[0], _Elem());

  00054	c6 01 00	 mov	 BYTE PTR [ecx], 0

; 2313 :         _CONSTEXPR20_CONTAINER _Bxty() noexcept : _Ptr() {} // user-provided, for fancy pointers

  00057	c7 86 94 00 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+148], 0

; 4562 :         _My_data._Mysize = 0;

  00061	c7 86 a4 00 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+164], 0

; 4563 : 
; 4564 : #ifdef __cpp_lib_constexpr_string
; 4565 :         if (_STD is_constant_evaluated()) {
; 4566 :             _My_data._Myres        = _BUF_SIZE; // SSO disabled in constexpr context
; 4567 :             auto& _Al              = _Getal();
; 4568 :             const pointer _New_ptr = _Al.allocate(_BUF_SIZE + 1); // throws
; 4569 :             _My_data._Bx._Ptr      = _New_ptr;
; 4570 : 
; 4571 :             _Elem* const _Raw_new = _Unfancy(_New_ptr);
; 4572 :             _Traits::assign(_Raw_new, _BUF_SIZE + 1, _Elem());
; 4573 :         } else
; 4574 : #endif // __cpp_lib_constexpr_string
; 4575 :         {
; 4576 :             _My_data._Myres = _BUF_SIZE - 1;

  0006b	c7 86 a8 00 00
	00 0f 00 00 00	 mov	 DWORD PTR [esi+168], 15	; 0000000fH

; 4577 :             // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4578 :             _Traits::assign(_My_data._Bx._Buf[0], _Elem());

  00075	c6 86 94 00 00
	00 00		 mov	 BYTE PTR [esi+148], 0
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\vector

; 390  :     _CONSTEXPR20_CONTAINER _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

  0007c	c7 86 ac 00 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+172], 0
  00086	c7 86 b0 00 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+176], 0
  00090	c7 86 b4 00 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+180], 0
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xstring

; 3230 :         return assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

  0009a	6a 1d		 push	 29			; 0000001dH
  0009c	68 00 00 00 00	 push	 OFFSET ??_C@_0BO@GPCBPBEE@d?3?1ymir?5work?1ui?1game?1taskbar?1@
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp

; 1156 : 	{

  000a1	c6 45 fc 03	 mov	 BYTE PTR __$EHRec$[ebp+8], 3
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xstring

; 3230 :         return assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

  000a5	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp

; 1161 : 		m_pParent = pParent;

  000aa	8b 45 08	 mov	 eax, DWORD PTR _pParent$[ebp]
  000ad	89 46 60	 mov	 DWORD PTR [esi+96], eax

; 1162 : 	}

  000b0	8b c6		 mov	 eax, esi
  000b2	c7 86 b8 00 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+184], 0
  000bc	c7 86 bc 00 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+188], 0
  000c6	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000c9	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000d0	59		 pop	 ecx
  000d1	5e		 pop	 esi
  000d2	8b e5		 mov	 esp, ebp
  000d4	5d		 pop	 ebp
  000d5	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0CNumberLine@UI@@QAE@PAVCWindow@1@@Z$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1CWindow@UI@@UAE@XZ	; UI::CWindow::~CWindow
__unwindfunclet$??0CNumberLine@UI@@QAE@PAVCWindow@1@@Z$1:
  00008	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0000b	83 c1 7c	 add	 ecx, 124		; 0000007cH
  0000e	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$??0CNumberLine@UI@@QAE@PAVCWindow@1@@Z$2:
  00013	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00016	81 c1 94 00 00
	00		 add	 ecx, 148		; 00000094H
  0001c	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$??0CNumberLine@UI@@QAE@PAVCWindow@1@@Z$3:
  00021	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00024	81 c1 ac 00 00
	00		 add	 ecx, 172		; 000000acH
  0002a	e9 00 00 00 00	 jmp	 ??1?$vector@PAVCGraphicImageInstance@@V?$allocator@PAVCGraphicImageInstance@@@std@@@std@@QAE@XZ ; std::vector<CGraphicImageInstance *,std::allocator<CGraphicImageInstance *> >::~vector<CGraphicImageInstance *,std::allocator<CGraphicImageInstance *> >
  0002f	cc		 int	 3
  00030	cc		 int	 3
  00031	cc		 int	 3
  00032	cc		 int	 3
  00033	cc		 int	 3
__ehhandler$??0CNumberLine@UI@@QAE@PAVCWindow@1@@Z:
  00034	90		 npad	 1
  00035	90		 npad	 1
  00036	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0003a	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0003d	8b 4a f4	 mov	 ecx, DWORD PTR [edx-12]
  00040	33 c8		 xor	 ecx, eax
  00042	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00047	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0CNumberLine@UI@@QAE@PAVCWindow@1@@Z
  0004c	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0CNumberLine@UI@@QAE@PAVCWindow@1@@Z ENDP		; UI::CNumberLine::CNumberLine
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xstring
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\vector
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ??0CNumberLine@UI@@QAE@PAU_object@@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_ppyObject$ = 8						; size = 4
??0CNumberLine@UI@@QAE@PAU_object@@@Z PROC		; UI::CNumberLine::CNumberLine, COMDAT
; _this$ = ecx

; 1150 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0CNumberLine@UI@@QAE@PAU_object@@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	56		 push	 esi
  00013	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00018	33 c5		 xor	 eax, ebp
  0001a	50		 push	 eax
  0001b	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001e	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00024	8b f1		 mov	 esi, ecx
  00026	89 75 f0	 mov	 DWORD PTR _this$[ebp], esi

; 1149 : 	CNumberLine::CNumberLine(PyObject * ppyObject) : CWindow(ppyObject)

  00029	ff 75 08	 push	 DWORD PTR _ppyObject$[ebp]
  0002c	e8 00 00 00 00	 call	 ??0CWindow@UI@@QAE@PAU_object@@@Z ; UI::CWindow::CWindow

; 1150 : 	{

  00031	8d 4e 7c	 lea	 ecx, DWORD PTR [esi+124]
  00034	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CNumberLine@UI@@6B@
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xstring

; 2313 :         _CONSTEXPR20_CONTAINER _Bxty() noexcept : _Ptr() {} // user-provided, for fancy pointers

  0003a	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], 0
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp

; 1149 : 	CNumberLine::CNumberLine(PyObject * ppyObject) : CWindow(ppyObject)

  00040	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xstring

; 4562 :         _My_data._Mysize = 0;

  00047	c7 41 10 00 00
	00 00		 mov	 DWORD PTR [ecx+16], 0

; 4563 : 
; 4564 : #ifdef __cpp_lib_constexpr_string
; 4565 :         if (_STD is_constant_evaluated()) {
; 4566 :             _My_data._Myres        = _BUF_SIZE; // SSO disabled in constexpr context
; 4567 :             auto& _Al              = _Getal();
; 4568 :             const pointer _New_ptr = _Al.allocate(_BUF_SIZE + 1); // throws
; 4569 :             _My_data._Bx._Ptr      = _New_ptr;
; 4570 : 
; 4571 :             _Elem* const _Raw_new = _Unfancy(_New_ptr);
; 4572 :             _Traits::assign(_Raw_new, _BUF_SIZE + 1, _Elem());
; 4573 :         } else
; 4574 : #endif // __cpp_lib_constexpr_string
; 4575 :         {
; 4576 :             _My_data._Myres = _BUF_SIZE - 1;

  0004e	c7 41 14 0f 00
	00 00		 mov	 DWORD PTR [ecx+20], 15	; 0000000fH

; 4577 :             // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4578 :             _Traits::assign(_My_data._Bx._Buf[0], _Elem());

  00055	c6 01 00	 mov	 BYTE PTR [ecx], 0

; 2313 :         _CONSTEXPR20_CONTAINER _Bxty() noexcept : _Ptr() {} // user-provided, for fancy pointers

  00058	c7 86 94 00 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+148], 0

; 4562 :         _My_data._Mysize = 0;

  00062	c7 86 a4 00 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+164], 0

; 4563 : 
; 4564 : #ifdef __cpp_lib_constexpr_string
; 4565 :         if (_STD is_constant_evaluated()) {
; 4566 :             _My_data._Myres        = _BUF_SIZE; // SSO disabled in constexpr context
; 4567 :             auto& _Al              = _Getal();
; 4568 :             const pointer _New_ptr = _Al.allocate(_BUF_SIZE + 1); // throws
; 4569 :             _My_data._Bx._Ptr      = _New_ptr;
; 4570 : 
; 4571 :             _Elem* const _Raw_new = _Unfancy(_New_ptr);
; 4572 :             _Traits::assign(_Raw_new, _BUF_SIZE + 1, _Elem());
; 4573 :         } else
; 4574 : #endif // __cpp_lib_constexpr_string
; 4575 :         {
; 4576 :             _My_data._Myres = _BUF_SIZE - 1;

  0006c	c7 86 a8 00 00
	00 0f 00 00 00	 mov	 DWORD PTR [esi+168], 15	; 0000000fH

; 4577 :             // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4578 :             _Traits::assign(_My_data._Bx._Buf[0], _Elem());

  00076	c6 86 94 00 00
	00 00		 mov	 BYTE PTR [esi+148], 0
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\vector

; 390  :     _CONSTEXPR20_CONTAINER _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

  0007d	c7 86 ac 00 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+172], 0
  00087	c7 86 b0 00 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+176], 0
  00091	c7 86 b4 00 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+180], 0
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xstring

; 3230 :         return assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

  0009b	6a 1d		 push	 29			; 0000001dH
  0009d	68 00 00 00 00	 push	 OFFSET ??_C@_0BO@GPCBPBEE@d?3?1ymir?5work?1ui?1game?1taskbar?1@
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp

; 1150 : 	{

  000a2	c6 45 fc 03	 mov	 BYTE PTR __$EHRec$[ebp+8], 3
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xstring

; 3230 :         return assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

  000a6	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp

; 1152 : 		m_iHorizontalAlign = HORIZONTAL_ALIGN_LEFT;

  000ab	c7 86 b8 00 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+184], 0

; 1153 : 		m_dwWidthSummary = 0;
; 1154 : 	}

  000b5	8b c6		 mov	 eax, esi
  000b7	c7 86 bc 00 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+188], 0
  000c1	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000c4	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000cb	59		 pop	 ecx
  000cc	5e		 pop	 esi
  000cd	8b e5		 mov	 esp, ebp
  000cf	5d		 pop	 ebp
  000d0	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0CNumberLine@UI@@QAE@PAU_object@@@Z$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1CWindow@UI@@UAE@XZ	; UI::CWindow::~CWindow
__unwindfunclet$??0CNumberLine@UI@@QAE@PAU_object@@@Z$1:
  00008	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0000b	83 c1 7c	 add	 ecx, 124		; 0000007cH
  0000e	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$??0CNumberLine@UI@@QAE@PAU_object@@@Z$2:
  00013	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00016	81 c1 94 00 00
	00		 add	 ecx, 148		; 00000094H
  0001c	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$??0CNumberLine@UI@@QAE@PAU_object@@@Z$3:
  00021	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00024	81 c1 ac 00 00
	00		 add	 ecx, 172		; 000000acH
  0002a	e9 00 00 00 00	 jmp	 ??1?$vector@PAVCGraphicImageInstance@@V?$allocator@PAVCGraphicImageInstance@@@std@@@std@@QAE@XZ ; std::vector<CGraphicImageInstance *,std::allocator<CGraphicImageInstance *> >::~vector<CGraphicImageInstance *,std::allocator<CGraphicImageInstance *> >
  0002f	cc		 int	 3
  00030	cc		 int	 3
  00031	cc		 int	 3
  00032	cc		 int	 3
  00033	cc		 int	 3
__ehhandler$??0CNumberLine@UI@@QAE@PAU_object@@@Z:
  00034	90		 npad	 1
  00035	90		 npad	 1
  00036	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0003a	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0003d	8b 4a f4	 mov	 ecx, DWORD PTR [edx-12]
  00040	33 c8		 xor	 ecx, eax
  00042	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00047	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0CNumberLine@UI@@QAE@PAU_object@@@Z
  0004c	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0CNumberLine@UI@@QAE@PAU_object@@@Z ENDP		; UI::CNumberLine::CNumberLine
; Function compile flags: /Ogtp
;	COMDAT ??_GCTextLine@UI@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCTextLine@UI@@UAEPAXI@Z PROC			; UI::CTextLine::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1CTextLine@UI@@UAE@XZ	; UI::CTextLine::~CTextLine
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0e		 je	 SHORT $LN4@scalar
  00011	68 0c 01 00 00	 push	 268			; 0000010cH
  00016	56		 push	 esi
  00017	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0001c	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001f	8b c6		 mov	 eax, esi
  00021	5e		 pop	 esi
  00022	5d		 pop	 ebp
  00023	c2 04 00	 ret	 4
??_GCTextLine@UI@@UAEPAXI@Z ENDP			; UI::CTextLine::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnSetText@CTextLine@UI@@MAEXPBD@Z
_TEXT	SEGMENT
_c_szText$ = 8						; size = 4
?OnSetText@CTextLine@UI@@MAEXPBD@Z PROC			; UI::CTextLine::OnSetText, COMDAT
; _this$ = ecx

; 1115 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 1116 : 		m_TextInstance.SetValue(c_szText);

  00004	6a ff		 push	 -1
  00006	ff 75 08	 push	 DWORD PTR _c_szText$[ebp]
  00009	8d 71 7c	 lea	 esi, DWORD PTR [ecx+124]
  0000c	8b ce		 mov	 ecx, esi
  0000e	e8 00 00 00 00	 call	 ?SetValue@CGraphicTextInstance@@QAEXPBDI@Z ; CGraphicTextInstance::SetValue

; 1117 : 		m_TextInstance.Update();

  00013	8b ce		 mov	 ecx, esi
  00015	e8 00 00 00 00	 call	 ?Update@CGraphicTextInstance@@QAEXXZ ; CGraphicTextInstance::Update
  0001a	5e		 pop	 esi

; 1118 : 	}

  0001b	5d		 pop	 ebp
  0001c	c2 04 00	 ret	 4
?OnSetText@CTextLine@UI@@MAEXPBD@Z ENDP			; UI::CTextLine::OnSetText
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnChangePosition@CTextLine@UI@@MAEXXZ
_TEXT	SEGMENT
?OnChangePosition@CTextLine@UI@@MAEXXZ PROC		; UI::CTextLine::OnChangePosition, COMDAT
; _this$ = ecx

; 1132 : 	{

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 1133 : 		// FOR_ARABIC_ALIGN
; 1134 : 		//if (m_TextInstance.GetHorizontalAlign() == CGraphicTextInstance::HORIZONTAL_ALIGN_ARABIC)
; 1135 : 		if( GetDefaultCodePage() == CP_ARABIC )

  00003	e8 00 00 00 00	 call	 ?GetDefaultCodePage@@YAKXZ ; GetDefaultCodePage
  00008	8b 4e 38	 mov	 ecx, DWORD PTR [esi+56]
  0000b	3d e8 04 00 00	 cmp	 eax, 1256		; 000004e8H
  00010	75 05		 jne	 SHORT $LN2@OnChangePo

; 1136 : 		{
; 1137 : 			m_TextInstance.SetPosition(m_rect.right, m_rect.top);

  00012	8b 46 3c	 mov	 eax, DWORD PTR [esi+60]

; 1138 : 		}

  00015	eb 03		 jmp	 SHORT $LN3@OnChangePo
$LN2@OnChangePo:

; 1139 : 		else
; 1140 : 		{
; 1141 : 			m_TextInstance.SetPosition(m_rect.left, m_rect.top);

  00017	8b 46 34	 mov	 eax, DWORD PTR [esi+52]
$LN3@OnChangePo:
  0001a	66 0f 6e c1	 movd	 xmm0, ecx

; 1142 : 		}
; 1143 : 	}

  0001e	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00021	0f 5b c0	 cvtdq2ps xmm0, xmm0
  00024	8d 4e 7c	 lea	 ecx, DWORD PTR [esi+124]
  00027	c7 44 24 08 00
	00 00 00	 mov	 DWORD PTR [esp+8], 0
  0002f	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  00035	66 0f 6e c0	 movd	 xmm0, eax
  00039	0f 5b c0	 cvtdq2ps xmm0, xmm0
  0003c	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00041	e8 00 00 00 00	 call	 ?SetPosition@CGraphicTextInstance@@QAEXMMM@Z ; CGraphicTextInstance::SetPosition
  00046	5e		 pop	 esi
  00047	c3		 ret	 0
?OnChangePosition@CTextLine@UI@@MAEXXZ ENDP		; UI::CTextLine::OnChangePosition
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnRender@CTextLine@UI@@MAEXXZ
_TEXT	SEGMENT
?OnRender@CTextLine@UI@@MAEXXZ PROC			; UI::CTextLine::OnRender, COMDAT
; _this$ = ecx

; 1127 : 		if (IsShow())

  00000	80 79 55 00	 cmp	 BYTE PTR [ecx+85], 0
  00004	74 0a		 je	 SHORT $LN2@OnRender

; 1128 : 			m_TextInstance.Render();

  00006	6a 00		 push	 0
  00008	83 c1 7c	 add	 ecx, 124		; 0000007cH
  0000b	e8 00 00 00 00	 call	 ?Render@CGraphicTextInstance@@QAEXPAUtagRECT@@@Z ; CGraphicTextInstance::Render
$LN2@OnRender:

; 1129 : 	}

  00010	c3		 ret	 0
?OnRender@CTextLine@UI@@MAEXXZ ENDP			; UI::CTextLine::OnRender
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnUpdate@CTextLine@UI@@MAEXXZ
_TEXT	SEGMENT
?OnUpdate@CTextLine@UI@@MAEXXZ PROC			; UI::CTextLine::OnUpdate, COMDAT
; _this$ = ecx

; 1122 : 		if (IsShow())

  00000	80 79 55 00	 cmp	 BYTE PTR [ecx+85], 0
  00004	74 08		 je	 SHORT $LN2@OnUpdate

; 1123 : 			m_TextInstance.Update();

  00006	83 c1 7c	 add	 ecx, 124		; 0000007cH
  00009	e9 00 00 00 00	 jmp	 ?Update@CGraphicTextInstance@@QAEXXZ ; CGraphicTextInstance::Update
$LN2@OnUpdate:

; 1124 : 	}

  0000e	c3		 ret	 0
?OnUpdate@CTextLine@UI@@MAEXXZ ENDP			; UI::CTextLine::OnUpdate
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?GetLineHeight@CTextLine@UI@@QAEHXZ
_TEXT	SEGMENT
?GetLineHeight@CTextLine@UI@@QAEHXZ PROC		; UI::CTextLine::GetLineHeight, COMDAT
; _this$ = ecx

; 1092 : 		return m_TextInstance.GetLineHeight(); 

  00000	83 c1 7c	 add	 ecx, 124		; 0000007cH
  00003	e8 00 00 00 00	 call	 ?GetLineHeight@CGraphicTextInstance@@QAEGXZ ; CGraphicTextInstance::GetLineHeight
  00008	0f b7 c0	 movzx	 eax, ax

; 1093 : 	}

  0000b	c3		 ret	 0
?GetLineHeight@CTextLine@UI@@QAEHXZ ENDP		; UI::CTextLine::GetLineHeight
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?SetLineHeight@CTextLine@UI@@QAEXH@Z
_TEXT	SEGMENT
_iHeight$ = 8						; size = 4
?SetLineHeight@CTextLine@UI@@QAEXH@Z PROC		; UI::CTextLine::SetLineHeight, COMDAT
; _this$ = ecx

; 1087 : 	{ 

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1088 : 		m_TextInstance.SetLineHeight(iHeight); 

  00003	83 c1 7c	 add	 ecx, 124		; 0000007cH

; 1089 : 	}

  00006	5d		 pop	 ebp

; 1088 : 		m_TextInstance.SetLineHeight(iHeight); 

  00007	e9 00 00 00 00	 jmp	 ?SetLineHeight@CGraphicTextInstance@@QAEXH@Z ; CGraphicTextInstance::SetLineHeight
?SetLineHeight@CTextLine@UI@@QAEXH@Z ENDP		; UI::CTextLine::SetLineHeight
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?DisableEnterToken@CTextLine@UI@@QAEXXZ
_TEXT	SEGMENT
?DisableEnterToken@CTextLine@UI@@QAEXXZ PROC		; UI::CTextLine::DisableEnterToken, COMDAT
; _this$ = ecx

; 1084 : 		m_TextInstance.DisableEnterToken(); 

  00000	83 c1 7c	 add	 ecx, 124		; 0000007cH
  00003	e9 00 00 00 00	 jmp	 ?DisableEnterToken@CGraphicTextInstance@@QAEXXZ ; CGraphicTextInstance::DisableEnterToken
?DisableEnterToken@CTextLine@UI@@QAEXXZ ENDP		; UI::CTextLine::DisableEnterToken
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?GetTextLineCount@CTextLine@UI@@QAEHXZ
_TEXT	SEGMENT
?GetTextLineCount@CTextLine@UI@@QAEHXZ PROC		; UI::CTextLine::GetTextLineCount, COMDAT
; _this$ = ecx

; 1080 : 		return m_TextInstance.GetTextLineCount(); 

  00000	83 c1 7c	 add	 ecx, 124		; 0000007cH
  00003	e8 00 00 00 00	 call	 ?GetTextLineCount@CGraphicTextInstance@@QAEGXZ ; CGraphicTextInstance::GetTextLineCount
  00008	0f b7 c0	 movzx	 eax, ax

; 1081 : 	}

  0000b	c3		 ret	 0
?GetTextLineCount@CTextLine@UI@@QAEHXZ ENDP		; UI::CTextLine::GetTextLineCount
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?GetTextSize@CTextLine@UI@@QAEXPAH0@Z
_TEXT	SEGMENT
_pnWidth$ = 8						; size = 4
_pnHeight$ = 12						; size = 4
?GetTextSize@CTextLine@UI@@QAEXPAH0@Z PROC		; UI::CTextLine::GetTextSize, COMDAT
; _this$ = ecx

; 1074 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1075 : 		m_TextInstance.GetTextSize(pnWidth, pnHeight);

  00003	83 c1 7c	 add	 ecx, 124		; 0000007cH

; 1076 : 	}

  00006	5d		 pop	 ebp

; 1075 : 		m_TextInstance.GetTextSize(pnWidth, pnHeight);

  00007	e9 00 00 00 00	 jmp	 ?GetTextSize@CGraphicTextInstance@@QAEXPAH0@Z ; CGraphicTextInstance::GetTextSize
?GetTextSize@CTextLine@UI@@QAEXPAH0@Z ENDP		; UI::CTextLine::GetTextSize
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?GetText@CTextLine@UI@@QAEPBDXZ
_TEXT	SEGMENT
?GetText@CTextLine@UI@@QAEPBDXZ PROC			; UI::CTextLine::GetText, COMDAT
; _this$ = ecx

; 1097 : 		return m_TextInstance.GetValueStringReference().c_str();

  00000	83 c1 7c	 add	 ecx, 124		; 0000007cH
  00003	e8 00 00 00 00	 call	 ?GetValueStringReference@CGraphicTextInstance@@QAEABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ ; CGraphicTextInstance::GetValueStringReference
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xstring

; 2286 :         return _BUF_SIZE <= _Myres;

  00008	83 78 14 10	 cmp	 DWORD PTR [eax+20], 16	; 00000010H

; 2273 :         if (_Large_string_engaged()) {

  0000c	72 02		 jb	 SHORT $LN6@GetText
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp

; 1097 : 		return m_TextInstance.GetValueStringReference().c_str();

  0000e	8b 00		 mov	 eax, DWORD PTR [eax]
$LN6@GetText:

; 1098 : 	}

  00010	c3		 ret	 0
?GetText@CTextLine@UI@@QAEPBDXZ ENDP			; UI::CTextLine::GetText
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?SetText@CTextLine@UI@@QAEXPBD@Z
_TEXT	SEGMENT
_c_szText$ = 8						; size = 4
?SetText@CTextLine@UI@@QAEXPBD@Z PROC			; UI::CTextLine::SetText, COMDAT
; _this$ = ecx

; 1070 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1071 : 		OnSetText(c_szText);

  00003	8b 01		 mov	 eax, DWORD PTR [ecx]

; 1072 : 	}

  00005	5d		 pop	 ebp

; 1071 : 		OnSetText(c_szText);

  00006	ff a0 a0 00 00
	00		 jmp	 DWORD PTR [eax+160]
?SetText@CTextLine@UI@@QAEXPBD@Z ENDP			; UI::CTextLine::SetText
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?GetCursorPosition@CTextLine@UI@@QAEHXZ
_TEXT	SEGMENT
_ly$ = -8						; size = 4
_lx$ = -4						; size = 4
?GetCursorPosition@CTextLine@UI@@QAEHXZ PROC		; UI::CTextLine::GetCursorPosition, COMDAT
; _this$ = ecx

; 1108 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	56		 push	 esi

; 1109 : 		long lx, ly;
; 1110 : 		CWindow::GetMouseLocalPosition(lx, ly);

  00007	8d 45 f8	 lea	 eax, DWORD PTR _ly$[ebp]
  0000a	8b f1		 mov	 esi, ecx
  0000c	50		 push	 eax
  0000d	8d 45 fc	 lea	 eax, DWORD PTR _lx$[ebp]
  00010	50		 push	 eax
  00011	e8 00 00 00 00	 call	 ?GetMouseLocalPosition@CWindow@UI@@QAEXAAJ0@Z ; UI::CWindow::GetMouseLocalPosition

; 1111 : 		return m_TextInstance.PixelPositionToCharacterPosition(lx);

  00016	ff 75 fc	 push	 DWORD PTR _lx$[ebp]
  00019	8d 4e 7c	 lea	 ecx, DWORD PTR [esi+124]
  0001c	e8 00 00 00 00	 call	 ?PixelPositionToCharacterPosition@CGraphicTextInstance@@QAEHH@Z ; CGraphicTextInstance::PixelPositionToCharacterPosition
  00021	5e		 pop	 esi

; 1112 : 	}

  00022	8b e5		 mov	 esp, ebp
  00024	5d		 pop	 ebp
  00025	c3		 ret	 0
?GetCursorPosition@CTextLine@UI@@QAEHXZ ENDP		; UI::CTextLine::GetCursorPosition
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?HideCursor@CTextLine@UI@@QAEXXZ
_TEXT	SEGMENT
?HideCursor@CTextLine@UI@@QAEXXZ PROC			; UI::CTextLine::HideCursor, COMDAT
; _this$ = ecx

; 1105 : 		m_TextInstance.HideCursor();

  00000	83 c1 7c	 add	 ecx, 124		; 0000007cH
  00003	e9 00 00 00 00	 jmp	 ?HideCursor@CGraphicTextInstance@@QAEXXZ ; CGraphicTextInstance::HideCursor
?HideCursor@CTextLine@UI@@QAEXXZ ENDP			; UI::CTextLine::HideCursor
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?ShowCursor@CTextLine@UI@@QAEXXZ
_TEXT	SEGMENT
?ShowCursor@CTextLine@UI@@QAEXXZ PROC			; UI::CTextLine::ShowCursor, COMDAT
; _this$ = ecx

; 1101 : 		m_TextInstance.ShowCursor();

  00000	83 c1 7c	 add	 ecx, 124		; 0000007cH
  00003	e9 00 00 00 00	 jmp	 ?ShowCursor@CGraphicTextInstance@@QAEXXZ ; CGraphicTextInstance::ShowCursor
?ShowCursor@CTextLine@UI@@QAEXXZ ENDP			; UI::CTextLine::ShowCursor
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?SetLimitWidth@CTextLine@UI@@QAEXM@Z
_TEXT	SEGMENT
_fWidth$ = 8						; size = 4
?SetLimitWidth@CTextLine@UI@@QAEXM@Z PROC		; UI::CTextLine::SetLimitWidth, COMDAT
; _this$ = ecx

; 1066 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1067 : 		m_TextInstance.SetLimitWidth(fWidth);

  00003	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _fWidth$[ebp]
  00008	51		 push	 ecx
  00009	83 c1 7c	 add	 ecx, 124		; 0000007cH
  0000c	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00011	e8 00 00 00 00	 call	 ?SetLimitWidth@CGraphicTextInstance@@QAEXM@Z ; CGraphicTextInstance::SetLimitWidth

; 1068 : 	}

  00016	5d		 pop	 ebp
  00017	c2 04 00	 ret	 4
?SetLimitWidth@CTextLine@UI@@QAEXM@Z ENDP		; UI::CTextLine::SetLimitWidth
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?SetFontColor@CTextLine@UI@@QAEXK@Z
_TEXT	SEGMENT
_dwColor$ = 8						; size = 4
?SetFontColor@CTextLine@UI@@QAEXK@Z PROC		; UI::CTextLine::SetFontColor, COMDAT
; _this$ = ecx

; 1062 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1063 : 		m_TextInstance.SetColor(dwColor);

  00003	83 c1 7c	 add	 ecx, 124		; 0000007cH

; 1064 : 	}

  00006	5d		 pop	 ebp

; 1063 : 		m_TextInstance.SetColor(dwColor);

  00007	e9 00 00 00 00	 jmp	 ?SetColor@CGraphicTextInstance@@QAEXK@Z ; CGraphicTextInstance::SetColor
?SetFontColor@CTextLine@UI@@QAEXK@Z ENDP		; UI::CTextLine::SetFontColor
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xstring
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xstring
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?SetFontName@CTextLine@UI@@QAEXPBD@Z
_TEXT	SEGMENT
_stFontName$ = -40					; size = 24
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_c_szFontName$ = 8					; size = 4
?SetFontName@CTextLine@UI@@QAEXPBD@Z PROC		; UI::CTextLine::SetFontName, COMDAT
; _this$ = ecx

; 1052 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?SetFontName@CTextLine@UI@@QAEXPBD@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	89 45 f0	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  0001e	56		 push	 esi
  0001f	57		 push	 edi
  00020	50		 push	 eax
  00021	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00024	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002a	8b f1		 mov	 esi, ecx
  0002c	8b 55 08	 mov	 edx, DWORD PTR _c_szFontName$[ebp]
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xstring

; 404  :         return _CSTD strlen(reinterpret_cast<const char*>(_First));

  0002f	8b c2		 mov	 eax, edx

; 2313 :         _CONSTEXPR20_CONTAINER _Bxty() noexcept : _Ptr() {} // user-provided, for fancy pointers

  00031	c7 45 d8 00 00
	00 00		 mov	 DWORD PTR _stFontName$[ebp], 0

; 4562 :         _My_data._Mysize = 0;

  00038	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR _stFontName$[ebp+16], 0

; 4563 : 
; 4564 : #ifdef __cpp_lib_constexpr_string
; 4565 :         if (_STD is_constant_evaluated()) {
; 4566 :             _My_data._Myres        = _BUF_SIZE; // SSO disabled in constexpr context
; 4567 :             auto& _Al              = _Getal();
; 4568 :             const pointer _New_ptr = _Al.allocate(_BUF_SIZE + 1); // throws
; 4569 :             _My_data._Bx._Ptr      = _New_ptr;
; 4570 : 
; 4571 :             _Elem* const _Raw_new = _Unfancy(_New_ptr);
; 4572 :             _Traits::assign(_Raw_new, _BUF_SIZE + 1, _Elem());
; 4573 :         } else
; 4574 : #endif // __cpp_lib_constexpr_string
; 4575 :         {
; 4576 :             _My_data._Myres = _BUF_SIZE - 1;

  0003f	c7 45 ec 0f 00
	00 00		 mov	 DWORD PTR _stFontName$[ebp+20], 15 ; 0000000fH

; 4577 :             // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4578 :             _Traits::assign(_My_data._Bx._Buf[0], _Elem());

  00046	c6 45 d8 00	 mov	 BYTE PTR _stFontName$[ebp], 0

; 404  :         return _CSTD strlen(reinterpret_cast<const char*>(_First));

  0004a	8d 78 01	 lea	 edi, DWORD PTR [eax+1]
  0004d	0f 1f 00	 npad	 3
$LL61@SetFontNam:
  00050	8a 08		 mov	 cl, BYTE PTR [eax]
  00052	40		 inc	 eax
  00053	84 c9		 test	 cl, cl
  00055	75 f9		 jne	 SHORT $LL61@SetFontNam
  00057	2b c7		 sub	 eax, edi

; 3230 :         return assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

  00059	8d 4d d8	 lea	 ecx, DWORD PTR _stFontName$[ebp]
  0005c	50		 push	 eax
  0005d	52		 push	 edx
  0005e	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign

; 3141 :         return append(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

  00063	6a 04		 push	 4
  00065	68 00 00 00 00	 push	 OFFSET ??_C@_04FAHLGLIA@?4fnt@
  0006a	8d 4d d8	 lea	 ecx, DWORD PTR _stFontName$[ebp]
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp

; 1053 : 		std::string stFontName = c_szFontName;

  0006d	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xstring

; 3141 :         return append(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

  00074	e8 00 00 00 00	 call	 ?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append

; 2286 :         return _BUF_SIZE <= _Myres;

  00079	83 7d ec 10	 cmp	 DWORD PTR _stFontName$[ebp+20], 16 ; 00000010H

; 2272 :         const value_type* _Result = _Bx._Buf;

  0007d	8d 45 d8	 lea	 eax, DWORD PTR _stFontName$[ebp]
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp

; 1057 : 		CResource* pkRes = rkResMgr.GetTypeResourcePointer(stFontName.c_str());

  00080	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCResourceManager@@@@0PAVCResourceManager@@A ; CSingleton<CResourceManager>::ms_singleton
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xstring

; 2273 :         if (_Large_string_engaged()) {

  00086	0f 43 45 d8	 cmovae	 eax, DWORD PTR _stFontName$[ebp]
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp

; 1057 : 		CResource* pkRes = rkResMgr.GetTypeResourcePointer(stFontName.c_str());

  0008a	6a ff		 push	 -1
  0008c	50		 push	 eax
  0008d	e8 00 00 00 00	 call	 ?GetTypeResourcePointer@CResourceManager@@QAEPAVCResource@@PBDH@Z ; CResourceManager::GetTypeResourcePointer

; 1058 : 		CGraphicText* pkResFont=static_cast<CGraphicText*>(pkRes);
; 1059 : 		m_TextInstance.SetTextPointer(pkResFont);

  00092	50		 push	 eax
  00093	8d 4e 7c	 lea	 ecx, DWORD PTR [esi+124]
  00096	e8 00 00 00 00	 call	 ?SetTextPointer@CGraphicTextInstance@@QAEXPAVCGraphicText@@@Z ; CGraphicTextInstance::SetTextPointer
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xstring

; 2286 :         return _BUF_SIZE <= _Myres;

  0009b	8b 55 ec	 mov	 edx, DWORD PTR _stFontName$[ebp+20]
  0009e	83 fa 10	 cmp	 edx, 16			; 00000010H

; 4584 :         if (_Mypair._Myval2._Large_string_engaged()) {

  000a1	72 28		 jb	 SHORT $LN45@SetFontNam
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory

; 797  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  000a3	8b 4d d8	 mov	 ecx, DWORD PTR _stFontName$[ebp]
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xstring

; 4588 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  000a6	42		 inc	 edx
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory

; 797  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  000a7	8b c1		 mov	 eax, ecx

; 251  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  000a9	81 fa 00 10 00
	00		 cmp	 edx, 4096		; 00001000H
  000af	72 10		 jb	 SHORT $LN55@SetFontNam

; 150  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  000b1	8b 49 fc	 mov	 ecx, DWORD PTR [ecx-4]
  000b4	83 c2 23	 add	 edx, 35			; 00000023H
  000b7	2b c1		 sub	 eax, ecx

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  000b9	83 c0 fc	 add	 eax, -4			; fffffffcH
  000bc	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  000bf	77 27		 ja	 SHORT $LN65@SetFontNam
$LN55@SetFontNam:

; 255  :         ::operator delete(_Ptr, _Bytes);

  000c1	52		 push	 edx
  000c2	51		 push	 ecx
  000c3	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  000c8	83 c4 08	 add	 esp, 8
$LN45@SetFontNam:
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp

; 1060 : 	}

  000cb	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000ce	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000d5	59		 pop	 ecx
  000d6	5f		 pop	 edi
  000d7	5e		 pop	 esi
  000d8	8b 4d f0	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000db	33 cd		 xor	 ecx, ebp
  000dd	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000e2	8b e5		 mov	 esp, ebp
  000e4	5d		 pop	 ebp
  000e5	c2 04 00	 ret	 4
$LN65@SetFontNam:
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  000e8	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN63@SetFontNam:
  000ed	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?SetFontName@CTextLine@UI@@QAEXPBD@Z$0:
  00000	8d 4d d8	 lea	 ecx, DWORD PTR _stFontName$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00008	cc		 int	 3
  00009	cc		 int	 3
  0000a	cc		 int	 3
  0000b	cc		 int	 3
  0000c	cc		 int	 3
__ehhandler$?SetFontName@CTextLine@UI@@QAEXPBD@Z:
  0000d	90		 npad	 1
  0000e	90		 npad	 1
  0000f	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00013	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00016	8b 4a d8	 mov	 ecx, DWORD PTR [edx-40]
  00019	33 c8		 xor	 ecx, eax
  0001b	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00020	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  00023	33 c8		 xor	 ecx, eax
  00025	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0002a	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?SetFontName@CTextLine@UI@@QAEXPBD@Z
  0002f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?SetFontName@CTextLine@UI@@QAEXPBD@Z ENDP		; UI::CTextLine::SetFontName
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?SetMultiLine@CTextLine@UI@@QAEXH@Z
_TEXT	SEGMENT
_bFlag$ = 8						; size = 4
?SetMultiLine@CTextLine@UI@@QAEXH@Z PROC		; UI::CTextLine::SetMultiLine, COMDAT
; _this$ = ecx

; 1048 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1049 : 		m_TextInstance.SetMultiLine(bFlag ? true : false);

  00003	83 7d 08 00	 cmp	 DWORD PTR _bFlag$[ebp], 0
  00007	0f 95 c0	 setne	 al
  0000a	0f b6 c0	 movzx	 eax, al
  0000d	89 45 08	 mov	 DWORD PTR _bFlag$[ebp], eax
  00010	83 c1 7c	 add	 ecx, 124		; 0000007cH

; 1050 : 	}

  00013	5d		 pop	 ebp

; 1049 : 		m_TextInstance.SetMultiLine(bFlag ? true : false);

  00014	e9 00 00 00 00	 jmp	 ?SetMultiLine@CGraphicTextInstance@@QAEX_N@Z ; CGraphicTextInstance::SetMultiLine
?SetMultiLine@CTextLine@UI@@QAEXH@Z ENDP		; UI::CTextLine::SetMultiLine
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?SetFeather@CTextLine@UI@@QAEXH@Z
_TEXT	SEGMENT
_bFlag$ = 8						; size = 4
?SetFeather@CTextLine@UI@@QAEXH@Z PROC			; UI::CTextLine::SetFeather, COMDAT
; _this$ = ecx

; 1044 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1045 : 		m_TextInstance.SetFeather(bFlag ? true : false);

  00003	83 7d 08 00	 cmp	 DWORD PTR _bFlag$[ebp], 0
  00007	0f 95 c0	 setne	 al
  0000a	0f b6 c0	 movzx	 eax, al
  0000d	89 45 08	 mov	 DWORD PTR _bFlag$[ebp], eax
  00010	83 c1 7c	 add	 ecx, 124		; 0000007cH

; 1046 : 	}

  00013	5d		 pop	 ebp

; 1045 : 		m_TextInstance.SetFeather(bFlag ? true : false);

  00014	e9 00 00 00 00	 jmp	 ?SetFeather@CGraphicTextInstance@@QAEX_N@Z ; CGraphicTextInstance::SetFeather
?SetFeather@CTextLine@UI@@QAEXH@Z ENDP			; UI::CTextLine::SetFeather
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?SetOutline@CTextLine@UI@@QAEXH@Z
_TEXT	SEGMENT
_bFlag$ = 8						; size = 4
?SetOutline@CTextLine@UI@@QAEXH@Z PROC			; UI::CTextLine::SetOutline, COMDAT
; _this$ = ecx

; 1040 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1041 : 		m_TextInstance.SetOutline(bFlag ? true : false);

  00003	83 7d 08 00	 cmp	 DWORD PTR _bFlag$[ebp], 0
  00007	0f 95 c0	 setne	 al
  0000a	0f b6 c0	 movzx	 eax, al
  0000d	89 45 08	 mov	 DWORD PTR _bFlag$[ebp], eax
  00010	83 c1 7c	 add	 ecx, 124		; 0000007cH

; 1042 : 	}

  00013	5d		 pop	 ebp

; 1041 : 		m_TextInstance.SetOutline(bFlag ? true : false);

  00014	e9 00 00 00 00	 jmp	 ?SetOutline@CGraphicTextInstance@@QAEX_N@Z ; CGraphicTextInstance::SetOutline
?SetOutline@CTextLine@UI@@QAEXH@Z ENDP			; UI::CTextLine::SetOutline
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?SetSecret@CTextLine@UI@@QAEXH@Z
_TEXT	SEGMENT
_bFlag$ = 8						; size = 4
?SetSecret@CTextLine@UI@@QAEXH@Z PROC			; UI::CTextLine::SetSecret, COMDAT
; _this$ = ecx

; 1036 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1037 : 		m_TextInstance.SetSecret(bFlag ? true : false);

  00003	83 7d 08 00	 cmp	 DWORD PTR _bFlag$[ebp], 0
  00007	0f 95 c0	 setne	 al
  0000a	0f b6 c0	 movzx	 eax, al
  0000d	89 45 08	 mov	 DWORD PTR _bFlag$[ebp], eax
  00010	83 c1 7c	 add	 ecx, 124		; 0000007cH

; 1038 : 	}

  00013	5d		 pop	 ebp

; 1037 : 		m_TextInstance.SetSecret(bFlag ? true : false);

  00014	e9 00 00 00 00	 jmp	 ?SetSecret@CGraphicTextInstance@@QAEX_N@Z ; CGraphicTextInstance::SetSecret
?SetSecret@CTextLine@UI@@QAEXH@Z ENDP			; UI::CTextLine::SetSecret
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?SetVerticalAlign@CTextLine@UI@@QAEXH@Z
_TEXT	SEGMENT
_iType$ = 8						; size = 4
?SetVerticalAlign@CTextLine@UI@@QAEXH@Z PROC		; UI::CTextLine::SetVerticalAlign, COMDAT
; _this$ = ecx

; 1032 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1033 : 		m_TextInstance.SetVerticalAlign(iType);

  00003	83 c1 7c	 add	 ecx, 124		; 0000007cH

; 1034 : 	}

  00006	5d		 pop	 ebp

; 1033 : 		m_TextInstance.SetVerticalAlign(iType);

  00007	e9 00 00 00 00	 jmp	 ?SetVerticalAlign@CGraphicTextInstance@@QAEXH@Z ; CGraphicTextInstance::SetVerticalAlign
?SetVerticalAlign@CTextLine@UI@@QAEXH@Z ENDP		; UI::CTextLine::SetVerticalAlign
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?SetHorizontalAlign@CTextLine@UI@@QAEXH@Z
_TEXT	SEGMENT
_iType$ = 8						; size = 4
?SetHorizontalAlign@CTextLine@UI@@QAEXH@Z PROC		; UI::CTextLine::SetHorizontalAlign, COMDAT
; _this$ = ecx

; 1028 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1029 : 		m_TextInstance.SetHorizonalAlign(iType);

  00003	83 c1 7c	 add	 ecx, 124		; 0000007cH

; 1030 : 	}

  00006	5d		 pop	 ebp

; 1029 : 		m_TextInstance.SetHorizonalAlign(iType);

  00007	e9 00 00 00 00	 jmp	 ?SetHorizonalAlign@CGraphicTextInstance@@QAEXH@Z ; CGraphicTextInstance::SetHorizonalAlign
?SetHorizontalAlign@CTextLine@UI@@QAEXH@Z ENDP		; UI::CTextLine::SetHorizontalAlign
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?SetMax@CTextLine@UI@@QAEXH@Z
_TEXT	SEGMENT
_iMax$ = 8						; size = 4
?SetMax@CTextLine@UI@@QAEXH@Z PROC			; UI::CTextLine::SetMax, COMDAT
; _this$ = ecx

; 1024 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1025 : 		m_TextInstance.SetMax(iMax);

  00003	83 c1 7c	 add	 ecx, 124		; 0000007cH

; 1026 : 	}

  00006	5d		 pop	 ebp

; 1025 : 		m_TextInstance.SetMax(iMax);

  00007	e9 00 00 00 00	 jmp	 ?SetMax@CGraphicTextInstance@@QAEXH@Z ; CGraphicTextInstance::SetMax
?SetMax@CTextLine@UI@@QAEXH@Z ENDP			; UI::CTextLine::SetMax
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ??1CTextLine@UI@@UAE@XZ
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
??1CTextLine@UI@@UAE@XZ PROC				; UI::CTextLine::~CTextLine, COMDAT
; _this$ = ecx

; 1019 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1CTextLine@UI@@UAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	56		 push	 esi
  00012	57		 push	 edi
  00013	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00018	33 c5		 xor	 eax, ebp
  0001a	50		 push	 eax
  0001b	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001e	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00024	8b f9		 mov	 edi, ecx

; 1020 : 		m_TextInstance.Destroy();

  00026	8d 4f 7c	 lea	 ecx, DWORD PTR [edi+124]
  00029	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], OFFSET ??_7CTextLine@UI@@6B@
  0002f	e8 00 00 00 00	 call	 ?Destroy@CGraphicTextInstance@@QAEXXZ ; CGraphicTextInstance::Destroy

; 1021 : 	}

  00034	8d 4f 7c	 lea	 ecx, DWORD PTR [edi+124]
  00037	e8 00 00 00 00	 call	 ??1CGraphicTextInstance@@UAE@XZ ; CGraphicTextInstance::~CGraphicTextInstance
  0003c	8b cf		 mov	 ecx, edi
  0003e	e8 00 00 00 00	 call	 ??1CWindow@UI@@UAE@XZ	; UI::CWindow::~CWindow
  00043	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00046	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0004d	59		 pop	 ecx
  0004e	5f		 pop	 edi
  0004f	5e		 pop	 esi
  00050	8b e5		 mov	 esp, ebp
  00052	5d		 pop	 ebp
  00053	c3		 ret	 0
  00054	cc		 int	 3
  00055	cc		 int	 3
  00056	cc		 int	 3
  00057	cc		 int	 3
  00058	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1CTextLine@UI@@UAE@XZ:
  00000	90		 npad	 1
  00001	90		 npad	 1
  00002	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00006	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00009	8b 4a f4	 mov	 ecx, DWORD PTR [edx-12]
  0000c	33 c8		 xor	 ecx, eax
  0000e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00013	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1CTextLine@UI@@UAE@XZ
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1CTextLine@UI@@UAE@XZ ENDP				; UI::CTextLine::~CTextLine
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ??0CTextLine@UI@@QAE@PAU_object@@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_ppyObject$ = 8						; size = 4
??0CTextLine@UI@@QAE@PAU_object@@@Z PROC		; UI::CTextLine::CTextLine, COMDAT
; _this$ = ecx

; 1013 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0CTextLine@UI@@QAE@PAU_object@@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	56		 push	 esi
  00013	57		 push	 edi
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	50		 push	 eax
  0001c	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001f	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00025	8b f9		 mov	 edi, ecx
  00027	89 7d f0	 mov	 DWORD PTR _this$[ebp], edi

; 1012 : 	CTextLine::CTextLine(PyObject * ppyObject) : CWindow(ppyObject)

  0002a	ff 75 08	 push	 DWORD PTR _ppyObject$[ebp]
  0002d	e8 00 00 00 00	 call	 ??0CWindow@UI@@QAE@PAU_object@@@Z ; UI::CWindow::CWindow

; 1013 : 	{

  00032	8d 4f 7c	 lea	 ecx, DWORD PTR [edi+124]
  00035	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0003c	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], OFFSET ??_7CTextLine@UI@@6B@
  00042	e8 00 00 00 00	 call	 ??0CGraphicTextInstance@@QAE@XZ ; CGraphicTextInstance::CGraphicTextInstance

; 1014 : 		m_TextInstance.SetColor(0.78f, 0.78f, 0.78f);

  00047	83 ec 10	 sub	 esp, 16			; 00000010H
  0004a	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  0004e	8d 4f 7c	 lea	 ecx, DWORD PTR [edi+124]
  00051	c7 44 24 0c 00
	00 80 3f	 mov	 DWORD PTR [esp+12], 1065353216 ; 3f800000H
  00059	c7 44 24 08 14
	ae 47 3f	 mov	 DWORD PTR [esp+8], 1061662228 ; 3f47ae14H
  00061	c7 44 24 04 14
	ae 47 3f	 mov	 DWORD PTR [esp+4], 1061662228 ; 3f47ae14H
  00069	c7 04 24 14 ae
	47 3f		 mov	 DWORD PTR [esp], 1061662228 ; 3f47ae14H
  00070	e8 00 00 00 00	 call	 ?SetColor@CGraphicTextInstance@@QAEXMMMM@Z ; CGraphicTextInstance::SetColor

; 1015 : 		m_TextInstance.SetHorizonalAlign(CGraphicTextInstance::HORIZONTAL_ALIGN_LEFT);

  00075	6a 01		 push	 1
  00077	8d 4f 7c	 lea	 ecx, DWORD PTR [edi+124]
  0007a	e8 00 00 00 00	 call	 ?SetHorizonalAlign@CGraphicTextInstance@@QAEXH@Z ; CGraphicTextInstance::SetHorizonalAlign

; 1016 : 		m_TextInstance.SetVerticalAlign(CGraphicTextInstance::VERTICAL_ALIGN_TOP);

  0007f	6a 10		 push	 16			; 00000010H
  00081	8d 4f 7c	 lea	 ecx, DWORD PTR [edi+124]
  00084	e8 00 00 00 00	 call	 ?SetVerticalAlign@CGraphicTextInstance@@QAEXH@Z ; CGraphicTextInstance::SetVerticalAlign

; 1017 : 	}

  00089	8b c7		 mov	 eax, edi
  0008b	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0008e	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00095	59		 pop	 ecx
  00096	5f		 pop	 edi
  00097	5e		 pop	 esi
  00098	8b e5		 mov	 esp, ebp
  0009a	5d		 pop	 ebp
  0009b	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0CTextLine@UI@@QAE@PAU_object@@@Z$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1CWindow@UI@@UAE@XZ	; UI::CWindow::~CWindow
__unwindfunclet$??0CTextLine@UI@@QAE@PAU_object@@@Z$1:
  00008	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0000b	83 c1 7c	 add	 ecx, 124		; 0000007cH
  0000e	e9 00 00 00 00	 jmp	 ??1CGraphicTextInstance@@UAE@XZ ; CGraphicTextInstance::~CGraphicTextInstance
  00013	cc		 int	 3
  00014	cc		 int	 3
  00015	cc		 int	 3
  00016	cc		 int	 3
  00017	cc		 int	 3
__ehhandler$??0CTextLine@UI@@QAE@PAU_object@@@Z:
  00018	90		 npad	 1
  00019	90		 npad	 1
  0001a	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0001e	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00021	8b 4a f0	 mov	 ecx, DWORD PTR [edx-16]
  00024	33 c8		 xor	 ecx, eax
  00026	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0002b	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0CTextLine@UI@@QAE@PAU_object@@@Z
  00030	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0CTextLine@UI@@QAE@PAU_object@@@Z ENDP		; UI::CTextLine::CTextLine
; Function compile flags: /Ogtp
;	COMDAT ??_GCBar3D@UI@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCBar3D@UI@@UAEPAXI@Z PROC				; UI::CBar3D::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1CBar3D@UI@@UAE@XZ	; UI::CBar3D::~CBar3D
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0e		 je	 SHORT $LN4@scalar
  00011	68 88 00 00 00	 push	 136			; 00000088H
  00016	56		 push	 esi
  00017	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0001c	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001f	8b c6		 mov	 eax, esi
  00021	5e		 pop	 esi
  00022	5d		 pop	 ebp
  00023	c2 04 00	 ret	 4
??_GCBar3D@UI@@UAEPAXI@Z ENDP				; UI::CBar3D::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnRender@CBar3D@UI@@MAEXXZ
_TEXT	SEGMENT
?OnRender@CBar3D@UI@@MAEXXZ PROC			; UI::CBar3D::OnRender, COMDAT
; _this$ = ecx

; 993  : 	{

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	57		 push	 edi

; 994  : 		CPythonGraphic & rkpyGraphic = CPythonGraphic::Instance();

  00004	8b 3d 00 00 00
	00		 mov	 edi, DWORD PTR ?ms_singleton@?$CSingleton@VCPythonGraphic@@@@0PAVCPythonGraphic@@A ; CSingleton<CPythonGraphic>::ms_singleton

; 995  : 
; 996  : 		rkpyGraphic.SetDiffuseColor(m_dwCenterColor);

  0000a	8b cf		 mov	 ecx, edi
  0000c	ff b6 84 00 00
	00		 push	 DWORD PTR [esi+132]
  00012	e8 00 00 00 00	 call	 ?SetDiffuseColor@CScreen@@QAEXK@Z ; CScreen::SetDiffuseColor
  00017	66 0f 6e 46 40	 movd	 xmm0, DWORD PTR [esi+64]

; 997  : 		rkpyGraphic.RenderBar2d(m_rect.left, m_rect.top, m_rect.right, m_rect.bottom);

  0001c	83 ec 14	 sub	 esp, 20			; 00000014H
  0001f	0f 5b c0	 cvtdq2ps xmm0, xmm0
  00022	8b cf		 mov	 ecx, edi
  00024	c7 44 24 10 00
	00 00 00	 mov	 DWORD PTR [esp+16], 0
  0002c	f3 0f 11 44 24
	0c		 movss	 DWORD PTR [esp+12], xmm0
  00032	66 0f 6e 46 3c	 movd	 xmm0, DWORD PTR [esi+60]
  00037	0f 5b c0	 cvtdq2ps xmm0, xmm0
  0003a	f3 0f 11 44 24
	08		 movss	 DWORD PTR [esp+8], xmm0
  00040	66 0f 6e 46 38	 movd	 xmm0, DWORD PTR [esi+56]
  00045	0f 5b c0	 cvtdq2ps xmm0, xmm0
  00048	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  0004e	66 0f 6e 46 34	 movd	 xmm0, DWORD PTR [esi+52]
  00053	0f 5b c0	 cvtdq2ps xmm0, xmm0
  00056	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0005b	e8 00 00 00 00	 call	 ?RenderBar2d@CScreen@@QAEXMMMMM@Z ; CScreen::RenderBar2d

; 998  : 
; 999  : 		rkpyGraphic.SetDiffuseColor(m_dwLeftColor);

  00060	ff 76 7c	 push	 DWORD PTR [esi+124]
  00063	8b cf		 mov	 ecx, edi
  00065	e8 00 00 00 00	 call	 ?SetDiffuseColor@CScreen@@QAEXK@Z ; CScreen::SetDiffuseColor
  0006a	66 0f 6e 4e 38	 movd	 xmm1, DWORD PTR [esi+56]

; 1000 : 		rkpyGraphic.RenderLine2d(m_rect.left, m_rect.top, m_rect.right, m_rect.top);

  0006f	83 ec 14	 sub	 esp, 20			; 00000014H
  00072	66 0f 6e 46 3c	 movd	 xmm0, DWORD PTR [esi+60]
  00077	8b cf		 mov	 ecx, edi
  00079	0f 5b c9	 cvtdq2ps xmm1, xmm1
  0007c	c7 44 24 10 00
	00 00 00	 mov	 DWORD PTR [esp+16], 0
  00084	0f 5b c0	 cvtdq2ps xmm0, xmm0
  00087	f3 0f 11 4c 24
	0c		 movss	 DWORD PTR [esp+12], xmm1
  0008d	f3 0f 11 44 24
	08		 movss	 DWORD PTR [esp+8], xmm0
  00093	66 0f 6e 46 34	 movd	 xmm0, DWORD PTR [esi+52]
  00098	0f 5b c0	 cvtdq2ps xmm0, xmm0
  0009b	f3 0f 11 4c 24
	04		 movss	 DWORD PTR [esp+4], xmm1
  000a1	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000a6	e8 00 00 00 00	 call	 ?RenderLine2d@CScreen@@QAEXMMMMM@Z ; CScreen::RenderLine2d
  000ab	66 0f 6e 46 40	 movd	 xmm0, DWORD PTR [esi+64]

; 1001 : 		rkpyGraphic.RenderLine2d(m_rect.left, m_rect.top, m_rect.left, m_rect.bottom);

  000b0	83 ec 14	 sub	 esp, 20			; 00000014H
  000b3	66 0f 6e 4e 34	 movd	 xmm1, DWORD PTR [esi+52]
  000b8	8b cf		 mov	 ecx, edi
  000ba	0f 5b c0	 cvtdq2ps xmm0, xmm0
  000bd	c7 44 24 10 00
	00 00 00	 mov	 DWORD PTR [esp+16], 0
  000c5	0f 5b c9	 cvtdq2ps xmm1, xmm1
  000c8	f3 0f 11 44 24
	0c		 movss	 DWORD PTR [esp+12], xmm0
  000ce	66 0f 6e 46 38	 movd	 xmm0, DWORD PTR [esi+56]
  000d3	0f 5b c0	 cvtdq2ps xmm0, xmm0
  000d6	f3 0f 11 4c 24
	08		 movss	 DWORD PTR [esp+8], xmm1
  000dc	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  000e2	f3 0f 11 0c 24	 movss	 DWORD PTR [esp], xmm1
  000e7	e8 00 00 00 00	 call	 ?RenderLine2d@CScreen@@QAEXMMMMM@Z ; CScreen::RenderLine2d

; 1002 : 
; 1003 : 		rkpyGraphic.SetDiffuseColor(m_dwRightColor);

  000ec	ff b6 80 00 00
	00		 push	 DWORD PTR [esi+128]
  000f2	8b cf		 mov	 ecx, edi
  000f4	e8 00 00 00 00	 call	 ?SetDiffuseColor@CScreen@@QAEXK@Z ; CScreen::SetDiffuseColor
  000f9	66 0f 6e 4e 40	 movd	 xmm1, DWORD PTR [esi+64]

; 1004 : 		rkpyGraphic.RenderLine2d(m_rect.left, m_rect.bottom, m_rect.right, m_rect.bottom);

  000fe	83 ec 14	 sub	 esp, 20			; 00000014H
  00101	66 0f 6e 46 3c	 movd	 xmm0, DWORD PTR [esi+60]
  00106	8b cf		 mov	 ecx, edi
  00108	0f 5b c9	 cvtdq2ps xmm1, xmm1
  0010b	c7 44 24 10 00
	00 00 00	 mov	 DWORD PTR [esp+16], 0
  00113	0f 5b c0	 cvtdq2ps xmm0, xmm0
  00116	f3 0f 11 4c 24
	0c		 movss	 DWORD PTR [esp+12], xmm1
  0011c	f3 0f 11 44 24
	08		 movss	 DWORD PTR [esp+8], xmm0
  00122	66 0f 6e 46 34	 movd	 xmm0, DWORD PTR [esi+52]
  00127	0f 5b c0	 cvtdq2ps xmm0, xmm0
  0012a	f3 0f 11 4c 24
	04		 movss	 DWORD PTR [esp+4], xmm1
  00130	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00135	e8 00 00 00 00	 call	 ?RenderLine2d@CScreen@@QAEXMMMMM@Z ; CScreen::RenderLine2d
  0013a	66 0f 6e 46 40	 movd	 xmm0, DWORD PTR [esi+64]

; 1005 : 		rkpyGraphic.RenderLine2d(m_rect.right, m_rect.top, m_rect.right, m_rect.bottom);

  0013f	83 ec 14	 sub	 esp, 20			; 00000014H
  00142	66 0f 6e 4e 3c	 movd	 xmm1, DWORD PTR [esi+60]
  00147	0f 5b c0	 cvtdq2ps xmm0, xmm0
  0014a	c7 44 24 10 00
	00 00 00	 mov	 DWORD PTR [esp+16], 0
  00152	0f 5b c9	 cvtdq2ps xmm1, xmm1
  00155	f3 0f 11 44 24
	0c		 movss	 DWORD PTR [esp+12], xmm0
  0015b	66 0f 6e 46 38	 movd	 xmm0, DWORD PTR [esi+56]
  00160	f3 0f 11 4c 24
	08		 movss	 DWORD PTR [esp+8], xmm1
  00166	0f 5b c0	 cvtdq2ps xmm0, xmm0
  00169	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  0016f	8b cf		 mov	 ecx, edi
  00171	f3 0f 11 0c 24	 movss	 DWORD PTR [esp], xmm1
  00176	e8 00 00 00 00	 call	 ?RenderLine2d@CScreen@@QAEXMMMMM@Z ; CScreen::RenderLine2d
  0017b	5f		 pop	 edi
  0017c	5e		 pop	 esi

; 1006 : 	}

  0017d	c3		 ret	 0
?OnRender@CBar3D@UI@@MAEXXZ ENDP			; UI::CBar3D::OnRender
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?SetColor@CBar3D@UI@@QAEXKKK@Z
_TEXT	SEGMENT
_dwLeft$ = 8						; size = 4
_dwRight$ = 12						; size = 4
_dwCenter$ = 16						; size = 4
?SetColor@CBar3D@UI@@QAEXKKK@Z PROC			; UI::CBar3D::SetColor, COMDAT
; _this$ = ecx

; 986  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 987  : 		m_dwLeftColor = dwLeft;

  00003	8b 45 08	 mov	 eax, DWORD PTR _dwLeft$[ebp]
  00006	89 41 7c	 mov	 DWORD PTR [ecx+124], eax

; 988  : 		m_dwRightColor = dwRight;

  00009	8b 45 0c	 mov	 eax, DWORD PTR _dwRight$[ebp]
  0000c	89 81 80 00 00
	00		 mov	 DWORD PTR [ecx+128], eax

; 989  : 		m_dwCenterColor = dwCenter;

  00012	8b 45 10	 mov	 eax, DWORD PTR _dwCenter$[ebp]
  00015	89 81 84 00 00
	00		 mov	 DWORD PTR [ecx+132], eax

; 990  : 	}

  0001b	5d		 pop	 ebp
  0001c	c2 0c 00	 ret	 12			; 0000000cH
?SetColor@CBar3D@UI@@QAEXKKK@Z ENDP			; UI::CBar3D::SetColor
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ??1CBar3D@UI@@UAE@XZ
_TEXT	SEGMENT
??1CBar3D@UI@@UAE@XZ PROC				; UI::CBar3D::~CBar3D, COMDAT
; _this$ = ecx

; 982  : 	{

  00000	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7CBar3D@UI@@6B@

; 983  : 	}

  00006	e9 00 00 00 00	 jmp	 ??1CWindow@UI@@UAE@XZ	; UI::CWindow::~CWindow
??1CBar3D@UI@@UAE@XZ ENDP				; UI::CBar3D::~CBar3D
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ??0CBar3D@UI@@QAE@PAU_object@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_ppyObject$ = 8						; size = 4
??0CBar3D@UI@@QAE@PAU_object@@@Z PROC			; UI::CBar3D::CBar3D, COMDAT
; _this$ = ecx

; 976  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	ff 75 08	 push	 DWORD PTR _ppyObject$[ebp]
  00008	8b f1		 mov	 esi, ecx
  0000a	89 75 fc	 mov	 DWORD PTR _this$[ebp], esi
  0000d	e8 00 00 00 00	 call	 ??0CWindow@UI@@QAE@PAU_object@@@Z ; UI::CWindow::CWindow
  00012	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CBar3D@UI@@6B@

; 977  : 		m_dwLeftColor = D3DXCOLOR(0.2f, 0.2f, 0.2f, 1.0f);
; 978  : 		m_dwRightColor = D3DXCOLOR(0.7f, 0.7f, 0.7f, 1.0f);
; 979  : 		m_dwCenterColor = D3DXCOLOR(0.0f, 0.0f, 0.0f, 1.0f);
; 980  : 	}

  00018	8b c6		 mov	 eax, esi
  0001a	c7 46 7c 33 33
	33 ff		 mov	 DWORD PTR [esi+124], -13421773 ; ff333333H
  00021	c7 86 80 00 00
	00 b3 b3 b3 ff	 mov	 DWORD PTR [esi+128], -5000269 ; ffb3b3b3H
  0002b	c7 86 84 00 00
	00 00 00 00 ff	 mov	 DWORD PTR [esi+132], -16777216 ; ff000000H
  00035	5e		 pop	 esi
  00036	8b e5		 mov	 esp, ebp
  00038	5d		 pop	 ebp
  00039	c2 04 00	 ret	 4
??0CBar3D@UI@@QAE@PAU_object@@@Z ENDP			; UI::CBar3D::CBar3D
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?Type@CBar3D@UI@@SAKXZ
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
?Type@CBar3D@UI@@SAKXZ PROC				; UI::CBar3D::Type, COMDAT

; 970  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?Type@CBar3D@UI@@SAKXZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00016	33 c5		 xor	 eax, ebp
  00018	50		 push	 eax
  00019	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001c	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax

; 971  : 		static DWORD s_dwType = GetCRC32("CBar3D", strlen("CBar3D"));

  00022	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__tls_array
  00028	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR __tls_index
  0002e	8b 0c 88	 mov	 ecx, DWORD PTR [eax+ecx*4]
  00031	a1 00 00 00 00	 mov	 eax, DWORD PTR ?$TSS0@?1??Type@CBar3D@UI@@SAKXZ@4HA
  00036	3b 81 00 00 00
	00		 cmp	 eax, DWORD PTR __Init_thread_epoch[ecx]
  0003c	7f 14		 jg	 SHORT $LN9@Type
$LN5@Type:

; 972  : 		return (s_dwType);
; 973  : 	}

  0003e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?s_dwType@?1??Type@CBar3D@UI@@SAKXZ@4KA
  00043	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00046	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0004d	59		 pop	 ecx
  0004e	8b e5		 mov	 esp, ebp
  00050	5d		 pop	 ebp
  00051	c3		 ret	 0
$LN9@Type:

; 971  : 		static DWORD s_dwType = GetCRC32("CBar3D", strlen("CBar3D"));

  00052	68 00 00 00 00	 push	 OFFSET ?$TSS0@?1??Type@CBar3D@UI@@SAKXZ@4HA
  00057	e8 00 00 00 00	 call	 __Init_thread_header
  0005c	83 c4 04	 add	 esp, 4
  0005f	83 3d 00 00 00
	00 ff		 cmp	 DWORD PTR ?$TSS0@?1??Type@CBar3D@UI@@SAKXZ@4HA, -1
  00066	75 d6		 jne	 SHORT $LN5@Type
  00068	6a 06		 push	 6
  0006a	68 00 00 00 00	 push	 OFFSET ??_C@_06ICLMADCA@CBar3D@
  0006f	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00076	e8 00 00 00 00	 call	 ?GetCRC32@@YAKPBDI@Z	; GetCRC32
  0007b	68 00 00 00 00	 push	 OFFSET ?$TSS0@?1??Type@CBar3D@UI@@SAKXZ@4HA
  00080	a3 00 00 00 00	 mov	 DWORD PTR ?s_dwType@?1??Type@CBar3D@UI@@SAKXZ@4KA, eax
  00085	e8 00 00 00 00	 call	 __Init_thread_footer
  0008a	83 c4 0c	 add	 esp, 12			; 0000000cH
  0008d	eb af		 jmp	 SHORT $LN5@Type
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?Type@CBar3D@UI@@SAKXZ$0:
  00000	68 00 00 00 00	 push	 OFFSET ?$TSS0@?1??Type@CBar3D@UI@@SAKXZ@4HA
  00005	e8 00 00 00 00	 call	 __Init_thread_abort
  0000a	59		 pop	 ecx
  0000b	c3		 ret	 0
  0000c	cc		 int	 3
  0000d	cc		 int	 3
  0000e	cc		 int	 3
  0000f	cc		 int	 3
  00010	cc		 int	 3
__ehhandler$?Type@CBar3D@UI@@SAKXZ:
  00011	90		 npad	 1
  00012	90		 npad	 1
  00013	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00017	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0001a	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  0001d	33 c8		 xor	 ecx, eax
  0001f	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00024	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?Type@CBar3D@UI@@SAKXZ
  00029	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?Type@CBar3D@UI@@SAKXZ ENDP				; UI::CBar3D::Type
; Function compile flags: /Ogtp
;	COMDAT ??_GCLine@UI@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCLine@UI@@UAEPAXI@Z PROC				; UI::CLine::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1CLine@UI@@UAE@XZ	; UI::CLine::~CLine
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0e		 je	 SHORT $LN4@scalar
  00011	68 80 00 00 00	 push	 128			; 00000080H
  00016	56		 push	 esi
  00017	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0001c	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001f	8b c6		 mov	 eax, esi
  00021	5e		 pop	 esi
  00022	5d		 pop	 ebp
  00023	c2 04 00	 ret	 4
??_GCLine@UI@@UAEPAXI@Z ENDP				; UI::CLine::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnRender@CLine@UI@@MAEXXZ
_TEXT	SEGMENT
?OnRender@CLine@UI@@MAEXXZ PROC				; UI::CLine::OnRender, COMDAT
; _this$ = ecx

; 959  : 	{

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	57		 push	 edi

; 960  : 		CPythonGraphic & rkpyGraphic = CPythonGraphic::Instance();

  00004	8b 3d 00 00 00
	00		 mov	 edi, DWORD PTR ?ms_singleton@?$CSingleton@VCPythonGraphic@@@@0PAVCPythonGraphic@@A ; CSingleton<CPythonGraphic>::ms_singleton

; 961  : 		rkpyGraphic.SetDiffuseColor(m_dwColor);

  0000a	8b cf		 mov	 ecx, edi
  0000c	ff 76 7c	 push	 DWORD PTR [esi+124]
  0000f	e8 00 00 00 00	 call	 ?SetDiffuseColor@CScreen@@QAEXK@Z ; CScreen::SetDiffuseColor
  00014	66 0f 6e 46 40	 movd	 xmm0, DWORD PTR [esi+64]

; 962  : 		rkpyGraphic.RenderLine2d(m_rect.left, m_rect.top, m_rect.right, m_rect.bottom);

  00019	83 ec 14	 sub	 esp, 20			; 00000014H
  0001c	0f 5b c0	 cvtdq2ps xmm0, xmm0
  0001f	8b cf		 mov	 ecx, edi
  00021	c7 44 24 10 00
	00 00 00	 mov	 DWORD PTR [esp+16], 0
  00029	f3 0f 11 44 24
	0c		 movss	 DWORD PTR [esp+12], xmm0
  0002f	66 0f 6e 46 3c	 movd	 xmm0, DWORD PTR [esi+60]
  00034	0f 5b c0	 cvtdq2ps xmm0, xmm0
  00037	f3 0f 11 44 24
	08		 movss	 DWORD PTR [esp+8], xmm0
  0003d	66 0f 6e 46 38	 movd	 xmm0, DWORD PTR [esi+56]
  00042	0f 5b c0	 cvtdq2ps xmm0, xmm0
  00045	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  0004b	66 0f 6e 46 34	 movd	 xmm0, DWORD PTR [esi+52]
  00050	0f 5b c0	 cvtdq2ps xmm0, xmm0
  00053	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00058	e8 00 00 00 00	 call	 ?RenderLine2d@CScreen@@QAEXMMMMM@Z ; CScreen::RenderLine2d
  0005d	5f		 pop	 edi
  0005e	5e		 pop	 esi

; 963  : 	}

  0005f	c3		 ret	 0
?OnRender@CLine@UI@@MAEXXZ ENDP				; UI::CLine::OnRender
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?SetColor@CLine@UI@@UAEXK@Z
_TEXT	SEGMENT
_dwColor$ = 8						; size = 4
?SetColor@CLine@UI@@UAEXK@Z PROC			; UI::CLine::SetColor, COMDAT
; _this$ = ecx

; 954  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 955  : 		m_dwColor = dwColor;

  00003	8b 45 08	 mov	 eax, DWORD PTR _dwColor$[ebp]
  00006	89 41 7c	 mov	 DWORD PTR [ecx+124], eax

; 956  : 	}

  00009	5d		 pop	 ebp
  0000a	c2 04 00	 ret	 4
?SetColor@CLine@UI@@UAEXK@Z ENDP			; UI::CLine::SetColor
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ??1CLine@UI@@UAE@XZ
_TEXT	SEGMENT
??1CLine@UI@@UAE@XZ PROC				; UI::CLine::~CLine, COMDAT
; _this$ = ecx

; 950  : 	{

  00000	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7CLine@UI@@6B@

; 951  : 	}

  00006	e9 00 00 00 00	 jmp	 ??1CWindow@UI@@UAE@XZ	; UI::CWindow::~CWindow
??1CLine@UI@@UAE@XZ ENDP				; UI::CLine::~CLine
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ??0CLine@UI@@QAE@PAU_object@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_ppyObject$ = 8						; size = 4
??0CLine@UI@@QAE@PAU_object@@@Z PROC			; UI::CLine::CLine, COMDAT
; _this$ = ecx

; 947  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	ff 75 08	 push	 DWORD PTR _ppyObject$[ebp]
  00008	8b f1		 mov	 esi, ecx
  0000a	89 75 fc	 mov	 DWORD PTR _this$[ebp], esi
  0000d	e8 00 00 00 00	 call	 ??0CWindow@UI@@QAE@PAU_object@@@Z ; UI::CWindow::CWindow
  00012	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CLine@UI@@6B@

; 948  : 	}

  00018	8b c6		 mov	 eax, esi
  0001a	c7 46 7c 00 00
	00 ff		 mov	 DWORD PTR [esi+124], -16777216 ; ff000000H
  00021	5e		 pop	 esi
  00022	8b e5		 mov	 esp, ebp
  00024	5d		 pop	 ebp
  00025	c2 04 00	 ret	 4
??0CLine@UI@@QAE@PAU_object@@@Z ENDP			; UI::CLine::CLine
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_GCBar@UI@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCBar@UI@@UAEPAXI@Z PROC				; UI::CBar::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1CBar@UI@@UAE@XZ	; UI::CBar::~CBar
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0e		 je	 SHORT $LN4@scalar
  00011	68 80 00 00 00	 push	 128			; 00000080H
  00016	56		 push	 esi
  00017	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0001c	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001f	8b c6		 mov	 eax, esi
  00021	5e		 pop	 esi
  00022	5d		 pop	 ebp
  00023	c2 04 00	 ret	 4
??_GCBar@UI@@UAEPAXI@Z ENDP				; UI::CBar::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnRender@CBar@UI@@MAEXXZ
_TEXT	SEGMENT
?OnRender@CBar@UI@@MAEXXZ PROC				; UI::CBar::OnRender, COMDAT
; _this$ = ecx

; 937  : 	{

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 938  : 		CPythonGraphic::Instance().SetDiffuseColor(m_dwColor);

  00003	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCPythonGraphic@@@@0PAVCPythonGraphic@@A ; CSingleton<CPythonGraphic>::ms_singleton
  00009	ff 76 7c	 push	 DWORD PTR [esi+124]
  0000c	e8 00 00 00 00	 call	 ?SetDiffuseColor@CScreen@@QAEXK@Z ; CScreen::SetDiffuseColor
  00011	66 0f 6e 46 40	 movd	 xmm0, DWORD PTR [esi+64]

; 939  : 		CPythonGraphic::Instance().RenderBar2d(m_rect.left, m_rect.top, m_rect.right, m_rect.bottom);

  00016	83 ec 14	 sub	 esp, 20			; 00000014H
  00019	0f 5b c0	 cvtdq2ps xmm0, xmm0
  0001c	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCPythonGraphic@@@@0PAVCPythonGraphic@@A ; CSingleton<CPythonGraphic>::ms_singleton
  00022	c7 44 24 10 00
	00 00 00	 mov	 DWORD PTR [esp+16], 0
  0002a	f3 0f 11 44 24
	0c		 movss	 DWORD PTR [esp+12], xmm0
  00030	66 0f 6e 46 3c	 movd	 xmm0, DWORD PTR [esi+60]
  00035	0f 5b c0	 cvtdq2ps xmm0, xmm0
  00038	f3 0f 11 44 24
	08		 movss	 DWORD PTR [esp+8], xmm0
  0003e	66 0f 6e 46 38	 movd	 xmm0, DWORD PTR [esi+56]
  00043	0f 5b c0	 cvtdq2ps xmm0, xmm0
  00046	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  0004c	66 0f 6e 46 34	 movd	 xmm0, DWORD PTR [esi+52]
  00051	0f 5b c0	 cvtdq2ps xmm0, xmm0
  00054	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00059	e8 00 00 00 00	 call	 ?RenderBar2d@CScreen@@QAEXMMMMM@Z ; CScreen::RenderBar2d
  0005e	5e		 pop	 esi

; 940  : 	}

  0005f	c3		 ret	 0
?OnRender@CBar@UI@@MAEXXZ ENDP				; UI::CBar::OnRender
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?SetColor@CBar@UI@@UAEXK@Z
_TEXT	SEGMENT
_dwColor$ = 8						; size = 4
?SetColor@CBar@UI@@UAEXK@Z PROC				; UI::CBar::SetColor, COMDAT
; _this$ = ecx

; 932  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 933  : 		m_dwColor = dwColor;

  00003	8b 45 08	 mov	 eax, DWORD PTR _dwColor$[ebp]
  00006	89 41 7c	 mov	 DWORD PTR [ecx+124], eax

; 934  : 	}

  00009	5d		 pop	 ebp
  0000a	c2 04 00	 ret	 4
?SetColor@CBar@UI@@UAEXK@Z ENDP				; UI::CBar::SetColor
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ??1CBar@UI@@UAE@XZ
_TEXT	SEGMENT
??1CBar@UI@@UAE@XZ PROC					; UI::CBar::~CBar, COMDAT
; _this$ = ecx

; 928  : 	{

  00000	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7CBar@UI@@6B@

; 929  : 	}

  00006	e9 00 00 00 00	 jmp	 ??1CWindow@UI@@UAE@XZ	; UI::CWindow::~CWindow
??1CBar@UI@@UAE@XZ ENDP					; UI::CBar::~CBar
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ??0CBar@UI@@QAE@PAU_object@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_ppyObject$ = 8						; size = 4
??0CBar@UI@@QAE@PAU_object@@@Z PROC			; UI::CBar::CBar, COMDAT
; _this$ = ecx

; 925  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	ff 75 08	 push	 DWORD PTR _ppyObject$[ebp]
  00008	8b f1		 mov	 esi, ecx
  0000a	89 75 fc	 mov	 DWORD PTR _this$[ebp], esi
  0000d	e8 00 00 00 00	 call	 ??0CWindow@UI@@QAE@PAU_object@@@Z ; UI::CWindow::CWindow
  00012	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CBar@UI@@6B@

; 926  : 	}

  00018	8b c6		 mov	 eax, esi
  0001a	c7 46 7c 00 00
	00 ff		 mov	 DWORD PTR [esi+124], -16777216 ; ff000000H
  00021	5e		 pop	 esi
  00022	8b e5		 mov	 esp, ebp
  00024	5d		 pop	 ebp
  00025	c2 04 00	 ret	 4
??0CBar@UI@@QAE@PAU_object@@@Z ENDP			; UI::CBar::CBar
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_GCBox@UI@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCBox@UI@@UAEPAXI@Z PROC				; UI::CBox::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1CBox@UI@@UAE@XZ	; UI::CBox::~CBox
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0e		 je	 SHORT $LN4@scalar
  00011	68 80 00 00 00	 push	 128			; 00000080H
  00016	56		 push	 esi
  00017	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0001c	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001f	8b c6		 mov	 eax, esi
  00021	5e		 pop	 esi
  00022	5d		 pop	 ebp
  00023	c2 04 00	 ret	 4
??_GCBox@UI@@UAEPAXI@Z ENDP				; UI::CBox::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnRender@CBox@UI@@MAEXXZ
_TEXT	SEGMENT
?OnRender@CBox@UI@@MAEXXZ PROC				; UI::CBox::OnRender, COMDAT
; _this$ = ecx

; 915  : 	{

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 916  : 		CPythonGraphic::Instance().SetDiffuseColor(m_dwColor);

  00003	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCPythonGraphic@@@@0PAVCPythonGraphic@@A ; CSingleton<CPythonGraphic>::ms_singleton
  00009	ff 76 7c	 push	 DWORD PTR [esi+124]
  0000c	e8 00 00 00 00	 call	 ?SetDiffuseColor@CScreen@@QAEXK@Z ; CScreen::SetDiffuseColor
  00011	66 0f 6e 46 40	 movd	 xmm0, DWORD PTR [esi+64]

; 917  : 		CPythonGraphic::Instance().RenderBox2d(m_rect.left, m_rect.top, m_rect.right, m_rect.bottom);

  00016	83 ec 14	 sub	 esp, 20			; 00000014H
  00019	0f 5b c0	 cvtdq2ps xmm0, xmm0
  0001c	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCPythonGraphic@@@@0PAVCPythonGraphic@@A ; CSingleton<CPythonGraphic>::ms_singleton
  00022	c7 44 24 10 00
	00 00 00	 mov	 DWORD PTR [esp+16], 0
  0002a	f3 0f 11 44 24
	0c		 movss	 DWORD PTR [esp+12], xmm0
  00030	66 0f 6e 46 3c	 movd	 xmm0, DWORD PTR [esi+60]
  00035	0f 5b c0	 cvtdq2ps xmm0, xmm0
  00038	f3 0f 11 44 24
	08		 movss	 DWORD PTR [esp+8], xmm0
  0003e	66 0f 6e 46 38	 movd	 xmm0, DWORD PTR [esi+56]
  00043	0f 5b c0	 cvtdq2ps xmm0, xmm0
  00046	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  0004c	66 0f 6e 46 34	 movd	 xmm0, DWORD PTR [esi+52]
  00051	0f 5b c0	 cvtdq2ps xmm0, xmm0
  00054	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00059	e8 00 00 00 00	 call	 ?RenderBox2d@CScreen@@QAEXMMMMM@Z ; CScreen::RenderBox2d
  0005e	5e		 pop	 esi

; 918  : 	}

  0005f	c3		 ret	 0
?OnRender@CBox@UI@@MAEXXZ ENDP				; UI::CBox::OnRender
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?SetColor@CBox@UI@@UAEXK@Z
_TEXT	SEGMENT
_dwColor$ = 8						; size = 4
?SetColor@CBox@UI@@UAEXK@Z PROC				; UI::CBox::SetColor, COMDAT
; _this$ = ecx

; 910  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 911  : 		m_dwColor = dwColor;

  00003	8b 45 08	 mov	 eax, DWORD PTR _dwColor$[ebp]
  00006	89 41 7c	 mov	 DWORD PTR [ecx+124], eax

; 912  : 	}

  00009	5d		 pop	 ebp
  0000a	c2 04 00	 ret	 4
?SetColor@CBox@UI@@UAEXK@Z ENDP				; UI::CBox::SetColor
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ??1CBox@UI@@UAE@XZ
_TEXT	SEGMENT
??1CBox@UI@@UAE@XZ PROC					; UI::CBox::~CBox, COMDAT
; _this$ = ecx

; 906  : 	{

  00000	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7CBox@UI@@6B@

; 907  : 	}

  00006	e9 00 00 00 00	 jmp	 ??1CWindow@UI@@UAE@XZ	; UI::CWindow::~CWindow
??1CBox@UI@@UAE@XZ ENDP					; UI::CBox::~CBox
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ??0CBox@UI@@QAE@PAU_object@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_ppyObject$ = 8						; size = 4
??0CBox@UI@@QAE@PAU_object@@@Z PROC			; UI::CBox::CBox, COMDAT
; _this$ = ecx

; 903  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	ff 75 08	 push	 DWORD PTR _ppyObject$[ebp]
  00008	8b f1		 mov	 esi, ecx
  0000a	89 75 fc	 mov	 DWORD PTR _this$[ebp], esi
  0000d	e8 00 00 00 00	 call	 ??0CWindow@UI@@QAE@PAU_object@@@Z ; UI::CWindow::CWindow
  00012	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CBox@UI@@6B@

; 904  : 	}

  00018	8b c6		 mov	 eax, esi
  0001a	c7 46 7c 00 00
	00 ff		 mov	 DWORD PTR [esi+124], -16777216 ; ff000000H
  00021	5e		 pop	 esi
  00022	8b e5		 mov	 esp, ebp
  00024	5d		 pop	 ebp
  00025	c2 04 00	 ret	 4
??0CBox@UI@@QAE@PAU_object@@@Z ENDP			; UI::CBox::CBox
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_GCRenderTarget@UI@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCRenderTarget@UI@@UAEPAXI@Z PROC			; UI::CRenderTarget::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1CRenderTarget@UI@@UAE@XZ ; UI::CRenderTarget::~CRenderTarget
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0e		 je	 SHORT $LN4@scalar
  00011	68 80 00 00 00	 push	 128			; 00000080H
  00016	56		 push	 esi
  00017	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0001c	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001f	8b c6		 mov	 eax, esi
  00021	5e		 pop	 esi
  00022	5d		 pop	 ebp
  00023	c2 04 00	 ret	 4
??_GCRenderTarget@UI@@UAEPAXI@Z ENDP			; UI::CRenderTarget::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\memory
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\memory
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\memory
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnRender@CRenderTarget@UI@@MAEXXZ
_TEXT	SEGMENT
_target$ = -20						; size = 8
__$EHRec$ = -12						; size = 12
?OnRender@CRenderTarget@UI@@MAEXXZ PROC			; UI::CRenderTarget::OnRender, COMDAT
; _this$ = ecx

; 880  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?OnRender@CRenderTarget@UI@@MAEXXZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 08	 sub	 esp, 8
  00014	56		 push	 esi
  00015	57		 push	 edi
  00016	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001b	33 c5		 xor	 eax, ebp
  0001d	50		 push	 eax
  0001e	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00021	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00027	8b f1		 mov	 esi, ecx

; 881  : 		auto target = CRenderTargetManager::Instance().GetRenderTarget(m_dwIndex);

  00029	0f b6 46 7c	 movzx	 eax, BYTE PTR [esi+124]
  0002d	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCRenderTargetManager@@@@0PAVCRenderTargetManager@@A ; CSingleton<CRenderTargetManager>::ms_singleton
  00033	50		 push	 eax
  00034	8d 45 ec	 lea	 eax, DWORD PTR _target$[ebp]
  00037	50		 push	 eax
  00038	e8 00 00 00 00	 call	 ?GetRenderTarget@CRenderTargetManager@@QAE?AV?$shared_ptr@VCRenderTarget@@@std@@E@Z ; CRenderTargetManager::GetRenderTarget
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\memory

; 1701 :         return get() != nullptr;

  0003d	8b 4d ec	 mov	 ecx, DWORD PTR _target$[ebp]
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp

; 881  : 		auto target = CRenderTargetManager::Instance().GetRenderTarget(m_dwIndex);

  00040	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\memory

; 1701 :         return get() != nullptr;

  00047	85 c9		 test	 ecx, ecx
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp

; 882  : 		if (!target)

  00049	75 0f		 jne	 SHORT $LN2@OnRender

; 883  : 		{
; 884  : 			TraceError("SetRenderingRect -> target empty!");

  0004b	68 00 00 00 00	 push	 OFFSET ??_C@_0CC@GOJDIMPB@SetRenderingRect?5?9?$DO?5target?5empt@
  00050	e8 00 00 00 00	 call	 ?TraceError@@YAXPBDZZ	; TraceError
  00055	83 c4 04	 add	 esp, 4
  00058	eb 11		 jmp	 SHORT $LN5@OnRender
$LN2@OnRender:

; 885  : 			return;
; 886  : 		}
; 887  : 
; 888  : 		target->SetRenderingRect(&m_rect);

  0005a	8d 46 34	 lea	 eax, DWORD PTR [esi+52]
  0005d	50		 push	 eax
  0005e	e8 00 00 00 00	 call	 ?SetRenderingRect@CRenderTarget@@QBEXPAUtagRECT@@@Z ; CRenderTarget::SetRenderingRect

; 889  : 		target->RenderTexture();

  00063	8b 4d ec	 mov	 ecx, DWORD PTR _target$[ebp]
  00066	e8 00 00 00 00	 call	 ?RenderTexture@CRenderTarget@@QBEXXZ ; CRenderTarget::RenderTexture
$LN5@OnRender:
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\memory

; 1330 :         if (_Rep) {

  0006b	8b 75 f0	 mov	 esi, DWORD PTR _target$[ebp+4]
  0006e	85 f6		 test	 esi, esi
  00070	74 21		 je	 SHORT $LN17@OnRender

; 1105 :         if (_MT_DECR(_Uses) == 0) {

  00072	83 cf ff	 or	 edi, -1
  00075	8b c7		 mov	 eax, edi
  00077	f0 0f c1 46 04	 lock	  xadd	 DWORD PTR [esi+4], eax
  0007c	75 15		 jne	 SHORT $LN17@OnRender

; 1106 :             _Destroy();

  0007e	8b 06		 mov	 eax, DWORD PTR [esi]
  00080	8b ce		 mov	 ecx, esi
  00082	ff 10		 call	 DWORD PTR [eax]

; 1112 :         if (_MT_DECR(_Weaks) == 0) {

  00084	f0 0f c1 7e 08	 lock	  xadd	 DWORD PTR [esi+8], edi
  00089	4f		 dec	 edi
  0008a	75 07		 jne	 SHORT $LN17@OnRender

; 1113 :             _Delete_this();

  0008c	8b 06		 mov	 eax, DWORD PTR [esi]
  0008e	8b ce		 mov	 ecx, esi
  00090	ff 50 04	 call	 DWORD PTR [eax+4]
$LN17@OnRender:
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp

; 890  : 	}

  00093	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00096	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0009d	59		 pop	 ecx
  0009e	5f		 pop	 edi
  0009f	5e		 pop	 esi
  000a0	8b e5		 mov	 esp, ebp
  000a2	5d		 pop	 ebp
  000a3	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?OnRender@CRenderTarget@UI@@MAEXXZ$0:
  00000	8d 4d ec	 lea	 ecx, DWORD PTR _target$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$shared_ptr@VCRenderTarget@@@std@@QAE@XZ ; std::shared_ptr<CRenderTarget>::~shared_ptr<CRenderTarget>
  00008	cc		 int	 3
  00009	cc		 int	 3
  0000a	cc		 int	 3
  0000b	cc		 int	 3
  0000c	cc		 int	 3
__ehhandler$?OnRender@CRenderTarget@UI@@MAEXXZ:
  0000d	90		 npad	 1
  0000e	90		 npad	 1
  0000f	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00013	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00016	8b 4a ec	 mov	 ecx, DWORD PTR [edx-20]
  00019	33 c8		 xor	 ecx, eax
  0001b	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00020	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?OnRender@CRenderTarget@UI@@MAEXXZ
  00025	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?OnRender@CRenderTarget@UI@@MAEXXZ ENDP			; UI::CRenderTarget::OnRender
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\memory
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?SetRenderTarget@CRenderTarget@UI@@QAE_NE@Z
_TEXT	SEGMENT
$T1 = -12						; size = 8
tv243 = -4						; size = 4
_index$ = 8						; size = 1
?SetRenderTarget@CRenderTarget@UI@@QAE_NE@Z PROC	; UI::CRenderTarget::SetRenderTarget, COMDAT
; _this$ = ecx

; 864  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	53		 push	 ebx

; 865  : 		if (!CRenderTargetManager::Instance().GetRenderTarget(index))

  00007	8b 5d 08	 mov	 ebx, DWORD PTR _index$[ebp]
  0000a	8d 45 f4	 lea	 eax, DWORD PTR $T1[ebp]
  0000d	56		 push	 esi
  0000e	57		 push	 edi
  0000f	53		 push	 ebx
  00010	8b f1		 mov	 esi, ecx
  00012	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCRenderTargetManager@@@@0PAVCRenderTargetManager@@A ; CSingleton<CRenderTargetManager>::ms_singleton
  00018	50		 push	 eax
  00019	e8 00 00 00 00	 call	 ?GetRenderTarget@CRenderTargetManager@@QAE?AV?$shared_ptr@VCRenderTarget@@@std@@E@Z ; CRenderTargetManager::GetRenderTarget
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\memory

; 1701 :         return get() != nullptr;

  0001e	8b 38		 mov	 edi, DWORD PTR [eax]
  00020	89 7d fc	 mov	 DWORD PTR tv243[ebp], edi

; 1330 :         if (_Rep) {

  00023	8b 7d f8	 mov	 edi, DWORD PTR $T1[ebp+4]
  00026	85 ff		 test	 edi, edi
  00028	74 24		 je	 SHORT $LN17@SetRenderT

; 1105 :         if (_MT_DECR(_Uses) == 0) {

  0002a	83 cb ff	 or	 ebx, -1
  0002d	8b c3		 mov	 eax, ebx
  0002f	f0 0f c1 47 04	 lock	  xadd	 DWORD PTR [edi+4], eax
  00034	75 15		 jne	 SHORT $LN20@SetRenderT

; 1106 :             _Destroy();

  00036	8b 07		 mov	 eax, DWORD PTR [edi]
  00038	8b cf		 mov	 ecx, edi
  0003a	ff 10		 call	 DWORD PTR [eax]

; 1112 :         if (_MT_DECR(_Weaks) == 0) {

  0003c	f0 0f c1 5f 08	 lock	  xadd	 DWORD PTR [edi+8], ebx
  00041	4b		 dec	 ebx
  00042	75 07		 jne	 SHORT $LN20@SetRenderT

; 1113 :             _Delete_this();

  00044	8b 07		 mov	 eax, DWORD PTR [edi]
  00046	8b cf		 mov	 ecx, edi
  00048	ff 50 04	 call	 DWORD PTR [eax+4]
$LN20@SetRenderT:
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp

; 865  : 		if (!CRenderTargetManager::Instance().GetRenderTarget(index))

  0004b	8b 5d 08	 mov	 ebx, DWORD PTR _index$[ebp]
$LN17@SetRenderT:
  0004e	83 7d fc 00	 cmp	 DWORD PTR tv243[ebp], 0
  00052	75 34		 jne	 SHORT $LN3@SetRenderT

; 866  : 		{
; 867  : 			if (!CRenderTargetManager::Instance().CreateRenderTarget(index, GetWidth(), GetHeight()))

  00054	ff 76 30	 push	 DWORD PTR [esi+48]
  00057	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCRenderTargetManager@@@@0PAVCRenderTargetManager@@A ; CSingleton<CRenderTargetManager>::ms_singleton
  0005d	ff 76 2c	 push	 DWORD PTR [esi+44]
  00060	53		 push	 ebx
  00061	e8 00 00 00 00	 call	 ?CreateRenderTarget@CRenderTargetManager@@QAE_NEHH@Z ; CRenderTargetManager::CreateRenderTarget
  00066	84 c0		 test	 al, al
  00068	75 1e		 jne	 SHORT $LN3@SetRenderT

; 868  : 			{
; 869  : 				TraceError("CRenderTargetManager could not create the texture. w %d h %d", GetWidth(), GetHeight());

  0006a	ff 76 30	 push	 DWORD PTR [esi+48]
  0006d	ff 76 2c	 push	 DWORD PTR [esi+44]
  00070	68 00 00 00 00	 push	 OFFSET ??_C@_0DN@LJLFOKKA@CRenderTargetManager?5could?5not?5@
  00075	e8 00 00 00 00	 call	 ?TraceError@@YAXPBDZZ	; TraceError
  0007a	83 c4 0c	 add	 esp, 12			; 0000000cH

; 870  : 				return false;

  0007d	32 c0		 xor	 al, al
  0007f	5f		 pop	 edi

; 876  : 		return true;
; 877  : 	}

  00080	5e		 pop	 esi
  00081	5b		 pop	 ebx
  00082	8b e5		 mov	 esp, ebp
  00084	5d		 pop	 ebp
  00085	c2 04 00	 ret	 4
$LN3@SetRenderT:

; 871  : 			}
; 872  : 		}
; 873  : 		m_dwIndex = index;

  00088	0f b6 c3	 movzx	 eax, bl

; 874  : 
; 875  : 		UpdateRect();

  0008b	8b ce		 mov	 ecx, esi
  0008d	89 46 7c	 mov	 DWORD PTR [esi+124], eax
  00090	e8 00 00 00 00	 call	 ?UpdateRect@CWindow@UI@@QAEJXZ ; UI::CWindow::UpdateRect
  00095	5f		 pop	 edi

; 876  : 		return true;
; 877  : 	}

  00096	5e		 pop	 esi
  00097	b0 01		 mov	 al, 1
  00099	5b		 pop	 ebx
  0009a	8b e5		 mov	 esp, ebp
  0009c	5d		 pop	 ebp
  0009d	c2 04 00	 ret	 4
?SetRenderTarget@CRenderTarget@UI@@QAE_NE@Z ENDP	; UI::CRenderTarget::SetRenderTarget
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ??1CRenderTarget@UI@@UAE@XZ
_TEXT	SEGMENT
??1CRenderTarget@UI@@UAE@XZ PROC			; UI::CRenderTarget::~CRenderTarget, COMDAT
; _this$ = ecx

; 861  : 	CRenderTarget::~CRenderTarget() = default;

  00000	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7CRenderTarget@UI@@6B@
  00006	e9 00 00 00 00	 jmp	 ??1CWindow@UI@@UAE@XZ	; UI::CWindow::~CWindow
??1CRenderTarget@UI@@UAE@XZ ENDP			; UI::CRenderTarget::~CRenderTarget
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ??0CRenderTarget@UI@@QAE@PAU_object@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_ppyObject$ = 8						; size = 4
??0CRenderTarget@UI@@QAE@PAU_object@@@Z PROC		; UI::CRenderTarget::CRenderTarget, COMDAT
; _this$ = ecx

; 858  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	ff 75 08	 push	 DWORD PTR _ppyObject$[ebp]
  00008	8b f1		 mov	 esi, ecx
  0000a	89 75 fc	 mov	 DWORD PTR _this$[ebp], esi
  0000d	e8 00 00 00 00	 call	 ??0CWindow@UI@@QAE@PAU_object@@@Z ; UI::CWindow::CWindow
  00012	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CRenderTarget@UI@@6B@

; 859  : 		m_dwIndex = -1;
; 860  : 	}

  00018	8b c6		 mov	 eax, esi
  0001a	c7 46 7c ff ff
	ff ff		 mov	 DWORD PTR [esi+124], -1
  00021	5e		 pop	 esi
  00022	8b e5		 mov	 esp, ebp
  00024	5d		 pop	 ebp
  00025	c2 04 00	 ret	 4
??0CRenderTarget@UI@@QAE@PAU_object@@@Z ENDP		; UI::CRenderTarget::CRenderTarget
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_GCWindow@UI@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCWindow@UI@@UAEPAXI@Z PROC				; UI::CWindow::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1CWindow@UI@@UAE@XZ	; UI::CWindow::~CWindow
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0b		 je	 SHORT $LN4@scalar
  00011	6a 7c		 push	 124			; 0000007cH
  00013	56		 push	 esi
  00014	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00019	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001c	8b c6		 mov	 eax, esi
  0001e	5e		 pop	 esi
  0001f	5d		 pop	 ebp
  00020	c2 04 00	 ret	 4
??_GCWindow@UI@@UAEPAXI@Z ENDP				; UI::CWindow::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.h
;	COMDAT ?IsWindow@CWindow@UI@@UAEHXZ
_TEXT	SEGMENT
?IsWindow@CWindow@UI@@UAEHXZ PROC			; UI::CWindow::IsWindow, COMDAT
; _this$ = ecx

; 165  : 			virtual BOOL	IsWindow() { return TRUE; }

  00000	b8 01 00 00 00	 mov	 eax, 1
  00005	c3		 ret	 0
?IsWindow@CWindow@UI@@UAEHXZ ENDP			; UI::CWindow::IsWindow
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnIsType@CWindow@UI@@UAEHK@Z
_TEXT	SEGMENT
_dwType$ = 8						; size = 4
?OnIsType@CWindow@UI@@UAEHK@Z PROC			; UI::CWindow::OnIsType, COMDAT
; _this$ = ecx

; 58   : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 59   : 		if (CWindow::Type() == dwType)

  00003	e8 00 00 00 00	 call	 ?Type@CWindow@UI@@SAKXZ	; UI::CWindow::Type
  00008	33 c9		 xor	 ecx, ecx
  0000a	3b 45 08	 cmp	 eax, DWORD PTR _dwType$[ebp]
  0000d	0f 94 c1	 sete	 cl
  00010	8b c1		 mov	 eax, ecx

; 60   : 			return TRUE;
; 61   : 
; 62   : 		return FALSE;
; 63   : 	}

  00012	5d		 pop	 ebp
  00013	c2 04 00	 ret	 4
?OnIsType@CWindow@UI@@UAEHK@Z ENDP			; UI::CWindow::OnIsType
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.h
;	COMDAT ?SetColor@CWindow@UI@@UAEXK@Z
_TEXT	SEGMENT
_dwColor$ = 8						; size = 4
?SetColor@CWindow@UI@@UAEXK@Z PROC			; UI::CWindow::SetColor, COMDAT
; _this$ = ecx

; 161  : 			virtual void	SetColor(DWORD dwColor){}

  00000	c2 04 00	 ret	 4
?SetColor@CWindow@UI@@UAEXK@Z ENDP			; UI::CWindow::SetColor
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnPressExitKey@CWindow@UI@@UAEHXZ
_TEXT	SEGMENT
_lValue$ = -4						; size = 4
?OnPressExitKey@CWindow@UI@@UAEHXZ PROC			; UI::CWindow::OnPressExitKey, COMDAT
; _this$ = ecx

; 783  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi

; 784  : 		long lValue;
; 785  : 		if (PyCallClassMemberFunc(m_poHandler, "OnPressExitKey", BuildEmptyTuple(), &lValue))

  00005	8d 45 fc	 lea	 eax, DWORD PTR _lValue$[ebp]
  00008	8b f1		 mov	 esi, ecx
  0000a	50		 push	 eax
  0000b	e8 00 00 00 00	 call	 ?BuildEmptyTuple@UI@@YAPAU_object@@XZ ; UI::BuildEmptyTuple
  00010	50		 push	 eax
  00011	68 00 00 00 00	 push	 OFFSET ??_C@_0P@KEJGBDKK@OnPressExitKey@
  00016	ff 76 5c	 push	 DWORD PTR [esi+92]
  00019	e8 00 00 00 00	 call	 ?PyCallClassMemberFunc@@YA_NPAU_object@@PBD0PAJ@Z ; PyCallClassMemberFunc
  0001e	83 c4 10	 add	 esp, 16			; 00000010H
  00021	5e		 pop	 esi
  00022	84 c0		 test	 al, al
  00024	74 0f		 je	 SHORT $LN3@OnPressExi

; 786  : 		if (0 != lValue)

  00026	83 7d fc 00	 cmp	 DWORD PTR _lValue$[ebp], 0
  0002a	74 09		 je	 SHORT $LN3@OnPressExi

; 787  : 			return TRUE;

  0002c	b8 01 00 00 00	 mov	 eax, 1

; 790  : 	}

  00031	8b e5		 mov	 esp, ebp
  00033	5d		 pop	 ebp
  00034	c3		 ret	 0
$LN3@OnPressExi:

; 788  : 
; 789  : 		return FALSE;

  00035	33 c0		 xor	 eax, eax

; 790  : 	}

  00037	8b e5		 mov	 esp, ebp
  00039	5d		 pop	 ebp
  0003a	c3		 ret	 0
?OnPressExitKey@CWindow@UI@@UAEHXZ ENDP			; UI::CWindow::OnPressExitKey
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnPressEscapeKey@CWindow@UI@@UAEHXZ
_TEXT	SEGMENT
_lValue$ = -4						; size = 4
?OnPressEscapeKey@CWindow@UI@@UAEHXZ PROC		; UI::CWindow::OnPressEscapeKey, COMDAT
; _this$ = ecx

; 773  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi

; 774  : 		long lValue;
; 775  : 		if (PyCallClassMemberFunc(m_poHandler, "OnPressEscapeKey", BuildEmptyTuple(), &lValue))

  00005	8d 45 fc	 lea	 eax, DWORD PTR _lValue$[ebp]
  00008	8b f1		 mov	 esi, ecx
  0000a	50		 push	 eax
  0000b	e8 00 00 00 00	 call	 ?BuildEmptyTuple@UI@@YAPAU_object@@XZ ; UI::BuildEmptyTuple
  00010	50		 push	 eax
  00011	68 00 00 00 00	 push	 OFFSET ??_C@_0BB@HCFLIMGH@OnPressEscapeKey@
  00016	ff 76 5c	 push	 DWORD PTR [esi+92]
  00019	e8 00 00 00 00	 call	 ?PyCallClassMemberFunc@@YA_NPAU_object@@PBD0PAJ@Z ; PyCallClassMemberFunc
  0001e	83 c4 10	 add	 esp, 16			; 00000010H
  00021	5e		 pop	 esi
  00022	84 c0		 test	 al, al
  00024	74 0f		 je	 SHORT $LN3@OnPressEsc

; 776  : 		if (0 != lValue)

  00026	83 7d fc 00	 cmp	 DWORD PTR _lValue$[ebp], 0
  0002a	74 09		 je	 SHORT $LN3@OnPressEsc

; 777  : 			return TRUE;

  0002c	b8 01 00 00 00	 mov	 eax, 1

; 780  : 	}

  00031	8b e5		 mov	 esp, ebp
  00033	5d		 pop	 ebp
  00034	c3		 ret	 0
$LN3@OnPressEsc:

; 778  : 
; 779  : 		return FALSE;

  00035	33 c0		 xor	 eax, eax

; 780  : 	}

  00037	8b e5		 mov	 esp, ebp
  00039	5d		 pop	 ebp
  0003a	c3		 ret	 0
?OnPressEscapeKey@CWindow@UI@@UAEHXZ ENDP		; UI::CWindow::OnPressEscapeKey
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnKeyUp@CWindow@UI@@UAEHH@Z
_TEXT	SEGMENT
_lValue$ = -4						; size = 4
_ikey$ = 8						; size = 4
?OnKeyUp@CWindow@UI@@UAEHH@Z PROC			; UI::CWindow::OnKeyUp, COMDAT
; _this$ = ecx

; 763  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi

; 764  : 		long lValue;
; 765  : 		if (PyCallClassMemberFunc(m_poHandler, "OnKeyUp", Py_BuildValue("(i)", ikey), &lValue))

  00005	8d 45 fc	 lea	 eax, DWORD PTR _lValue$[ebp]
  00008	8b f1		 mov	 esi, ecx
  0000a	50		 push	 eax
  0000b	ff 75 08	 push	 DWORD PTR _ikey$[ebp]
  0000e	68 00 00 00 00	 push	 OFFSET ??_C@_03LIHNMIHG@?$CIi?$CJ@
  00013	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__Py_BuildValue
  00019	83 c4 08	 add	 esp, 8
  0001c	50		 push	 eax
  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_07NGNLLPEG@OnKeyUp@
  00022	ff 76 5c	 push	 DWORD PTR [esi+92]
  00025	e8 00 00 00 00	 call	 ?PyCallClassMemberFunc@@YA_NPAU_object@@PBD0PAJ@Z ; PyCallClassMemberFunc
  0002a	83 c4 10	 add	 esp, 16			; 00000010H
  0002d	5e		 pop	 esi
  0002e	84 c0		 test	 al, al
  00030	74 11		 je	 SHORT $LN3@OnKeyUp

; 766  : 		if (0 != lValue)

  00032	83 7d fc 00	 cmp	 DWORD PTR _lValue$[ebp], 0
  00036	74 0b		 je	 SHORT $LN3@OnKeyUp

; 767  : 			return TRUE;

  00038	b8 01 00 00 00	 mov	 eax, 1

; 770  : 	}

  0003d	8b e5		 mov	 esp, ebp
  0003f	5d		 pop	 ebp
  00040	c2 04 00	 ret	 4
$LN3@OnKeyUp:

; 768  : 
; 769  : 		return FALSE;

  00043	33 c0		 xor	 eax, eax

; 770  : 	}

  00045	8b e5		 mov	 esp, ebp
  00047	5d		 pop	 ebp
  00048	c2 04 00	 ret	 4
?OnKeyUp@CWindow@UI@@UAEHH@Z ENDP			; UI::CWindow::OnKeyUp
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnKeyDown@CWindow@UI@@UAEHH@Z
_TEXT	SEGMENT
_lValue$ = -4						; size = 4
_ikey$ = 8						; size = 4
?OnKeyDown@CWindow@UI@@UAEHH@Z PROC			; UI::CWindow::OnKeyDown, COMDAT
; _this$ = ecx

; 753  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi

; 754  : 		long lValue;
; 755  : 		if (PyCallClassMemberFunc(m_poHandler, "OnKeyDown", Py_BuildValue("(i)", ikey), &lValue))

  00005	8d 45 fc	 lea	 eax, DWORD PTR _lValue$[ebp]
  00008	8b f1		 mov	 esi, ecx
  0000a	50		 push	 eax
  0000b	ff 75 08	 push	 DWORD PTR _ikey$[ebp]
  0000e	68 00 00 00 00	 push	 OFFSET ??_C@_03LIHNMIHG@?$CIi?$CJ@
  00013	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__Py_BuildValue
  00019	83 c4 08	 add	 esp, 8
  0001c	50		 push	 eax
  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_09CMHFBEC@OnKeyDown@
  00022	ff 76 5c	 push	 DWORD PTR [esi+92]
  00025	e8 00 00 00 00	 call	 ?PyCallClassMemberFunc@@YA_NPAU_object@@PBD0PAJ@Z ; PyCallClassMemberFunc
  0002a	83 c4 10	 add	 esp, 16			; 00000010H
  0002d	5e		 pop	 esi
  0002e	84 c0		 test	 al, al
  00030	74 11		 je	 SHORT $LN3@OnKeyDown

; 756  : 		if (0 != lValue)

  00032	83 7d fc 00	 cmp	 DWORD PTR _lValue$[ebp], 0
  00036	74 0b		 je	 SHORT $LN3@OnKeyDown

; 757  : 			return TRUE;

  00038	b8 01 00 00 00	 mov	 eax, 1

; 760  : 	}

  0003d	8b e5		 mov	 esp, ebp
  0003f	5d		 pop	 ebp
  00040	c2 04 00	 ret	 4
$LN3@OnKeyDown:

; 758  : 
; 759  : 		return FALSE;

  00043	33 c0		 xor	 eax, eax

; 760  : 	}

  00045	8b e5		 mov	 esp, ebp
  00047	5d		 pop	 ebp
  00048	c2 04 00	 ret	 4
?OnKeyDown@CWindow@UI@@UAEHH@Z ENDP			; UI::CWindow::OnKeyDown
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?SetScrollable@CWindow@UI@@UAEXXZ
_TEXT	SEGMENT
?SetScrollable@CWindow@UI@@UAEXXZ PROC			; UI::CWindow::SetScrollable, COMDAT
; _this$ = ecx

; 667  : 		m_bIsScrollable = true;

  00000	c6 41 78 01	 mov	 BYTE PTR [ecx+120], 1

; 668  : 	}

  00004	c3		 ret	 0
?SetScrollable@CWindow@UI@@UAEXXZ ENDP			; UI::CWindow::SetScrollable
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnMouseWheelScroll@CWindow@UI@@UAEHF@Z
_TEXT	SEGMENT
_wDelta$ = 8						; size = 2
?OnMouseWheelScroll@CWindow@UI@@UAEHF@Z PROC		; UI::CWindow::OnMouseWheelScroll, COMDAT
; _this$ = ecx

; 655  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 656  : #ifdef _DEBUG
; 657  : 		Tracenf("Mouse Wheel Scroll : wDelta %d ",wDelta);
; 658  : #endif
; 659  : 
; 660  : 		PyCallClassMemberFunc(m_poHandler , "OnMouseWheelScroll" , Py_BuildValue("(s)" , wDelta > 0? "UP":"DOWN") );

  00003	66 83 7d 08 00	 cmp	 WORD PTR _wDelta$[ebp], 0
  00008	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_02NAHCJHOC@UP@
  0000d	56		 push	 esi
  0000e	8b f1		 mov	 esi, ecx
  00010	b9 00 00 00 00	 mov	 ecx, OFFSET ??_C@_04FANAOELO@DOWN@
  00015	0f 4e c1	 cmovle	 eax, ecx
  00018	50		 push	 eax
  00019	68 00 00 00 00	 push	 OFFSET ??_C@_03KJMMOONA@?$CIs?$CJ@
  0001e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__Py_BuildValue
  00024	50		 push	 eax
  00025	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@GNNJJHBO@OnMouseWheelScroll@
  0002a	ff 76 5c	 push	 DWORD PTR [esi+92]
  0002d	e8 00 00 00 00	 call	 ?PyCallClassMemberFunc@@YA_NPAU_object@@PBD0@Z ; PyCallClassMemberFunc

; 661  : 		return m_bIsScrollable;

  00032	0f b6 46 78	 movzx	 eax, BYTE PTR [esi+120]
  00036	83 c4 14	 add	 esp, 20			; 00000014H
  00039	5e		 pop	 esi

; 662  : 	}

  0003a	5d		 pop	 ebp
  0003b	c2 04 00	 ret	 4
?OnMouseWheelScroll@CWindow@UI@@UAEHF@Z ENDP		; UI::CWindow::OnMouseWheelScroll
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?RunMouseWheelEvent@CWindow@UI@@UAEHJ@Z
_TEXT	SEGMENT
_bValue$ = -1						; size = 1
_nLen$ = 8						; size = 4
?RunMouseWheelEvent@CWindow@UI@@UAEHJ@Z PROC		; UI::CWindow::RunMouseWheelEvent, COMDAT
; _this$ = ecx

; 645  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi

; 646  : 		bool bValue = false;
; 647  : 		if (PyCallClassMemberFunc(m_poHandler, "OnRunMouseWheel", Py_BuildValue("(l)", nLen), &bValue))

  00005	8d 45 ff	 lea	 eax, DWORD PTR _bValue$[ebp]
  00008	c6 45 ff 00	 mov	 BYTE PTR _bValue$[ebp], 0
  0000c	50		 push	 eax
  0000d	ff 75 08	 push	 DWORD PTR _nLen$[ebp]
  00010	8b f1		 mov	 esi, ecx
  00012	68 00 00 00 00	 push	 OFFSET ??_C@_03LOLGAKJN@?$CIl?$CJ@
  00017	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__Py_BuildValue
  0001d	83 c4 08	 add	 esp, 8
  00020	50		 push	 eax
  00021	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@PDHAFBGB@OnRunMouseWheel@
  00026	ff 76 5c	 push	 DWORD PTR [esi+92]
  00029	e8 00 00 00 00	 call	 ?PyCallClassMemberFunc@@YA_NPAU_object@@PBD0PA_N@Z ; PyCallClassMemberFunc

; 648  : 			return bValue;
; 649  : 		return bValue;

  0002e	0f b6 45 ff	 movzx	 eax, BYTE PTR _bValue$[ebp]
  00032	83 c4 10	 add	 esp, 16			; 00000010H
  00035	5e		 pop	 esi

; 650  : 	}

  00036	8b e5		 mov	 esp, ebp
  00038	5d		 pop	 ebp
  00039	c2 04 00	 ret	 4
?RunMouseWheelEvent@CWindow@UI@@UAEHJ@Z ENDP		; UI::CWindow::RunMouseWheelEvent
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnMouseMiddleButtonUp@CWindow@UI@@UAEHXZ
_TEXT	SEGMENT
_lValue$ = -4						; size = 4
?OnMouseMiddleButtonUp@CWindow@UI@@UAEHXZ PROC		; UI::CWindow::OnMouseMiddleButtonUp, COMDAT
; _this$ = ecx

; 634  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi

; 635  : 		long lValue;
; 636  : 		if (PyCallClassMemberFunc(m_poHandler, "OnMouseMiddleButtonUp", BuildEmptyTuple(), &lValue))

  00005	8d 45 fc	 lea	 eax, DWORD PTR _lValue$[ebp]
  00008	8b f1		 mov	 esi, ecx
  0000a	50		 push	 eax
  0000b	e8 00 00 00 00	 call	 ?BuildEmptyTuple@UI@@YAPAU_object@@XZ ; UI::BuildEmptyTuple
  00010	50		 push	 eax
  00011	68 00 00 00 00	 push	 OFFSET ??_C@_0BG@IGAJCEHG@OnMouseMiddleButtonUp@
  00016	ff 76 5c	 push	 DWORD PTR [esi+92]
  00019	e8 00 00 00 00	 call	 ?PyCallClassMemberFunc@@YA_NPAU_object@@PBD0PAJ@Z ; PyCallClassMemberFunc
  0001e	83 c4 10	 add	 esp, 16			; 00000010H
  00021	5e		 pop	 esi
  00022	84 c0		 test	 al, al
  00024	74 0f		 je	 SHORT $LN3@OnMouseMid

; 637  : 		if (0 != lValue)

  00026	83 7d fc 00	 cmp	 DWORD PTR _lValue$[ebp], 0
  0002a	74 09		 je	 SHORT $LN3@OnMouseMid

; 638  : 			return TRUE;

  0002c	b8 01 00 00 00	 mov	 eax, 1

; 641  : 	}

  00031	8b e5		 mov	 esp, ebp
  00033	5d		 pop	 ebp
  00034	c3		 ret	 0
$LN3@OnMouseMid:

; 639  : 
; 640  : 		return FALSE;

  00035	33 c0		 xor	 eax, eax

; 641  : 	}

  00037	8b e5		 mov	 esp, ebp
  00039	5d		 pop	 ebp
  0003a	c3		 ret	 0
?OnMouseMiddleButtonUp@CWindow@UI@@UAEHXZ ENDP		; UI::CWindow::OnMouseMiddleButtonUp
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnMouseMiddleButtonDown@CWindow@UI@@UAEHXZ
_TEXT	SEGMENT
_lValue$ = -4						; size = 4
?OnMouseMiddleButtonDown@CWindow@UI@@UAEHXZ PROC	; UI::CWindow::OnMouseMiddleButtonDown, COMDAT
; _this$ = ecx

; 624  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi

; 625  : 		long lValue;
; 626  : 		if (PyCallClassMemberFunc(m_poHandler, "OnMouseMiddleButtonDown", BuildEmptyTuple(), &lValue))

  00005	8d 45 fc	 lea	 eax, DWORD PTR _lValue$[ebp]
  00008	8b f1		 mov	 esi, ecx
  0000a	50		 push	 eax
  0000b	e8 00 00 00 00	 call	 ?BuildEmptyTuple@UI@@YAPAU_object@@XZ ; UI::BuildEmptyTuple
  00010	50		 push	 eax
  00011	68 00 00 00 00	 push	 OFFSET ??_C@_0BI@LKFMHNKP@OnMouseMiddleButtonDown@
  00016	ff 76 5c	 push	 DWORD PTR [esi+92]
  00019	e8 00 00 00 00	 call	 ?PyCallClassMemberFunc@@YA_NPAU_object@@PBD0PAJ@Z ; PyCallClassMemberFunc
  0001e	83 c4 10	 add	 esp, 16			; 00000010H
  00021	5e		 pop	 esi
  00022	84 c0		 test	 al, al
  00024	74 0f		 je	 SHORT $LN3@OnMouseMid

; 627  : 		if (0 != lValue)

  00026	83 7d fc 00	 cmp	 DWORD PTR _lValue$[ebp], 0
  0002a	74 09		 je	 SHORT $LN3@OnMouseMid

; 628  : 			return TRUE;

  0002c	b8 01 00 00 00	 mov	 eax, 1

; 631  : 	}

  00031	8b e5		 mov	 esp, ebp
  00033	5d		 pop	 ebp
  00034	c3		 ret	 0
$LN3@OnMouseMid:

; 629  : 
; 630  : 		return FALSE;

  00035	33 c0		 xor	 eax, eax

; 631  : 	}

  00037	8b e5		 mov	 esp, ebp
  00039	5d		 pop	 ebp
  0003a	c3		 ret	 0
?OnMouseMiddleButtonDown@CWindow@UI@@UAEHXZ ENDP	; UI::CWindow::OnMouseMiddleButtonDown
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnMouseRightButtonDoubleClick@CWindow@UI@@UAEHXZ
_TEXT	SEGMENT
_lValue$ = -4						; size = 4
?OnMouseRightButtonDoubleClick@CWindow@UI@@UAEHXZ PROC	; UI::CWindow::OnMouseRightButtonDoubleClick, COMDAT
; _this$ = ecx

; 614  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi

; 615  : 		long lValue;
; 616  : 		if (PyCallClassMemberFunc(m_poHandler, "OnMouseRightButtonDoubleClick", BuildEmptyTuple(), &lValue))

  00005	8d 45 fc	 lea	 eax, DWORD PTR _lValue$[ebp]
  00008	8b f1		 mov	 esi, ecx
  0000a	50		 push	 eax
  0000b	e8 00 00 00 00	 call	 ?BuildEmptyTuple@UI@@YAPAU_object@@XZ ; UI::BuildEmptyTuple
  00010	50		 push	 eax
  00011	68 00 00 00 00	 push	 OFFSET ??_C@_0BO@NPKMHGOP@OnMouseRightButtonDoubleClick@
  00016	ff 76 5c	 push	 DWORD PTR [esi+92]
  00019	e8 00 00 00 00	 call	 ?PyCallClassMemberFunc@@YA_NPAU_object@@PBD0PAJ@Z ; PyCallClassMemberFunc
  0001e	83 c4 10	 add	 esp, 16			; 00000010H
  00021	5e		 pop	 esi
  00022	84 c0		 test	 al, al
  00024	74 0f		 je	 SHORT $LN3@OnMouseRig

; 617  : 		if (0 != lValue)

  00026	83 7d fc 00	 cmp	 DWORD PTR _lValue$[ebp], 0
  0002a	74 09		 je	 SHORT $LN3@OnMouseRig

; 618  : 			return TRUE;

  0002c	b8 01 00 00 00	 mov	 eax, 1

; 621  : 	}

  00031	8b e5		 mov	 esp, ebp
  00033	5d		 pop	 ebp
  00034	c3		 ret	 0
$LN3@OnMouseRig:

; 619  : 
; 620  : 		return FALSE;

  00035	33 c0		 xor	 eax, eax

; 621  : 	}

  00037	8b e5		 mov	 esp, ebp
  00039	5d		 pop	 ebp
  0003a	c3		 ret	 0
?OnMouseRightButtonDoubleClick@CWindow@UI@@UAEHXZ ENDP	; UI::CWindow::OnMouseRightButtonDoubleClick
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnMouseRightButtonUp@CWindow@UI@@UAEHXZ
_TEXT	SEGMENT
_lValue$ = -4						; size = 4
?OnMouseRightButtonUp@CWindow@UI@@UAEHXZ PROC		; UI::CWindow::OnMouseRightButtonUp, COMDAT
; _this$ = ecx

; 604  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi

; 605  : 		long lValue;
; 606  : 		if (PyCallClassMemberFunc(m_poHandler, "OnMouseRightButtonUp", BuildEmptyTuple(), &lValue))

  00005	8d 45 fc	 lea	 eax, DWORD PTR _lValue$[ebp]
  00008	8b f1		 mov	 esi, ecx
  0000a	50		 push	 eax
  0000b	e8 00 00 00 00	 call	 ?BuildEmptyTuple@UI@@YAPAU_object@@XZ ; UI::BuildEmptyTuple
  00010	50		 push	 eax
  00011	68 00 00 00 00	 push	 OFFSET ??_C@_0BF@FDIGHPIH@OnMouseRightButtonUp@
  00016	ff 76 5c	 push	 DWORD PTR [esi+92]
  00019	e8 00 00 00 00	 call	 ?PyCallClassMemberFunc@@YA_NPAU_object@@PBD0PAJ@Z ; PyCallClassMemberFunc
  0001e	83 c4 10	 add	 esp, 16			; 00000010H
  00021	5e		 pop	 esi
  00022	84 c0		 test	 al, al
  00024	74 0f		 je	 SHORT $LN3@OnMouseRig

; 607  : 		if (0 != lValue)

  00026	83 7d fc 00	 cmp	 DWORD PTR _lValue$[ebp], 0
  0002a	74 09		 je	 SHORT $LN3@OnMouseRig

; 608  : 			return TRUE;

  0002c	b8 01 00 00 00	 mov	 eax, 1

; 611  : 	}

  00031	8b e5		 mov	 esp, ebp
  00033	5d		 pop	 ebp
  00034	c3		 ret	 0
$LN3@OnMouseRig:

; 609  : 
; 610  : 		return FALSE;

  00035	33 c0		 xor	 eax, eax

; 611  : 	}

  00037	8b e5		 mov	 esp, ebp
  00039	5d		 pop	 ebp
  0003a	c3		 ret	 0
?OnMouseRightButtonUp@CWindow@UI@@UAEHXZ ENDP		; UI::CWindow::OnMouseRightButtonUp
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnMouseRightButtonDown@CWindow@UI@@UAEHXZ
_TEXT	SEGMENT
_lValue$ = -4						; size = 4
?OnMouseRightButtonDown@CWindow@UI@@UAEHXZ PROC		; UI::CWindow::OnMouseRightButtonDown, COMDAT
; _this$ = ecx

; 594  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi

; 595  : 		long lValue;
; 596  : 		if (PyCallClassMemberFunc(m_poHandler, "OnMouseRightButtonDown", BuildEmptyTuple(), &lValue))

  00005	8d 45 fc	 lea	 eax, DWORD PTR _lValue$[ebp]
  00008	8b f1		 mov	 esi, ecx
  0000a	50		 push	 eax
  0000b	e8 00 00 00 00	 call	 ?BuildEmptyTuple@UI@@YAPAU_object@@XZ ; UI::BuildEmptyTuple
  00010	50		 push	 eax
  00011	68 00 00 00 00	 push	 OFFSET ??_C@_0BH@ELECPAKA@OnMouseRightButtonDown@
  00016	ff 76 5c	 push	 DWORD PTR [esi+92]
  00019	e8 00 00 00 00	 call	 ?PyCallClassMemberFunc@@YA_NPAU_object@@PBD0PAJ@Z ; PyCallClassMemberFunc
  0001e	83 c4 10	 add	 esp, 16			; 00000010H
  00021	5e		 pop	 esi
  00022	84 c0		 test	 al, al
  00024	74 0f		 je	 SHORT $LN3@OnMouseRig

; 597  : 		if (0 != lValue)

  00026	83 7d fc 00	 cmp	 DWORD PTR _lValue$[ebp], 0
  0002a	74 09		 je	 SHORT $LN3@OnMouseRig

; 598  : 			return TRUE;

  0002c	b8 01 00 00 00	 mov	 eax, 1

; 601  : 	}

  00031	8b e5		 mov	 esp, ebp
  00033	5d		 pop	 ebp
  00034	c3		 ret	 0
$LN3@OnMouseRig:

; 599  : 
; 600  : 		return FALSE;

  00035	33 c0		 xor	 eax, eax

; 601  : 	}

  00037	8b e5		 mov	 esp, ebp
  00039	5d		 pop	 ebp
  0003a	c3		 ret	 0
?OnMouseRightButtonDown@CWindow@UI@@UAEHXZ ENDP		; UI::CWindow::OnMouseRightButtonDown
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnMouseLeftButtonDoubleClick@CWindow@UI@@UAEHXZ
_TEXT	SEGMENT
_lValue$ = -4						; size = 4
?OnMouseLeftButtonDoubleClick@CWindow@UI@@UAEHXZ PROC	; UI::CWindow::OnMouseLeftButtonDoubleClick, COMDAT
; _this$ = ecx

; 584  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi

; 585  : 		long lValue;
; 586  : 		if (PyCallClassMemberFunc(m_poHandler, "OnMouseLeftButtonDoubleClick", BuildEmptyTuple(), &lValue))

  00005	8d 45 fc	 lea	 eax, DWORD PTR _lValue$[ebp]
  00008	8b f1		 mov	 esi, ecx
  0000a	50		 push	 eax
  0000b	e8 00 00 00 00	 call	 ?BuildEmptyTuple@UI@@YAPAU_object@@XZ ; UI::BuildEmptyTuple
  00010	50		 push	 eax
  00011	68 00 00 00 00	 push	 OFFSET ??_C@_0BN@KEKGIMMP@OnMouseLeftButtonDoubleClick@
  00016	ff 76 5c	 push	 DWORD PTR [esi+92]
  00019	e8 00 00 00 00	 call	 ?PyCallClassMemberFunc@@YA_NPAU_object@@PBD0PAJ@Z ; PyCallClassMemberFunc
  0001e	83 c4 10	 add	 esp, 16			; 00000010H
  00021	5e		 pop	 esi
  00022	84 c0		 test	 al, al
  00024	74 0f		 je	 SHORT $LN3@OnMouseLef

; 587  : 		if (0 != lValue)

  00026	83 7d fc 00	 cmp	 DWORD PTR _lValue$[ebp], 0
  0002a	74 09		 je	 SHORT $LN3@OnMouseLef

; 588  : 			return TRUE;

  0002c	b8 01 00 00 00	 mov	 eax, 1

; 591  : 	}

  00031	8b e5		 mov	 esp, ebp
  00033	5d		 pop	 ebp
  00034	c3		 ret	 0
$LN3@OnMouseLef:

; 589  : 
; 590  : 		return FALSE;

  00035	33 c0		 xor	 eax, eax

; 591  : 	}

  00037	8b e5		 mov	 esp, ebp
  00039	5d		 pop	 ebp
  0003a	c3		 ret	 0
?OnMouseLeftButtonDoubleClick@CWindow@UI@@UAEHXZ ENDP	; UI::CWindow::OnMouseLeftButtonDoubleClick
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnMouseLeftButtonUp@CWindow@UI@@UAEHXZ
_TEXT	SEGMENT
?OnMouseLeftButtonUp@CWindow@UI@@UAEHXZ PROC		; UI::CWindow::OnMouseLeftButtonUp, COMDAT
; _this$ = ecx

; 578  : 	{

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 579  : 		PyCallClassMemberFunc(m_poHandler, "OnMouseLeftButtonUp", BuildEmptyTuple());

  00003	e8 00 00 00 00	 call	 ?BuildEmptyTuple@UI@@YAPAU_object@@XZ ; UI::BuildEmptyTuple
  00008	50		 push	 eax
  00009	68 00 00 00 00	 push	 OFFSET ??_C@_0BE@MJALGMGL@OnMouseLeftButtonUp@
  0000e	ff 76 5c	 push	 DWORD PTR [esi+92]
  00011	e8 00 00 00 00	 call	 ?PyCallClassMemberFunc@@YA_NPAU_object@@PBD0@Z ; PyCallClassMemberFunc
  00016	83 c4 0c	 add	 esp, 12			; 0000000cH

; 580  : 		return TRUE;

  00019	b8 01 00 00 00	 mov	 eax, 1
  0001e	5e		 pop	 esi

; 581  : 	}

  0001f	c3		 ret	 0
?OnMouseLeftButtonUp@CWindow@UI@@UAEHXZ ENDP		; UI::CWindow::OnMouseLeftButtonUp
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnMouseLeftButtonDown@CWindow@UI@@UAEHXZ
_TEXT	SEGMENT
_lValue$ = -4						; size = 4
?OnMouseLeftButtonDown@CWindow@UI@@UAEHXZ PROC		; UI::CWindow::OnMouseLeftButtonDown, COMDAT
; _this$ = ecx

; 568  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi

; 569  : 		long lValue;
; 570  : 		if (PyCallClassMemberFunc(m_poHandler, "OnMouseLeftButtonDown", BuildEmptyTuple(), &lValue))

  00005	8d 45 fc	 lea	 eax, DWORD PTR _lValue$[ebp]
  00008	8b f1		 mov	 esi, ecx
  0000a	50		 push	 eax
  0000b	e8 00 00 00 00	 call	 ?BuildEmptyTuple@UI@@YAPAU_object@@XZ ; UI::BuildEmptyTuple
  00010	50		 push	 eax
  00011	68 00 00 00 00	 push	 OFFSET ??_C@_0BG@DNDHJHBD@OnMouseLeftButtonDown@
  00016	ff 76 5c	 push	 DWORD PTR [esi+92]
  00019	e8 00 00 00 00	 call	 ?PyCallClassMemberFunc@@YA_NPAU_object@@PBD0PAJ@Z ; PyCallClassMemberFunc
  0001e	83 c4 10	 add	 esp, 16			; 00000010H
  00021	5e		 pop	 esi
  00022	84 c0		 test	 al, al
  00024	74 0f		 je	 SHORT $LN3@OnMouseLef

; 571  : 		if (0 != lValue)

  00026	83 7d fc 00	 cmp	 DWORD PTR _lValue$[ebp], 0
  0002a	74 09		 je	 SHORT $LN3@OnMouseLef

; 572  : 			return TRUE;

  0002c	b8 01 00 00 00	 mov	 eax, 1

; 575  : 	}

  00031	8b e5		 mov	 esp, ebp
  00033	5d		 pop	 ebp
  00034	c3		 ret	 0
$LN3@OnMouseLef:

; 573  : 
; 574  : 		return FALSE;

  00035	33 c0		 xor	 eax, eax

; 575  : 	}

  00037	8b e5		 mov	 esp, ebp
  00039	5d		 pop	 ebp
  0003a	c3		 ret	 0
?OnMouseLeftButtonDown@CWindow@UI@@UAEHXZ ENDP		; UI::CWindow::OnMouseLeftButtonDown
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnIMECloseReadingWndEvent@CWindow@UI@@UAEHXZ
_TEXT	SEGMENT
_lValue$ = -4						; size = 4
?OnIMECloseReadingWndEvent@CWindow@UI@@UAEHXZ PROC	; UI::CWindow::OnIMECloseReadingWndEvent, COMDAT
; _this$ = ecx

; 743  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi

; 744  : 		long lValue;
; 745  : 		if (PyCallClassMemberFunc(m_poHandler, "OnIMECloseReadingWnd", BuildEmptyTuple(), &lValue))

  00005	8d 45 fc	 lea	 eax, DWORD PTR _lValue$[ebp]
  00008	8b f1		 mov	 esi, ecx
  0000a	50		 push	 eax
  0000b	e8 00 00 00 00	 call	 ?BuildEmptyTuple@UI@@YAPAU_object@@XZ ; UI::BuildEmptyTuple
  00010	50		 push	 eax
  00011	68 00 00 00 00	 push	 OFFSET ??_C@_0BF@DEOILJPB@OnIMECloseReadingWnd@
  00016	ff 76 5c	 push	 DWORD PTR [esi+92]
  00019	e8 00 00 00 00	 call	 ?PyCallClassMemberFunc@@YA_NPAU_object@@PBD0PAJ@Z ; PyCallClassMemberFunc
  0001e	83 c4 10	 add	 esp, 16			; 00000010H
  00021	5e		 pop	 esi
  00022	84 c0		 test	 al, al
  00024	74 0f		 je	 SHORT $LN3@OnIMEClose

; 746  : 		if (0 != lValue)

  00026	83 7d fc 00	 cmp	 DWORD PTR _lValue$[ebp], 0
  0002a	74 09		 je	 SHORT $LN3@OnIMEClose

; 747  : 			return TRUE;

  0002c	b8 01 00 00 00	 mov	 eax, 1

; 750  : 	}

  00031	8b e5		 mov	 esp, ebp
  00033	5d		 pop	 ebp
  00034	c3		 ret	 0
$LN3@OnIMEClose:

; 748  : 
; 749  : 		return FALSE;

  00035	33 c0		 xor	 eax, eax

; 750  : 	}

  00037	8b e5		 mov	 esp, ebp
  00039	5d		 pop	 ebp
  0003a	c3		 ret	 0
?OnIMECloseReadingWndEvent@CWindow@UI@@UAEHXZ ENDP	; UI::CWindow::OnIMECloseReadingWndEvent
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnIMEOpenReadingWndEvent@CWindow@UI@@UAEHXZ
_TEXT	SEGMENT
_lValue$ = -4						; size = 4
?OnIMEOpenReadingWndEvent@CWindow@UI@@UAEHXZ PROC	; UI::CWindow::OnIMEOpenReadingWndEvent, COMDAT
; _this$ = ecx

; 733  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi

; 734  : 		long lValue;
; 735  : 		if (PyCallClassMemberFunc(m_poHandler, "OnIMEOpenReadingWnd", BuildEmptyTuple(), &lValue))

  00005	8d 45 fc	 lea	 eax, DWORD PTR _lValue$[ebp]
  00008	8b f1		 mov	 esi, ecx
  0000a	50		 push	 eax
  0000b	e8 00 00 00 00	 call	 ?BuildEmptyTuple@UI@@YAPAU_object@@XZ ; UI::BuildEmptyTuple
  00010	50		 push	 eax
  00011	68 00 00 00 00	 push	 OFFSET ??_C@_0BE@KDCLEDDC@OnIMEOpenReadingWnd@
  00016	ff 76 5c	 push	 DWORD PTR [esi+92]
  00019	e8 00 00 00 00	 call	 ?PyCallClassMemberFunc@@YA_NPAU_object@@PBD0PAJ@Z ; PyCallClassMemberFunc
  0001e	83 c4 10	 add	 esp, 16			; 00000010H
  00021	5e		 pop	 esi
  00022	84 c0		 test	 al, al
  00024	74 0f		 je	 SHORT $LN3@OnIMEOpenR

; 736  : 		if (0 != lValue)

  00026	83 7d fc 00	 cmp	 DWORD PTR _lValue$[ebp], 0
  0002a	74 09		 je	 SHORT $LN3@OnIMEOpenR

; 737  : 			return TRUE;

  0002c	b8 01 00 00 00	 mov	 eax, 1

; 740  : 	}

  00031	8b e5		 mov	 esp, ebp
  00033	5d		 pop	 ebp
  00034	c3		 ret	 0
$LN3@OnIMEOpenR:

; 738  : 
; 739  : 		return FALSE;

  00035	33 c0		 xor	 eax, eax

; 740  : 	}

  00037	8b e5		 mov	 esp, ebp
  00039	5d		 pop	 ebp
  0003a	c3		 ret	 0
?OnIMEOpenReadingWndEvent@CWindow@UI@@UAEHXZ ENDP	; UI::CWindow::OnIMEOpenReadingWndEvent
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnIMECloseCandidateListEvent@CWindow@UI@@UAEHXZ
_TEXT	SEGMENT
_lValue$ = -4						; size = 4
?OnIMECloseCandidateListEvent@CWindow@UI@@UAEHXZ PROC	; UI::CWindow::OnIMECloseCandidateListEvent, COMDAT
; _this$ = ecx

; 723  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi

; 724  : 		long lValue;
; 725  : 		if (PyCallClassMemberFunc(m_poHandler, "OnIMECloseCandidateList", BuildEmptyTuple(), &lValue))

  00005	8d 45 fc	 lea	 eax, DWORD PTR _lValue$[ebp]
  00008	8b f1		 mov	 esi, ecx
  0000a	50		 push	 eax
  0000b	e8 00 00 00 00	 call	 ?BuildEmptyTuple@UI@@YAPAU_object@@XZ ; UI::BuildEmptyTuple
  00010	50		 push	 eax
  00011	68 00 00 00 00	 push	 OFFSET ??_C@_0BI@LOIKIPJ@OnIMECloseCandidateList@
  00016	ff 76 5c	 push	 DWORD PTR [esi+92]
  00019	e8 00 00 00 00	 call	 ?PyCallClassMemberFunc@@YA_NPAU_object@@PBD0PAJ@Z ; PyCallClassMemberFunc
  0001e	83 c4 10	 add	 esp, 16			; 00000010H
  00021	5e		 pop	 esi
  00022	84 c0		 test	 al, al
  00024	74 0f		 je	 SHORT $LN3@OnIMEClose

; 726  : 		if (0 != lValue)

  00026	83 7d fc 00	 cmp	 DWORD PTR _lValue$[ebp], 0
  0002a	74 09		 je	 SHORT $LN3@OnIMEClose

; 727  : 			return TRUE;

  0002c	b8 01 00 00 00	 mov	 eax, 1

; 730  : 	}

  00031	8b e5		 mov	 esp, ebp
  00033	5d		 pop	 ebp
  00034	c3		 ret	 0
$LN3@OnIMEClose:

; 728  : 
; 729  : 		return FALSE;

  00035	33 c0		 xor	 eax, eax

; 730  : 	}

  00037	8b e5		 mov	 esp, ebp
  00039	5d		 pop	 ebp
  0003a	c3		 ret	 0
?OnIMECloseCandidateListEvent@CWindow@UI@@UAEHXZ ENDP	; UI::CWindow::OnIMECloseCandidateListEvent
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnIMEOpenCandidateListEvent@CWindow@UI@@UAEHXZ
_TEXT	SEGMENT
_lValue$ = -4						; size = 4
?OnIMEOpenCandidateListEvent@CWindow@UI@@UAEHXZ PROC	; UI::CWindow::OnIMEOpenCandidateListEvent, COMDAT
; _this$ = ecx

; 713  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi

; 714  : 		long lValue;
; 715  : 		if (PyCallClassMemberFunc(m_poHandler, "OnIMEOpenCandidateList", BuildEmptyTuple(), &lValue))

  00005	8d 45 fc	 lea	 eax, DWORD PTR _lValue$[ebp]
  00008	8b f1		 mov	 esi, ecx
  0000a	50		 push	 eax
  0000b	e8 00 00 00 00	 call	 ?BuildEmptyTuple@UI@@YAPAU_object@@XZ ; UI::BuildEmptyTuple
  00010	50		 push	 eax
  00011	68 00 00 00 00	 push	 OFFSET ??_C@_0BH@HEDPBKEK@OnIMEOpenCandidateList@
  00016	ff 76 5c	 push	 DWORD PTR [esi+92]
  00019	e8 00 00 00 00	 call	 ?PyCallClassMemberFunc@@YA_NPAU_object@@PBD0PAJ@Z ; PyCallClassMemberFunc
  0001e	83 c4 10	 add	 esp, 16			; 00000010H
  00021	5e		 pop	 esi
  00022	84 c0		 test	 al, al
  00024	74 0f		 je	 SHORT $LN3@OnIMEOpenC

; 716  : 		if (0 != lValue)

  00026	83 7d fc 00	 cmp	 DWORD PTR _lValue$[ebp], 0
  0002a	74 09		 je	 SHORT $LN3@OnIMEOpenC

; 717  : 			return TRUE;

  0002c	b8 01 00 00 00	 mov	 eax, 1

; 720  : 	}

  00031	8b e5		 mov	 esp, ebp
  00033	5d		 pop	 ebp
  00034	c3		 ret	 0
$LN3@OnIMEOpenC:

; 718  : 
; 719  : 		return FALSE;

  00035	33 c0		 xor	 eax, eax

; 720  : 	}

  00037	8b e5		 mov	 esp, ebp
  00039	5d		 pop	 ebp
  0003a	c3		 ret	 0
?OnIMEOpenCandidateListEvent@CWindow@UI@@UAEHXZ ENDP	; UI::CWindow::OnIMEOpenCandidateListEvent
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnIMEChangeCodePage@CWindow@UI@@UAEHXZ
_TEXT	SEGMENT
_lValue$ = -4						; size = 4
?OnIMEChangeCodePage@CWindow@UI@@UAEHXZ PROC		; UI::CWindow::OnIMEChangeCodePage, COMDAT
; _this$ = ecx

; 703  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi

; 704  : 		long lValue;
; 705  : 		if (PyCallClassMemberFunc(m_poHandler, "OnIMEChangeCodePage", BuildEmptyTuple(), &lValue))

  00005	8d 45 fc	 lea	 eax, DWORD PTR _lValue$[ebp]
  00008	8b f1		 mov	 esi, ecx
  0000a	50		 push	 eax
  0000b	e8 00 00 00 00	 call	 ?BuildEmptyTuple@UI@@YAPAU_object@@XZ ; UI::BuildEmptyTuple
  00010	50		 push	 eax
  00011	68 00 00 00 00	 push	 OFFSET ??_C@_0BE@EHKLBB@OnIMEChangeCodePage@
  00016	ff 76 5c	 push	 DWORD PTR [esi+92]
  00019	e8 00 00 00 00	 call	 ?PyCallClassMemberFunc@@YA_NPAU_object@@PBD0PAJ@Z ; PyCallClassMemberFunc
  0001e	83 c4 10	 add	 esp, 16			; 00000010H
  00021	5e		 pop	 esi
  00022	84 c0		 test	 al, al
  00024	74 0f		 je	 SHORT $LN3@OnIMEChang

; 706  : 		if (0 != lValue)

  00026	83 7d fc 00	 cmp	 DWORD PTR _lValue$[ebp], 0
  0002a	74 09		 je	 SHORT $LN3@OnIMEChang

; 707  : 			return TRUE;

  0002c	b8 01 00 00 00	 mov	 eax, 1

; 710  : 	}

  00031	8b e5		 mov	 esp, ebp
  00033	5d		 pop	 ebp
  00034	c3		 ret	 0
$LN3@OnIMEChang:

; 708  : 
; 709  : 		return FALSE;

  00035	33 c0		 xor	 eax, eax

; 710  : 	}

  00037	8b e5		 mov	 esp, ebp
  00039	5d		 pop	 ebp
  0003a	c3		 ret	 0
?OnIMEChangeCodePage@CWindow@UI@@UAEHXZ ENDP		; UI::CWindow::OnIMEChangeCodePage
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnIMEKeyDownEvent@CWindow@UI@@UAEHH@Z
_TEXT	SEGMENT
_lValue$ = -4						; size = 4
_ikey$ = 8						; size = 4
?OnIMEKeyDownEvent@CWindow@UI@@UAEHH@Z PROC		; UI::CWindow::OnIMEKeyDownEvent, COMDAT
; _this$ = ecx

; 693  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi

; 694  : 		long lValue;
; 695  : 		if (PyCallClassMemberFunc(m_poHandler, "OnIMEKeyDown", Py_BuildValue("(i)", ikey), &lValue))

  00005	8d 45 fc	 lea	 eax, DWORD PTR _lValue$[ebp]
  00008	8b f1		 mov	 esi, ecx
  0000a	50		 push	 eax
  0000b	ff 75 08	 push	 DWORD PTR _ikey$[ebp]
  0000e	68 00 00 00 00	 push	 OFFSET ??_C@_03LIHNMIHG@?$CIi?$CJ@
  00013	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__Py_BuildValue
  00019	83 c4 08	 add	 esp, 8
  0001c	50		 push	 eax
  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_0N@BMPDGPBH@OnIMEKeyDown@
  00022	ff 76 5c	 push	 DWORD PTR [esi+92]
  00025	e8 00 00 00 00	 call	 ?PyCallClassMemberFunc@@YA_NPAU_object@@PBD0PAJ@Z ; PyCallClassMemberFunc
  0002a	83 c4 10	 add	 esp, 16			; 00000010H
  0002d	5e		 pop	 esi
  0002e	84 c0		 test	 al, al
  00030	74 11		 je	 SHORT $LN3@OnIMEKeyDo

; 696  : 		if (0 != lValue)

  00032	83 7d fc 00	 cmp	 DWORD PTR _lValue$[ebp], 0
  00036	74 0b		 je	 SHORT $LN3@OnIMEKeyDo

; 697  : 			return TRUE;

  00038	b8 01 00 00 00	 mov	 eax, 1

; 700  : 	}

  0003d	8b e5		 mov	 esp, ebp
  0003f	5d		 pop	 ebp
  00040	c2 04 00	 ret	 4
$LN3@OnIMEKeyDo:

; 698  : 
; 699  : 		return FALSE;

  00043	33 c0		 xor	 eax, eax

; 700  : 	}

  00045	8b e5		 mov	 esp, ebp
  00047	5d		 pop	 ebp
  00048	c2 04 00	 ret	 4
?OnIMEKeyDownEvent@CWindow@UI@@UAEHH@Z ENDP		; UI::CWindow::OnIMEKeyDownEvent
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnIMEReturnEvent@CWindow@UI@@UAEHXZ
_TEXT	SEGMENT
_lValue$ = -4						; size = 4
?OnIMEReturnEvent@CWindow@UI@@UAEHXZ PROC		; UI::CWindow::OnIMEReturnEvent, COMDAT
; _this$ = ecx

; 683  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi

; 684  : 		long lValue;
; 685  : 		if (PyCallClassMemberFunc(m_poHandler, "OnIMEReturn", BuildEmptyTuple(), &lValue))

  00005	8d 45 fc	 lea	 eax, DWORD PTR _lValue$[ebp]
  00008	8b f1		 mov	 esi, ecx
  0000a	50		 push	 eax
  0000b	e8 00 00 00 00	 call	 ?BuildEmptyTuple@UI@@YAPAU_object@@XZ ; UI::BuildEmptyTuple
  00010	50		 push	 eax
  00011	68 00 00 00 00	 push	 OFFSET ??_C@_0M@PILLCCFN@OnIMEReturn@
  00016	ff 76 5c	 push	 DWORD PTR [esi+92]
  00019	e8 00 00 00 00	 call	 ?PyCallClassMemberFunc@@YA_NPAU_object@@PBD0PAJ@Z ; PyCallClassMemberFunc
  0001e	83 c4 10	 add	 esp, 16			; 00000010H
  00021	5e		 pop	 esi
  00022	84 c0		 test	 al, al
  00024	74 0f		 je	 SHORT $LN3@OnIMERetur

; 686  : 		if (0 != lValue)

  00026	83 7d fc 00	 cmp	 DWORD PTR _lValue$[ebp], 0
  0002a	74 09		 je	 SHORT $LN3@OnIMERetur

; 687  : 			return TRUE;

  0002c	b8 01 00 00 00	 mov	 eax, 1

; 690  : 	}

  00031	8b e5		 mov	 esp, ebp
  00033	5d		 pop	 ebp
  00034	c3		 ret	 0
$LN3@OnIMERetur:

; 688  : 
; 689  : 		return FALSE;

  00035	33 c0		 xor	 eax, eax

; 690  : 	}

  00037	8b e5		 mov	 esp, ebp
  00039	5d		 pop	 ebp
  0003a	c3		 ret	 0
?OnIMEReturnEvent@CWindow@UI@@UAEHXZ ENDP		; UI::CWindow::OnIMEReturnEvent
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnIMETabEvent@CWindow@UI@@UAEHXZ
_TEXT	SEGMENT
_lValue$ = -4						; size = 4
?OnIMETabEvent@CWindow@UI@@UAEHXZ PROC			; UI::CWindow::OnIMETabEvent, COMDAT
; _this$ = ecx

; 673  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi

; 674  : 		long lValue;
; 675  : 		if (PyCallClassMemberFunc(m_poHandler, "OnIMETab", BuildEmptyTuple(), &lValue))

  00005	8d 45 fc	 lea	 eax, DWORD PTR _lValue$[ebp]
  00008	8b f1		 mov	 esi, ecx
  0000a	50		 push	 eax
  0000b	e8 00 00 00 00	 call	 ?BuildEmptyTuple@UI@@YAPAU_object@@XZ ; UI::BuildEmptyTuple
  00010	50		 push	 eax
  00011	68 00 00 00 00	 push	 OFFSET ??_C@_08HFELFLOI@OnIMETab@
  00016	ff 76 5c	 push	 DWORD PTR [esi+92]
  00019	e8 00 00 00 00	 call	 ?PyCallClassMemberFunc@@YA_NPAU_object@@PBD0PAJ@Z ; PyCallClassMemberFunc
  0001e	83 c4 10	 add	 esp, 16			; 00000010H
  00021	5e		 pop	 esi
  00022	84 c0		 test	 al, al
  00024	74 0f		 je	 SHORT $LN3@OnIMETabEv

; 676  : 		if (0 != lValue)

  00026	83 7d fc 00	 cmp	 DWORD PTR _lValue$[ebp], 0
  0002a	74 09		 je	 SHORT $LN3@OnIMETabEv

; 677  : 			return TRUE;

  0002c	b8 01 00 00 00	 mov	 eax, 1

; 680  : 	}

  00031	8b e5		 mov	 esp, ebp
  00033	5d		 pop	 ebp
  00034	c3		 ret	 0
$LN3@OnIMETabEv:

; 678  : 
; 679  : 		return FALSE;

  00035	33 c0		 xor	 eax, eax

; 680  : 	}

  00037	8b e5		 mov	 esp, ebp
  00039	5d		 pop	 ebp
  0003a	c3		 ret	 0
?OnIMETabEvent@CWindow@UI@@UAEHXZ ENDP			; UI::CWindow::OnIMETabEvent
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\list
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\list
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\list
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?RunPressExitKeyEvent@CWindow@UI@@QAEHXZ
_TEXT	SEGMENT
?RunPressExitKeyEvent@CWindow@UI@@QAEHXZ PROC		; UI::CWindow::RunPressExitKeyEvent, COMDAT
; _this$ = ecx

; 550  : 	{

  00000	53		 push	 ebx
  00001	8b d9		 mov	 ebx, ecx
  00003	56		 push	 esi
  00004	57		 push	 edi
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\list

; 38   :     _List_unchecked_const_iterator(_Nodeptr _Pnode, const _Mylist* _Plist) noexcept : _Ptr(_Pnode) {

  00005	8b 43 64	 mov	 eax, DWORD PTR [ebx+100]

; 198  :         return this->_Ptr == _Right._Ptr;

  00008	3b 00		 cmp	 eax, DWORD PTR [eax]
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp

; 552  : 		for (itor = m_pChildList.rbegin(); itor != m_pChildList.rend(); ++itor)

  0000a	74 33		 je	 SHORT $LN3@RunPressEx
  0000c	0f 1f 40 00	 npad	 4
$LL34@RunPressEx:
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\list

; 176  :         const auto _New_ptr = this->_Ptr->_Prev;

  00010	8d 78 04	 lea	 edi, DWORD PTR [eax+4]

; 177  : #if _ITERATOR_DEBUG_LEVEL == 2
; 178  :         const auto _Mycont = static_cast<const _Mylist*>(this->_Getcont());
; 179  :         _STL_ASSERT(_Mycont, "cannot decrement value-initialized list iterator");
; 180  :         _STL_VERIFY(_New_ptr != _Mycont->_Myhead, "cannot decrement begin list iterator");
; 181  : #endif // _ITERATOR_DEBUG_LEVEL == 2
; 182  : 
; 183  :         this->_Ptr = _New_ptr;

  00013	8b 07		 mov	 eax, DWORD PTR [edi]
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp

; 554  : 			CWindow * pWindow = *itor;

  00015	8b 70 08	 mov	 esi, DWORD PTR [eax+8]

; 555  : 
; 556  : 			if (pWindow->RunPressExitKeyEvent())

  00018	8b ce		 mov	 ecx, esi
  0001a	e8 00 00 00 00	 call	 ?RunPressExitKeyEvent@CWindow@UI@@QAEHXZ ; UI::CWindow::RunPressExitKeyEvent
  0001f	85 c0		 test	 eax, eax
  00021	75 22		 jne	 SHORT $LN65@RunPressEx

; 557  : 				return TRUE;
; 558  : 
; 559  : 			if (pWindow->IsShow())

  00023	38 46 55	 cmp	 BYTE PTR [esi+85], al
  00026	74 0e		 je	 SHORT $LN2@RunPressEx

; 560  : 			if (pWindow->OnPressExitKey())

  00028	8b 06		 mov	 eax, DWORD PTR [esi]
  0002a	8b ce		 mov	 ecx, esi
  0002c	ff 90 90 00 00
	00		 call	 DWORD PTR [eax+144]
  00032	85 c0		 test	 eax, eax
  00034	75 0f		 jne	 SHORT $LN65@RunPressEx
$LN2@RunPressEx:
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\list

; 1083 :         return iterator(_Mypair._Myval2._Myhead->_Next, _STD addressof(_Mypair._Myval2));

  00036	8b 4b 64	 mov	 ecx, DWORD PTR [ebx+100]

; 183  :         this->_Ptr = _New_ptr;

  00039	8b 07		 mov	 eax, DWORD PTR [edi]

; 198  :         return this->_Ptr == _Right._Ptr;

  0003b	3b 01		 cmp	 eax, DWORD PTR [ecx]
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp

; 552  : 		for (itor = m_pChildList.rbegin(); itor != m_pChildList.rend(); ++itor)

  0003d	75 d1		 jne	 SHORT $LL34@RunPressEx
$LN3@RunPressEx:
  0003f	5f		 pop	 edi

; 561  : 				return TRUE;
; 562  : 		}
; 563  : 
; 564  : 		return FALSE;
; 565  : 	}

  00040	5e		 pop	 esi
  00041	33 c0		 xor	 eax, eax
  00043	5b		 pop	 ebx
  00044	c3		 ret	 0
$LN65@RunPressEx:
  00045	5f		 pop	 edi
  00046	5e		 pop	 esi
  00047	b8 01 00 00 00	 mov	 eax, 1
  0004c	5b		 pop	 ebx
  0004d	c3		 ret	 0
?RunPressExitKeyEvent@CWindow@UI@@QAEHXZ ENDP		; UI::CWindow::RunPressExitKeyEvent
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\list
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\list
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\list
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?RunPressEscapeKeyEvent@CWindow@UI@@QAEHXZ
_TEXT	SEGMENT
?RunPressEscapeKeyEvent@CWindow@UI@@QAEHXZ PROC		; UI::CWindow::RunPressEscapeKeyEvent, COMDAT
; _this$ = ecx

; 532  : 	{

  00000	56		 push	 esi
  00001	57		 push	 edi
  00002	8b f9		 mov	 edi, ecx
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\list

; 38   :     _List_unchecked_const_iterator(_Nodeptr _Pnode, const _Mylist* _Plist) noexcept : _Ptr(_Pnode) {

  00004	8b 47 64	 mov	 eax, DWORD PTR [edi+100]

; 198  :         return this->_Ptr == _Right._Ptr;

  00007	3b 00		 cmp	 eax, DWORD PTR [eax]
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp

; 534  : 		for (itor = m_pChildList.rbegin(); itor != m_pChildList.rend(); ++itor)

  00009	74 25		 je	 SHORT $LN3@RunPressEs
  0000b	0f 1f 44 00 00	 npad	 5
$LL34@RunPressEs:
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\list

; 176  :         const auto _New_ptr = this->_Ptr->_Prev;

  00010	8d 70 04	 lea	 esi, DWORD PTR [eax+4]

; 177  : #if _ITERATOR_DEBUG_LEVEL == 2
; 178  :         const auto _Mycont = static_cast<const _Mylist*>(this->_Getcont());
; 179  :         _STL_ASSERT(_Mycont, "cannot decrement value-initialized list iterator");
; 180  :         _STL_VERIFY(_New_ptr != _Mycont->_Myhead, "cannot decrement begin list iterator");
; 181  : #endif // _ITERATOR_DEBUG_LEVEL == 2
; 182  : 
; 183  :         this->_Ptr = _New_ptr;

  00013	8b 06		 mov	 eax, DWORD PTR [esi]
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp

; 536  : 			CWindow * pWindow = *itor;

  00015	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]

; 537  : 
; 538  : 			if (pWindow->IsShow())

  00018	80 79 55 00	 cmp	 BYTE PTR [ecx+85], 0
  0001c	74 09		 je	 SHORT $LN2@RunPressEs

; 539  : 			if (pWindow->RunPressEscapeKeyEvent())

  0001e	e8 00 00 00 00	 call	 ?RunPressEscapeKeyEvent@CWindow@UI@@QAEHXZ ; UI::CWindow::RunPressEscapeKeyEvent
  00023	85 c0		 test	 eax, eax
  00025	75 17		 jne	 SHORT $LN68@RunPressEs
$LN2@RunPressEs:
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\list

; 1083 :         return iterator(_Mypair._Myval2._Myhead->_Next, _STD addressof(_Mypair._Myval2));

  00027	8b 4f 64	 mov	 ecx, DWORD PTR [edi+100]

; 183  :         this->_Ptr = _New_ptr;

  0002a	8b 06		 mov	 eax, DWORD PTR [esi]

; 198  :         return this->_Ptr == _Right._Ptr;

  0002c	3b 01		 cmp	 eax, DWORD PTR [ecx]
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp

; 534  : 		for (itor = m_pChildList.rbegin(); itor != m_pChildList.rend(); ++itor)

  0002e	75 e0		 jne	 SHORT $LL34@RunPressEs
$LN3@RunPressEs:

; 540  : 				return TRUE;
; 541  : 		}
; 542  : 
; 543  : 		if (OnPressEscapeKey())

  00030	8b 07		 mov	 eax, DWORD PTR [edi]
  00032	8b cf		 mov	 ecx, edi
  00034	ff 90 8c 00 00
	00		 call	 DWORD PTR [eax+140]
  0003a	85 c0		 test	 eax, eax
  0003c	74 08		 je	 SHORT $LN7@RunPressEs
$LN68@RunPressEs:
  0003e	5f		 pop	 edi

; 544  : 			return TRUE;

  0003f	b8 01 00 00 00	 mov	 eax, 1

; 547  : 	}

  00044	5e		 pop	 esi
  00045	c3		 ret	 0
$LN7@RunPressEs:
  00046	5f		 pop	 edi

; 545  : 
; 546  : 		return FALSE;

  00047	33 c0		 xor	 eax, eax

; 547  : 	}

  00049	5e		 pop	 esi
  0004a	c3		 ret	 0
?RunPressEscapeKeyEvent@CWindow@UI@@QAEHXZ ENDP		; UI::CWindow::RunPressEscapeKeyEvent
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\list
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\list
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\list
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?RunKeyUpEvent@CWindow@UI@@QAEHH@Z
_TEXT	SEGMENT
_ikey$ = 8						; size = 4
?RunKeyUpEvent@CWindow@UI@@QAEHH@Z PROC			; UI::CWindow::RunKeyUpEvent, COMDAT
; _this$ = ecx

; 514  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx

; 515  : 		if (OnKeyUp(ikey))

  00004	8b 5d 08	 mov	 ebx, DWORD PTR _ikey$[ebp]
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	8b f9		 mov	 edi, ecx
  0000b	53		 push	 ebx
  0000c	8b 07		 mov	 eax, DWORD PTR [edi]
  0000e	ff 90 88 00 00
	00		 call	 DWORD PTR [eax+136]
  00014	85 c0		 test	 eax, eax
  00016	75 32		 jne	 SHORT $LN64@RunKeyUpEv
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\list

; 38   :     _List_unchecked_const_iterator(_Nodeptr _Pnode, const _Mylist* _Plist) noexcept : _Ptr(_Pnode) {

  00018	8b 47 64	 mov	 eax, DWORD PTR [edi+100]

; 198  :         return this->_Ptr == _Right._Ptr;

  0001b	3b 00		 cmp	 eax, DWORD PTR [eax]
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp

; 519  : 		for (itor = m_pChildList.rbegin(); itor != m_pChildList.rend(); ++itor)

  0001d	74 22		 je	 SHORT $LN68@RunKeyUpEv
  0001f	90		 npad	 1
$LL34@RunKeyUpEv:
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\list

; 176  :         const auto _New_ptr = this->_Ptr->_Prev;

  00020	8d 70 04	 lea	 esi, DWORD PTR [eax+4]

; 177  : #if _ITERATOR_DEBUG_LEVEL == 2
; 178  :         const auto _Mycont = static_cast<const _Mylist*>(this->_Getcont());
; 179  :         _STL_ASSERT(_Mycont, "cannot decrement value-initialized list iterator");
; 180  :         _STL_VERIFY(_New_ptr != _Mycont->_Myhead, "cannot decrement begin list iterator");
; 181  : #endif // _ITERATOR_DEBUG_LEVEL == 2
; 182  : 
; 183  :         this->_Ptr = _New_ptr;

  00023	8b 06		 mov	 eax, DWORD PTR [esi]
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp

; 521  : 			CWindow * pWindow = *itor;

  00025	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]

; 522  : 
; 523  : 			if (pWindow->IsShow())

  00028	80 79 55 00	 cmp	 BYTE PTR [ecx+85], 0
  0002c	74 0a		 je	 SHORT $LN2@RunKeyUpEv

; 524  : 			if (pWindow->RunKeyUpEvent(ikey))

  0002e	53		 push	 ebx
  0002f	e8 00 00 00 00	 call	 ?RunKeyUpEvent@CWindow@UI@@QAEHH@Z ; UI::CWindow::RunKeyUpEvent
  00034	85 c0		 test	 eax, eax
  00036	75 12		 jne	 SHORT $LN64@RunKeyUpEv
$LN2@RunKeyUpEv:
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\list

; 1083 :         return iterator(_Mypair._Myval2._Myhead->_Next, _STD addressof(_Mypair._Myval2));

  00038	8b 4f 64	 mov	 ecx, DWORD PTR [edi+100]

; 183  :         this->_Ptr = _New_ptr;

  0003b	8b 06		 mov	 eax, DWORD PTR [esi]

; 198  :         return this->_Ptr == _Right._Ptr;

  0003d	3b 01		 cmp	 eax, DWORD PTR [ecx]
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp

; 519  : 		for (itor = m_pChildList.rbegin(); itor != m_pChildList.rend(); ++itor)

  0003f	75 df		 jne	 SHORT $LL34@RunKeyUpEv
$LN68@RunKeyUpEv:
  00041	5f		 pop	 edi

; 525  : 				return TRUE;
; 526  : 		}
; 527  : 
; 528  : 		return FALSE;
; 529  : 	}

  00042	5e		 pop	 esi
  00043	33 c0		 xor	 eax, eax
  00045	5b		 pop	 ebx
  00046	5d		 pop	 ebp
  00047	c2 04 00	 ret	 4
$LN64@RunKeyUpEv:
  0004a	5f		 pop	 edi
  0004b	5e		 pop	 esi
  0004c	b8 01 00 00 00	 mov	 eax, 1
  00051	5b		 pop	 ebx
  00052	5d		 pop	 ebp
  00053	c2 04 00	 ret	 4
?RunKeyUpEvent@CWindow@UI@@QAEHH@Z ENDP			; UI::CWindow::RunKeyUpEvent
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\list
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\list
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\list
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?RunKeyDownEvent@CWindow@UI@@QAEPAV12@H@Z
_TEXT	SEGMENT
_ikey$ = 8						; size = 4
?RunKeyDownEvent@CWindow@UI@@QAEPAV12@H@Z PROC		; UI::CWindow::RunKeyDownEvent, COMDAT
; _this$ = ecx

; 491  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx

; 492  : 		if (OnKeyDown(ikey))

  00004	8b 5d 08	 mov	 ebx, DWORD PTR _ikey$[ebp]
  00007	57		 push	 edi
  00008	8b f9		 mov	 edi, ecx
  0000a	53		 push	 ebx
  0000b	8b 07		 mov	 eax, DWORD PTR [edi]
  0000d	ff 90 84 00 00
	00		 call	 DWORD PTR [eax+132]
  00013	85 c0		 test	 eax, eax
  00015	74 08		 je	 SHORT $LN5@RunKeyDown

; 493  : 			return this;

  00017	8b c7		 mov	 eax, edi
  00019	5f		 pop	 edi

; 511  : 	}

  0001a	5b		 pop	 ebx
  0001b	5d		 pop	 ebp
  0001c	c2 04 00	 ret	 4
$LN5@RunKeyDown:
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\list

; 38   :     _List_unchecked_const_iterator(_Nodeptr _Pnode, const _Mylist* _Plist) noexcept : _Ptr(_Pnode) {

  0001f	8b 47 64	 mov	 eax, DWORD PTR [edi+100]
  00022	56		 push	 esi

; 198  :         return this->_Ptr == _Right._Ptr;

  00023	3b 00		 cmp	 eax, DWORD PTR [eax]
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp

; 496  : 		for (itor = m_pChildList.rbegin(); itor != m_pChildList.rend(); ++itor)

  00025	74 21		 je	 SHORT $LN68@RunKeyDown
$LL34@RunKeyDown:
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\list

; 176  :         const auto _New_ptr = this->_Ptr->_Prev;

  00027	8d 70 04	 lea	 esi, DWORD PTR [eax+4]

; 177  : #if _ITERATOR_DEBUG_LEVEL == 2
; 178  :         const auto _Mycont = static_cast<const _Mylist*>(this->_Getcont());
; 179  :         _STL_ASSERT(_Mycont, "cannot decrement value-initialized list iterator");
; 180  :         _STL_VERIFY(_New_ptr != _Mycont->_Myhead, "cannot decrement begin list iterator");
; 181  : #endif // _ITERATOR_DEBUG_LEVEL == 2
; 182  : 
; 183  :         this->_Ptr = _New_ptr;

  0002a	8b 06		 mov	 eax, DWORD PTR [esi]
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp

; 498  : 			CWindow * pWindow = *itor;

  0002c	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]

; 499  : 
; 500  : 			if (pWindow->IsShow())

  0002f	80 79 55 00	 cmp	 BYTE PTR [ecx+85], 0
  00033	74 0a		 je	 SHORT $LN2@RunKeyDown

; 501  : 			{
; 502  : 				CWindow * pProcessedWindow = pWindow->RunKeyDownEvent(ikey);

  00035	53		 push	 ebx
  00036	e8 00 00 00 00	 call	 ?RunKeyDownEvent@CWindow@UI@@QAEPAV12@H@Z ; UI::CWindow::RunKeyDownEvent

; 503  : 				if (NULL != pProcessedWindow)

  0003b	85 c0		 test	 eax, eax
  0003d	75 0b		 jne	 SHORT $LN69@RunKeyDown
$LN2@RunKeyDown:
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\list

; 1083 :         return iterator(_Mypair._Myval2._Myhead->_Next, _STD addressof(_Mypair._Myval2));

  0003f	8b 4f 64	 mov	 ecx, DWORD PTR [edi+100]

; 183  :         this->_Ptr = _New_ptr;

  00042	8b 06		 mov	 eax, DWORD PTR [esi]

; 198  :         return this->_Ptr == _Right._Ptr;

  00044	3b 01		 cmp	 eax, DWORD PTR [ecx]
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp

; 496  : 		for (itor = m_pChildList.rbegin(); itor != m_pChildList.rend(); ++itor)

  00046	75 df		 jne	 SHORT $LL34@RunKeyDown
$LN68@RunKeyDown:

; 504  : 				{
; 505  : 					return pProcessedWindow;
; 506  : 				}
; 507  : 			}
; 508  : 		}
; 509  : 
; 510  : 		return NULL;

  00048	33 c0		 xor	 eax, eax
$LN69@RunKeyDown:
  0004a	5e		 pop	 esi
  0004b	5f		 pop	 edi

; 511  : 	}

  0004c	5b		 pop	 ebx
  0004d	5d		 pop	 ebp
  0004e	c2 04 00	 ret	 4
?RunKeyDownEvent@CWindow@UI@@QAEPAV12@H@Z ENDP		; UI::CWindow::RunKeyDownEvent
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\list
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\list
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\list
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?RunIMEKeyDownEvent@CWindow@UI@@QAEHH@Z
_TEXT	SEGMENT
_ikey$ = 8						; size = 4
?RunIMEKeyDownEvent@CWindow@UI@@QAEHH@Z PROC		; UI::CWindow::RunIMEKeyDownEvent, COMDAT
; _this$ = ecx

; 471  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx
  00004	56		 push	 esi
  00005	57		 push	 edi
  00006	8b f9		 mov	 edi, ecx

; 472  : 		if (!IsRendering())

  00008	e8 00 00 00 00	 call	 ?IsRendering@CWindow@UI@@QAE_NXZ ; UI::CWindow::IsRendering
  0000d	84 c0		 test	 al, al
  0000f	74 31		 je	 SHORT $LN3@RunIMEKeyD

; 473  : 			return FALSE;
; 474  : 
; 475  : 		if (OnIMEKeyDownEvent(ikey))

  00011	8b 07		 mov	 eax, DWORD PTR [edi]
  00013	8b cf		 mov	 ecx, edi
  00015	8b 5d 08	 mov	 ebx, DWORD PTR _ikey$[ebp]
  00018	53		 push	 ebx
  00019	ff 50 40	 call	 DWORD PTR [eax+64]
  0001c	85 c0		 test	 eax, eax
  0001e	75 2b		 jne	 SHORT $LN64@RunIMEKeyD
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\list

; 38   :     _List_unchecked_const_iterator(_Nodeptr _Pnode, const _Mylist* _Plist) noexcept : _Ptr(_Pnode) {

  00020	8b 47 64	 mov	 eax, DWORD PTR [edi+100]

; 198  :         return this->_Ptr == _Right._Ptr;

  00023	3b 00		 cmp	 eax, DWORD PTR [eax]
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp

; 479  : 		for (itor = m_pChildList.rbegin(); itor != m_pChildList.rend(); ++itor)

  00025	74 1b		 je	 SHORT $LN3@RunIMEKeyD
$LL34@RunIMEKeyD:
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\list

; 176  :         const auto _New_ptr = this->_Ptr->_Prev;

  00027	8d 70 04	 lea	 esi, DWORD PTR [eax+4]

; 177  : #if _ITERATOR_DEBUG_LEVEL == 2
; 178  :         const auto _Mycont = static_cast<const _Mylist*>(this->_Getcont());
; 179  :         _STL_ASSERT(_Mycont, "cannot decrement value-initialized list iterator");
; 180  :         _STL_VERIFY(_New_ptr != _Mycont->_Myhead, "cannot decrement begin list iterator");
; 181  : #endif // _ITERATOR_DEBUG_LEVEL == 2
; 182  : 
; 183  :         this->_Ptr = _New_ptr;

  0002a	8b 06		 mov	 eax, DWORD PTR [esi]
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp

; 483  : 			if (pWindow->RunIMEKeyDownEvent(ikey))

  0002c	53		 push	 ebx
  0002d	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00030	e8 00 00 00 00	 call	 ?RunIMEKeyDownEvent@CWindow@UI@@QAEHH@Z ; UI::CWindow::RunIMEKeyDownEvent
  00035	85 c0		 test	 eax, eax
  00037	75 12		 jne	 SHORT $LN64@RunIMEKeyD
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\list

; 1083 :         return iterator(_Mypair._Myval2._Myhead->_Next, _STD addressof(_Mypair._Myval2));

  00039	8b 4f 64	 mov	 ecx, DWORD PTR [edi+100]

; 183  :         this->_Ptr = _New_ptr;

  0003c	8b 06		 mov	 eax, DWORD PTR [esi]

; 198  :         return this->_Ptr == _Right._Ptr;

  0003e	3b 01		 cmp	 eax, DWORD PTR [ecx]
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp

; 479  : 		for (itor = m_pChildList.rbegin(); itor != m_pChildList.rend(); ++itor)

  00040	75 e5		 jne	 SHORT $LL34@RunIMEKeyD
$LN3@RunIMEKeyD:
  00042	5f		 pop	 edi

; 484  : 				return TRUE;
; 485  : 		}
; 486  : 
; 487  : 		return FALSE;
; 488  : 	}

  00043	5e		 pop	 esi
  00044	33 c0		 xor	 eax, eax
  00046	5b		 pop	 ebx
  00047	5d		 pop	 ebp
  00048	c2 04 00	 ret	 4
$LN64@RunIMEKeyD:
  0004b	5f		 pop	 edi
  0004c	5e		 pop	 esi
  0004d	b8 01 00 00 00	 mov	 eax, 1
  00052	5b		 pop	 ebx
  00053	5d		 pop	 ebp
  00054	c2 04 00	 ret	 4
?RunIMEKeyDownEvent@CWindow@UI@@QAEHH@Z ENDP		; UI::CWindow::RunIMEKeyDownEvent
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\list
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\list
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\list
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?RunIMEReturnEvent@CWindow@UI@@QAEHXZ
_TEXT	SEGMENT
?RunIMEReturnEvent@CWindow@UI@@QAEHXZ PROC		; UI::CWindow::RunIMEReturnEvent, COMDAT
; _this$ = ecx

; 451  : 	{

  00000	56		 push	 esi
  00001	57		 push	 edi
  00002	8b f9		 mov	 edi, ecx

; 452  : 		if (!IsRendering())

  00004	e8 00 00 00 00	 call	 ?IsRendering@CWindow@UI@@QAE_NXZ ; UI::CWindow::IsRendering
  00009	84 c0		 test	 al, al
  0000b	74 2d		 je	 SHORT $LN3@RunIMERetu

; 453  : 			return FALSE;
; 454  : 
; 455  : 		if (OnIMEReturnEvent())

  0000d	8b 07		 mov	 eax, DWORD PTR [edi]
  0000f	8b cf		 mov	 ecx, edi
  00011	ff 50 3c	 call	 DWORD PTR [eax+60]
  00014	85 c0		 test	 eax, eax
  00016	75 27		 jne	 SHORT $LN64@RunIMERetu
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\list

; 38   :     _List_unchecked_const_iterator(_Nodeptr _Pnode, const _Mylist* _Plist) noexcept : _Ptr(_Pnode) {

  00018	8b 47 64	 mov	 eax, DWORD PTR [edi+100]

; 198  :         return this->_Ptr == _Right._Ptr;

  0001b	3b 00		 cmp	 eax, DWORD PTR [eax]
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp

; 459  : 		for (itor = m_pChildList.rbegin(); itor != m_pChildList.rend(); ++itor)

  0001d	74 1b		 je	 SHORT $LN3@RunIMERetu
  0001f	90		 npad	 1
$LL34@RunIMERetu:
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\list

; 176  :         const auto _New_ptr = this->_Ptr->_Prev;

  00020	8d 70 04	 lea	 esi, DWORD PTR [eax+4]

; 177  : #if _ITERATOR_DEBUG_LEVEL == 2
; 178  :         const auto _Mycont = static_cast<const _Mylist*>(this->_Getcont());
; 179  :         _STL_ASSERT(_Mycont, "cannot decrement value-initialized list iterator");
; 180  :         _STL_VERIFY(_New_ptr != _Mycont->_Myhead, "cannot decrement begin list iterator");
; 181  : #endif // _ITERATOR_DEBUG_LEVEL == 2
; 182  : 
; 183  :         this->_Ptr = _New_ptr;

  00023	8b 06		 mov	 eax, DWORD PTR [esi]
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp

; 463  : 			if (pWindow->RunIMEReturnEvent())

  00025	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00028	e8 00 00 00 00	 call	 ?RunIMEReturnEvent@CWindow@UI@@QAEHXZ ; UI::CWindow::RunIMEReturnEvent
  0002d	85 c0		 test	 eax, eax
  0002f	75 0e		 jne	 SHORT $LN64@RunIMERetu
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\list

; 1083 :         return iterator(_Mypair._Myval2._Myhead->_Next, _STD addressof(_Mypair._Myval2));

  00031	8b 4f 64	 mov	 ecx, DWORD PTR [edi+100]

; 183  :         this->_Ptr = _New_ptr;

  00034	8b 06		 mov	 eax, DWORD PTR [esi]

; 198  :         return this->_Ptr == _Right._Ptr;

  00036	3b 01		 cmp	 eax, DWORD PTR [ecx]
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp

; 459  : 		for (itor = m_pChildList.rbegin(); itor != m_pChildList.rend(); ++itor)

  00038	75 e6		 jne	 SHORT $LL34@RunIMERetu
$LN3@RunIMERetu:
  0003a	5f		 pop	 edi

; 465  : 		}
; 466  : 
; 467  : 		return FALSE;

  0003b	33 c0		 xor	 eax, eax

; 468  : 	}

  0003d	5e		 pop	 esi
  0003e	c3		 ret	 0
$LN64@RunIMERetu:
  0003f	5f		 pop	 edi

; 464  : 				return TRUE;

  00040	b8 01 00 00 00	 mov	 eax, 1

; 468  : 	}

  00045	5e		 pop	 esi
  00046	c3		 ret	 0
?RunIMEReturnEvent@CWindow@UI@@QAEHXZ ENDP		; UI::CWindow::RunIMEReturnEvent
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\list
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\list
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\list
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?RunIMETabEvent@CWindow@UI@@QAEHXZ
_TEXT	SEGMENT
?RunIMETabEvent@CWindow@UI@@QAEHXZ PROC			; UI::CWindow::RunIMETabEvent, COMDAT
; _this$ = ecx

; 431  : 	{

  00000	56		 push	 esi
  00001	57		 push	 edi
  00002	8b f9		 mov	 edi, ecx

; 432  : 		if (!IsRendering())

  00004	e8 00 00 00 00	 call	 ?IsRendering@CWindow@UI@@QAE_NXZ ; UI::CWindow::IsRendering
  00009	84 c0		 test	 al, al
  0000b	74 2d		 je	 SHORT $LN3@RunIMETabE

; 433  : 			return FALSE;
; 434  : 
; 435  : 		if (OnIMETabEvent())

  0000d	8b 07		 mov	 eax, DWORD PTR [edi]
  0000f	8b cf		 mov	 ecx, edi
  00011	ff 50 38	 call	 DWORD PTR [eax+56]
  00014	85 c0		 test	 eax, eax
  00016	75 27		 jne	 SHORT $LN64@RunIMETabE
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\list

; 38   :     _List_unchecked_const_iterator(_Nodeptr _Pnode, const _Mylist* _Plist) noexcept : _Ptr(_Pnode) {

  00018	8b 47 64	 mov	 eax, DWORD PTR [edi+100]

; 198  :         return this->_Ptr == _Right._Ptr;

  0001b	3b 00		 cmp	 eax, DWORD PTR [eax]
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp

; 439  : 		for (itor = m_pChildList.rbegin(); itor != m_pChildList.rend(); ++itor)

  0001d	74 1b		 je	 SHORT $LN3@RunIMETabE
  0001f	90		 npad	 1
$LL34@RunIMETabE:
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\list

; 176  :         const auto _New_ptr = this->_Ptr->_Prev;

  00020	8d 70 04	 lea	 esi, DWORD PTR [eax+4]

; 177  : #if _ITERATOR_DEBUG_LEVEL == 2
; 178  :         const auto _Mycont = static_cast<const _Mylist*>(this->_Getcont());
; 179  :         _STL_ASSERT(_Mycont, "cannot decrement value-initialized list iterator");
; 180  :         _STL_VERIFY(_New_ptr != _Mycont->_Myhead, "cannot decrement begin list iterator");
; 181  : #endif // _ITERATOR_DEBUG_LEVEL == 2
; 182  : 
; 183  :         this->_Ptr = _New_ptr;

  00023	8b 06		 mov	 eax, DWORD PTR [esi]
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp

; 443  : 			if (pWindow->RunIMETabEvent())

  00025	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00028	e8 00 00 00 00	 call	 ?RunIMETabEvent@CWindow@UI@@QAEHXZ ; UI::CWindow::RunIMETabEvent
  0002d	85 c0		 test	 eax, eax
  0002f	75 0e		 jne	 SHORT $LN64@RunIMETabE
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\list

; 1083 :         return iterator(_Mypair._Myval2._Myhead->_Next, _STD addressof(_Mypair._Myval2));

  00031	8b 4f 64	 mov	 ecx, DWORD PTR [edi+100]

; 183  :         this->_Ptr = _New_ptr;

  00034	8b 06		 mov	 eax, DWORD PTR [esi]

; 198  :         return this->_Ptr == _Right._Ptr;

  00036	3b 01		 cmp	 eax, DWORD PTR [ecx]
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp

; 439  : 		for (itor = m_pChildList.rbegin(); itor != m_pChildList.rend(); ++itor)

  00038	75 e6		 jne	 SHORT $LL34@RunIMETabE
$LN3@RunIMETabE:
  0003a	5f		 pop	 edi

; 445  : 		}
; 446  : 
; 447  : 		return FALSE;

  0003b	33 c0		 xor	 eax, eax

; 448  : 	}

  0003d	5e		 pop	 esi
  0003e	c3		 ret	 0
$LN64@RunIMETabE:
  0003f	5f		 pop	 edi

; 444  : 				return TRUE;

  00040	b8 01 00 00 00	 mov	 eax, 1

; 448  : 	}

  00045	5e		 pop	 esi
  00046	c3		 ret	 0
?RunIMETabEvent@CWindow@UI@@QAEHXZ ENDP			; UI::CWindow::RunIMETabEvent
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnMoveWindow@CWindow@UI@@UAEXJJ@Z
_TEXT	SEGMENT
_lx$ = 8						; size = 4
_ly$ = 12						; size = 4
?OnMoveWindow@CWindow@UI@@UAEXJJ@Z PROC			; UI::CWindow::OnMoveWindow, COMDAT
; _this$ = ecx

; 386  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 387  : 		PyCallClassMemberFunc(m_poHandler, "OnMoveWindow", Py_BuildValue("(ii)", lx, ly));

  00004	ff 75 0c	 push	 DWORD PTR _ly$[ebp]
  00007	8b f1		 mov	 esi, ecx
  00009	ff 75 08	 push	 DWORD PTR _lx$[ebp]
  0000c	68 00 00 00 00	 push	 OFFSET ??_C@_04INACLLOK@?$CIii?$CJ@
  00011	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__Py_BuildValue
  00017	50		 push	 eax
  00018	68 00 00 00 00	 push	 OFFSET ??_C@_0N@PFKNBOJP@OnMoveWindow@
  0001d	ff 76 5c	 push	 DWORD PTR [esi+92]
  00020	e8 00 00 00 00	 call	 ?PyCallClassMemberFunc@@YA_NPAU_object@@PBD0@Z ; PyCallClassMemberFunc
  00025	83 c4 18	 add	 esp, 24			; 00000018H
  00028	5e		 pop	 esi

; 388  : 	}

  00029	5d		 pop	 ebp
  0002a	c2 08 00	 ret	 8
?OnMoveWindow@CWindow@UI@@UAEXJJ@Z ENDP			; UI::CWindow::OnMoveWindow
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnIMEUpdate@CWindow@UI@@UAEXXZ
_TEXT	SEGMENT
?OnIMEUpdate@CWindow@UI@@UAEXXZ PROC			; UI::CWindow::OnIMEUpdate, COMDAT
; _this$ = ecx

; 426  : 	{

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 427  : 		PyCallClassMemberFunc(m_poHandler, "OnIMEUpdate", BuildEmptyTuple());

  00003	e8 00 00 00 00	 call	 ?BuildEmptyTuple@UI@@YAPAU_object@@XZ ; UI::BuildEmptyTuple
  00008	50		 push	 eax
  00009	68 00 00 00 00	 push	 OFFSET ??_C@_0M@DGOFHNMI@OnIMEUpdate@
  0000e	ff 76 5c	 push	 DWORD PTR [esi+92]
  00011	e8 00 00 00 00	 call	 ?PyCallClassMemberFunc@@YA_NPAU_object@@PBD0@Z ; PyCallClassMemberFunc
  00016	83 c4 0c	 add	 esp, 12			; 0000000cH
  00019	5e		 pop	 esi

; 428  : 	}

  0001a	c3		 ret	 0
?OnIMEUpdate@CWindow@UI@@UAEXXZ ENDP			; UI::CWindow::OnIMEUpdate
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnTop@CWindow@UI@@UAEXXZ
_TEXT	SEGMENT
?OnTop@CWindow@UI@@UAEXXZ PROC				; UI::CWindow::OnTop, COMDAT
; _this$ = ecx

; 421  : 	{

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 422  : 		PyCallClassMemberFunc(m_poHandler, "OnTop", BuildEmptyTuple());

  00003	e8 00 00 00 00	 call	 ?BuildEmptyTuple@UI@@YAPAU_object@@XZ ; UI::BuildEmptyTuple
  00008	50		 push	 eax
  00009	68 00 00 00 00	 push	 OFFSET ??_C@_05LOOKECNH@OnTop@
  0000e	ff 76 5c	 push	 DWORD PTR [esi+92]
  00011	e8 00 00 00 00	 call	 ?PyCallClassMemberFunc@@YA_NPAU_object@@PBD0@Z ; PyCallClassMemberFunc
  00016	83 c4 0c	 add	 esp, 12			; 0000000cH
  00019	5e		 pop	 esi

; 423  : 	}

  0001a	c3		 ret	 0
?OnTop@CWindow@UI@@UAEXXZ ENDP				; UI::CWindow::OnTop
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnDrop@CWindow@UI@@UAEXXZ
_TEXT	SEGMENT
?OnDrop@CWindow@UI@@UAEXXZ PROC				; UI::CWindow::OnDrop, COMDAT
; _this$ = ecx

; 416  : 	{

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 417  : 		PyCallClassMemberFunc(m_poHandler, "OnDrop", BuildEmptyTuple());

  00003	e8 00 00 00 00	 call	 ?BuildEmptyTuple@UI@@YAPAU_object@@XZ ; UI::BuildEmptyTuple
  00008	50		 push	 eax
  00009	68 00 00 00 00	 push	 OFFSET ??_C@_06OCNPCIEO@OnDrop@
  0000e	ff 76 5c	 push	 DWORD PTR [esi+92]
  00011	e8 00 00 00 00	 call	 ?PyCallClassMemberFunc@@YA_NPAU_object@@PBD0@Z ; PyCallClassMemberFunc
  00016	83 c4 0c	 add	 esp, 12			; 0000000cH
  00019	5e		 pop	 esi

; 418  : 	}

  0001a	c3		 ret	 0
?OnDrop@CWindow@UI@@UAEXXZ ENDP				; UI::CWindow::OnDrop
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnMouseOver@CWindow@UI@@UAEXXZ
_TEXT	SEGMENT
?OnMouseOver@CWindow@UI@@UAEXXZ PROC			; UI::CWindow::OnMouseOver, COMDAT
; _this$ = ecx

; 413  : 	}

  00000	c2 00 00	 ret	 0
?OnMouseOver@CWindow@UI@@UAEXXZ ENDP			; UI::CWindow::OnMouseOver
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnMouseOverOut@CWindow@UI@@UAEXXZ
_TEXT	SEGMENT
?OnMouseOverOut@CWindow@UI@@UAEXXZ PROC			; UI::CWindow::OnMouseOverOut, COMDAT
; _this$ = ecx

; 407  : 	{

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 408  : 		PyCallClassMemberFunc(m_poHandler, "OnMouseOverOut", BuildEmptyTuple());

  00003	e8 00 00 00 00	 call	 ?BuildEmptyTuple@UI@@YAPAU_object@@XZ ; UI::BuildEmptyTuple
  00008	50		 push	 eax
  00009	68 00 00 00 00	 push	 OFFSET ??_C@_0P@KLLBNOAI@OnMouseOverOut@
  0000e	ff 76 5c	 push	 DWORD PTR [esi+92]
  00011	e8 00 00 00 00	 call	 ?PyCallClassMemberFunc@@YA_NPAU_object@@PBD0@Z ; PyCallClassMemberFunc
  00016	83 c4 0c	 add	 esp, 12			; 0000000cH
  00019	5e		 pop	 esi

; 409  : 	}

  0001a	c3		 ret	 0
?OnMouseOverOut@CWindow@UI@@UAEXXZ ENDP			; UI::CWindow::OnMouseOverOut
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnMouseOverIn@CWindow@UI@@UAEXXZ
_TEXT	SEGMENT
?OnMouseOverIn@CWindow@UI@@UAEXXZ PROC			; UI::CWindow::OnMouseOverIn, COMDAT
; _this$ = ecx

; 402  : 	{

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 403  : 		PyCallClassMemberFunc(m_poHandler, "OnMouseOverIn", BuildEmptyTuple());

  00003	e8 00 00 00 00	 call	 ?BuildEmptyTuple@UI@@YAPAU_object@@XZ ; UI::BuildEmptyTuple
  00008	50		 push	 eax
  00009	68 00 00 00 00	 push	 OFFSET ??_C@_0O@JKDAFDCC@OnMouseOverIn@
  0000e	ff 76 5c	 push	 DWORD PTR [esi+92]
  00011	e8 00 00 00 00	 call	 ?PyCallClassMemberFunc@@YA_NPAU_object@@PBD0@Z ; PyCallClassMemberFunc
  00016	83 c4 0c	 add	 esp, 12			; 0000000cH
  00019	5e		 pop	 esi

; 404  : 	}

  0001a	c3		 ret	 0
?OnMouseOverIn@CWindow@UI@@UAEXXZ ENDP			; UI::CWindow::OnMouseOverIn
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnMouseDrag@CWindow@UI@@UAEXJJ@Z
_TEXT	SEGMENT
_lx$ = 8						; size = 4
_ly$ = 12						; size = 4
?OnMouseDrag@CWindow@UI@@UAEXJJ@Z PROC			; UI::CWindow::OnMouseDrag, COMDAT
; _this$ = ecx

; 381  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 382  : 		PyCallClassMemberFunc(m_poHandler, "OnMouseDrag", Py_BuildValue("(ii)", lx, ly));

  00004	ff 75 0c	 push	 DWORD PTR _ly$[ebp]
  00007	8b f1		 mov	 esi, ecx
  00009	ff 75 08	 push	 DWORD PTR _lx$[ebp]
  0000c	68 00 00 00 00	 push	 OFFSET ??_C@_04INACLLOK@?$CIii?$CJ@
  00011	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__Py_BuildValue
  00017	50		 push	 eax
  00018	68 00 00 00 00	 push	 OFFSET ??_C@_0M@ECAEGPAI@OnMouseDrag@
  0001d	ff 76 5c	 push	 DWORD PTR [esi+92]
  00020	e8 00 00 00 00	 call	 ?PyCallClassMemberFunc@@YA_NPAU_object@@PBD0@Z ; PyCallClassMemberFunc
  00025	83 c4 18	 add	 esp, 24			; 00000018H
  00028	5e		 pop	 esi

; 383  : 	}

  00029	5d		 pop	 ebp
  0002a	c2 08 00	 ret	 8
?OnMouseDrag@CWindow@UI@@UAEXJJ@Z ENDP			; UI::CWindow::OnMouseDrag
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnKillFocus@CWindow@UI@@UAEXXZ
_TEXT	SEGMENT
?OnKillFocus@CWindow@UI@@UAEXXZ PROC			; UI::CWindow::OnKillFocus, COMDAT
; _this$ = ecx

; 397  : 	{

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 398  : 		PyCallClassMemberFunc(m_poHandler, "OnKillFocus", BuildEmptyTuple());

  00003	e8 00 00 00 00	 call	 ?BuildEmptyTuple@UI@@YAPAU_object@@XZ ; UI::BuildEmptyTuple
  00008	50		 push	 eax
  00009	68 00 00 00 00	 push	 OFFSET ??_C@_0M@CEGPCFGM@OnKillFocus@
  0000e	ff 76 5c	 push	 DWORD PTR [esi+92]
  00011	e8 00 00 00 00	 call	 ?PyCallClassMemberFunc@@YA_NPAU_object@@PBD0@Z ; PyCallClassMemberFunc
  00016	83 c4 0c	 add	 esp, 12			; 0000000cH
  00019	5e		 pop	 esi

; 399  : 	}

  0001a	c3		 ret	 0
?OnKillFocus@CWindow@UI@@UAEXXZ ENDP			; UI::CWindow::OnKillFocus
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnSetFocus@CWindow@UI@@UAEXXZ
_TEXT	SEGMENT
?OnSetFocus@CWindow@UI@@UAEXXZ PROC			; UI::CWindow::OnSetFocus, COMDAT
; _this$ = ecx

; 391  : 	{

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 392  : 		//PyCallClassMemberFunc(m_poHandler, "OnSetFocus", BuildEmptyTuple());
; 393  : 		PyCallClassMemberFunc(m_poHandler, "OnSetFocus", BuildEmptyTuple());

  00003	e8 00 00 00 00	 call	 ?BuildEmptyTuple@UI@@YAPAU_object@@XZ ; UI::BuildEmptyTuple
  00008	50		 push	 eax
  00009	68 00 00 00 00	 push	 OFFSET ??_C@_0L@GIMNGBCD@OnSetFocus@
  0000e	ff 76 5c	 push	 DWORD PTR [esi+92]
  00011	e8 00 00 00 00	 call	 ?PyCallClassMemberFunc@@YA_NPAU_object@@PBD0@Z ; PyCallClassMemberFunc
  00016	83 c4 0c	 add	 esp, 12			; 0000000cH
  00019	5e		 pop	 esi

; 394  : 	}

  0001a	c3		 ret	 0
?OnSetFocus@CWindow@UI@@UAEXXZ ENDP			; UI::CWindow::OnSetFocus
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.h
;	COMDAT ?OnChangePosition@CWindow@UI@@UAEXXZ
_TEXT	SEGMENT
?OnChangePosition@CWindow@UI@@UAEXXZ PROC		; UI::CWindow::OnChangePosition, COMDAT
; _this$ = ecx

; 104  : 			virtual void	OnChangePosition(){}

  00000	c2 00 00	 ret	 0
?OnChangePosition@CWindow@UI@@UAEXXZ ENDP		; UI::CWindow::OnChangePosition
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnUpdate@CWindow@UI@@UAEXXZ
_TEXT	SEGMENT
?OnUpdate@CWindow@UI@@UAEXXZ PROC			; UI::CWindow::OnUpdate, COMDAT
; _this$ = ecx

; 160  : 	{

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 161  : 		if (!m_poHandler)

  00003	83 7e 5c 00	 cmp	 DWORD PTR [esi+92], 0
  00007	74 39		 je	 SHORT $LN1@OnUpdate

; 162  : 			return;
; 163  : 
; 164  : 		if (!IsShow())

  00009	80 7e 55 00	 cmp	 BYTE PTR [esi+85], 0
  0000d	74 33		 je	 SHORT $LN1@OnUpdate

; 165  : 			return;
; 166  : 
; 167  : 		static PyObject* poFuncName_OnUpdate = PyString_InternFromString("OnUpdate");

  0000f	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__tls_array
  00015	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR __tls_index
  0001b	8b 0c 90	 mov	 ecx, DWORD PTR [eax+edx*4]
  0001e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?$TSS0@?1??OnUpdate@CWindow@UI@@UAEXXZ@4HA
  00023	3b 81 00 00 00
	00		 cmp	 eax, DWORD PTR __Init_thread_epoch[ecx]
  00029	7f 19		 jg	 SHORT $LN7@OnUpdate
$LN2@OnUpdate:

; 168  : 
; 169  : 		//PyCallClassMemberFunc(m_poHandler, "OnUpdate", BuildEmptyTuple());
; 170  : 		PyCallClassMemberFunc_ByPyString(m_poHandler, poFuncName_OnUpdate, BuildEmptyTuple());

  0002b	e8 00 00 00 00	 call	 ?BuildEmptyTuple@UI@@YAPAU_object@@XZ ; UI::BuildEmptyTuple
  00030	50		 push	 eax
  00031	ff 35 00 00 00
	00		 push	 DWORD PTR ?poFuncName_OnUpdate@?1??OnUpdate@CWindow@UI@@UAEXXZ@4PAU_object@@A
  00037	ff 76 5c	 push	 DWORD PTR [esi+92]
  0003a	e8 00 00 00 00	 call	 ?PyCallClassMemberFunc_ByPyString@@YA_NPAU_object@@00@Z ; PyCallClassMemberFunc_ByPyString
  0003f	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN1@OnUpdate:

; 171  : 
; 172  : 	}

  00042	5e		 pop	 esi
  00043	c3		 ret	 0
$LN7@OnUpdate:

; 165  : 			return;
; 166  : 
; 167  : 		static PyObject* poFuncName_OnUpdate = PyString_InternFromString("OnUpdate");

  00044	68 00 00 00 00	 push	 OFFSET ?$TSS0@?1??OnUpdate@CWindow@UI@@UAEXXZ@4HA
  00049	e8 00 00 00 00	 call	 __Init_thread_header
  0004e	83 c4 04	 add	 esp, 4
  00051	83 3d 00 00 00
	00 ff		 cmp	 DWORD PTR ?$TSS0@?1??OnUpdate@CWindow@UI@@UAEXXZ@4HA, -1
  00058	75 d1		 jne	 SHORT $LN2@OnUpdate
  0005a	68 00 00 00 00	 push	 OFFSET ??_C@_08DCJEAFK@OnUpdate@
  0005f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__PyString_InternFromString
  00065	68 00 00 00 00	 push	 OFFSET ?$TSS0@?1??OnUpdate@CWindow@UI@@UAEXXZ@4HA
  0006a	a3 00 00 00 00	 mov	 DWORD PTR ?poFuncName_OnUpdate@?1??OnUpdate@CWindow@UI@@UAEXXZ@4PAU_object@@A, eax
  0006f	e8 00 00 00 00	 call	 __Init_thread_footer
  00074	83 c4 08	 add	 esp, 8
  00077	eb b2		 jmp	 SHORT $LN2@OnUpdate
?OnUpdate@CWindow@UI@@UAEXXZ ENDP			; UI::CWindow::OnUpdate
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnRender@CWindow@UI@@UAEXXZ
_TEXT	SEGMENT
?OnRender@CWindow@UI@@UAEXXZ PROC			; UI::CWindow::OnRender, COMDAT
; _this$ = ecx

; 175  : 	{

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 176  : 		if (!m_poHandler)

  00003	83 7e 5c 00	 cmp	 DWORD PTR [esi+92], 0
  00007	74 1c		 je	 SHORT $LN1@OnRender

; 177  : 			return;
; 178  : 
; 179  : 		if (!IsShow())

  00009	80 7e 55 00	 cmp	 BYTE PTR [esi+85], 0
  0000d	74 16		 je	 SHORT $LN1@OnRender

; 180  : 			return;
; 181  : 
; 182  : 		//PyCallClassMemberFunc(m_poHandler, "OnRender", BuildEmptyTuple());
; 183  : 		PyCallClassMemberFunc(m_poHandler, "OnRender", BuildEmptyTuple());

  0000f	e8 00 00 00 00	 call	 ?BuildEmptyTuple@UI@@YAPAU_object@@XZ ; UI::BuildEmptyTuple
  00014	50		 push	 eax
  00015	68 00 00 00 00	 push	 OFFSET ??_C@_08PAJMEILO@OnRender@
  0001a	ff 76 5c	 push	 DWORD PTR [esi+92]
  0001d	e8 00 00 00 00	 call	 ?PyCallClassMemberFunc@@YA_NPAU_object@@PBD0@Z ; PyCallClassMemberFunc
  00022	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN1@OnRender:

; 184  : 	}

  00025	5e		 pop	 esi
  00026	c3		 ret	 0
?OnRender@CWindow@UI@@UAEXXZ ENDP			; UI::CWindow::OnRender
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\list
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\list
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\list
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\utility
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\list
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\list
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\list
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\list
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\list
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?__RemoveReserveChildren@CWindow@UI@@QAEXXZ
_TEXT	SEGMENT
__Op$1 = -16						; size = 12
_this$1$ = -4						; size = 4
?__RemoveReserveChildren@CWindow@UI@@QAEXXZ PROC	; UI::CWindow::__RemoveReserveChildren, COMDAT
; _this$ = ecx

; 110  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	53		 push	 ebx
  00007	8b d9		 mov	 ebx, ecx
  00009	89 5d fc	 mov	 DWORD PTR _this$1$[ebp], ebx
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\list

; 1191 :         return _Mypair._Myval2._Mysize == 0;

  0000c	83 7b 74 00	 cmp	 DWORD PTR [ebx+116], 0
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp

; 111  : 		if (m_pReserveChildList.empty())

  00010	0f 84 b7 00 00
	00		 je	 $LN87@RemoveRese
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\list

; 1083 :         return iterator(_Mypair._Myval2._Myhead->_Next, _STD addressof(_Mypair._Myval2));

  00016	8b 43 70	 mov	 eax, DWORD PTR [ebx+112]
  00019	56		 push	 esi

; 38   :     _List_unchecked_const_iterator(_Nodeptr _Pnode, const _Mylist* _Plist) noexcept : _Ptr(_Pnode) {

  0001a	8b 30		 mov	 esi, DWORD PTR [eax]
  0001c	3b f0		 cmp	 esi, eax
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp

; 115  : 		for(it = m_pReserveChildList.begin(); it != m_pReserveChildList.end(); ++it)

  0001e	74 78		 je	 SHORT $LN3@RemoveRese
  00020	57		 push	 edi
  00021	8d 7b 64	 lea	 edi, DWORD PTR [ebx+100]
$LL26@RemoveRese:
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\list

; 1601 :         const auto _Last         = _My_data._Myhead;

  00024	8b 1f		 mov	 ebx, DWORD PTR [edi]

; 1527 :         explicit _List_node_remove_op(list& _List_) noexcept : _List(_List_), _Head(), _Tail(_STD addressof(_Head)) {}

  00026	8d 45 f4	 lea	 eax, DWORD PTR __Op$1[ebp+4]
  00029	33 c9		 xor	 ecx, ecx
  0002b	89 45 f8	 mov	 DWORD PTR __Op$1[ebp+8], eax
  0002e	8b d7		 mov	 edx, edi
  00030	89 4d f4	 mov	 DWORD PTR __Op$1[ebp+4], ecx
  00033	89 55 f0	 mov	 DWORD PTR __Op$1[ebp], edx

; 1603 :         for (auto _First = _Last->_Next; _First != _Last;) {

  00036	8b 03		 mov	 eax, DWORD PTR [ebx]
  00038	3b c3		 cmp	 eax, ebx
  0003a	74 35		 je	 SHORT $LN49@RemoveRese
  0003c	0f 1f 40 00	 npad	 4
$LL48@RemoveRese:

; 1594 :         return remove_if([&](const _Ty& _Other) { return _Other == _Val; });

  00040	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]

; 1604 :             auto _Next = _First->_Next;

  00043	8b 38		 mov	 edi, DWORD PTR [eax]

; 1594 :         return remove_if([&](const _Ty& _Other) { return _Other == _Val; });

  00045	3b 4e 08	 cmp	 ecx, DWORD PTR [esi+8]

; 1605 :             if (_Pred(_First->_Myval)) {

  00048	75 1e		 jne	 SHORT $LN58@RemoveRese

; 1538 :             --_List._Mypair._Myval2._Mysize;

  0004a	ff 4a 04	 dec	 DWORD PTR [edx+4]
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\utility

; 602  :     _Ty _Old_val = static_cast<_Ty&&>(_Val);

  0004d	8b 10		 mov	 edx, DWORD PTR [eax]

; 603  :     _Val         = static_cast<_Other&&>(_New_val);

  0004f	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\list

; 1540 :             const auto _Prev = _Removed->_Prev;

  00055	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]

; 1541 :             _Prev->_Next     = _Next;

  00058	89 11		 mov	 DWORD PTR [ecx], edx

; 1542 :             _Next->_Prev     = _Prev;

  0005a	89 4a 04	 mov	 DWORD PTR [edx+4], ecx

; 1543 : 
; 1544 : #if _ITERATOR_DEBUG_LEVEL == 2
; 1545 :             // mark removed node for IDL to snip out later
; 1546 :             _Removed->_Prev = _Nodeptr();
; 1547 : #endif // _ITERATOR_DEBUG_LEVEL == 2
; 1548 : 
; 1549 :             *_Tail = _Removed;

  0005d	8b 4d f8	 mov	 ecx, DWORD PTR __Op$1[ebp+8]
  00060	89 01		 mov	 DWORD PTR [ecx], eax

; 1550 :             _Tail  = _STD addressof(_Removed->_Next);

  00062	8b 55 f0	 mov	 edx, DWORD PTR __Op$1[ebp]
  00065	89 45 f8	 mov	 DWORD PTR __Op$1[ebp+8], eax
$LN58@RemoveRese:

; 1609 :             _First = _Next;

  00068	8b c7		 mov	 eax, edi
  0006a	3b fb		 cmp	 edi, ebx
  0006c	75 d2		 jne	 SHORT $LL48@RemoveRese
  0006e	8b 4d f4	 mov	 ecx, DWORD PTR __Op$1[ebp+4]
$LN49@RemoveRese:

; 1576 :             auto _Target = _Head;

  00071	85 c9		 test	 ecx, ecx

; 1577 :             while (_Target) {

  00073	74 13		 je	 SHORT $LN2@RemoveRese
$LL62@RemoveRese:

; 1578 :                 auto _Next = _Target->_Next;

  00075	8b 39		 mov	 edi, DWORD PTR [ecx]
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory

; 255  :         ::operator delete(_Ptr, _Bytes);

  00077	6a 0c		 push	 12			; 0000000cH
  00079	51		 push	 ecx
  0007a	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0007f	83 c4 08	 add	 esp, 8
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\list

; 1584 :                 _Target = _Next;

  00082	8b cf		 mov	 ecx, edi
  00084	85 ff		 test	 edi, edi
  00086	75 ed		 jne	 SHORT $LL62@RemoveRese
$LN2@RemoveRese:

; 38   :     _List_unchecked_const_iterator(_Nodeptr _Pnode, const _Mylist* _Plist) noexcept : _Ptr(_Pnode) {

  00088	8b 5d fc	 mov	 ebx, DWORD PTR _this$1$[ebp]

; 165  :         this->_Ptr = this->_Ptr->_Next;

  0008b	8b 36		 mov	 esi, DWORD PTR [esi]

; 38   :     _List_unchecked_const_iterator(_Nodeptr _Pnode, const _Mylist* _Plist) noexcept : _Ptr(_Pnode) {

  0008d	8b 43 70	 mov	 eax, DWORD PTR [ebx+112]
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp

; 115  : 		for(it = m_pReserveChildList.begin(); it != m_pReserveChildList.end(); ++it)

  00090	8d 7b 64	 lea	 edi, DWORD PTR [ebx+100]
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\list

; 198  :         return this->_Ptr == _Right._Ptr;

  00093	3b f0		 cmp	 esi, eax
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp

; 115  : 		for(it = m_pReserveChildList.begin(); it != m_pReserveChildList.end(); ++it)

  00095	75 8d		 jne	 SHORT $LL26@RemoveRese
  00097	5f		 pop	 edi
$LN3@RemoveRese:
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\list

; 323  :         _Head->_Prev->_Next = nullptr;

  00098	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0009b	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], 0

; 324  : 
; 325  :         auto _Pnode = _Head->_Next;

  000a1	8b 00		 mov	 eax, DWORD PTR [eax]

; 326  :         for (_Nodeptr _Pnext; _Pnode; _Pnode = _Pnext) {

  000a3	85 c0		 test	 eax, eax
  000a5	74 13		 je	 SHORT $LN90@RemoveRese
$LL91@RemoveRese:

; 327  :             _Pnext = _Pnode->_Next;

  000a7	8b 30		 mov	 esi, DWORD PTR [eax]
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory

; 255  :         ::operator delete(_Ptr, _Bytes);

  000a9	6a 0c		 push	 12			; 0000000cH
  000ab	50		 push	 eax
  000ac	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  000b1	83 c4 08	 add	 esp, 8
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\list

; 326  :         for (_Nodeptr _Pnext; _Pnode; _Pnode = _Pnext) {

  000b4	8b c6		 mov	 eax, esi
  000b6	85 f6		 test	 esi, esi
  000b8	75 ed		 jne	 SHORT $LL91@RemoveRese
$LN90@RemoveRese:

; 1421 :         _My_data._Myhead->_Next = _My_data._Myhead;

  000ba	8b 43 70	 mov	 eax, DWORD PTR [ebx+112]

; 1422 :         _My_data._Myhead->_Prev = _My_data._Myhead;
; 1423 :         _My_data._Mysize        = 0;

  000bd	5e		 pop	 esi
  000be	89 00		 mov	 DWORD PTR [eax], eax
  000c0	8b 43 70	 mov	 eax, DWORD PTR [ebx+112]
  000c3	89 40 04	 mov	 DWORD PTR [eax+4], eax
  000c6	c7 43 74 00 00
	00 00		 mov	 DWORD PTR [ebx+116], 0
$LN87@RemoveRese:
  000cd	5b		 pop	 ebx
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp

; 120  : 	}

  000ce	8b e5		 mov	 esp, ebp
  000d0	5d		 pop	 ebp
  000d1	c3		 ret	 0
?__RemoveReserveChildren@CWindow@UI@@QAEXXZ ENDP	; UI::CWindow::__RemoveReserveChildren
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\list
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\list
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\list
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.h
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\list
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?PickTopWindow@CWindow@UI@@QAEPAV12@JJ@Z
_TEXT	SEGMENT
_x$ = 8							; size = 4
_y$ = 12						; size = 4
?PickTopWindow@CWindow@UI@@QAEPAV12@JJ@Z PROC		; UI::CWindow::PickTopWindow, COMDAT
; _this$ = ecx

; 841  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx
  00004	56		 push	 esi
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\list

; 38   :     _List_unchecked_const_iterator(_Nodeptr _Pnode, const _Mylist* _Plist) noexcept : _Ptr(_Pnode) {

  00005	8b 71 64	 mov	 esi, DWORD PTR [ecx+100]
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp

; 841  : 	{

  00008	57		 push	 edi
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\list

; 38   :     _List_unchecked_const_iterator(_Nodeptr _Pnode, const _Mylist* _Plist) noexcept : _Ptr(_Pnode) {

  00009	8b 3e		 mov	 edi, DWORD PTR [esi]

; 198  :         return this->_Ptr == _Right._Ptr;

  0000b	3b f7		 cmp	 esi, edi
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp

; 843  : 		for (; ritor != m_pChildList.rend(); ++ritor)

  0000d	74 2c		 je	 SHORT $LN62@PickTopWin
  0000f	90		 npad	 1
$LL26@PickTopWin:
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\list

; 183  :         this->_Ptr = _New_ptr;

  00010	8b 76 04	 mov	 esi, DWORD PTR [esi+4]
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp

; 845  : 			CWindow * pWin = *ritor;

  00013	8b 5e 08	 mov	 ebx, DWORD PTR [esi+8]

; 846  : 			if (pWin->IsShow())

  00016	80 7b 55 00	 cmp	 BYTE PTR [ebx+85], 0
  0001a	74 1b		 je	 SHORT $LN2@PickTopWin

; 847  : 				if (pWin->IsIn(x, y))

  0001c	ff 75 0c	 push	 DWORD PTR _y$[ebp]
  0001f	8b cb		 mov	 ecx, ebx
  00021	ff 75 08	 push	 DWORD PTR _x$[ebp]
  00024	e8 00 00 00 00	 call	 ?IsIn@CWindow@UI@@QAE_NJJ@Z ; UI::CWindow::IsIn
  00029	84 c0		 test	 al, al
  0002b	74 0a		 je	 SHORT $LN2@PickTopWin
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.h

; 99   : 			bool			IsFlag(DWORD flag)		{ return (m_dwFlag & flag) ? true : false;	}

  0002d	8b 43 58	 mov	 eax, DWORD PTR [ebx+88]
  00030	c1 e8 09	 shr	 eax, 9
  00033	a8 01		 test	 al, 1
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp

; 848  : 					if (!pWin->IsFlag(CWindow::FLAG_NOT_PICK))

  00035	74 0d		 je	 SHORT $LN58@PickTopWin
$LN2@PickTopWin:
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\list

; 198  :         return this->_Ptr == _Right._Ptr;

  00037	3b f7		 cmp	 esi, edi
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp

; 843  : 		for (; ritor != m_pChildList.rend(); ++ritor)

  00039	75 d5		 jne	 SHORT $LL26@PickTopWin
$LN62@PickTopWin:
  0003b	5f		 pop	 edi

; 849  : 						return pWin;
; 850  : 		}
; 851  : 
; 852  : 		return NULL;
; 853  : 	}

  0003c	5e		 pop	 esi
  0003d	33 c0		 xor	 eax, eax
  0003f	5b		 pop	 ebx
  00040	5d		 pop	 ebp
  00041	c2 08 00	 ret	 8
$LN58@PickTopWin:
  00044	5f		 pop	 edi
  00045	5e		 pop	 esi
  00046	8b c3		 mov	 eax, ebx
  00048	5b		 pop	 ebx
  00049	5d		 pop	 ebp
  0004a	c2 08 00	 ret	 8
?PickTopWindow@CWindow@UI@@QAEPAV12@JJ@Z ENDP		; UI::CWindow::PickTopWindow
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\list
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\list
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.h
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\list
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.h
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?PickWindow@CWindow@UI@@QAEPAV12@JJ@Z
_TEXT	SEGMENT
_x$ = 8							; size = 4
_y$ = 12						; size = 4
?PickWindow@CWindow@UI@@QAEPAV12@JJ@Z PROC		; UI::CWindow::PickWindow, COMDAT
; _this$ = ecx

; 812  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx
  00004	8b d9		 mov	 ebx, ecx
  00006	56		 push	 esi
  00007	57		 push	 edi
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\list

; 38   :     _List_unchecked_const_iterator(_Nodeptr _Pnode, const _Mylist* _Plist) noexcept : _Ptr(_Pnode) {

  00008	8b 43 64	 mov	 eax, DWORD PTR [ebx+100]

; 198  :         return this->_Ptr == _Right._Ptr;

  0000b	3b 00		 cmp	 eax, DWORD PTR [eax]
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp

; 814  : 		for (; ritor != m_pChildList.rend(); ++ritor)

  0000d	74 50		 je	 SHORT $LN67@PickWindow
  0000f	8b 55 08	 mov	 edx, DWORD PTR _x$[ebp]
$LN72@PickWindow:
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\list

; 176  :         const auto _New_ptr = this->_Ptr->_Prev;

  00012	8b 4d 0c	 mov	 ecx, DWORD PTR _y$[ebp]
  00015	8d 78 04	 lea	 edi, DWORD PTR [eax+4]

; 177  : #if _ITERATOR_DEBUG_LEVEL == 2
; 178  :         const auto _Mycont = static_cast<const _Mylist*>(this->_Getcont());
; 179  :         _STL_ASSERT(_Mycont, "cannot decrement value-initialized list iterator");
; 180  :         _STL_VERIFY(_New_ptr != _Mycont->_Myhead, "cannot decrement begin list iterator");
; 181  : #endif // _ITERATOR_DEBUG_LEVEL == 2
; 182  : 
; 183  :         this->_Ptr = _New_ptr;

  00018	8b 07		 mov	 eax, DWORD PTR [edi]
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp

; 816  : 			CWindow * pWin = *ritor;

  0001a	8b 70 08	 mov	 esi, DWORD PTR [eax+8]

; 817  : 			if (pWin->IsShow())

  0001d	80 7e 55 00	 cmp	 BYTE PTR [esi+85], 0
  00021	74 33		 je	 SHORT $LN2@PickWindow
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.h

; 99   : 			bool			IsFlag(DWORD flag)		{ return (m_dwFlag & flag) ? true : false;	}

  00023	8b 46 58	 mov	 eax, DWORD PTR [esi+88]
  00026	c1 e8 0a	 shr	 eax, 10			; 0000000aH
  00029	a8 01		 test	 al, 1
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp

; 819  : 				if (!pWin->IsFlag(CWindow::FLAG_IGNORE_SIZE))

  0002b	75 19		 jne	 SHORT $LN8@PickWindow

; 820  : 				{
; 821  : 					if (!pWin->IsIn(x, y)) {

  0002d	51		 push	 ecx
  0002e	52		 push	 edx
  0002f	8b ce		 mov	 ecx, esi
  00031	e8 00 00 00 00	 call	 ?IsIn@CWindow@UI@@QAE_NJJ@Z ; UI::CWindow::IsIn
  00036	8b 55 08	 mov	 edx, DWORD PTR _x$[ebp]
  00039	84 c0		 test	 al, al
  0003b	75 06		 jne	 SHORT $LN71@PickWindow

; 822  : 						if (0L <= pWin->GetWidth()) {

  0003d	83 7e 2c 00	 cmp	 DWORD PTR [esi+44], 0
  00041	7d 13		 jge	 SHORT $LN2@PickWindow
$LN71@PickWindow:

; 823  : 							continue;
; 824  : 						}
; 825  : 					}
; 826  : 				}
; 827  : 
; 828  : 				CWindow * pResult = pWin->PickWindow(x, y);

  00043	8b 4d 0c	 mov	 ecx, DWORD PTR _y$[ebp]
$LN8@PickWindow:
  00046	51		 push	 ecx
  00047	52		 push	 edx
  00048	8b ce		 mov	 ecx, esi
  0004a	e8 00 00 00 00	 call	 ?PickWindow@CWindow@UI@@QAEPAV12@JJ@Z ; UI::CWindow::PickWindow

; 829  : 				if (pResult)

  0004f	85 c0		 test	 eax, eax
  00051	75 1e		 jne	 SHORT $LN10@PickWindow

; 822  : 						if (0L <= pWin->GetWidth()) {

  00053	8b 55 08	 mov	 edx, DWORD PTR _x$[ebp]
$LN2@PickWindow:
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\list

; 1083 :         return iterator(_Mypair._Myval2._Myhead->_Next, _STD addressof(_Mypair._Myval2));

  00056	8b 4b 64	 mov	 ecx, DWORD PTR [ebx+100]

; 183  :         this->_Ptr = _New_ptr;

  00059	8b 07		 mov	 eax, DWORD PTR [edi]

; 198  :         return this->_Ptr == _Right._Ptr;

  0005b	3b 01		 cmp	 eax, DWORD PTR [ecx]
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp

; 814  : 		for (; ritor != m_pChildList.rend(); ++ritor)

  0005d	75 b3		 jne	 SHORT $LN72@PickWindow
$LN67@PickWindow:
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.h

; 99   : 			bool			IsFlag(DWORD flag)		{ return (m_dwFlag & flag) ? true : false;	}

  0005f	8b 43 58	 mov	 eax, DWORD PTR [ebx+88]
  00062	c1 e8 09	 shr	 eax, 9
  00065	a8 01		 test	 al, 1
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp

; 834  : 		if (IsFlag(CWindow::FLAG_NOT_PICK))

  00067	b8 00 00 00 00	 mov	 eax, 0
  0006c	0f 45 d8	 cmovne	 ebx, eax
  0006f	8b c3		 mov	 eax, ebx
$LN10@PickWindow:

; 835  : 			return NULL;
; 836  : 
; 837  : 		return (this);
; 838  : 	}

  00071	5f		 pop	 edi
  00072	5e		 pop	 esi
  00073	5b		 pop	 ebx
  00074	5d		 pop	 ebp
  00075	c2 08 00	 ret	 8
?PickWindow@CWindow@UI@@QAEPAV12@JJ@Z ENDP		; UI::CWindow::PickWindow
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?IsIn@CWindow@UI@@QAE_NXZ
_TEXT	SEGMENT
_lx$ = -8						; size = 4
_ly$ = -4						; size = 4
?IsIn@CWindow@UI@@QAE_NXZ PROC				; UI::CWindow::IsIn, COMDAT
; _this$ = ecx

; 804  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	56		 push	 esi

; 805  : 		long lx, ly;
; 806  : 		UI::CWindowManager::Instance().GetMousePosition(lx, ly);

  00007	8d 45 fc	 lea	 eax, DWORD PTR _ly$[ebp]
  0000a	8b f1		 mov	 esi, ecx
  0000c	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCWindowManager@UI@@@@0PAVCWindowManager@UI@@A ; CSingleton<UI::CWindowManager>::ms_singleton
  00012	50		 push	 eax
  00013	8d 45 f8	 lea	 eax, DWORD PTR _lx$[ebp]
  00016	50		 push	 eax
  00017	e8 00 00 00 00	 call	 ?GetMousePosition@CWindowManager@UI@@QAEXAAJ0@Z ; UI::CWindowManager::GetMousePosition

; 807  : 
; 808  : 		return IsIn(lx, ly);

  0001c	ff 75 fc	 push	 DWORD PTR _ly$[ebp]
  0001f	8b ce		 mov	 ecx, esi
  00021	ff 75 f8	 push	 DWORD PTR _lx$[ebp]
  00024	e8 00 00 00 00	 call	 ?IsIn@CWindow@UI@@QAE_NJJ@Z ; UI::CWindow::IsIn
  00029	5e		 pop	 esi

; 809  : 	}

  0002a	8b e5		 mov	 esp, ebp
  0002c	5d		 pop	 ebp
  0002d	c3		 ret	 0
?IsIn@CWindow@UI@@QAE_NXZ ENDP				; UI::CWindow::IsIn
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?IsIn@CWindow@UI@@QAE_NJJ@Z
_TEXT	SEGMENT
_x$ = 8							; size = 4
_y$ = 12						; size = 4
?IsIn@CWindow@UI@@QAE_NJJ@Z PROC			; UI::CWindow::IsIn, COMDAT
; _this$ = ecx

; 795  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 796  : 		if (x >= m_rect.left && x <= m_rect.right)

  00003	8b 45 08	 mov	 eax, DWORD PTR _x$[ebp]
  00006	3b 41 34	 cmp	 eax, DWORD PTR [ecx+52]
  00009	7c 18		 jl	 SHORT $LN3@IsIn
  0000b	3b 41 3c	 cmp	 eax, DWORD PTR [ecx+60]
  0000e	7f 13		 jg	 SHORT $LN3@IsIn

; 797  : 			if (y >= m_rect.top && y <= m_rect.bottom)

  00010	8b 45 0c	 mov	 eax, DWORD PTR _y$[ebp]
  00013	3b 41 38	 cmp	 eax, DWORD PTR [ecx+56]
  00016	7c 0b		 jl	 SHORT $LN3@IsIn
  00018	3b 41 40	 cmp	 eax, DWORD PTR [ecx+64]
  0001b	7f 06		 jg	 SHORT $LN3@IsIn

; 798  : 				return true;

  0001d	b0 01		 mov	 al, 1

; 801  : 	}

  0001f	5d		 pop	 ebp
  00020	c2 08 00	 ret	 8
$LN3@IsIn:

; 799  : 
; 800  : 		return false;

  00023	32 c0		 xor	 al, al

; 801  : 	}

  00025	5d		 pop	 ebp
  00026	c2 08 00	 ret	 8
?IsIn@CWindow@UI@@QAE_NJJ@Z ENDP			; UI::CWindow::IsIn
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.h
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.h
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\list
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xutility
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\list
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xutility
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\list
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\list
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\list
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\list
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?SetTop@CWindow@UI@@QAEXPAV12@@Z
_TEXT	SEGMENT
_pWin$ = 8						; size = 4
?SetTop@CWindow@UI@@QAEXPAV12@@Z PROC			; UI::CWindow::SetTop, COMDAT
; _this$ = ecx

; 362  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx
  00004	57		 push	 edi
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.h

; 99   : 			bool			IsFlag(DWORD flag)		{ return (m_dwFlag & flag) ? true : false;	}

  00005	8b 7d 08	 mov	 edi, DWORD PTR _pWin$[ebp]
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp

; 362  : 	{

  00008	8b d9		 mov	 ebx, ecx
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.h

; 99   : 			bool			IsFlag(DWORD flag)		{ return (m_dwFlag & flag) ? true : false;	}

  0000a	8b 47 58	 mov	 eax, DWORD PTR [edi+88]
  0000d	c1 e8 08	 shr	 eax, 8
  00010	a8 01		 test	 al, 1
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp

; 363  : 		if (!pWin->IsFlag(CWindow::FLAG_FLOAT))

  00012	74 5e		 je	 SHORT $LN4@SetTop
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\list

; 38   :     _List_unchecked_const_iterator(_Nodeptr _Pnode, const _Mylist* _Plist) noexcept : _Ptr(_Pnode) {

  00014	8b 43 64	 mov	 eax, DWORD PTR [ebx+100]

; 1091 :         return iterator(_Mypair._Myval2._Myhead, _STD addressof(_Mypair._Myval2));

  00017	8d 4b 64	 lea	 ecx, DWORD PTR [ebx+100]
  0001a	56		 push	 esi

; 38   :     _List_unchecked_const_iterator(_Nodeptr _Pnode, const _Mylist* _Plist) noexcept : _Ptr(_Pnode) {

  0001b	8b 30		 mov	 esi, DWORD PTR [eax]

; 73   :         return _Ptr == _Right._Ptr;

  0001d	3b c6		 cmp	 eax, esi
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xutility

; 5185 :     for (; _First != _Last; ++_First) {

  0001f	74 43		 je	 SHORT $LN3@SetTop
$LL53@SetTop:

; 5186 :         if (*_First == _Val) {

  00021	39 7e 08	 cmp	 DWORD PTR [esi+8], edi
  00024	74 06		 je	 SHORT $LN120@SetTop
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\list

; 51   :         _Ptr = _Ptr->_Next;

  00026	8b 36		 mov	 esi, DWORD PTR [esi]

; 73   :         return _Ptr == _Right._Ptr;

  00028	3b f0		 cmp	 esi, eax
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xutility

; 5185 :     for (; _First != _Last; ++_First) {

  0002a	75 f5		 jne	 SHORT $LL53@SetTop
$LN120@SetTop:
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\list

; 38   :     _List_unchecked_const_iterator(_Nodeptr _Pnode, const _Mylist* _Plist) noexcept : _Ptr(_Pnode) {

  0002c	3b c6		 cmp	 eax, esi
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp

; 367  : 		if (m_pChildList.end() != itor)

  0002e	74 34		 je	 SHORT $LN3@SetTop
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\list

; 151  :         return this->_Ptr->_Myval;

  00030	8d 46 08	 lea	 eax, DWORD PTR [esi+8]
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp

; 369  : 			m_pChildList.push_back(*itor);

  00033	50		 push	 eax
  00034	e8 00 00 00 00	 call	 ?push_back@?$list@PAVCWindow@UI@@V?$allocator@PAVCWindow@UI@@@std@@@std@@QAEXABQAVCWindow@UI@@@Z ; std::list<UI::CWindow *,std::allocator<UI::CWindow *> >::push_back
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\list

; 394  :         _Pnode->_Prev->_Next = _Pnode->_Next;

  00039	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  0003c	8b 06		 mov	 eax, DWORD PTR [esi]
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory

; 255  :         ::operator delete(_Ptr, _Bytes);

  0003e	6a 0c		 push	 12			; 0000000cH
  00040	56		 push	 esi
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\list

; 394  :         _Pnode->_Prev->_Next = _Pnode->_Next;

  00041	89 01		 mov	 DWORD PTR [ecx], eax

; 395  :         _Pnode->_Next->_Prev = _Pnode->_Prev;

  00043	8b 16		 mov	 edx, DWORD PTR [esi]
  00045	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00048	89 42 04	 mov	 DWORD PTR [edx+4], eax

; 396  :         --_Mysize;

  0004b	ff 4b 68	 dec	 DWORD PTR [ebx+104]
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory

; 255  :         ::operator delete(_Ptr, _Bytes);

  0004e	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp

; 372  : 			pWin->OnTop();

  00053	8b 07		 mov	 eax, DWORD PTR [edi]
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory

; 255  :         ::operator delete(_Ptr, _Bytes);

  00055	83 c4 08	 add	 esp, 8
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp

; 372  : 			pWin->OnTop();

  00058	8b cf		 mov	 ecx, edi
  0005a	ff 50 2c	 call	 DWORD PTR [eax+44]
  0005d	5e		 pop	 esi
  0005e	5f		 pop	 edi

; 377  : 		}
; 378  : 	}

  0005f	5b		 pop	 ebx
  00060	5d		 pop	 ebp
  00061	c2 04 00	 ret	 4
$LN3@SetTop:

; 373  : 		}
; 374  : 		else
; 375  : 		{
; 376  : 			TraceError(" CWindow::SetTop - Failed to find child window\n");

  00064	68 00 00 00 00	 push	 OFFSET ??_C@_0DA@NEIGMJK@?5CWindow?3?3SetTop?5?9?5Failed?5to?5fi@
  00069	e8 00 00 00 00	 call	 ?TraceError@@YAXPBDZZ	; TraceError
  0006e	83 c4 04	 add	 esp, 4
  00071	5e		 pop	 esi
$LN4@SetTop:

; 377  : 		}
; 378  : 	}

  00072	5f		 pop	 edi
  00073	5b		 pop	 ebx
  00074	5d		 pop	 ebp
  00075	c2 04 00	 ret	 4
?SetTop@CWindow@UI@@QAEXPAV12@@Z ENDP			; UI::CWindow::SetTop
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?DeleteChild@CWindow@UI@@QAEXPAV12@@Z
_TEXT	SEGMENT
_pWin$ = 8						; size = 4
?DeleteChild@CWindow@UI@@QAEXPAV12@@Z PROC		; UI::CWindow::DeleteChild, COMDAT
; _this$ = ecx

; 350  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 351  : 		if (m_isUpdatingChildren)

  00003	83 79 6c 00	 cmp	 DWORD PTR [ecx+108], 0
  00007	8d 45 08	 lea	 eax, DWORD PTR _pWin$[ebp]
  0000a	50		 push	 eax
  0000b	74 0c		 je	 SHORT $LN2@DeleteChil

; 352  : 		{
; 353  : 			m_pReserveChildList.push_back(pWin);

  0000d	83 c1 70	 add	 ecx, 112		; 00000070H
  00010	e8 00 00 00 00	 call	 ?push_back@?$list@PAVCWindow@UI@@V?$allocator@PAVCWindow@UI@@@std@@@std@@QAEXABQAVCWindow@UI@@@Z ; std::list<UI::CWindow *,std::allocator<UI::CWindow *> >::push_back

; 358  : 		}
; 359  : 	}

  00015	5d		 pop	 ebp
  00016	c2 04 00	 ret	 4
$LN2@DeleteChil:

; 354  : 		}
; 355  : 		else
; 356  : 		{
; 357  : 			m_pChildList.remove(pWin);

  00019	83 c1 64	 add	 ecx, 100		; 00000064H
  0001c	e8 00 00 00 00	 call	 ?remove@?$list@PAVCWindow@UI@@V?$allocator@PAVCWindow@UI@@@std@@@std@@QAE@ABQAVCWindow@UI@@@Z ; std::list<UI::CWindow *,std::allocator<UI::CWindow *> >::remove

; 358  : 		}
; 359  : 	}

  00021	5d		 pop	 ebp
  00022	c2 04 00	 ret	 4
?DeleteChild@CWindow@UI@@QAEXPAV12@@Z ENDP		; UI::CWindow::DeleteChild
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\list
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\list
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?IsChild@CWindow@UI@@QAE_NPAV12@@Z
_TEXT	SEGMENT
_pWin$ = 8						; size = 4
?IsChild@CWindow@UI@@QAE_NPAV12@@Z PROC			; UI::CWindow::IsChild, COMDAT
; _this$ = ecx

; 335  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\list

; 1083 :         return iterator(_Mypair._Myval2._Myhead->_Next, _STD addressof(_Mypair._Myval2));

  00003	8b 49 64	 mov	 ecx, DWORD PTR [ecx+100]

; 38   :     _List_unchecked_const_iterator(_Nodeptr _Pnode, const _Mylist* _Plist) noexcept : _Ptr(_Pnode) {

  00006	8b 01		 mov	 eax, DWORD PTR [ecx]
  00008	3b c1		 cmp	 eax, ecx
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp

; 338  : 		while (itor != m_pChildList.end())

  0000a	74 0f		 je	 SHORT $LN3@IsChild
  0000c	8b 55 08	 mov	 edx, DWORD PTR _pWin$[ebp]
  0000f	90		 npad	 1
$LL2@IsChild:

; 339  : 		{
; 340  : 			if (*itor == pWin)

  00010	39 50 08	 cmp	 DWORD PTR [eax+8], edx
  00013	74 0c		 je	 SHORT $LN35@IsChild
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\list

; 165  :         this->_Ptr = this->_Ptr->_Next;

  00015	8b 00		 mov	 eax, DWORD PTR [eax]

; 198  :         return this->_Ptr == _Right._Ptr;

  00017	3b c1		 cmp	 eax, ecx
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp

; 338  : 		while (itor != m_pChildList.end())

  00019	75 f5		 jne	 SHORT $LL2@IsChild
$LN3@IsChild:

; 342  : 
; 343  : 			++itor;
; 344  : 		}
; 345  : 
; 346  : 		return false;

  0001b	32 c0		 xor	 al, al

; 347  : 	}

  0001d	5d		 pop	 ebp
  0001e	c2 04 00	 ret	 4
$LN35@IsChild:

; 341  : 				return true;

  00021	b0 01		 mov	 al, 1

; 347  : 	}

  00023	5d		 pop	 ebp
  00024	c2 04 00	 ret	 4
?IsChild@CWindow@UI@@QAE_NPAV12@@Z ENDP			; UI::CWindow::IsChild
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?GetParent@CWindow@UI@@QAEPAV12@XZ
_TEXT	SEGMENT
?GetParent@CWindow@UI@@QAEPAV12@XZ PROC			; UI::CWindow::GetParent, COMDAT
; _this$ = ecx

; 331  : 		return m_pParent;

  00000	8b 41 60	 mov	 eax, DWORD PTR [ecx+96]

; 332  : 	}

  00003	c3		 ret	 0
?GetParent@CWindow@UI@@QAEPAV12@XZ ENDP			; UI::CWindow::GetParent
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?GetRoot@CWindow@UI@@QAEPAV12@XZ
_TEXT	SEGMENT
?GetRoot@CWindow@UI@@QAEPAV12@XZ PROC			; UI::CWindow::GetRoot, COMDAT
; _this$ = ecx

; 321  : 	{

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 322  : 		if (m_pParent)

  00003	8b 46 60	 mov	 eax, DWORD PTR [esi+96]
  00006	57		 push	 edi
  00007	8d 7e 60	 lea	 edi, DWORD PTR [esi+96]
  0000a	85 c0		 test	 eax, eax
  0000c	74 1c		 je	 SHORT $LN11@GetRoot
  0000e	66 90		 npad	 2
$LL5@GetRoot:

; 323  : 			if (m_pParent->IsWindow())

  00010	8b 10		 mov	 edx, DWORD PTR [eax]
  00012	8b c8		 mov	 ecx, eax
  00014	ff 92 9c 00 00
	00		 call	 DWORD PTR [edx+156]
  0001a	85 c0		 test	 eax, eax
  0001c	74 0c		 je	 SHORT $LN11@GetRoot

; 324  : 				return m_pParent->GetRoot();

  0001e	8b 37		 mov	 esi, DWORD PTR [edi]
  00020	8b 46 60	 mov	 eax, DWORD PTR [esi+96]
  00023	8d 7e 60	 lea	 edi, DWORD PTR [esi+96]
  00026	85 c0		 test	 eax, eax
  00028	75 e6		 jne	 SHORT $LL5@GetRoot
$LN11@GetRoot:
  0002a	5f		 pop	 edi

; 325  : 
; 326  : 		return this;
; 327  : 	}

  0002b	8b c6		 mov	 eax, esi
  0002d	5e		 pop	 esi
  0002e	c3		 ret	 0
?GetRoot@CWindow@UI@@QAEPAV12@XZ ENDP			; UI::CWindow::GetRoot
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?IsRendering@CWindow@UI@@QAE_NXZ
_TEXT	SEGMENT
?IsRendering@CWindow@UI@@QAE_NXZ PROC			; UI::CWindow::IsRendering, COMDAT
; _this$ = ecx

; 100  : 		if (!IsShow())

  00000	80 79 55 00	 cmp	 BYTE PTR [ecx+85], 0
  00004	74 0d		 je	 SHORT $LN8@IsRenderin
$LL5@IsRenderin:

; 102  : 
; 103  : 		if (!m_pParent)

  00006	8b 49 60	 mov	 ecx, DWORD PTR [ecx+96]
  00009	85 c9		 test	 ecx, ecx
  0000b	74 09		 je	 SHORT $LN9@IsRenderin

; 100  : 		if (!IsShow())

  0000d	80 79 55 00	 cmp	 BYTE PTR [ecx+85], 0
  00011	75 f3		 jne	 SHORT $LL5@IsRenderin
$LN8@IsRenderin:

; 101  : 			return false;

  00013	32 c0		 xor	 al, al

; 105  : 
; 106  : 		return m_pParent->IsRendering();
; 107  : 	}

  00015	c3		 ret	 0
$LN9@IsRenderin:

; 104  : 			return true;

  00016	b0 01		 mov	 al, 1

; 105  : 
; 106  : 		return m_pParent->IsRendering();
; 107  : 	}

  00018	c3		 ret	 0
?IsRendering@CWindow@UI@@QAE_NXZ ENDP			; UI::CWindow::IsRendering
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?Hide@CWindow@UI@@QAEXXZ
_TEXT	SEGMENT
?Hide@CWindow@UI@@QAEXXZ PROC				; UI::CWindow::Hide, COMDAT
; _this$ = ecx

; 95   : 		m_bShow = false;

  00000	c6 41 55 00	 mov	 BYTE PTR [ecx+85], 0

; 96   : 	}

  00004	c3		 ret	 0
?Hide@CWindow@UI@@QAEXXZ ENDP				; UI::CWindow::Hide
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?Show@CWindow@UI@@QAEXXZ
_TEXT	SEGMENT
?Show@CWindow@UI@@QAEXXZ PROC				; UI::CWindow::Show, COMDAT
; _this$ = ecx

; 90   : 		m_bShow = true;

  00000	c6 41 55 01	 mov	 BYTE PTR [ecx+85], 1

; 91   : 	}

  00004	c3		 ret	 0
?Show@CWindow@UI@@QAEXXZ ENDP				; UI::CWindow::Show
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
; File D:\Windows Kits\10\Include\10.0.19041.0\ucrt\stdlib.h
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
; File D:\Windows Kits\10\Include\10.0.19041.0\ucrt\stdlib.h
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\list
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\list
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\list
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\algorithm
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\functional
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\list
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\algorithm
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?UpdateRect@CWindow@UI@@QAEJXZ
_TEXT	SEGMENT
$T1 = -12						; size = 4
_this$1$ = -8						; size = 4
tv680 = -4						; size = 4
?UpdateRect@CWindow@UI@@QAEJXZ PROC			; UI::CWindow::UpdateRect, COMDAT
; _this$ = ecx

; 227  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	53		 push	 ebx
  00007	8b d9		 mov	 ebx, ecx
  00009	56		 push	 esi
  0000a	57		 push	 edi
  0000b	89 5d f8	 mov	 DWORD PTR _this$1$[ebp], ebx

; 228  : 		m_rect.top		= m_y;
; 229  : 		if (m_pParent)

  0000e	8b 73 60	 mov	 esi, DWORD PTR [ebx+96]
  00011	8b 4b 28	 mov	 ecx, DWORD PTR [ebx+40]
  00014	89 4b 38	 mov	 DWORD PTR [ebx+56], ecx
  00017	85 f6		 test	 esi, esi
  00019	74 2f		 je	 SHORT $LN6@UpdateRect

; 230  : 		{
; 231  : 			switch (m_VerticalAlign)

  0001b	8b 43 20	 mov	 eax, DWORD PTR [ebx+32]
  0001e	83 e8 01	 sub	 eax, 1
  00021	74 11		 je	 SHORT $LN8@UpdateRect
  00023	83 e8 01	 sub	 eax, 1
  00026	75 1c		 jne	 SHORT $LN2@UpdateRect

; 232  : 			{
; 233  : 				case VERTICAL_ALIGN_BOTTOM:
; 234  : 					m_rect.top = m_pParent->GetHeight() - m_rect.top;

  00028	8b 46 30	 mov	 eax, DWORD PTR [esi+48]
  0002b	2b c1		 sub	 eax, ecx
  0002d	89 43 38	 mov	 DWORD PTR [ebx+56], eax
  00030	8b c8		 mov	 ecx, eax

; 235  : 					break;

  00032	eb 10		 jmp	 SHORT $LN2@UpdateRect
$LN8@UpdateRect:

; 236  : 				case VERTICAL_ALIGN_CENTER:
; 237  : 					m_rect.top = (m_pParent->GetHeight() - GetHeight()) / 2 + m_rect.top;

  00034	8b 46 30	 mov	 eax, DWORD PTR [esi+48]
  00037	2b 43 30	 sub	 eax, DWORD PTR [ebx+48]
  0003a	99		 cdq
  0003b	2b c2		 sub	 eax, edx
  0003d	d1 f8		 sar	 eax, 1
  0003f	03 c8		 add	 ecx, eax
  00041	89 4b 38	 mov	 DWORD PTR [ebx+56], ecx
$LN2@UpdateRect:

; 238  : 					break;
; 239  : 			}
; 240  : 			m_rect.top += m_pParent->m_rect.top;

  00044	03 4e 38	 add	 ecx, DWORD PTR [esi+56]
  00047	89 4b 38	 mov	 DWORD PTR [ebx+56], ecx
$LN6@UpdateRect:

; 241  : 		}
; 242  : 		m_rect.bottom	= m_rect.top + m_lHeight;

  0004a	8b 43 30	 mov	 eax, DWORD PTR [ebx+48]

; 243  : 
; 244  : #if defined( _USE_CPP_RTL_FLIP )
; 245  : 		if( m_pParent == NULL ) {
; 246  : 			m_rect.left		= m_x;
; 247  : 			m_rect.right	= m_rect.left + m_lWidth;
; 248  : 		} else {
; 249  : 			if( m_pParent->IsFlag(UI::CWindow::FLAG_RTL) == true ) {
; 250  : 				m_rect.left = m_pParent->GetWidth() - m_lWidth - m_x;
; 251  : 				switch (m_HorizontalAlign)
; 252  : 				{
; 253  : 					case HORIZONTAL_ALIGN_RIGHT:
; 254  : 						m_rect.left = - m_x;
; 255  : 						break;
; 256  : 					case HORIZONTAL_ALIGN_CENTER:
; 257  : 						m_rect.left = m_pParent->GetWidth() / 2 - GetWidth() - m_x;
; 258  : 						break;
; 259  : 				}
; 260  : 				m_rect.left += m_pParent->m_rect.left;
; 261  : 				m_rect.right = m_rect.left + m_lWidth;
; 262  : 			} else {
; 263  : 				m_rect.left		= m_x;
; 264  : 				switch (m_HorizontalAlign)
; 265  : 				{
; 266  : 					case HORIZONTAL_ALIGN_RIGHT:
; 267  : 						m_rect.left = m_pParent->GetWidth() - m_rect.left;
; 268  : 						break;
; 269  : 					case HORIZONTAL_ALIGN_CENTER:
; 270  : 						m_rect.left = (m_pParent->GetWidth() - GetWidth()) / 2 + m_rect.left;
; 271  : 						break;
; 272  : 				}
; 273  : 				m_rect.left += m_pParent->m_rect.left;
; 274  : 				m_rect.right = m_rect.left + m_lWidth;
; 275  : 			}
; 276  : 		}
; 277  : #else
; 278  : 		m_rect.left		= m_x;

  0004d	8b 7b 24	 mov	 edi, DWORD PTR [ebx+36]
  00050	03 c1		 add	 eax, ecx
  00052	89 43 40	 mov	 DWORD PTR [ebx+64], eax
  00055	89 7b 34	 mov	 DWORD PTR [ebx+52], edi

; 279  : 		if (m_pParent)

  00058	85 f6		 test	 esi, esi
  0005a	74 50		 je	 SHORT $LN9@UpdateRect

; 280  : 		{
; 281  : 			switch (m_HorizontalAlign)

  0005c	8b 43 1c	 mov	 eax, DWORD PTR [ebx+28]
  0005f	83 e8 01	 sub	 eax, 1
  00062	74 16		 je	 SHORT $LN11@UpdateRect
  00064	83 e8 01	 sub	 eax, 1
  00067	75 2a		 jne	 SHORT $LN4@UpdateRect
; File D:\Windows Kits\10\Include\10.0.19041.0\ucrt\stdlib.h

; 365  :         return labs(_X);

  00069	8b 46 2c	 mov	 eax, DWORD PTR [esi+44]
  0006c	99		 cdq
  0006d	33 c2		 xor	 eax, edx
  0006f	2b c2		 sub	 eax, edx
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp

; 284  : 					m_rect.left = ::abs(m_pParent->GetWidth()) - m_rect.left;

  00071	2b c7		 sub	 eax, edi
  00073	89 43 34	 mov	 DWORD PTR [ebx+52], eax
  00076	8b f8		 mov	 edi, eax

; 285  : 					break;

  00078	eb 19		 jmp	 SHORT $LN4@UpdateRect
$LN11@UpdateRect:

; 286  : 				case HORIZONTAL_ALIGN_CENTER:
; 287  : 					m_rect.left = m_pParent->GetWidth() / 2 - GetWidth() / 2 + m_rect.left;

  0007a	8b 46 2c	 mov	 eax, DWORD PTR [esi+44]
  0007d	99		 cdq
  0007e	2b c2		 sub	 eax, edx
  00080	8b c8		 mov	 ecx, eax
  00082	8b 43 2c	 mov	 eax, DWORD PTR [ebx+44]
  00085	99		 cdq
  00086	2b c2		 sub	 eax, edx
  00088	d1 f9		 sar	 ecx, 1
  0008a	d1 f8		 sar	 eax, 1
  0008c	2b c8		 sub	 ecx, eax
  0008e	03 f9		 add	 edi, ecx
  00090	89 7b 34	 mov	 DWORD PTR [ebx+52], edi
$LN4@UpdateRect:

; 290  : 			m_rect.left += 0L < m_pParent->GetWidth() ? m_pParent->m_rect.left : m_pParent->m_rect.right + ::abs(m_pParent->GetWidth());

  00093	8b 46 2c	 mov	 eax, DWORD PTR [esi+44]
  00096	85 c0		 test	 eax, eax
  00098	7e 05		 jle	 SHORT $LN13@UpdateRect
  0009a	8b 46 34	 mov	 eax, DWORD PTR [esi+52]
  0009d	eb 08		 jmp	 SHORT $LN14@UpdateRect
$LN13@UpdateRect:
; File D:\Windows Kits\10\Include\10.0.19041.0\ucrt\stdlib.h

; 365  :         return labs(_X);

  0009f	99		 cdq
  000a0	33 c2		 xor	 eax, edx
  000a2	2b c2		 sub	 eax, edx
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp

; 290  : 			m_rect.left += 0L < m_pParent->GetWidth() ? m_pParent->m_rect.left : m_pParent->m_rect.right + ::abs(m_pParent->GetWidth());

  000a4	03 46 3c	 add	 eax, DWORD PTR [esi+60]
$LN14@UpdateRect:
  000a7	03 f8		 add	 edi, eax
  000a9	89 7b 34	 mov	 DWORD PTR [ebx+52], edi
$LN9@UpdateRect:

; 291  : 		}
; 292  : 		m_rect.right = m_rect.left + m_lWidth;

  000ac	8b 43 2c	 mov	 eax, DWORD PTR [ebx+44]
  000af	03 c7		 add	 eax, edi
  000b1	89 43 3c	 mov	 DWORD PTR [ebx+60], eax
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\list

; 38   :     _List_unchecked_const_iterator(_Nodeptr _Pnode, const _Mylist* _Plist) noexcept : _Ptr(_Pnode) {

  000b4	8b 43 64	 mov	 eax, DWORD PTR [ebx+100]
  000b7	89 45 fc	 mov	 DWORD PTR tv680[ebp], eax
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp

; 294  : 		std::for_each(m_pChildList.begin(), m_pChildList.end(), std::mem_fun(&CWindow::UpdateRect));

  000ba	68 00 00 00 00	 push	 OFFSET ?UpdateRect@CWindow@UI@@QAEJXZ ; UI::CWindow::UpdateRect
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\list

; 38   :     _List_unchecked_const_iterator(_Nodeptr _Pnode, const _Mylist* _Plist) noexcept : _Ptr(_Pnode) {

  000bf	8b 30		 mov	 esi, DWORD PTR [eax]
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp

; 294  : 		std::for_each(m_pChildList.begin(), m_pChildList.end(), std::mem_fun(&CWindow::UpdateRect));

  000c1	8d 45 f4	 lea	 eax, DWORD PTR $T1[ebp]
  000c4	50		 push	 eax
  000c5	e8 00 00 00 00	 call	 ??$mem_fun@JVCWindow@UI@@@std@@YA?AV?$mem_fun_t@JVCWindow@UI@@@0@P8CWindow@UI@@AEJXZ@Z ; std::mem_fun<long,UI::CWindow>
  000ca	83 c4 08	 add	 esp, 8
  000cd	8b 38		 mov	 edi, DWORD PTR [eax]
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\list

; 73   :         return _Ptr == _Right._Ptr;

  000cf	3b 75 fc	 cmp	 esi, DWORD PTR tv680[ebp]
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\algorithm

; 232  :     for (; _UFirst != _ULast; ++_UFirst) {

  000d2	74 11		 je	 SHORT $LN37@UpdateRect
  000d4	8b 5d fc	 mov	 ebx, DWORD PTR tv680[ebp]
$LL59@UpdateRect:
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\functional

; 410  :         return (_Pleft->*_Pmemfun)();

  000d7	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]
  000da	ff d7		 call	 edi
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\list

; 51   :         _Ptr = _Ptr->_Next;

  000dc	8b 36		 mov	 esi, DWORD PTR [esi]

; 73   :         return _Ptr == _Right._Ptr;

  000de	3b f3		 cmp	 esi, ebx
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\algorithm

; 232  :     for (; _UFirst != _ULast; ++_UFirst) {

  000e0	75 f5		 jne	 SHORT $LL59@UpdateRect
  000e2	8b 5d f8	 mov	 ebx, DWORD PTR _this$1$[ebp]
$LN37@UpdateRect:
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp

; 296  : 		OnChangePosition();

  000e5	8b 03		 mov	 eax, DWORD PTR [ebx]
  000e7	8b cb		 mov	 ecx, ebx
  000e9	ff 50 0c	 call	 DWORD PTR [eax+12]

; 297  : 
; 298  : 		return 1;

  000ec	5f		 pop	 edi
  000ed	5e		 pop	 esi
  000ee	b8 01 00 00 00	 mov	 eax, 1
  000f3	5b		 pop	 ebx

; 299  : 	}

  000f4	8b e5		 mov	 esp, ebp
  000f6	5d		 pop	 ebp
  000f7	c3		 ret	 0
?UpdateRect@CWindow@UI@@QAEJXZ ENDP			; UI::CWindow::UpdateRect
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?GetMouseLocalPosition@CWindow@UI@@QAEXAAJ0@Z
_TEXT	SEGMENT
_rlx$ = 8						; size = 4
_rly$ = 12						; size = 4
?GetMouseLocalPosition@CWindow@UI@@QAEXAAJ0@Z PROC	; UI::CWindow::GetMouseLocalPosition, COMDAT
; _this$ = ecx

; 308  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx
  00004	56		 push	 esi

; 309  : 		CWindowManager::Instance().GetMousePosition(rlx, rly);

  00005	8b 75 08	 mov	 esi, DWORD PTR _rlx$[ebp]
  00008	8b d9		 mov	 ebx, ecx
  0000a	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCWindowManager@UI@@@@0PAVCWindowManager@UI@@A ; CSingleton<UI::CWindowManager>::ms_singleton
  00010	57		 push	 edi
  00011	8b 7d 0c	 mov	 edi, DWORD PTR _rly$[ebp]
  00014	57		 push	 edi
  00015	56		 push	 esi
  00016	e8 00 00 00 00	 call	 ?GetMousePosition@CWindowManager@UI@@QAEXAAJ0@Z ; UI::CWindowManager::GetMousePosition

; 310  : 		rlx = rlx - m_rect.left;

  0001b	8b 43 34	 mov	 eax, DWORD PTR [ebx+52]
  0001e	29 06		 sub	 DWORD PTR [esi], eax

; 311  : 		rly = rly - m_rect.top;

  00020	8b 43 38	 mov	 eax, DWORD PTR [ebx+56]
  00023	29 07		 sub	 DWORD PTR [edi], eax
  00025	5f		 pop	 edi
  00026	5e		 pop	 esi
  00027	5b		 pop	 ebx

; 312  : 	}

  00028	5d		 pop	 ebp
  00029	c2 08 00	 ret	 8
?GetMouseLocalPosition@CWindow@UI@@QAEXAAJ0@Z ENDP	; UI::CWindow::GetMouseLocalPosition
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?GetLocalPosition@CWindow@UI@@QAEXAAJ0@Z
_TEXT	SEGMENT
_rlx$ = 8						; size = 4
_rly$ = 12						; size = 4
?GetLocalPosition@CWindow@UI@@QAEXAAJ0@Z PROC		; UI::CWindow::GetLocalPosition, COMDAT
; _this$ = ecx

; 302  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 303  : 		rlx = rlx - m_rect.left;

  00003	8b 45 08	 mov	 eax, DWORD PTR _rlx$[ebp]
  00006	8b 51 34	 mov	 edx, DWORD PTR [ecx+52]
  00009	29 10		 sub	 DWORD PTR [eax], edx

; 304  : 		rly = rly - m_rect.top;

  0000b	8b 45 0c	 mov	 eax, DWORD PTR _rly$[ebp]
  0000e	8b 49 38	 mov	 ecx, DWORD PTR [ecx+56]
  00011	29 08		 sub	 DWORD PTR [eax], ecx

; 305  : 	}

  00013	5d		 pop	 ebp
  00014	c2 08 00	 ret	 8
?GetLocalPosition@CWindow@UI@@QAEXAAJ0@Z ENDP		; UI::CWindow::GetLocalPosition
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?GetPosition@CWindow@UI@@QAEXPAJ0@Z
_TEXT	SEGMENT
_plx$ = 8						; size = 4
_ply$ = 12						; size = 4
?GetPosition@CWindow@UI@@QAEXPAJ0@Z PROC		; UI::CWindow::GetPosition, COMDAT
; _this$ = ecx

; 221  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 222  : 		*plx = m_x;

  00003	8b 45 08	 mov	 eax, DWORD PTR _plx$[ebp]
  00006	8b 51 24	 mov	 edx, DWORD PTR [ecx+36]
  00009	89 10		 mov	 DWORD PTR [eax], edx

; 223  : 		*ply = m_y;

  0000b	8b 45 0c	 mov	 eax, DWORD PTR _ply$[ebp]
  0000e	8b 49 28	 mov	 ecx, DWORD PTR [ecx+40]
  00011	89 08		 mov	 DWORD PTR [eax], ecx

; 224  : 	}

  00013	5d		 pop	 ebp
  00014	c2 08 00	 ret	 8
?GetPosition@CWindow@UI@@QAEXPAJ0@Z ENDP		; UI::CWindow::GetPosition
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?SetPosition@CWindow@UI@@QAEXJJ@Z
_TEXT	SEGMENT
_x$ = 8							; size = 4
_y$ = 12						; size = 4
?SetPosition@CWindow@UI@@QAEXJJ@Z PROC			; UI::CWindow::SetPosition, COMDAT
; _this$ = ecx

; 213  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 214  : 		m_x = x;

  00003	8b 45 08	 mov	 eax, DWORD PTR _x$[ebp]
  00006	89 41 24	 mov	 DWORD PTR [ecx+36], eax

; 215  : 		m_y = y;

  00009	8b 45 0c	 mov	 eax, DWORD PTR _y$[ebp]
  0000c	89 41 28	 mov	 DWORD PTR [ecx+40], eax

; 216  : 
; 217  : 		UpdateRect();

  0000f	e8 00 00 00 00	 call	 ?UpdateRect@CWindow@UI@@QAEJXZ ; UI::CWindow::UpdateRect

; 218  : 	}

  00014	5d		 pop	 ebp
  00015	c2 08 00	 ret	 8
?SetPosition@CWindow@UI@@QAEXJJ@Z ENDP			; UI::CWindow::SetPosition
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?SetVerticalAlign@CWindow@UI@@QAEXK@Z
_TEXT	SEGMENT
_dwAlign$ = 8						; size = 4
?SetVerticalAlign@CWindow@UI@@QAEXK@Z PROC		; UI::CWindow::SetVerticalAlign, COMDAT
; _this$ = ecx

; 207  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 208  : 		m_VerticalAlign = (EVerticalAlign)dwAlign;

  00003	8b 45 08	 mov	 eax, DWORD PTR _dwAlign$[ebp]
  00006	89 41 20	 mov	 DWORD PTR [ecx+32], eax

; 209  : 		UpdateRect();

  00009	e8 00 00 00 00	 call	 ?UpdateRect@CWindow@UI@@QAEJXZ ; UI::CWindow::UpdateRect

; 210  : 	}

  0000e	5d		 pop	 ebp
  0000f	c2 04 00	 ret	 4
?SetVerticalAlign@CWindow@UI@@QAEXK@Z ENDP		; UI::CWindow::SetVerticalAlign
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?SetHorizontalAlign@CWindow@UI@@QAEXK@Z
_TEXT	SEGMENT
_dwAlign$ = 8						; size = 4
?SetHorizontalAlign@CWindow@UI@@QAEXK@Z PROC		; UI::CWindow::SetHorizontalAlign, COMDAT
; _this$ = ecx

; 201  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 202  : 		m_HorizontalAlign = (EHorizontalAlign)dwAlign;

  00003	8b 45 08	 mov	 eax, DWORD PTR _dwAlign$[ebp]
  00006	89 41 1c	 mov	 DWORD PTR [ecx+28], eax

; 203  : 		UpdateRect();

  00009	e8 00 00 00 00	 call	 ?UpdateRect@CWindow@UI@@QAEJXZ ; UI::CWindow::UpdateRect

; 204  : 	}

  0000e	5d		 pop	 ebp
  0000f	c2 04 00	 ret	 4
?SetHorizontalAlign@CWindow@UI@@QAEXK@Z ENDP		; UI::CWindow::SetHorizontalAlign
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?SetSize@CWindow@UI@@QAEXJJ@Z
_TEXT	SEGMENT
_width$ = 8						; size = 4
_height$ = 12						; size = 4
?SetSize@CWindow@UI@@QAEXJJ@Z PROC			; UI::CWindow::SetSize, COMDAT
; _this$ = ecx

; 192  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 193  : 		m_lWidth = width;

  00003	8b 55 08	 mov	 edx, DWORD PTR _width$[ebp]

; 194  : 		m_lHeight = height;
; 195  : 
; 196  : 		m_rect.right = m_rect.left + m_lWidth;

  00006	8b 41 34	 mov	 eax, DWORD PTR [ecx+52]
  00009	03 c2		 add	 eax, edx
  0000b	89 51 2c	 mov	 DWORD PTR [ecx+44], edx
  0000e	89 41 3c	 mov	 DWORD PTR [ecx+60], eax

; 197  : 		m_rect.bottom = m_rect.top + m_lHeight;

  00011	8b 41 38	 mov	 eax, DWORD PTR [ecx+56]
  00014	56		 push	 esi
  00015	8b 75 0c	 mov	 esi, DWORD PTR _height$[ebp]
  00018	03 c6		 add	 eax, esi
  0001a	89 71 30	 mov	 DWORD PTR [ecx+48], esi
  0001d	89 41 40	 mov	 DWORD PTR [ecx+64], eax
  00020	5e		 pop	 esi

; 198  : 	}

  00021	5d		 pop	 ebp
  00022	c2 08 00	 ret	 8
?SetSize@CWindow@UI@@QAEXJJ@Z ENDP			; UI::CWindow::SetSize
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?SetName@CWindow@UI@@QAEXPBD@Z
_TEXT	SEGMENT
_c_szName$ = 8						; size = 4
?SetName@CWindow@UI@@QAEXPBD@Z PROC			; UI::CWindow::SetName, COMDAT
; _this$ = ecx

; 187  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xstring

; 404  :         return _CSTD strlen(reinterpret_cast<const char*>(_First));

  00003	8b 55 08	 mov	 edx, DWORD PTR _c_szName$[ebp]
  00006	8b c2		 mov	 eax, edx
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp

; 187  : 	{

  00008	56		 push	 esi
  00009	57		 push	 edi
  0000a	8b f1		 mov	 esi, ecx
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xstring

; 404  :         return _CSTD strlen(reinterpret_cast<const char*>(_First));

  0000c	8d 78 01	 lea	 edi, DWORD PTR [eax+1]
  0000f	90		 npad	 1
$LL9@SetName:
  00010	8a 08		 mov	 cl, BYTE PTR [eax]
  00012	40		 inc	 eax
  00013	84 c9		 test	 cl, cl
  00015	75 f9		 jne	 SHORT $LL9@SetName
  00017	2b c7		 sub	 eax, edi
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp

; 188  : 		m_strName = c_szName;

  00019	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xstring

; 3230 :         return assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

  0001c	50		 push	 eax
  0001d	52		 push	 edx
  0001e	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00023	5f		 pop	 edi
  00024	5e		 pop	 esi
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp

; 189  : 	}

  00025	5d		 pop	 ebp
  00026	c2 04 00	 ret	 4
?SetName@CWindow@UI@@QAEXPBD@Z ENDP			; UI::CWindow::SetName
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\list
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\algorithm
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterBase\Stl.h
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\list
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\algorithm
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?Render@CWindow@UI@@QAEXXZ
_TEXT	SEGMENT
?Render@CWindow@UI@@QAEXXZ PROC				; UI::CWindow::Render, COMDAT
; _this$ = ecx

; 144  : 	{

  00000	57		 push	 edi
  00001	8b f9		 mov	 edi, ecx

; 145  : 		if (!IsShow())

  00003	80 7f 55 00	 cmp	 BYTE PTR [edi+85], 0
  00007	0f 84 a2 00 00
	00		 je	 $LN27@Render

; 146  : 			return;
; 147  : 
; 148  : 		OnRender();

  0000d	8b 07		 mov	 eax, DWORD PTR [edi]
  0000f	ff 50 04	 call	 DWORD PTR [eax+4]

; 149  : 
; 150  : 		if (g_bOutlineBoxEnable)

  00012	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?g_bOutlineBoxEnable@@3HA, 0 ; g_bOutlineBoxEnable
  00019	74 7a		 je	 SHORT $LN3@Render

; 151  : 		{
; 152  : 			CPythonGraphic::Instance().SetDiffuseColor(1.0f, 1.0f, 1.0f);

  0001b	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCPythonGraphic@@@@0PAVCPythonGraphic@@A ; CSingleton<CPythonGraphic>::ms_singleton
  00021	83 ec 10	 sub	 esp, 16			; 00000010H
  00024	c7 44 24 0c 00
	00 80 3f	 mov	 DWORD PTR [esp+12], 1065353216 ; 3f800000H
  0002c	c7 44 24 08 00
	00 80 3f	 mov	 DWORD PTR [esp+8], 1065353216 ; 3f800000H
  00034	c7 44 24 04 00
	00 80 3f	 mov	 DWORD PTR [esp+4], 1065353216 ; 3f800000H
  0003c	c7 04 24 00 00
	80 3f		 mov	 DWORD PTR [esp], 1065353216 ; 3f800000H
  00043	e8 00 00 00 00	 call	 ?SetDiffuseColor@CScreen@@QAEXMMMM@Z ; CScreen::SetDiffuseColor
  00048	66 0f 6e 47 40	 movd	 xmm0, DWORD PTR [edi+64]

; 153  : 			CPythonGraphic::Instance().RenderBox2d(m_rect.left, m_rect.top, m_rect.right, m_rect.bottom);

  0004d	83 ec 14	 sub	 esp, 20			; 00000014H
  00050	0f 5b c0	 cvtdq2ps xmm0, xmm0
  00053	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCPythonGraphic@@@@0PAVCPythonGraphic@@A ; CSingleton<CPythonGraphic>::ms_singleton
  00059	c7 44 24 10 00
	00 00 00	 mov	 DWORD PTR [esp+16], 0
  00061	f3 0f 11 44 24
	0c		 movss	 DWORD PTR [esp+12], xmm0
  00067	66 0f 6e 47 3c	 movd	 xmm0, DWORD PTR [edi+60]
  0006c	0f 5b c0	 cvtdq2ps xmm0, xmm0
  0006f	f3 0f 11 44 24
	08		 movss	 DWORD PTR [esp+8], xmm0
  00075	66 0f 6e 47 38	 movd	 xmm0, DWORD PTR [edi+56]
  0007a	0f 5b c0	 cvtdq2ps xmm0, xmm0
  0007d	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  00083	66 0f 6e 47 34	 movd	 xmm0, DWORD PTR [edi+52]
  00088	0f 5b c0	 cvtdq2ps xmm0, xmm0
  0008b	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00090	e8 00 00 00 00	 call	 ?RenderBox2d@CScreen@@QAEXMMMMM@Z ; CScreen::RenderBox2d
$LN3@Render:
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\list

; 38   :     _List_unchecked_const_iterator(_Nodeptr _Pnode, const _Mylist* _Plist) noexcept : _Ptr(_Pnode) {

  00095	8b 7f 64	 mov	 edi, DWORD PTR [edi+100]
  00098	56		 push	 esi
  00099	8b 37		 mov	 esi, DWORD PTR [edi]

; 73   :         return _Ptr == _Right._Ptr;

  0009b	3b f7		 cmp	 esi, edi
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\algorithm

; 232  :     for (; _UFirst != _ULast; ++_UFirst) {

  0009d	74 0f		 je	 SHORT $LN64@Render
  0009f	90		 npad	 1
$LL49@Render:
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterBase\Stl.h

; 41   : 		{((_P->*_Ptr)()); }

  000a0	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]
  000a3	e8 00 00 00 00	 call	 ?Render@CWindow@UI@@QAEXXZ ; UI::CWindow::Render
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\list

; 51   :         _Ptr = _Ptr->_Next;

  000a8	8b 36		 mov	 esi, DWORD PTR [esi]

; 73   :         return _Ptr == _Right._Ptr;

  000aa	3b f7		 cmp	 esi, edi
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\algorithm

; 232  :     for (; _UFirst != _ULast; ++_UFirst) {

  000ac	75 f2		 jne	 SHORT $LL49@Render
$LN64@Render:
  000ae	5e		 pop	 esi
$LN27@Render:
  000af	5f		 pop	 edi
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp

; 157  : 	}

  000b0	c3		 ret	 0
?Render@CWindow@UI@@QAEXXZ ENDP				; UI::CWindow::Render
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\list
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\list
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\list
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\list
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?Update@CWindow@UI@@QAEXXZ
_TEXT	SEGMENT
?Update@CWindow@UI@@QAEXXZ PROC				; UI::CWindow::Update, COMDAT
; _this$ = ecx

; 123  : 	{

  00000	57		 push	 edi
  00001	8b f9		 mov	 edi, ecx

; 124  : 		if (!IsShow())

  00003	80 7f 55 00	 cmp	 BYTE PTR [edi+85], 0
  00007	74 36		 je	 SHORT $LN1@Update

; 125  : 			return;
; 126  : 
; 127  : 		__RemoveReserveChildren();

  00009	e8 00 00 00 00	 call	 ?__RemoveReserveChildren@CWindow@UI@@QAEXXZ ; UI::CWindow::__RemoveReserveChildren

; 128  : 
; 129  : 		OnUpdate();

  0000e	8b 07		 mov	 eax, DWORD PTR [edi]
  00010	8b cf		 mov	 ecx, edi
  00012	ff 50 08	 call	 DWORD PTR [eax+8]
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\list

; 1083 :         return iterator(_Mypair._Myval2._Myhead->_Next, _STD addressof(_Mypair._Myval2));

  00015	8b 47 64	 mov	 eax, DWORD PTR [edi+100]
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp

; 131  : 		m_isUpdatingChildren = TRUE;

  00018	c7 47 6c 01 00
	00 00		 mov	 DWORD PTR [edi+108], 1
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\list

; 38   :     _List_unchecked_const_iterator(_Nodeptr _Pnode, const _Mylist* _Plist) noexcept : _Ptr(_Pnode) {

  0001f	8b 08		 mov	 ecx, DWORD PTR [eax]
  00021	3b c8		 cmp	 ecx, eax
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp

; 133  : 		for(it = m_pChildList.begin(); it != m_pChildList.end();)

  00023	74 13		 je	 SHORT $LN3@Update
  00025	56		 push	 esi
$LL2@Update:
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\list

; 165  :         this->_Ptr = this->_Ptr->_Next;

  00026	8b 31		 mov	 esi, DWORD PTR [ecx]
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp

; 137  : 			(*it)->Update();

  00028	8b 49 08	 mov	 ecx, DWORD PTR [ecx+8]
  0002b	e8 00 00 00 00	 call	 ?Update@CWindow@UI@@QAEXXZ ; UI::CWindow::Update

; 138  : 			it = it_next;

  00030	8b ce		 mov	 ecx, esi
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\list

; 198  :         return this->_Ptr == _Right._Ptr;

  00032	3b 77 64	 cmp	 esi, DWORD PTR [edi+100]
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp

; 133  : 		for(it = m_pChildList.begin(); it != m_pChildList.end();)

  00035	75 ef		 jne	 SHORT $LL2@Update
  00037	5e		 pop	 esi
$LN3@Update:

; 139  : 		}
; 140  : 		m_isUpdatingChildren = FALSE;

  00038	c7 47 6c 00 00
	00 00		 mov	 DWORD PTR [edi+108], 0
$LN1@Update:
  0003f	5f		 pop	 edi

; 141  : 	}

  00040	c3		 ret	 0
?Update@CWindow@UI@@QAEXXZ ENDP				; UI::CWindow::Update
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?DestroyHandle@CWindow@UI@@QAEXXZ
_TEXT	SEGMENT
?DestroyHandle@CWindow@UI@@QAEXXZ PROC			; UI::CWindow::DestroyHandle, COMDAT
; _this$ = ecx

; 85   : 		m_poHandler = NULL;

  00000	c7 41 5c 00 00
	00 00		 mov	 DWORD PTR [ecx+92], 0

; 86   : 	}

  00007	c3		 ret	 0
?DestroyHandle@CWindow@UI@@QAEXXZ ENDP			; UI::CWindow::DestroyHandle
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\list
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\algorithm
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\list
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\algorithm
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\list
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\list
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\list
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?Clear@CWindow@UI@@QAEXXZ
_TEXT	SEGMENT
?Clear@CWindow@UI@@QAEXXZ PROC				; UI::CWindow::Clear, COMDAT
; _this$ = ecx

; 74   : 	{

  00000	53		 push	 ebx
  00001	8b d9		 mov	 ebx, ecx
  00003	56		 push	 esi
  00004	57		 push	 edi
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\list

; 38   :     _List_unchecked_const_iterator(_Nodeptr _Pnode, const _Mylist* _Plist) noexcept : _Ptr(_Pnode) {

  00005	8b 7b 64	 mov	 edi, DWORD PTR [ebx+100]
  00008	8b 37		 mov	 esi, DWORD PTR [edi]

; 73   :         return _Ptr == _Right._Ptr;

  0000a	3b f7		 cmp	 esi, edi
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\algorithm

; 232  :     for (; _UFirst != _ULast; ++_UFirst) {

  0000c	74 10		 je	 SHORT $LN21@Clear
  0000e	66 90		 npad	 2
$LL43@Clear:
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp

; 69   : 			pWin->Clear();

  00010	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]
  00013	e8 00 00 00 00	 call	 ?Clear@CWindow@UI@@QAEXXZ ; UI::CWindow::Clear
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\list

; 51   :         _Ptr = _Ptr->_Next;

  00018	8b 36		 mov	 esi, DWORD PTR [esi]

; 73   :         return _Ptr == _Right._Ptr;

  0001a	3b f7		 cmp	 esi, edi
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\algorithm

; 232  :     for (; _UFirst != _ULast; ++_UFirst) {

  0001c	75 f2		 jne	 SHORT $LL43@Clear
$LN21@Clear:
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\list

; 1420 :         _Node::_Free_non_head(_Getal(), _My_data._Myhead);

  0001e	8b 4b 64	 mov	 ecx, DWORD PTR [ebx+100]

; 323  :         _Head->_Prev->_Next = nullptr;

  00021	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00024	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 324  : 
; 325  :         auto _Pnode = _Head->_Next;

  0002a	8b 01		 mov	 eax, DWORD PTR [ecx]

; 326  :         for (_Nodeptr _Pnext; _Pnode; _Pnode = _Pnext) {

  0002c	85 c0		 test	 eax, eax
  0002e	74 13		 je	 SHORT $LN58@Clear
$LL59@Clear:

; 327  :             _Pnext = _Pnode->_Next;

  00030	8b 30		 mov	 esi, DWORD PTR [eax]
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory

; 255  :         ::operator delete(_Ptr, _Bytes);

  00032	6a 0c		 push	 12			; 0000000cH
  00034	50		 push	 eax
  00035	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0003a	83 c4 08	 add	 esp, 8
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\list

; 326  :         for (_Nodeptr _Pnext; _Pnode; _Pnode = _Pnext) {

  0003d	8b c6		 mov	 eax, esi
  0003f	85 f6		 test	 esi, esi
  00041	75 ed		 jne	 SHORT $LL59@Clear
$LN58@Clear:

; 1421 :         _My_data._Myhead->_Next = _My_data._Myhead;

  00043	8b 43 64	 mov	 eax, DWORD PTR [ebx+100]
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp

; 79   : 		DestroyHandle();

  00046	8b cb		 mov	 ecx, ebx
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\list

; 1421 :         _My_data._Myhead->_Next = _My_data._Myhead;

  00048	89 00		 mov	 DWORD PTR [eax], eax

; 1422 :         _My_data._Myhead->_Prev = _My_data._Myhead;

  0004a	8b 43 64	 mov	 eax, DWORD PTR [ebx+100]
  0004d	89 40 04	 mov	 DWORD PTR [eax+4], eax

; 1423 :         _My_data._Mysize        = 0;

  00050	c7 43 68 00 00
	00 00		 mov	 DWORD PTR [ebx+104], 0
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp

; 78   : 		m_pParent = NULL;

  00057	c7 43 60 00 00
	00 00		 mov	 DWORD PTR [ebx+96], 0

; 79   : 		DestroyHandle();

  0005e	e8 00 00 00 00	 call	 ?DestroyHandle@CWindow@UI@@QAEXXZ ; UI::CWindow::DestroyHandle

; 80   : 		Hide();

  00063	5f		 pop	 edi
  00064	5e		 pop	 esi
  00065	8b cb		 mov	 ecx, ebx
  00067	5b		 pop	 ebx
  00068	e9 00 00 00 00	 jmp	 ?Hide@CWindow@UI@@QAEXXZ ; UI::CWindow::Hide
?Clear@CWindow@UI@@QAEXXZ ENDP				; UI::CWindow::Clear
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?AddChild@CWindow@UI@@QAEXPAV12@@Z
_TEXT	SEGMENT
_pWin$ = 8						; size = 4
?AddChild@CWindow@UI@@QAEXPAV12@@Z PROC			; UI::CWindow::AddChild, COMDAT
; _this$ = ecx

; 315  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 316  : 		m_pChildList.push_back(pWin);

  00006	8d 45 08	 lea	 eax, DWORD PTR _pWin$[ebp]
  00009	50		 push	 eax
  0000a	8d 4e 64	 lea	 ecx, DWORD PTR [esi+100]
  0000d	e8 00 00 00 00	 call	 ?push_back@?$list@PAVCWindow@UI@@V?$allocator@PAVCWindow@UI@@@std@@@std@@QAEXABQAVCWindow@UI@@@Z ; std::list<UI::CWindow *,std::allocator<UI::CWindow *> >::push_back

; 317  : 		pWin->m_pParent = this;

  00012	8b 45 08	 mov	 eax, DWORD PTR _pWin$[ebp]
  00015	89 70 60	 mov	 DWORD PTR [eax+96], esi
  00018	5e		 pop	 esi

; 318  : 	}

  00019	5d		 pop	 ebp
  0001a	c2 04 00	 ret	 4
?AddChild@CWindow@UI@@QAEXPAV12@@Z ENDP			; UI::CWindow::AddChild
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\list
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\list
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\list
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\list
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\list
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xstring
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xstring
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xstring
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ??1CWindow@UI@@UAE@XZ
_TEXT	SEGMENT
??1CWindow@UI@@UAE@XZ PROC				; UI::CWindow::~CWindow, COMDAT
; _this$ = ecx

; 43   : 	{

  00000	56		 push	 esi
  00001	57		 push	 edi
  00002	8b f9		 mov	 edi, ecx
  00004	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], OFFSET ??_7CWindow@UI@@6B@
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\list

; 1431 :         _Node::_Free_non_head(_Al, _My_data._Myhead);

  0000a	8b 57 70	 mov	 edx, DWORD PTR [edi+112]

; 323  :         _Head->_Prev->_Next = nullptr;

  0000d	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00010	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 324  : 
; 325  :         auto _Pnode = _Head->_Next;

  00016	8b 02		 mov	 eax, DWORD PTR [edx]

; 326  :         for (_Nodeptr _Pnext; _Pnode; _Pnode = _Pnext) {

  00018	85 c0		 test	 eax, eax
  0001a	74 17		 je	 SHORT $LN9@CWindow
  0001c	0f 1f 40 00	 npad	 4
$LL10@CWindow:

; 327  :             _Pnext = _Pnode->_Next;

  00020	8b 30		 mov	 esi, DWORD PTR [eax]
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory

; 255  :         ::operator delete(_Ptr, _Bytes);

  00022	6a 0c		 push	 12			; 0000000cH
  00024	50		 push	 eax
  00025	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0002a	83 c4 08	 add	 esp, 8
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\list

; 326  :         for (_Nodeptr _Pnext; _Pnode; _Pnode = _Pnext) {

  0002d	8b c6		 mov	 eax, esi
  0002f	85 f6		 test	 esi, esi
  00031	75 ed		 jne	 SHORT $LL10@CWindow
$LN9@CWindow:
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory

; 255  :         ::operator delete(_Ptr, _Bytes);

  00033	6a 0c		 push	 12			; 0000000cH
  00035	ff 77 70	 push	 DWORD PTR [edi+112]
  00038	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\list

; 1431 :         _Node::_Free_non_head(_Al, _My_data._Myhead);

  0003d	8b 4f 64	 mov	 ecx, DWORD PTR [edi+100]
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory

; 255  :         ::operator delete(_Ptr, _Bytes);

  00040	83 c4 08	 add	 esp, 8
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\list

; 323  :         _Head->_Prev->_Next = nullptr;

  00043	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00046	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 324  : 
; 325  :         auto _Pnode = _Head->_Next;

  0004c	8b 01		 mov	 eax, DWORD PTR [ecx]

; 326  :         for (_Nodeptr _Pnext; _Pnode; _Pnode = _Pnext) {

  0004e	85 c0		 test	 eax, eax
  00050	74 13		 je	 SHORT $LN65@CWindow
$LL66@CWindow:

; 327  :             _Pnext = _Pnode->_Next;

  00052	8b 30		 mov	 esi, DWORD PTR [eax]
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory

; 255  :         ::operator delete(_Ptr, _Bytes);

  00054	6a 0c		 push	 12			; 0000000cH
  00056	50		 push	 eax
  00057	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0005c	83 c4 08	 add	 esp, 8
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\list

; 326  :         for (_Nodeptr _Pnext; _Pnode; _Pnode = _Pnext) {

  0005f	8b c6		 mov	 eax, esi
  00061	85 f6		 test	 esi, esi
  00063	75 ed		 jne	 SHORT $LL66@CWindow
$LN65@CWindow:
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory

; 255  :         ::operator delete(_Ptr, _Bytes);

  00065	6a 0c		 push	 12			; 0000000cH
  00067	ff 77 64	 push	 DWORD PTR [edi+100]
  0006a	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xstring

; 2286 :         return _BUF_SIZE <= _Myres;

  0006f	8b 4f 18	 mov	 ecx, DWORD PTR [edi+24]
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory

; 255  :         ::operator delete(_Ptr, _Bytes);

  00072	83 c4 08	 add	 esp, 8
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xstring

; 2286 :         return _BUF_SIZE <= _Myres;

  00075	83 f9 10	 cmp	 ecx, 16			; 00000010H

; 4584 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00078	72 28		 jb	 SHORT $LN126@CWindow
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory

; 797  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0007a	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xstring

; 4588 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  0007d	41		 inc	 ecx
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory

; 251  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  0007e	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  00084	72 12		 jb	 SHORT $LN136@CWindow

; 150  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00086	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  00089	83 c1 23	 add	 ecx, 35			; 00000023H

; 151  : 
; 152  :     // If the following asserts, it likely means that we are performing
; 153  :     // an aligned delete on memory coming from an unaligned allocation.
; 154  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 155  : 
; 156  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 157  :     // in range [_Min_back_shift, _Non_user_size]
; 158  : #ifdef _DEBUG
; 159  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 160  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 161  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 162  : #endif // _DEBUG
; 163  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  0008c	2b c2		 sub	 eax, edx

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  0008e	83 c0 fc	 add	 eax, -4			; fffffffcH
  00091	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00094	77 21		 ja	 SHORT $LN133@CWindow

; 165  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  00096	8b c2		 mov	 eax, edx
$LN136@CWindow:

; 255  :         ::operator delete(_Ptr, _Bytes);

  00098	51		 push	 ecx
  00099	50		 push	 eax
  0009a	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0009f	83 c4 08	 add	 esp, 8
$LN126@CWindow:
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xstring

; 4599 :             _Mypair._Myval2._Mysize = 0;

  000a2	c7 47 14 00 00
	00 00		 mov	 DWORD PTR [edi+20], 0

; 4600 :             _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  000a9	c7 47 18 0f 00
	00 00		 mov	 DWORD PTR [edi+24], 15	; 0000000fH

; 4601 :             // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4602 :             _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  000b0	c6 47 04 00	 mov	 BYTE PTR [edi+4], 0
  000b4	5f		 pop	 edi
  000b5	5e		 pop	 esi
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp

; 44   : 	}

  000b6	c3		 ret	 0
$LN133@CWindow:
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  000b7	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN149@CWindow:
  000bc	cc		 int	 3
??1CWindow@UI@@UAE@XZ ENDP				; UI::CWindow::~CWindow
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\list
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\list
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\list
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\list
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ??0CWindow@UI@@QAE@PAU_object@@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_ppyObject$ = 8						; size = 4
??0CWindow@UI@@QAE@PAU_object@@@Z PROC			; UI::CWindow::CWindow, COMDAT
; _this$ = ecx

; 28   : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0CWindow@UI@@QAE@PAU_object@@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	56		 push	 esi
  00013	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00018	33 c5		 xor	 eax, ebp
  0001a	50		 push	 eax
  0001b	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001e	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00024	8b f1		 mov	 esi, ecx
  00026	89 75 f0	 mov	 DWORD PTR _this$[ebp], esi
  00029	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CWindow@UI@@6B@
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xstring

; 2313 :         _CONSTEXPR20_CONTAINER _Bxty() noexcept : _Ptr() {} // user-provided, for fancy pointers

  0002f	c7 46 04 00 00
	00 00		 mov	 DWORD PTR [esi+4], 0

; 4562 :         _My_data._Mysize = 0;

  00036	c7 46 14 00 00
	00 00		 mov	 DWORD PTR [esi+20], 0

; 4563 : 
; 4564 : #ifdef __cpp_lib_constexpr_string
; 4565 :         if (_STD is_constant_evaluated()) {
; 4566 :             _My_data._Myres        = _BUF_SIZE; // SSO disabled in constexpr context
; 4567 :             auto& _Al              = _Getal();
; 4568 :             const pointer _New_ptr = _Al.allocate(_BUF_SIZE + 1); // throws
; 4569 :             _My_data._Bx._Ptr      = _New_ptr;
; 4570 : 
; 4571 :             _Elem* const _Raw_new = _Unfancy(_New_ptr);
; 4572 :             _Traits::assign(_Raw_new, _BUF_SIZE + 1, _Elem());
; 4573 :         } else
; 4574 : #endif // __cpp_lib_constexpr_string
; 4575 :         {
; 4576 :             _My_data._Myres = _BUF_SIZE - 1;

  0003d	c7 46 18 0f 00
	00 00		 mov	 DWORD PTR [esi+24], 15	; 0000000fH

; 4577 :             // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4578 :             _Traits::assign(_My_data._Bx._Buf[0], _Elem());

  00044	c6 46 04 00	 mov	 BYTE PTR [esi+4], 0
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp

; 20   : 		m_poHandler(ppyObject),

  00048	8b 45 08	 mov	 eax, DWORD PTR _ppyObject$[ebp]
  0004b	c7 46 24 00 00
	00 00		 mov	 DWORD PTR [esi+36], 0
  00052	c7 46 28 00 00
	00 00		 mov	 DWORD PTR [esi+40], 0
  00059	c7 46 2c 00 00
	00 00		 mov	 DWORD PTR [esi+44], 0
  00060	c7 46 30 00 00
	00 00		 mov	 DWORD PTR [esi+48], 0
  00067	c6 46 55 00	 mov	 BYTE PTR [esi+85], 0
  0006b	c7 46 58 00 00
	00 00		 mov	 DWORD PTR [esi+88], 0
  00072	89 46 5c	 mov	 DWORD PTR [esi+92], eax

; 21   : 		m_bShow(false),
; 22   : 		m_pParent(NULL),

  00075	c7 46 60 00 00
	00 00		 mov	 DWORD PTR [esi+96], 0
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory

; 79   :         return ::operator new(_Bytes);

  0007c	6a 0c		 push	 12			; 0000000cH
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp

; 28   : 	{

  0007e	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\list

; 352  :     _List_val() noexcept : _Myhead(), _Mysize(0) {} // initialize data

  00085	c7 46 64 00 00
	00 00		 mov	 DWORD PTR [esi+100], 0
  0008c	c7 46 68 00 00
	00 00		 mov	 DWORD PTR [esi+104], 0
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory

; 79   :         return ::operator new(_Bytes);

  00093	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\list

; 1767 :         _Construct_in_place(_Newhead->_Next, _Newhead);

  00098	89 00		 mov	 DWORD PTR [eax], eax

; 1768 :         _Construct_in_place(_Newhead->_Prev, _Newhead);

  0009a	89 40 04	 mov	 DWORD PTR [eax+4], eax

; 1769 :         _Mypair._Myval2._Myhead = _Newhead;

  0009d	89 46 64	 mov	 DWORD PTR [esi+100], eax
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp

; 24   : 		m_isUpdatingChildren(FALSE)

  000a0	c7 46 6c 00 00
	00 00		 mov	 DWORD PTR [esi+108], 0
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory

; 79   :         return ::operator new(_Bytes);

  000a7	6a 0c		 push	 12			; 0000000cH
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp

; 28   : 	{

  000a9	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\list

; 352  :     _List_val() noexcept : _Myhead(), _Mysize(0) {} // initialize data

  000ad	c7 46 70 00 00
	00 00		 mov	 DWORD PTR [esi+112], 0
  000b4	c7 46 74 00 00
	00 00		 mov	 DWORD PTR [esi+116], 0
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory

; 79   :         return ::operator new(_Bytes);

  000bb	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  000c0	83 c4 08	 add	 esp, 8
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\list

; 1767 :         _Construct_in_place(_Newhead->_Next, _Newhead);

  000c3	89 00		 mov	 DWORD PTR [eax], eax

; 1768 :         _Construct_in_place(_Newhead->_Prev, _Newhead);

  000c5	89 40 04	 mov	 DWORD PTR [eax+4], eax

; 1769 :         _Mypair._Myval2._Myhead = _Newhead;

  000c8	89 46 70	 mov	 DWORD PTR [esi+112], eax
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp

; 40   : 	}

  000cb	8b c6		 mov	 eax, esi
  000cd	c6 46 78 00	 mov	 BYTE PTR [esi+120], 0
  000d1	c7 46 1c 00 00
	00 00		 mov	 DWORD PTR [esi+28], 0
  000d8	c7 46 20 00 00
	00 00		 mov	 DWORD PTR [esi+32], 0
  000df	c7 46 38 00 00
	00 00		 mov	 DWORD PTR [esi+56], 0
  000e6	c7 46 3c 00 00
	00 00		 mov	 DWORD PTR [esi+60], 0
  000ed	c7 46 34 00 00
	00 00		 mov	 DWORD PTR [esi+52], 0
  000f4	c7 46 40 00 00
	00 00		 mov	 DWORD PTR [esi+64], 0
  000fb	c7 46 48 00 00
	00 00		 mov	 DWORD PTR [esi+72], 0
  00102	c7 46 4c 00 00
	00 00		 mov	 DWORD PTR [esi+76], 0
  00109	c7 46 44 00 00
	00 00		 mov	 DWORD PTR [esi+68], 0
  00110	c7 46 50 00 00
	00 00		 mov	 DWORD PTR [esi+80], 0
  00117	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0011a	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00121	59		 pop	 ecx
  00122	5e		 pop	 esi
  00123	8b e5		 mov	 esp, ebp
  00125	5d		 pop	 ebp
  00126	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0CWindow@UI@@QAE@PAU_object@@@Z$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	83 c1 04	 add	 ecx, 4
  00006	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$??0CWindow@UI@@QAE@PAU_object@@@Z$1:
  0000b	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	83 c1 64	 add	 ecx, 100		; 00000064H
  00011	e9 00 00 00 00	 jmp	 ??1?$list@PAVCWindow@UI@@V?$allocator@PAVCWindow@UI@@@std@@@std@@QAE@XZ ; std::list<UI::CWindow *,std::allocator<UI::CWindow *> >::~list<UI::CWindow *,std::allocator<UI::CWindow *> >
  00016	cc		 int	 3
  00017	cc		 int	 3
  00018	cc		 int	 3
  00019	cc		 int	 3
  0001a	cc		 int	 3
__ehhandler$??0CWindow@UI@@QAE@PAU_object@@@Z:
  0001b	90		 npad	 1
  0001c	90		 npad	 1
  0001d	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00021	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00024	8b 4a f4	 mov	 ecx, DWORD PTR [edx-12]
  00027	33 c8		 xor	 ecx, eax
  00029	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0002e	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0CWindow@UI@@QAE@PAU_object@@@Z
  00033	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0CWindow@UI@@QAE@PAU_object@@@Z ENDP			; UI::CWindow::CWindow
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?IsType@CWindow@UI@@QAEHK@Z
_TEXT	SEGMENT
_dwType$ = 8						; size = 4
?IsType@CWindow@UI@@QAEHK@Z PROC			; UI::CWindow::IsType, COMDAT
; _this$ = ecx

; 53   : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 54   : 		return OnIsType(dwType);

  00003	8b 01		 mov	 eax, DWORD PTR [ecx]

; 55   : 	}

  00005	5d		 pop	 ebp

; 54   : 		return OnIsType(dwType);

  00006	ff a0 98 00 00
	00		 jmp	 DWORD PTR [eax+152]
?IsType@CWindow@UI@@QAEHK@Z ENDP			; UI::CWindow::IsType
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?Type@CWindow@UI@@SAKXZ
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
?Type@CWindow@UI@@SAKXZ PROC				; UI::CWindow::Type, COMDAT

; 47   : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?Type@CWindow@UI@@SAKXZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00016	33 c5		 xor	 eax, ebp
  00018	50		 push	 eax
  00019	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001c	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax

; 48   : 		static DWORD s_dwType = GetCRC32("CWindow", strlen("CWindow"));

  00022	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__tls_array
  00028	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR __tls_index
  0002e	8b 0c 88	 mov	 ecx, DWORD PTR [eax+ecx*4]
  00031	a1 00 00 00 00	 mov	 eax, DWORD PTR ?$TSS0@?1??Type@CWindow@UI@@SAKXZ@4HA
  00036	3b 81 00 00 00
	00		 cmp	 eax, DWORD PTR __Init_thread_epoch[ecx]
  0003c	7f 14		 jg	 SHORT $LN9@Type
$LN5@Type:

; 49   : 		return (s_dwType);
; 50   : 	}

  0003e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?s_dwType@?1??Type@CWindow@UI@@SAKXZ@4KA
  00043	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00046	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0004d	59		 pop	 ecx
  0004e	8b e5		 mov	 esp, ebp
  00050	5d		 pop	 ebp
  00051	c3		 ret	 0
$LN9@Type:

; 48   : 		static DWORD s_dwType = GetCRC32("CWindow", strlen("CWindow"));

  00052	68 00 00 00 00	 push	 OFFSET ?$TSS0@?1??Type@CWindow@UI@@SAKXZ@4HA
  00057	e8 00 00 00 00	 call	 __Init_thread_header
  0005c	83 c4 04	 add	 esp, 4
  0005f	83 3d 00 00 00
	00 ff		 cmp	 DWORD PTR ?$TSS0@?1??Type@CWindow@UI@@SAKXZ@4HA, -1
  00066	75 d6		 jne	 SHORT $LN5@Type
  00068	6a 07		 push	 7
  0006a	68 00 00 00 00	 push	 OFFSET ??_C@_07EFPFKGGH@CWindow@
  0006f	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00076	e8 00 00 00 00	 call	 ?GetCRC32@@YAKPBDI@Z	; GetCRC32
  0007b	68 00 00 00 00	 push	 OFFSET ?$TSS0@?1??Type@CWindow@UI@@SAKXZ@4HA
  00080	a3 00 00 00 00	 mov	 DWORD PTR ?s_dwType@?1??Type@CWindow@UI@@SAKXZ@4KA, eax
  00085	e8 00 00 00 00	 call	 __Init_thread_footer
  0008a	83 c4 0c	 add	 esp, 12			; 0000000cH
  0008d	eb af		 jmp	 SHORT $LN5@Type
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?Type@CWindow@UI@@SAKXZ$0:
  00000	68 00 00 00 00	 push	 OFFSET ?$TSS0@?1??Type@CWindow@UI@@SAKXZ@4HA
  00005	e8 00 00 00 00	 call	 __Init_thread_abort
  0000a	59		 pop	 ecx
  0000b	c3		 ret	 0
  0000c	cc		 int	 3
  0000d	cc		 int	 3
  0000e	cc		 int	 3
  0000f	cc		 int	 3
  00010	cc		 int	 3
__ehhandler$?Type@CWindow@UI@@SAKXZ:
  00011	90		 npad	 1
  00012	90		 npad	 1
  00013	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00017	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0001a	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  0001d	33 c8		 xor	 ecx, eax
  0001f	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00024	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?Type@CWindow@UI@@SAKXZ
  00029	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?Type@CWindow@UI@@SAKXZ ENDP				; UI::CWindow::Type
; Function compile flags: /Ogtp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xutility
;	COMDAT ??$_Copy_memmove@PAPAVCGraphicExpandedImageInstance@@PAPAV1@@std@@YAPAPAVCGraphicExpandedImageInstance@@PAPAV1@00@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
??$_Copy_memmove@PAPAVCGraphicExpandedImageInstance@@PAPAV1@@std@@YAPAPAVCGraphicExpandedImageInstance@@PAPAV1@00@Z PROC ; std::_Copy_memmove<CGraphicExpandedImageInstance * *,CGraphicExpandedImageInstance * *>, COMDAT

; 4058 : _OutCtgIt _Copy_memmove(_CtgIt _First, _CtgIt _Last, _OutCtgIt _Dest) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 4059 :     auto _FirstPtr              = _To_address(_First);
; 4060 :     auto _LastPtr               = _To_address(_Last);
; 4061 :     auto _DestPtr               = _To_address(_Dest);
; 4062 :     const char* const _First_ch = const_cast<const char*>(reinterpret_cast<const volatile char*>(_FirstPtr));
; 4063 :     const char* const _Last_ch  = const_cast<const char*>(reinterpret_cast<const volatile char*>(_LastPtr));
; 4064 :     char* const _Dest_ch        = const_cast<char*>(reinterpret_cast<const volatile char*>(_DestPtr));
; 4065 :     const auto _Count           = static_cast<size_t>(_Last_ch - _First_ch);

  00003	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  00006	56		 push	 esi

; 4066 :     _CSTD memmove(_Dest_ch, _First_ch, _Count);

  00007	8b 75 10	 mov	 esi, DWORD PTR __Dest$[ebp]
  0000a	57		 push	 edi
  0000b	8b 7d 0c	 mov	 edi, DWORD PTR __Last$[ebp]
  0000e	2b f8		 sub	 edi, eax
  00010	57		 push	 edi
  00011	50		 push	 eax
  00012	56		 push	 esi
  00013	e8 00 00 00 00	 call	 _memmove
  00018	83 c4 0c	 add	 esp, 12			; 0000000cH

; 4067 :     if constexpr (is_pointer_v<_OutCtgIt>) {
; 4068 :         return reinterpret_cast<_OutCtgIt>(_Dest_ch + _Count);

  0001b	8d 04 37	 lea	 eax, DWORD PTR [edi+esi]
  0001e	5f		 pop	 edi
  0001f	5e		 pop	 esi

; 4069 :     } else {
; 4070 :         return _Dest + (_LastPtr - _FirstPtr);
; 4071 :     }
; 4072 : }

  00020	5d		 pop	 ebp
  00021	c3		 ret	 0
??$_Copy_memmove@PAPAVCGraphicExpandedImageInstance@@PAPAV1@@std@@YAPAPAVCGraphicExpandedImageInstance@@PAPAV1@00@Z ENDP ; std::_Copy_memmove<CGraphicExpandedImageInstance * *,CGraphicExpandedImageInstance * *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory
;	COMDAT ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z
_TEXT	SEGMENT
__Bytes$ = 8						; size = 4
??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z PROC ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>, COMDAT

; 127  : __declspec(allocator) void* _Allocate_manually_vector_aligned(const size_t _Bytes) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 128  :     // allocate _Bytes manually aligned to at least _Big_allocation_alignment
; 129  :     const size_t _Block_size = _Non_user_size + _Bytes;

  00003	8b 45 08	 mov	 eax, DWORD PTR __Bytes$[ebp]
  00006	8d 48 23	 lea	 ecx, DWORD PTR [eax+35]

; 130  :     if (_Block_size <= _Bytes) {

  00009	3b c8		 cmp	 ecx, eax
  0000b	0f 86 00 00 00
	00		 jbe	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length

; 79   :         return ::operator new(_Bytes);

  00011	51		 push	 ecx
  00012	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new

; 131  :         _Throw_bad_array_new_length(); // add overflow
; 132  :     }
; 133  : 
; 134  :     const uintptr_t _Ptr_container = reinterpret_cast<uintptr_t>(_Traits::_Allocate(_Block_size));

  00017	8b c8		 mov	 ecx, eax

; 79   :         return ::operator new(_Bytes);

  00019	83 c4 04	 add	 esp, 4

; 135  :     _STL_VERIFY(_Ptr_container != 0, "invalid argument"); // validate even in release since we're doing p[-1]

  0001c	85 c9		 test	 ecx, ecx
  0001e	74 0b		 je	 SHORT $LN7@Allocate_m

; 136  :     void* const _Ptr = reinterpret_cast<void*>((_Ptr_container + _Non_user_size) & ~(_Big_allocation_alignment - 1));

  00020	8d 41 23	 lea	 eax, DWORD PTR [ecx+35]
  00023	83 e0 e0	 and	 eax, -32		; ffffffe0H

; 137  :     static_cast<uintptr_t*>(_Ptr)[-1] = _Ptr_container;

  00026	89 48 fc	 mov	 DWORD PTR [eax-4], ecx

; 138  : 
; 139  : #ifdef _DEBUG
; 140  :     static_cast<uintptr_t*>(_Ptr)[-2] = _Big_allocation_sentinel;
; 141  : #endif // _DEBUG
; 142  :     return _Ptr;
; 143  : }

  00029	5d		 pop	 ebp
  0002a	c3		 ret	 0
$LN7@Allocate_m:

; 135  :     _STL_VERIFY(_Ptr_container != 0, "invalid argument"); // validate even in release since we're doing p[-1]

  0002b	e9 00 00 00 00	 jmp	 __invalid_parameter_noinfo_noreturn
??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ENDP ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\vector
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\vector
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\vector
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\vector
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\vector
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\vector
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\vector
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\vector
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\vector
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\vector
;	COMDAT ??$_Emplace_reallocate@ABQAVCGraphicExpandedImageInstance@@@?$vector@PAVCGraphicExpandedImageInstance@@V?$allocator@PAVCGraphicExpandedImageInstance@@@std@@@std@@QAEPAPAVCGraphicExpandedImageInstance@@QAPAV2@ABQAV2@@Z
_TEXT	SEGMENT
__Newsize$1$ = -8					; size = 4
tv641 = -4						; size = 4
__Whereoff$1$ = -4					; size = 4
__Whereptr$ = 8						; size = 4
_<_Val_0>$ = 12						; size = 4
??$_Emplace_reallocate@ABQAVCGraphicExpandedImageInstance@@@?$vector@PAVCGraphicExpandedImageInstance@@V?$allocator@PAVCGraphicExpandedImageInstance@@@std@@@std@@QAEPAPAVCGraphicExpandedImageInstance@@QAPAV2@ABQAV2@@Z PROC ; std::vector<CGraphicExpandedImageInstance *,std::allocator<CGraphicExpandedImageInstance *> >::_Emplace_reallocate<CGraphicExpandedImageInstance * const &>, COMDAT
; _this$ = ecx

; 752  :     _CONSTEXPR20_CONTAINER pointer _Emplace_reallocate(const pointer _Whereptr, _Valty&&... _Val) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8

; 753  :         // reallocate and insert by perfectly forwarding _Val at _Whereptr
; 754  :         _Alty& _Al        = _Getal();
; 755  :         auto& _My_data    = _Mypair._Myval2;
; 756  :         pointer& _Myfirst = _My_data._Myfirst;
; 757  :         pointer& _Mylast  = _My_data._Mylast;
; 758  : 
; 759  :         _STL_INTERNAL_CHECK(_Mylast == _My_data._Myend); // check that we have no unused capacity
; 760  : 
; 761  :         const auto _Whereoff = static_cast<size_type>(_Whereptr - _Myfirst);

  00006	8b 45 08	 mov	 eax, DWORD PTR __Whereptr$[ebp]
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	8b f1		 mov	 esi, ecx
  0000d	57		 push	 edi
  0000e	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00010	2b c1		 sub	 eax, ecx
  00012	c1 f8 02	 sar	 eax, 2
  00015	89 45 fc	 mov	 DWORD PTR __Whereoff$1$[ebp], eax

; 762  :         const auto _Oldsize  = static_cast<size_type>(_Mylast - _Myfirst);

  00018	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0001b	2b c1		 sub	 eax, ecx
  0001d	c1 f8 02	 sar	 eax, 2

; 763  : 
; 764  :         if (_Oldsize == max_size()) {

  00020	3d ff ff ff 3f	 cmp	 eax, 1073741823		; 3fffffffH
  00025	0f 84 06 01 00
	00		 je	 $LN96@Emplace_re

; 1546 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  0002b	8b 56 08	 mov	 edx, DWORD PTR [esi+8]

; 766  :         }
; 767  : 
; 768  :         const size_type _Newsize     = _Oldsize + 1;

  0002e	8d 78 01	 lea	 edi, DWORD PTR [eax+1]

; 1546 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00031	2b d1		 sub	 edx, ecx

; 766  :         }
; 767  : 
; 768  :         const size_type _Newsize     = _Oldsize + 1;

  00033	89 7d f8	 mov	 DWORD PTR __Newsize$1$[ebp], edi

; 1546 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00036	c1 fa 02	 sar	 edx, 2

; 1675 :         if (_Oldcapacity > _Max - _Oldcapacity / 2) {

  00039	b8 ff ff ff 3f	 mov	 eax, 1073741823		; 3fffffffH
  0003e	8b ca		 mov	 ecx, edx
  00040	d1 e9		 shr	 ecx, 1
  00042	2b c1		 sub	 eax, ecx
  00044	3b d0		 cmp	 edx, eax
  00046	76 12		 jbe	 SHORT $LN12@Emplace_re

; 1676 :             return _Max; // geometric growth would overflow

  00048	bb fc ff ff ff	 mov	 ebx, -4			; fffffffcH
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory

; 229  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  0004d	53		 push	 ebx
  0004e	e8 00 00 00 00	 call	 ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
  00053	83 c4 04	 add	 esp, 4
  00056	8b f8		 mov	 edi, eax
  00058	eb 41		 jmp	 SHORT $LN23@Emplace_re
$LN12@Emplace_re:
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\vector

; 1679 :         const size_type _Geometric = _Oldcapacity + _Oldcapacity / 2;

  0005a	8d 04 11	 lea	 eax, DWORD PTR [ecx+edx]
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory

; 60   :         if (_Count > _Max_possible) {

  0005d	8b df		 mov	 ebx, edi
  0005f	3b c7		 cmp	 eax, edi
  00061	0f 43 d8	 cmovae	 ebx, eax
  00064	81 fb ff ff ff
	3f		 cmp	 ebx, 1073741823		; 3fffffffH
  0006a	0f 87 c6 00 00
	00		 ja	 $LN97@Emplace_re

; 62   :         }
; 63   :     }
; 64   : 
; 65   :     return _Count * _Ty_size;

  00070	c1 e3 02	 shl	 ebx, 2

; 228  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00073	81 fb 00 10 00
	00		 cmp	 ebx, 4096		; 00001000H
  00079	72 0d		 jb	 SHORT $LN24@Emplace_re

; 229  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  0007b	53		 push	 ebx
  0007c	e8 00 00 00 00	 call	 ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
  00081	83 c4 04	 add	 esp, 4
  00084	8b f8		 mov	 edi, eax
  00086	eb 13		 jmp	 SHORT $LN23@Emplace_re
$LN24@Emplace_re:

; 230  :         }
; 231  :     }
; 232  : #endif // defined(_M_IX86) || defined(_M_X64)
; 233  : 
; 234  :     if (_Bytes != 0) {

  00088	85 db		 test	 ebx, ebx
  0008a	74 0d		 je	 SHORT $LN25@Emplace_re

; 79   :         return ::operator new(_Bytes);

  0008c	53		 push	 ebx
  0008d	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00092	83 c4 04	 add	 esp, 4

; 235  :         return _Traits::_Allocate(_Bytes);

  00095	8b f8		 mov	 edi, eax
  00097	eb 02		 jmp	 SHORT $LN23@Emplace_re
$LN25@Emplace_re:

; 236  :     }
; 237  : 
; 238  :     return nullptr;

  00099	33 ff		 xor	 edi, edi
$LN23@Emplace_re:
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\vector

; 776  :         _Alty_traits::construct(_Al, _Unfancy(_Newvec + _Whereoff), _STD forward<_Valty>(_Val)...);

  0009b	8b 45 fc	 mov	 eax, DWORD PTR __Whereoff$1$[ebp]
  0009e	8d 0c 87	 lea	 ecx, DWORD PTR [edi+eax*4]
  000a1	8b 45 0c	 mov	 eax, DWORD PTR _<_Val_0>$[ebp]
  000a4	89 4d fc	 mov	 DWORD PTR tv641[ebp], ecx
  000a7	8b 00		 mov	 eax, DWORD PTR [eax]
  000a9	89 01		 mov	 DWORD PTR [ecx], eax

; 777  :         _Constructed_first = _Newvec + _Whereoff;
; 778  : 
; 779  :         if (_Whereptr == _Mylast) { // at back, provide strong guarantee

  000ab	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  000ae	8b 45 08	 mov	 eax, DWORD PTR __Whereptr$[ebp]
  000b1	8b 16		 mov	 edx, DWORD PTR [esi]
  000b3	3b c1		 cmp	 eax, ecx
  000b5	75 04		 jne	 SHORT $LN4@Emplace_re
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory

; 1711 :             _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));

  000b7	8b c7		 mov	 eax, edi
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\vector

; 781  :         } else { // provide basic guarantee

  000b9	eb 17		 jmp	 SHORT $LN60@Emplace_re
$LN4@Emplace_re:
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory

; 1711 :             _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));

  000bb	57		 push	 edi
  000bc	50		 push	 eax
  000bd	52		 push	 edx
  000be	e8 00 00 00 00	 call	 ??$_Copy_memmove@PAPAVCGraphicExpandedImageInstance@@PAPAV1@@std@@YAPAPAVCGraphicExpandedImageInstance@@PAPAV1@00@Z ; std::_Copy_memmove<CGraphicExpandedImageInstance * *,CGraphicExpandedImageInstance * *>
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\vector

; 784  :             _Umove(_Whereptr, _Mylast, _Newvec + _Whereoff + 1);

  000c3	8b 45 fc	 mov	 eax, DWORD PTR tv641[ebp]
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory

; 1711 :             _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));

  000c6	83 c4 0c	 add	 esp, 12			; 0000000cH
  000c9	8b 55 08	 mov	 edx, DWORD PTR __Whereptr$[ebp]
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\vector

; 784  :             _Umove(_Whereptr, _Mylast, _Newvec + _Whereoff + 1);

  000cc	83 c0 04	 add	 eax, 4
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory

; 1711 :             _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));

  000cf	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
$LN60@Emplace_re:
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\vector

; 784  :             _Umove(_Whereptr, _Mylast, _Newvec + _Whereoff + 1);

  000d2	50		 push	 eax
  000d3	51		 push	 ecx
  000d4	52		 push	 edx
  000d5	e8 00 00 00 00	 call	 ??$_Copy_memmove@PAPAVCGraphicExpandedImageInstance@@PAPAV1@@std@@YAPAPAVCGraphicExpandedImageInstance@@PAPAV1@00@Z ; std::_Copy_memmove<CGraphicExpandedImageInstance * *,CGraphicExpandedImageInstance * *>

; 1732 :         if (_Myfirst) { // destroy and deallocate old array

  000da	8b 06		 mov	 eax, DWORD PTR [esi]

; 784  :             _Umove(_Whereptr, _Mylast, _Newvec + _Whereoff + 1);

  000dc	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1732 :         if (_Myfirst) { // destroy and deallocate old array

  000df	85 c0		 test	 eax, eax
  000e1	74 2c		 je	 SHORT $LN78@Emplace_re

; 1733 :             _Destroy(_Myfirst, _Mylast);
; 1734 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  000e3	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]
  000e6	2b c8		 sub	 ecx, eax
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory

; 797  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  000e8	83 e1 fc	 and	 ecx, -4			; fffffffcH

; 251  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  000eb	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  000f1	72 12		 jb	 SHORT $LN88@Emplace_re

; 150  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  000f3	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  000f6	83 c1 23	 add	 ecx, 35			; 00000023H

; 151  : 
; 152  :     // If the following asserts, it likely means that we are performing
; 153  :     // an aligned delete on memory coming from an unaligned allocation.
; 154  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 155  : 
; 156  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 157  :     // in range [_Min_back_shift, _Non_user_size]
; 158  : #ifdef _DEBUG
; 159  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 160  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 161  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 162  : #endif // _DEBUG
; 163  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  000f9	2b c2		 sub	 eax, edx

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  000fb	83 c0 fc	 add	 eax, -4			; fffffffcH
  000fe	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00101	77 29		 ja	 SHORT $LN85@Emplace_re

; 165  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  00103	8b c2		 mov	 eax, edx
$LN88@Emplace_re:

; 255  :         ::operator delete(_Ptr, _Bytes);

  00105	51		 push	 ecx
  00106	50		 push	 eax
  00107	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0010c	83 c4 08	 add	 esp, 8
$LN78@Emplace_re:
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\vector

; 1738 :         _Mylast  = _Newvec + _Newsize;

  0010f	8b 45 f8	 mov	 eax, DWORD PTR __Newsize$1$[ebp]
  00112	89 3e		 mov	 DWORD PTR [esi], edi
  00114	8d 0c 87	 lea	 ecx, DWORD PTR [edi+eax*4]

; 785  :         }
; 786  :         _CATCH_ALL
; 787  :         _Destroy(_Constructed_first, _Constructed_last);
; 788  :         _Al.deallocate(_Newvec, _Newcapacity);
; 789  :         _RERAISE;
; 790  :         _CATCH_END
; 791  : 
; 792  :         _Change_array(_Newvec, _Newsize, _Newcapacity);
; 793  :         return _Newvec + _Whereoff;

  00117	8b 45 fc	 mov	 eax, DWORD PTR tv641[ebp]

; 1738 :         _Mylast  = _Newvec + _Newsize;

  0011a	89 4e 04	 mov	 DWORD PTR [esi+4], ecx

; 1739 :         _Myend   = _Newvec + _Newcapacity;

  0011d	8d 0c 3b	 lea	 ecx, DWORD PTR [ebx+edi]

; 785  :         }
; 786  :         _CATCH_ALL
; 787  :         _Destroy(_Constructed_first, _Constructed_last);
; 788  :         _Al.deallocate(_Newvec, _Newcapacity);
; 789  :         _RERAISE;
; 790  :         _CATCH_END
; 791  : 
; 792  :         _Change_array(_Newvec, _Newsize, _Newcapacity);
; 793  :         return _Newvec + _Whereoff;

  00120	5f		 pop	 edi

; 1739 :         _Myend   = _Newvec + _Newcapacity;

  00121	89 4e 08	 mov	 DWORD PTR [esi+8], ecx

; 785  :         }
; 786  :         _CATCH_ALL
; 787  :         _Destroy(_Constructed_first, _Constructed_last);
; 788  :         _Al.deallocate(_Newvec, _Newcapacity);
; 789  :         _RERAISE;
; 790  :         _CATCH_END
; 791  : 
; 792  :         _Change_array(_Newvec, _Newsize, _Newcapacity);
; 793  :         return _Newvec + _Whereoff;

  00124	5e		 pop	 esi
  00125	5b		 pop	 ebx

; 794  :     }

  00126	8b e5		 mov	 esp, ebp
  00128	5d		 pop	 ebp
  00129	c2 08 00	 ret	 8
$LN85@Emplace_re:
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  0012c	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN96@Emplace_re:
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\vector

; 765  :             _Xlength();

  00131	e8 00 00 00 00	 call	 ?_Xlength@?$vector@PAVCGraphicExpandedImageInstance@@V?$allocator@PAVCGraphicExpandedImageInstance@@@std@@@std@@CAXXZ ; std::vector<CGraphicExpandedImageInstance *,std::allocator<CGraphicExpandedImageInstance *> >::_Xlength
$LN97@Emplace_re:
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory

; 61   :             _Throw_bad_array_new_length(); // multiply overflow

  00136	e8 00 00 00 00	 call	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length
$LN94@Emplace_re:
  0013b	cc		 int	 3
??$_Emplace_reallocate@ABQAVCGraphicExpandedImageInstance@@@?$vector@PAVCGraphicExpandedImageInstance@@V?$allocator@PAVCGraphicExpandedImageInstance@@@std@@@std@@QAEPAPAVCGraphicExpandedImageInstance@@QAPAV2@ABQAV2@@Z ENDP ; std::vector<CGraphicExpandedImageInstance *,std::allocator<CGraphicExpandedImageInstance *> >::_Emplace_reallocate<CGraphicExpandedImageInstance * const &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\list
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\utility
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\list
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\list
;	COMDAT ?remove@?$list@PAVCWindow@UI@@V?$allocator@PAVCWindow@UI@@@std@@@std@@QAE@ABQAVCWindow@UI@@@Z
_TEXT	SEGMENT
__Op$1 = -12						; size = 12
__Val$ = 8						; size = 4
?remove@?$list@PAVCWindow@UI@@V?$allocator@PAVCWindow@UI@@@std@@@std@@QAE@ABQAVCWindow@UI@@@Z PROC ; std::list<UI::CWindow *,std::allocator<UI::CWindow *> >::remove, COMDAT
; _this$ = ecx

; 1593 :     auto remove(const _Ty& _Val) { // erase each element matching _Val

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	8b f9		 mov	 edi, ecx

; 1527 :         explicit _List_node_remove_op(list& _List_) noexcept : _List(_List_), _Head(), _Tail(_STD addressof(_Head)) {}

  0000b	8d 45 f8	 lea	 eax, DWORD PTR __Op$1[ebp+4]
  0000e	33 d2		 xor	 edx, edx
  00010	89 7d f4	 mov	 DWORD PTR __Op$1[ebp], edi
  00013	89 55 f8	 mov	 DWORD PTR __Op$1[ebp+4], edx
  00016	89 45 fc	 mov	 DWORD PTR __Op$1[ebp+8], eax

; 1601 :         const auto _Last         = _My_data._Myhead;

  00019	8b 1f		 mov	 ebx, DWORD PTR [edi]

; 1602 :         const size_type _Oldsize = _My_data._Mysize;
; 1603 :         for (auto _First = _Last->_Next; _First != _Last;) {

  0001b	8b 03		 mov	 eax, DWORD PTR [ebx]
  0001d	3b c3		 cmp	 eax, ebx
  0001f	74 36		 je	 SHORT $LN7@remove
  00021	8b 55 08	 mov	 edx, DWORD PTR __Val$[ebp]
$LL6@remove:

; 1594 :         return remove_if([&](const _Ty& _Other) { return _Other == _Val; });

  00024	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]

; 1604 :             auto _Next = _First->_Next;

  00027	8b 30		 mov	 esi, DWORD PTR [eax]

; 1594 :         return remove_if([&](const _Ty& _Other) { return _Other == _Val; });

  00029	3b 0a		 cmp	 ecx, DWORD PTR [edx]

; 1605 :             if (_Pred(_First->_Myval)) {

  0002b	75 21		 jne	 SHORT $LN16@remove

; 1538 :             --_List._Mypair._Myval2._Mysize;

  0002d	ff 4f 04	 dec	 DWORD PTR [edi+4]
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\utility

; 602  :     _Ty _Old_val = static_cast<_Ty&&>(_Val);

  00030	8b 10		 mov	 edx, DWORD PTR [eax]

; 603  :     _Val         = static_cast<_Other&&>(_New_val);

  00032	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\list

; 1540 :             const auto _Prev = _Removed->_Prev;

  00038	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]

; 1541 :             _Prev->_Next     = _Next;

  0003b	89 11		 mov	 DWORD PTR [ecx], edx

; 1542 :             _Next->_Prev     = _Prev;

  0003d	89 4a 04	 mov	 DWORD PTR [edx+4], ecx

; 1543 : 
; 1544 : #if _ITERATOR_DEBUG_LEVEL == 2
; 1545 :             // mark removed node for IDL to snip out later
; 1546 :             _Removed->_Prev = _Nodeptr();
; 1547 : #endif // _ITERATOR_DEBUG_LEVEL == 2
; 1548 : 
; 1549 :             *_Tail = _Removed;

  00040	8b 4d fc	 mov	 ecx, DWORD PTR __Op$1[ebp+8]
  00043	8b 55 08	 mov	 edx, DWORD PTR __Val$[ebp]
  00046	89 01		 mov	 DWORD PTR [ecx], eax

; 1550 :             _Tail  = _STD addressof(_Removed->_Next);

  00048	8b 7d f4	 mov	 edi, DWORD PTR __Op$1[ebp]
  0004b	89 45 fc	 mov	 DWORD PTR __Op$1[ebp+8], eax
$LN16@remove:

; 1609 :             _First = _Next;

  0004e	8b c6		 mov	 eax, esi
  00050	3b f3		 cmp	 esi, ebx
  00052	75 d0		 jne	 SHORT $LL6@remove
  00054	8b 55 f8	 mov	 edx, DWORD PTR __Op$1[ebp+4]
$LN7@remove:

; 1576 :             auto _Target = _Head;

  00057	85 d2		 test	 edx, edx

; 1577 :             while (_Target) {

  00059	74 18		 je	 SHORT $LN21@remove
  0005b	0f 1f 44 00 00	 npad	 5
$LL20@remove:

; 1578 :                 auto _Next = _Target->_Next;

  00060	8b 32		 mov	 esi, DWORD PTR [edx]
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory

; 255  :         ::operator delete(_Ptr, _Bytes);

  00062	6a 0c		 push	 12			; 0000000cH
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0006a	83 c4 08	 add	 esp, 8
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\list

; 1584 :                 _Target = _Next;

  0006d	8b d6		 mov	 edx, esi
  0006f	85 f6		 test	 esi, esi
  00071	75 ed		 jne	 SHORT $LL20@remove
$LN21@remove:
  00073	5f		 pop	 edi

; 1595 :     }

  00074	5e		 pop	 esi
  00075	5b		 pop	 ebx
  00076	8b e5		 mov	 esp, ebp
  00078	5d		 pop	 ebp
  00079	c2 04 00	 ret	 4
?remove@?$list@PAVCWindow@UI@@V?$allocator@PAVCWindow@UI@@@std@@@std@@QAE@ABQAVCWindow@UI@@@Z ENDP ; std::list<UI::CWindow *,std::allocator<UI::CWindow *> >::remove
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\list
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\list
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\list
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\list
;	COMDAT ?push_back@?$list@PAVCWindow@UI@@V?$allocator@PAVCWindow@UI@@@std@@@std@@QAEXABQAVCWindow@UI@@@Z
_TEXT	SEGMENT
__Op$2 = -20						; size = 8
__$EHRec$ = -12						; size = 12
__Val$ = 8						; size = 4
?push_back@?$list@PAVCWindow@UI@@V?$allocator@PAVCWindow@UI@@@std@@@std@@QAEXABQAVCWindow@UI@@@Z PROC ; std::list<UI::CWindow *,std::allocator<UI::CWindow *> >::push_back, COMDAT
; _this$ = ecx

; 1242 :     void push_back(const _Ty& _Val) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?push_back@?$list@PAVCWindow@UI@@V?$allocator@PAVCWindow@UI@@@std@@@std@@QAEXABQAVCWindow@UI@@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 08	 sub	 esp, 8
  00014	56		 push	 esi
  00015	57		 push	 edi
  00016	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001b	33 c5		 xor	 eax, ebp
  0001d	50		 push	 eax
  0001e	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00021	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00027	8b f1		 mov	 esi, ecx

; 1005 :         if (_Mysize == max_size()) {

  00029	81 7e 04 55 55
	55 15		 cmp	 DWORD PTR [esi+4], 357913941 ; 15555555H

; 1243 :         _Emplace(_Mypair._Myval2._Myhead, _Val);

  00030	8b 3e		 mov	 edi, DWORD PTR [esi]

; 1005 :         if (_Mysize == max_size()) {

  00032	74 46		 je	 SHORT $LN62@push_back
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory

; 958  :     _CONSTEXPR20_DYNALLOC explicit _Alloc_construct_ptr(_Alloc& _Al_) : _Al(_Al_), _Ptr(nullptr) {}

  00034	89 75 ec	 mov	 DWORD PTR __Op$2[ebp], esi

; 79   :         return ::operator new(_Bytes);

  00037	6a 0c		 push	 12			; 0000000cH
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\list

; 582  :     explicit _List_node_emplace_op2(_Alnode& _Al_, _Valtys&&... _Vals) : _Alloc_construct_ptr<_Alnode>(_Al_) {

  00039	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory

; 965  :         _Ptr = nullptr; // if allocate throws, prevents double-free

  00040	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR __Op$2[ebp+4], 0

; 79   :         return ::operator new(_Bytes);

  00047	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\list

; 584  :         _Alnode_traits::construct(this->_Al, _STD addressof(this->_Ptr->_Myval), _STD forward<_Valtys>(_Vals)...);

  0004c	8b 4d 08	 mov	 ecx, DWORD PTR __Val$[ebp]
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory

; 79   :         return ::operator new(_Bytes);

  0004f	83 c4 04	 add	 esp, 4
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\list

; 584  :         _Alnode_traits::construct(this->_Al, _STD addressof(this->_Ptr->_Myval), _STD forward<_Valtys>(_Vals)...);

  00052	8b 09		 mov	 ecx, DWORD PTR [ecx]
  00054	89 48 08	 mov	 DWORD PTR [eax+8], ecx

; 1010 :         ++_Mysize;

  00057	ff 46 04	 inc	 DWORD PTR [esi+4]

; 597  :         const pointer _Insert_after = _Insert_before->_Prev;

  0005a	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]

; 598  :         _Construct_in_place(this->_Ptr->_Next, _Insert_before);

  0005d	89 38		 mov	 DWORD PTR [eax], edi

; 599  :         _Construct_in_place(this->_Ptr->_Prev, _Insert_after);

  0005f	89 48 04	 mov	 DWORD PTR [eax+4], ecx

; 600  :         const auto _Result    = this->_Ptr;
; 601  :         this->_Ptr            = pointer{};
; 602  :         _Insert_before->_Prev = _Result;

  00062	89 47 04	 mov	 DWORD PTR [edi+4], eax

; 603  :         _Insert_after->_Next  = _Result;

  00065	89 01		 mov	 DWORD PTR [ecx], eax

; 1244 :     }

  00067	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0006a	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00071	59		 pop	 ecx
  00072	5f		 pop	 edi
  00073	5e		 pop	 esi
  00074	8b e5		 mov	 esp, ebp
  00076	5d		 pop	 ebp
  00077	c2 04 00	 ret	 4
$LN62@push_back:

; 1006 :             _Xlength_error("list too long");

  0007a	68 00 00 00 00	 push	 OFFSET ??_C@_0O@NKNMEGII@list?5too?5long@
  0007f	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPBD@Z ; std::_Xlength_error
$LN60@push_back:
  00084	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?push_back@?$list@PAVCWindow@UI@@V?$allocator@PAVCWindow@UI@@@std@@@std@@QAEXABQAVCWindow@UI@@@Z$1:
  00000	8d 4d ec	 lea	 ecx, DWORD PTR __Op$2[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@PAVCWindow@UI@@PAX@std@@@std@@@std@@QAE@XZ ; std::_Alloc_construct_ptr<std::allocator<std::_List_node<UI::CWindow *,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_List_node<UI::CWindow *,void *> > >
  00008	cc		 int	 3
  00009	cc		 int	 3
  0000a	cc		 int	 3
  0000b	cc		 int	 3
  0000c	cc		 int	 3
__ehhandler$?push_back@?$list@PAVCWindow@UI@@V?$allocator@PAVCWindow@UI@@@std@@@std@@QAEXABQAVCWindow@UI@@@Z:
  0000d	90		 npad	 1
  0000e	90		 npad	 1
  0000f	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00013	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00016	8b 4a ec	 mov	 ecx, DWORD PTR [edx-20]
  00019	33 c8		 xor	 ecx, eax
  0001b	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00020	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?push_back@?$list@PAVCWindow@UI@@V?$allocator@PAVCWindow@UI@@@std@@@std@@QAEXABQAVCWindow@UI@@@Z
  00025	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?push_back@?$list@PAVCWindow@UI@@V?$allocator@PAVCWindow@UI@@@std@@@std@@QAEXABQAVCWindow@UI@@@Z ENDP ; std::list<UI::CWindow *,std::allocator<UI::CWindow *> >::push_back
; Function compile flags: /Ogtp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\list
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\list
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\list
;	COMDAT ??1?$list@PAVCWindow@UI@@V?$allocator@PAVCWindow@UI@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$list@PAVCWindow@UI@@V?$allocator@PAVCWindow@UI@@@std@@@std@@QAE@XZ PROC ; std::list<UI::CWindow *,std::allocator<UI::CWindow *> >::~list<UI::CWindow *,std::allocator<UI::CWindow *> >, COMDAT
; _this$ = ecx

; 1036 :     ~list() noexcept {

  00000	57		 push	 edi
  00001	8b f9		 mov	 edi, ecx

; 1431 :         _Node::_Free_non_head(_Al, _My_data._Myhead);

  00003	8b 17		 mov	 edx, DWORD PTR [edi]

; 323  :         _Head->_Prev->_Next = nullptr;

  00005	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00008	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 324  : 
; 325  :         auto _Pnode = _Head->_Next;

  0000e	8b 02		 mov	 eax, DWORD PTR [edx]

; 326  :         for (_Nodeptr _Pnext; _Pnode; _Pnode = _Pnext) {

  00010	85 c0		 test	 eax, eax
  00012	74 15		 je	 SHORT $LN7@list
  00014	56		 push	 esi
$LL8@list:

; 327  :             _Pnext = _Pnode->_Next;

  00015	8b 30		 mov	 esi, DWORD PTR [eax]
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory

; 255  :         ::operator delete(_Ptr, _Bytes);

  00017	6a 0c		 push	 12			; 0000000cH
  00019	50		 push	 eax
  0001a	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0001f	83 c4 08	 add	 esp, 8
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\list

; 326  :         for (_Nodeptr _Pnext; _Pnode; _Pnode = _Pnext) {

  00022	8b c6		 mov	 eax, esi
  00024	85 f6		 test	 esi, esi
  00026	75 ed		 jne	 SHORT $LL8@list
  00028	5e		 pop	 esi
$LN7@list:
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory

; 255  :         ::operator delete(_Ptr, _Bytes);

  00029	6a 0c		 push	 12			; 0000000cH
  0002b	ff 37		 push	 DWORD PTR [edi]
  0002d	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00032	83 c4 08	 add	 esp, 8
  00035	5f		 pop	 edi
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\list

; 1042 :     }

  00036	c3		 ret	 0
??1?$list@PAVCWindow@UI@@V?$allocator@PAVCWindow@UI@@@std@@@std@@QAE@XZ ENDP ; std::list<UI::CWindow *,std::allocator<UI::CWindow *> >::~list<UI::CWindow *,std::allocator<UI::CWindow *> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\vector
;	COMDAT ?_Xlength@?$vector@PAVCGraphicExpandedImageInstance@@V?$allocator@PAVCGraphicExpandedImageInstance@@@std@@@std@@CAXXZ
_TEXT	SEGMENT
?_Xlength@?$vector@PAVCGraphicExpandedImageInstance@@V?$allocator@PAVCGraphicExpandedImageInstance@@@std@@@std@@CAXXZ PROC ; std::vector<CGraphicExpandedImageInstance *,std::allocator<CGraphicExpandedImageInstance *> >::_Xlength, COMDAT

; 1761 :         _Xlength_error("vector too long");

  00000	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@FOIKENOD@vector?5too?5long@
  00005	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPBD@Z ; std::_Xlength_error
$LN3@Xlength:
  0000a	cc		 int	 3
?_Xlength@?$vector@PAVCGraphicExpandedImageInstance@@V?$allocator@PAVCGraphicExpandedImageInstance@@@std@@@std@@CAXXZ ENDP ; std::vector<CGraphicExpandedImageInstance *,std::allocator<CGraphicExpandedImageInstance *> >::_Xlength
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterlib\GrpExpandedImageInstance.h
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterlib\GrpExpandedImageInstance.h
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterlib\GrpExpandedImageInstance.h
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterlib\GrpExpandedImageInstance.h
;	COMDAT ?DeleteExpandedImageInstance@CGraphicExpandedImageInstance@@SAXPAV1@@Z
_TEXT	SEGMENT
_pkData$ = 8						; size = 4
_pkInstance$ = 8					; size = 4
?DeleteExpandedImageInstance@CGraphicExpandedImageInstance@@SAXPAV1@@Z PROC ; CGraphicExpandedImageInstance::DeleteExpandedImageInstance, COMDAT

; 10   : 		{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 11   : 			pkInstance->Destroy();

  00004	8b 75 08	 mov	 esi, DWORD PTR _pkInstance$[ebp]
  00007	8b ce		 mov	 ecx, esi
  00009	e8 00 00 00 00	 call	 ?Destroy@CGraphicExpandedImageInstance@@QAEXXZ ; CGraphicExpandedImageInstance::Destroy
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\vector

; 730  :         if (_Mylast != _My_data._Myend) {

  0000e	a1 14 00 00 00	 mov	 eax, DWORD PTR ?ms_kPool@CGraphicExpandedImageInstance@@2V?$CDynamicPool@VCGraphicExpandedImageInstance@@@@A+20
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterlib\GrpExpandedImageInstance.h

; 12   : 			ms_kPool.Free(pkInstance);

  00013	89 75 08	 mov	 DWORD PTR _pkData$[ebp], esi
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\vector

; 730  :         if (_Mylast != _My_data._Myend) {

  00016	3b 05 18 00 00
	00		 cmp	 eax, DWORD PTR ?ms_kPool@CGraphicExpandedImageInstance@@2V?$CDynamicPool@VCGraphicExpandedImageInstance@@@@A+24
  0001c	74 0c		 je	 SHORT $LN8@DeleteExpa

; 713  :         _Alty_traits::construct(_Getal(), _Unfancy(_Mylast), _STD forward<_Valty>(_Val)...);

  0001e	89 30		 mov	 DWORD PTR [eax], esi

; 714  :         _Orphan_range(_Mylast, _Mylast);
; 715  :         _Ty& _Result = *_Mylast;
; 716  :         ++_Mylast;

  00020	83 05 14 00 00
	00 04		 add	 DWORD PTR ?ms_kPool@CGraphicExpandedImageInstance@@2V?$CDynamicPool@VCGraphicExpandedImageInstance@@@@A+20, 4
  00027	5e		 pop	 esi
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterlib\GrpExpandedImageInstance.h

; 13   : 		}

  00028	5d		 pop	 ebp
  00029	c3		 ret	 0
$LN8@DeleteExpa:
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\vector

; 734  :         _Ty& _Result = *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

  0002a	8d 4d 08	 lea	 ecx, DWORD PTR _pkData$[ebp]
  0002d	51		 push	 ecx
  0002e	50		 push	 eax
  0002f	b9 10 00 00 00	 mov	 ecx, OFFSET ?ms_kPool@CGraphicExpandedImageInstance@@2V?$CDynamicPool@VCGraphicExpandedImageInstance@@@@A+16
  00034	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@ABQAVCGraphicExpandedImageInstance@@@?$vector@PAVCGraphicExpandedImageInstance@@V?$allocator@PAVCGraphicExpandedImageInstance@@@std@@@std@@QAEPAPAVCGraphicExpandedImageInstance@@QAPAV2@ABQAV2@@Z ; std::vector<CGraphicExpandedImageInstance *,std::allocator<CGraphicExpandedImageInstance *> >::_Emplace_reallocate<CGraphicExpandedImageInstance * const &>
  00039	5e		 pop	 esi
; File C:\Users\ALEXANDER\Desktop\Cliente\COPY_FISH_WON_NEW\Binario\Client\eterlib\GrpExpandedImageInstance.h

; 13   : 		}

  0003a	5d		 pop	 ebp
  0003b	c3		 ret	 0
?DeleteExpandedImageInstance@CGraphicExpandedImageInstance@@SAXPAV1@@Z ENDP ; CGraphicExpandedImageInstance::DeleteExpandedImageInstance
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xstring
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xstring
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xstring
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\utility
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xstring
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xstring
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xstring
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xstring
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z
_TEXT	SEGMENT
__Old$1$ = -4						; size = 4
__Ptr$ = 8						; size = 4
$T1 = 12						; size = 4
__Count$ = 12						; size = 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT
; _this$ = ecx

; 3210 :         _In_reads_(_Count) const _Elem* const _Ptr, _CRT_GUARDOVERFLOW const size_type _Count) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	53		 push	 ebx

; 3211 :         // assign [_Ptr, _Ptr + _Count)
; 3212 :         if (_Count <= _Mypair._Myval2._Myres) {

  00005	8b 5d 0c	 mov	 ebx, DWORD PTR __Count$[ebp]
  00008	56		 push	 esi
  00009	8b f1		 mov	 esi, ecx
  0000b	57		 push	 edi
  0000c	8b 4e 14	 mov	 ecx, DWORD PTR [esi+20]
  0000f	89 4d fc	 mov	 DWORD PTR __Old$1$[ebp], ecx
  00012	3b d9		 cmp	 ebx, ecx
  00014	77 28		 ja	 SHORT $LN2@assign

; 2263 :         value_type* _Result = _Bx._Buf;

  00016	8b fe		 mov	 edi, esi

; 2286 :         return _BUF_SIZE <= _Myres;

  00018	83 f9 10	 cmp	 ecx, 16			; 00000010H

; 2264 :         if (_Large_string_engaged()) {

  0001b	72 02		 jb	 SHORT $LN5@assign

; 2265 :             _Result = _Unfancy(_Bx._Ptr);

  0001d	8b 3e		 mov	 edi, DWORD PTR [esi]
$LN5@assign:

; 121  :         _CSTD memmove(_First1, _First2, _Count * sizeof(_Elem));

  0001f	53		 push	 ebx
  00020	ff 75 08	 push	 DWORD PTR __Ptr$[ebp]

; 3213 :             _Elem* const _Old_ptr   = _Mypair._Myval2._Myptr();
; 3214 :             _Mypair._Myval2._Mysize = _Count;

  00023	89 5e 10	 mov	 DWORD PTR [esi+16], ebx

; 121  :         _CSTD memmove(_First1, _First2, _Count * sizeof(_Elem));

  00026	57		 push	 edi
  00027	e8 00 00 00 00	 call	 _memmove
  0002c	83 c4 0c	 add	 esp, 12			; 0000000cH

; 3215 :             _Traits::move(_Old_ptr, _Ptr, _Count);
; 3216 :             _Traits::assign(_Old_ptr[_Count], _Elem());

  0002f	c6 04 1f 00	 mov	 BYTE PTR [edi+ebx], 0

; 3225 :             },
; 3226 :             _Ptr);
; 3227 :     }

  00033	8b c6		 mov	 eax, esi
  00035	5f		 pop	 edi
  00036	5e		 pop	 esi
  00037	5b		 pop	 ebx
  00038	8b e5		 mov	 esp, ebp
  0003a	5d		 pop	 ebp
  0003b	c2 08 00	 ret	 8
$LN2@assign:

; 4474 :         if (_New_size > max_size()) {

  0003e	81 fb ff ff ff
	7f		 cmp	 ebx, 2147483647		; 7fffffffH
  00044	0f 87 d4 00 00
	00		 ja	 $LN60@assign

; 4454 :         const size_type _Masked = _Requested | _ALLOC_MASK;

  0004a	8b fb		 mov	 edi, ebx
  0004c	83 cf 0f	 or	 edi, 15			; 0000000fH
  0004f	81 ff ff ff ff
	7f		 cmp	 edi, 2147483647		; 7fffffffH

; 4455 :         if (_Masked > _Max) { // the mask overflows, settle for max_size()

  00055	76 15		 jbe	 SHORT $LN19@assign

; 4456 :             return _Max;

  00057	b8 00 00 00 80	 mov	 eax, -2147483648	; 80000000H
  0005c	bf ff ff ff 7f	 mov	 edi, 2147483647		; 7fffffffH
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory

; 229  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  00061	50		 push	 eax
  00062	e8 00 00 00 00	 call	 ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
  00067	83 c4 04	 add	 esp, 4
  0006a	eb 52		 jmp	 SHORT $LN58@assign
$LN19@assign:
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xstring

; 4459 :         if (_Old > _Max - _Old / 2) { // similarly, geometric overflows

  0006c	8b d1		 mov	 edx, ecx
  0006e	b8 ff ff ff 7f	 mov	 eax, 2147483647		; 7fffffffH
  00073	d1 ea		 shr	 edx, 1
  00075	2b c2		 sub	 eax, edx
  00077	3b c8		 cmp	 ecx, eax
  00079	76 15		 jbe	 SHORT $LN20@assign

; 4460 :             return _Max;

  0007b	b8 00 00 00 80	 mov	 eax, -2147483648	; 80000000H
  00080	bf ff ff ff 7f	 mov	 edi, 2147483647		; 7fffffffH
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory

; 229  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  00085	50		 push	 eax
  00086	e8 00 00 00 00	 call	 ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
  0008b	83 c4 04	 add	 esp, 4
  0008e	eb 2e		 jmp	 SHORT $LN58@assign
$LN20@assign:
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xstring

; 4463 :         return (_STD max)(_Masked, _Old + _Old / 2);

  00090	8d 04 0a	 lea	 eax, DWORD PTR [edx+ecx]
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\utility

; 43   :     return _Left < _Right ? _Right : _Left;

  00093	3b f8		 cmp	 edi, eax
  00095	0f 42 f8	 cmovb	 edi, eax
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xstring

; 4481 :         const pointer _New_ptr        = _Al.allocate(_New_capacity + 1); // throws

  00098	8d 47 01	 lea	 eax, DWORD PTR [edi+1]
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory

; 228  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  0009b	3d 00 10 00 00	 cmp	 eax, 4096		; 00001000H
  000a0	72 0b		 jb	 SHORT $LN27@assign

; 229  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  000a2	50		 push	 eax
  000a3	e8 00 00 00 00	 call	 ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
  000a8	83 c4 04	 add	 esp, 4
  000ab	eb 11		 jmp	 SHORT $LN58@assign
$LN27@assign:

; 230  :         }
; 231  :     }
; 232  : #endif // defined(_M_IX86) || defined(_M_X64)
; 233  : 
; 234  :     if (_Bytes != 0) {

  000ad	85 c0		 test	 eax, eax
  000af	74 0b		 je	 SHORT $LN28@assign

; 79   :         return ::operator new(_Bytes);

  000b1	50		 push	 eax
  000b2	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  000b7	83 c4 04	 add	 esp, 4

; 235  :         return _Traits::_Allocate(_Bytes);

  000ba	eb 02		 jmp	 SHORT $LN58@assign
$LN28@assign:

; 236  :     }
; 237  : 
; 238  :     return nullptr;

  000bc	33 c0		 xor	 eax, eax
$LN58@assign:
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xstring

; 64   :         _CSTD memcpy(_First1, _First2, _Count * sizeof(_Elem));

  000be	53		 push	 ebx
  000bf	ff 75 08	 push	 DWORD PTR __Ptr$[ebp]

; 4489 :         _Mypair._Myval2._Mysize = _New_size;

  000c2	89 45 0c	 mov	 DWORD PTR $T1[ebp], eax

; 64   :         _CSTD memcpy(_First1, _First2, _Count * sizeof(_Elem));

  000c5	50		 push	 eax

; 4489 :         _Mypair._Myval2._Mysize = _New_size;

  000c6	89 5e 10	 mov	 DWORD PTR [esi+16], ebx

; 4490 :         _Mypair._Myval2._Myres  = _New_capacity;

  000c9	89 7e 14	 mov	 DWORD PTR [esi+20], edi

; 64   :         _CSTD memcpy(_First1, _First2, _Count * sizeof(_Elem));

  000cc	e8 00 00 00 00	 call	 _memcpy

; 3224 :                 _Traits::assign(_New_ptr[_Count], _Elem());

  000d1	8b 7d 0c	 mov	 edi, DWORD PTR $T1[ebp]

; 64   :         _CSTD memcpy(_First1, _First2, _Count * sizeof(_Elem));

  000d4	83 c4 0c	 add	 esp, 12			; 0000000cH

; 4492 :         if (_BUF_SIZE <= _Old_capacity) {

  000d7	8b 45 fc	 mov	 eax, DWORD PTR __Old$1$[ebp]

; 3224 :                 _Traits::assign(_New_ptr[_Count], _Elem());

  000da	c6 04 1f 00	 mov	 BYTE PTR [edi+ebx], 0

; 4492 :         if (_BUF_SIZE <= _Old_capacity) {

  000de	83 f8 10	 cmp	 eax, 16			; 00000010H
  000e1	72 29		 jb	 SHORT $LN13@assign

; 4493 :             _Al.deallocate(_Mypair._Myval2._Bx._Ptr, _Old_capacity + 1);

  000e3	8d 48 01	 lea	 ecx, DWORD PTR [eax+1]
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory

; 797  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  000e6	8b 06		 mov	 eax, DWORD PTR [esi]

; 251  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  000e8	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  000ee	72 12		 jb	 SHORT $LN50@assign

; 150  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  000f0	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  000f3	83 c1 23	 add	 ecx, 35			; 00000023H

; 151  : 
; 152  :     // If the following asserts, it likely means that we are performing
; 153  :     // an aligned delete on memory coming from an unaligned allocation.
; 154  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 155  : 
; 156  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 157  :     // in range [_Min_back_shift, _Non_user_size]
; 158  : #ifdef _DEBUG
; 159  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 160  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 161  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 162  : #endif // _DEBUG
; 163  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  000f6	2b c2		 sub	 eax, edx

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  000f8	83 c0 fc	 add	 eax, -4			; fffffffcH
  000fb	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  000fe	77 19		 ja	 SHORT $LN47@assign

; 165  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  00100	8b c2		 mov	 eax, edx
$LN50@assign:

; 255  :         ::operator delete(_Ptr, _Bytes);

  00102	51		 push	 ecx
  00103	50		 push	 eax
  00104	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00109	83 c4 08	 add	 esp, 8
$LN13@assign:
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xstring

; 3220 :         return _Reallocate_for(

  0010c	89 3e		 mov	 DWORD PTR [esi], edi

; 3225 :             },
; 3226 :             _Ptr);
; 3227 :     }

  0010e	8b c6		 mov	 eax, esi
  00110	5f		 pop	 edi
  00111	5e		 pop	 esi
  00112	5b		 pop	 ebx
  00113	8b e5		 mov	 esp, ebp
  00115	5d		 pop	 ebp
  00116	c2 08 00	 ret	 8
$LN47@assign:
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00119	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN60@assign:
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xstring

; 4475 :             _Xlen_string(); // result too long

  0011e	e8 00 00 00 00	 call	 ?_Xlen_string@std@@YAXXZ ; std::_Xlen_string
$LN56@assign:
  00123	cc		 int	 3
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xstring
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xstring
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xstring
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\utility
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xstring
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xstring
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xstring
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xstring
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xstring
;	COMDAT ?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z
_TEXT	SEGMENT
tv533 = -12						; size = 4
__Old$1$ = -8						; size = 4
tv534 = -4						; size = 4
__Old_size$1$ = -4					; size = 4
__Ptr$ = 8						; size = 4
tv537 = 12						; size = 4
$T1 = 12						; size = 4
__Count$ = 12						; size = 4
?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append, COMDAT
; _this$ = ecx

; 3118 :         _In_reads_(_Count) const _Elem* const _Ptr, _CRT_GUARDOVERFLOW const size_type _Count) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	53		 push	 ebx

; 3119 :         // append [_Ptr, _Ptr + _Count)
; 3120 :         const size_type _Old_size = _Mypair._Myval2._Mysize;
; 3121 :         if (_Count <= _Mypair._Myval2._Myres - _Old_size) {

  00007	8b 5d 0c	 mov	 ebx, DWORD PTR __Count$[ebp]
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8b f9		 mov	 edi, ecx
  0000e	8b 57 14	 mov	 edx, DWORD PTR [edi+20]
  00011	8b c2		 mov	 eax, edx
  00013	8b 4f 10	 mov	 ecx, DWORD PTR [edi+16]
  00016	2b c1		 sub	 eax, ecx
  00018	89 4d fc	 mov	 DWORD PTR __Old_size$1$[ebp], ecx
  0001b	89 55 f8	 mov	 DWORD PTR __Old$1$[ebp], edx
  0001e	3b d8		 cmp	 ebx, eax
  00020	77 2e		 ja	 SHORT $LN2@append

; 3122 :             _Mypair._Myval2._Mysize = _Old_size + _Count;

  00022	8d 04 19	 lea	 eax, DWORD PTR [ecx+ebx]
  00025	89 47 10	 mov	 DWORD PTR [edi+16], eax

; 2263 :         value_type* _Result = _Bx._Buf;

  00028	8b c7		 mov	 eax, edi

; 2286 :         return _BUF_SIZE <= _Myres;

  0002a	83 fa 10	 cmp	 edx, 16			; 00000010H

; 2264 :         if (_Large_string_engaged()) {

  0002d	72 02		 jb	 SHORT $LN5@append

; 2265 :             _Result = _Unfancy(_Bx._Ptr);

  0002f	8b 07		 mov	 eax, DWORD PTR [edi]
$LN5@append:

; 121  :         _CSTD memmove(_First1, _First2, _Count * sizeof(_Elem));

  00031	53		 push	 ebx
  00032	ff 75 08	 push	 DWORD PTR __Ptr$[ebp]

; 3123 :             _Elem* const _Old_ptr   = _Mypair._Myval2._Myptr();
; 3124 :             _Traits::move(_Old_ptr + _Old_size, _Ptr, _Count);

  00035	8d 34 08	 lea	 esi, DWORD PTR [eax+ecx]

; 121  :         _CSTD memmove(_First1, _First2, _Count * sizeof(_Elem));

  00038	56		 push	 esi
  00039	e8 00 00 00 00	 call	 _memmove
  0003e	83 c4 0c	 add	 esp, 12			; 0000000cH

; 3125 :             _Traits::assign(_Old_ptr[_Old_size + _Count], _Elem());

  00041	c6 04 1e 00	 mov	 BYTE PTR [esi+ebx], 0

; 3138 :     }

  00045	8b c7		 mov	 eax, edi
  00047	5f		 pop	 edi
  00048	5e		 pop	 esi
  00049	5b		 pop	 ebx
  0004a	8b e5		 mov	 esp, ebp
  0004c	5d		 pop	 ebp
  0004d	c2 08 00	 ret	 8
$LN2@append:

; 4509 :         if (max_size() - _Old_size < _Size_increase) {

  00050	b8 ff ff ff 7f	 mov	 eax, 2147483647		; 7fffffffH
  00055	2b c1		 sub	 eax, ecx
  00057	3b c3		 cmp	 eax, ebx
  00059	0f 82 26 01 00
	00		 jb	 $LN68@append

; 4511 :         }
; 4512 : 
; 4513 :         const size_type _New_size     = _Old_size + _Size_increase;

  0005f	8d 34 19	 lea	 esi, DWORD PTR [ecx+ebx]

; 4454 :         const size_type _Masked = _Requested | _ALLOC_MASK;

  00062	83 ce 0f	 or	 esi, 15			; 0000000fH
  00065	81 fe ff ff ff
	7f		 cmp	 esi, 2147483647		; 7fffffffH

; 4455 :         if (_Masked > _Max) { // the mask overflows, settle for max_size()

  0006b	76 18		 jbe	 SHORT $LN19@append

; 4456 :             return _Max;

  0006d	b8 00 00 00 80	 mov	 eax, -2147483648	; 80000000H
  00072	be ff ff ff 7f	 mov	 esi, 2147483647		; 7fffffffH
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory

; 229  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  00077	50		 push	 eax
  00078	e8 00 00 00 00	 call	 ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
  0007d	8b 4d fc	 mov	 ecx, DWORD PTR __Old_size$1$[ebp]
  00080	83 c4 04	 add	 esp, 4
  00083	eb 61		 jmp	 SHORT $LN66@append
$LN19@append:
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xstring

; 4459 :         if (_Old > _Max - _Old / 2) { // similarly, geometric overflows

  00085	8b c2		 mov	 eax, edx
  00087	d1 e8		 shr	 eax, 1
  00089	89 45 0c	 mov	 DWORD PTR tv537[ebp], eax
  0008c	b8 ff ff ff 7f	 mov	 eax, 2147483647		; 7fffffffH
  00091	2b 45 0c	 sub	 eax, DWORD PTR tv537[ebp]
  00094	3b d0		 cmp	 edx, eax
  00096	76 18		 jbe	 SHORT $LN20@append

; 4460 :             return _Max;

  00098	b8 00 00 00 80	 mov	 eax, -2147483648	; 80000000H
  0009d	be ff ff ff 7f	 mov	 esi, 2147483647		; 7fffffffH
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory

; 229  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  000a2	50		 push	 eax
  000a3	e8 00 00 00 00	 call	 ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
  000a8	8b 4d fc	 mov	 ecx, DWORD PTR __Old_size$1$[ebp]
  000ab	83 c4 04	 add	 esp, 4
  000ae	eb 36		 jmp	 SHORT $LN66@append
$LN20@append:
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xstring

; 4463 :         return (_STD max)(_Masked, _Old + _Old / 2);

  000b0	8b 45 0c	 mov	 eax, DWORD PTR tv537[ebp]
  000b3	03 c2		 add	 eax, edx
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\utility

; 43   :     return _Left < _Right ? _Right : _Left;

  000b5	3b f0		 cmp	 esi, eax
  000b7	0f 42 f0	 cmovb	 esi, eax
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xstring

; 4517 :         const pointer _New_ptr        = _Al.allocate(_New_capacity + 1); // throws

  000ba	8d 46 01	 lea	 eax, DWORD PTR [esi+1]
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory

; 228  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  000bd	3d 00 10 00 00	 cmp	 eax, 4096		; 00001000H
  000c2	72 0e		 jb	 SHORT $LN27@append

; 229  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  000c4	50		 push	 eax
  000c5	e8 00 00 00 00	 call	 ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
  000ca	8b 4d fc	 mov	 ecx, DWORD PTR __Old_size$1$[ebp]
  000cd	83 c4 04	 add	 esp, 4
  000d0	eb 14		 jmp	 SHORT $LN66@append
$LN27@append:

; 230  :         }
; 231  :     }
; 232  : #endif // defined(_M_IX86) || defined(_M_X64)
; 233  : 
; 234  :     if (_Bytes != 0) {

  000d2	85 c0		 test	 eax, eax
  000d4	74 0e		 je	 SHORT $LN28@append

; 79   :         return ::operator new(_Bytes);

  000d6	50		 push	 eax
  000d7	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new

; 235  :         return _Traits::_Allocate(_Bytes);

  000dc	8b 4d fc	 mov	 ecx, DWORD PTR __Old_size$1$[ebp]

; 79   :         return ::operator new(_Bytes);

  000df	83 c4 04	 add	 esp, 4

; 235  :         return _Traits::_Allocate(_Bytes);

  000e2	eb 02		 jmp	 SHORT $LN66@append
$LN28@append:

; 236  :     }
; 237  : 
; 238  :     return nullptr;

  000e4	33 c0		 xor	 eax, eax
$LN66@append:
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xstring

; 4528 :         if (_BUF_SIZE <= _Old_capacity) {

  000e6	83 7d f8 10	 cmp	 DWORD PTR __Old$1$[ebp], 16 ; 00000010H
  000ea	8d 14 19	 lea	 edx, DWORD PTR [ecx+ebx]
  000ed	89 77 14	 mov	 DWORD PTR [edi+20], esi
  000f0	8d 34 08	 lea	 esi, DWORD PTR [eax+ecx]
  000f3	89 57 10	 mov	 DWORD PTR [edi+16], edx
  000f6	8d 14 1e	 lea	 edx, DWORD PTR [esi+ebx]
  000f9	89 45 0c	 mov	 DWORD PTR $T1[ebp], eax
  000fc	89 75 fc	 mov	 DWORD PTR tv534[ebp], esi
  000ff	89 55 f4	 mov	 DWORD PTR tv533[ebp], edx
  00102	51		 push	 ecx
  00103	72 56		 jb	 SHORT $LN13@append

; 4529 :             const pointer _Old_ptr = _My_data._Bx._Ptr;

  00105	8b 37		 mov	 esi, DWORD PTR [edi]

; 64   :         _CSTD memcpy(_First1, _First2, _Count * sizeof(_Elem));

  00107	56		 push	 esi
  00108	50		 push	 eax
  00109	e8 00 00 00 00	 call	 _memcpy
  0010e	53		 push	 ebx
  0010f	ff 75 08	 push	 DWORD PTR __Ptr$[ebp]
  00112	ff 75 fc	 push	 DWORD PTR tv534[ebp]
  00115	e8 00 00 00 00	 call	 _memcpy

; 3135 :                 _Traits::assign(_New_ptr[_Old_size + _Count], _Elem());

  0011a	8b 45 f4	 mov	 eax, DWORD PTR tv533[ebp]

; 64   :         _CSTD memcpy(_First1, _First2, _Count * sizeof(_Elem));

  0011d	83 c4 18	 add	 esp, 24			; 00000018H

; 4531 :             _Al.deallocate(_Old_ptr, _Old_capacity + 1);

  00120	8b 4d f8	 mov	 ecx, DWORD PTR __Old$1$[ebp]
  00123	41		 inc	 ecx

; 3135 :                 _Traits::assign(_New_ptr[_Old_size + _Count], _Elem());

  00124	c6 00 00	 mov	 BYTE PTR [eax], 0
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory

; 251  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00127	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  0012d	72 12		 jb	 SHORT $LN52@append

; 150  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  0012f	8b 56 fc	 mov	 edx, DWORD PTR [esi-4]
  00132	83 c1 23	 add	 ecx, 35			; 00000023H

; 151  : 
; 152  :     // If the following asserts, it likely means that we are performing
; 153  :     // an aligned delete on memory coming from an unaligned allocation.
; 154  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 155  : 
; 156  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 157  :     // in range [_Min_back_shift, _Non_user_size]
; 158  : #ifdef _DEBUG
; 159  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 160  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 161  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 162  : #endif // _DEBUG
; 163  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  00135	2b f2		 sub	 esi, edx

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00137	8d 46 fc	 lea	 eax, DWORD PTR [esi-4]
  0013a	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  0013d	77 4b		 ja	 SHORT $LN49@append

; 165  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  0013f	8b f2		 mov	 esi, edx
$LN52@append:

; 255  :         ::operator delete(_Ptr, _Bytes);

  00141	51		 push	 ecx
  00142	56		 push	 esi
  00143	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xstring

; 3129 :         return _Reallocate_grow_by(

  00148	8b 45 0c	 mov	 eax, DWORD PTR $T1[ebp]
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory

; 255  :         ::operator delete(_Ptr, _Bytes);

  0014b	83 c4 08	 add	 esp, 8
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xstring

; 3129 :         return _Reallocate_grow_by(

  0014e	89 07		 mov	 DWORD PTR [edi], eax

; 3138 :     }

  00150	8b c7		 mov	 eax, edi
  00152	5f		 pop	 edi
  00153	5e		 pop	 esi
  00154	5b		 pop	 ebx
  00155	8b e5		 mov	 esp, ebp
  00157	5d		 pop	 ebp
  00158	c2 08 00	 ret	 8
$LN13@append:

; 64   :         _CSTD memcpy(_First1, _First2, _Count * sizeof(_Elem));

  0015b	57		 push	 edi
  0015c	50		 push	 eax
  0015d	e8 00 00 00 00	 call	 _memcpy
  00162	53		 push	 ebx
  00163	ff 75 08	 push	 DWORD PTR __Ptr$[ebp]
  00166	56		 push	 esi
  00167	e8 00 00 00 00	 call	 _memcpy

; 3135 :                 _Traits::assign(_New_ptr[_Old_size + _Count], _Elem());

  0016c	8d 04 1e	 lea	 eax, DWORD PTR [esi+ebx]

; 64   :         _CSTD memcpy(_First1, _First2, _Count * sizeof(_Elem));

  0016f	83 c4 18	 add	 esp, 24			; 00000018H

; 3135 :                 _Traits::assign(_New_ptr[_Old_size + _Count], _Elem());

  00172	c6 00 00	 mov	 BYTE PTR [eax], 0

; 3129 :         return _Reallocate_grow_by(

  00175	8b 45 0c	 mov	 eax, DWORD PTR $T1[ebp]
  00178	89 07		 mov	 DWORD PTR [edi], eax

; 3138 :     }

  0017a	8b c7		 mov	 eax, edi
  0017c	5f		 pop	 edi
  0017d	5e		 pop	 esi
  0017e	5b		 pop	 ebx
  0017f	8b e5		 mov	 esp, ebp
  00181	5d		 pop	 ebp
  00182	c2 08 00	 ret	 8
$LN68@append:

; 4510 :             _Xlen_string(); // result too long

  00185	e8 00 00 00 00	 call	 ?_Xlen_string@std@@YAXXZ ; std::_Xlen_string
$LN49@append:
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  0018a	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN64@append:
  0018f	cc		 int	 3
?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xstring
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xstring
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xstring
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xstring
;	COMDAT ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx

; 2968 :     _CONSTEXPR20_CONTAINER ~basic_string() noexcept {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 2286 :         return _BUF_SIZE <= _Myres;

  00003	8b 4e 14	 mov	 ecx, DWORD PTR [esi+20]
  00006	83 f9 10	 cmp	 ecx, 16			; 00000010H

; 4584 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00009	72 27		 jb	 SHORT $LN12@basic_stri
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory

; 797  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0000b	8b 06		 mov	 eax, DWORD PTR [esi]
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xstring

; 4588 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  0000d	41		 inc	 ecx
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory

; 251  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  0000e	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  00014	72 12		 jb	 SHORT $LN22@basic_stri

; 150  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00016	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  00019	83 c1 23	 add	 ecx, 35			; 00000023H

; 151  : 
; 152  :     // If the following asserts, it likely means that we are performing
; 153  :     // an aligned delete on memory coming from an unaligned allocation.
; 154  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 155  : 
; 156  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 157  :     // in range [_Min_back_shift, _Non_user_size]
; 158  : #ifdef _DEBUG
; 159  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 160  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 161  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 162  : #endif // _DEBUG
; 163  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  0001c	2b c2		 sub	 eax, edx

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  0001e	83 c0 fc	 add	 eax, -4			; fffffffcH
  00021	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00024	77 1f		 ja	 SHORT $LN19@basic_stri

; 165  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  00026	8b c2		 mov	 eax, edx
$LN22@basic_stri:

; 255  :         ::operator delete(_Ptr, _Bytes);

  00028	51		 push	 ecx
  00029	50		 push	 eax
  0002a	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0002f	83 c4 08	 add	 esp, 8
$LN12@basic_stri:
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xstring

; 4599 :             _Mypair._Myval2._Mysize = 0;

  00032	c7 46 10 00 00
	00 00		 mov	 DWORD PTR [esi+16], 0

; 4600 :             _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  00039	c7 46 14 0f 00
	00 00		 mov	 DWORD PTR [esi+20], 15	; 0000000fH

; 4601 :             // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4602 :             _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  00040	c6 06 00	 mov	 BYTE PTR [esi], 0
  00043	5e		 pop	 esi

; 2976 :     }

  00044	c3		 ret	 0
$LN19@basic_stri:
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xmemory

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00045	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN27@basic_stri:
  0004a	cc		 int	 3
??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\xstring
;	COMDAT ?_Xlen_string@std@@YAXXZ
_TEXT	SEGMENT
?_Xlen_string@std@@YAXXZ PROC				; std::_Xlen_string, COMDAT

; 2340 :     _Xlength_error("string too long");

  00000	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@JFNIOLAK@string?5too?5long@
  00005	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPBD@Z ; std::_Xlength_error
$LN3@Xlen_strin:
  0000a	cc		 int	 3
?_Xlen_string@std@@YAXXZ ENDP				; std::_Xlen_string
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\exception
;	COMDAT ?_Throw_bad_array_new_length@std@@YAXXZ
_TEXT	SEGMENT
$T1 = -12						; size = 12
?_Throw_bad_array_new_length@std@@YAXXZ PROC		; std::_Throw_bad_array_new_length, COMDAT

; 315  : [[noreturn]] inline void _Throw_bad_array_new_length() {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH

; 316  :     _THROW(bad_array_new_length{});

  00006	8d 4d f4	 lea	 ecx, DWORD PTR $T1[ebp]
  00009	e8 00 00 00 00	 call	 ??0bad_array_new_length@std@@QAE@XZ ; std::bad_array_new_length::bad_array_new_length
  0000e	68 00 00 00 00	 push	 OFFSET __TI3?AVbad_array_new_length@std@@
  00013	8d 45 f4	 lea	 eax, DWORD PTR $T1[ebp]
  00016	50		 push	 eax
  00017	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN3@Throw_bad_:
  0001c	cc		 int	 3
?_Throw_bad_array_new_length@std@@YAXXZ ENDP		; std::_Throw_bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\vcruntime_exception.h
;	COMDAT ??_Gbad_array_new_length@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Gbad_array_new_length@std@@UAEPAXI@Z PROC		; std::bad_array_new_length::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 89   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 90   :         __std_exception_destroy(&_Data);

  00006	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  00009	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  0000f	50		 push	 eax
  00010	e8 00 00 00 00	 call	 ___std_exception_destroy
  00015	83 c4 04	 add	 esp, 4
  00018	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0001c	74 0b		 je	 SHORT $LN12@scalar
  0001e	6a 0c		 push	 12			; 0000000cH
  00020	56		 push	 esi
  00021	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00026	83 c4 08	 add	 esp, 8
$LN12@scalar:
  00029	8b c6		 mov	 eax, esi
  0002b	5e		 pop	 esi
  0002c	5d		 pop	 ebp
  0002d	c2 04 00	 ret	 4
??_Gbad_array_new_length@std@@UAEPAXI@Z ENDP		; std::bad_array_new_length::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\vcruntime_exception.h
;	COMDAT ??0bad_array_new_length@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??0bad_array_new_length@std@@QAE@ABV01@@Z PROC		; std::bad_array_new_length::bad_array_new_length, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 72   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	0f 57 c0	 xorps	 xmm0, xmm0

; 71   :         : _Data()

  00009	8d 46 04	 lea	 eax, DWORD PTR [esi+4]

; 73   :         __std_exception_copy(&_Other._Data, &_Data);

  0000c	50		 push	 eax
  0000d	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  00013	66 0f d6 00	 movq	 QWORD PTR [eax], xmm0
  00017	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  0001a	83 c0 04	 add	 eax, 4
  0001d	50		 push	 eax
  0001e	e8 00 00 00 00	 call	 ___std_exception_copy
  00023	83 c4 08	 add	 esp, 8
  00026	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7bad_array_new_length@std@@6B@
  0002c	8b c6		 mov	 eax, esi
  0002e	5e		 pop	 esi
  0002f	5d		 pop	 ebp
  00030	c2 04 00	 ret	 4
??0bad_array_new_length@std@@QAE@ABV01@@Z ENDP		; std::bad_array_new_length::bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\vcruntime_exception.h
;	COMDAT ??1bad_array_new_length@std@@UAE@XZ
_TEXT	SEGMENT
??1bad_array_new_length@std@@UAE@XZ PROC		; std::bad_array_new_length::~bad_array_new_length, COMDAT
; _this$ = ecx

; 90   :         __std_exception_destroy(&_Data);

  00000	8d 41 04	 lea	 eax, DWORD PTR [ecx+4]
  00003	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7exception@std@@6B@
  00009	50		 push	 eax
  0000a	e8 00 00 00 00	 call	 ___std_exception_destroy
  0000f	59		 pop	 ecx
  00010	c3		 ret	 0
??1bad_array_new_length@std@@UAE@XZ ENDP		; std::bad_array_new_length::~bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\vcruntime_exception.h
;	COMDAT ??0bad_array_new_length@std@@QAE@XZ
_TEXT	SEGMENT
??0bad_array_new_length@std@@QAE@XZ PROC		; std::bad_array_new_length::bad_array_new_length, COMDAT
; _this$ = ecx

; 141  :     {

  00000	0f 57 c0	 xorps	 xmm0, xmm0

; 142  :     }

  00003	8b c1		 mov	 eax, ecx

; 65   :         : _Data()

  00005	66 0f d6 41 04	 movq	 QWORD PTR [ecx+4], xmm0

; 66   :     {
; 67   :         _Data._What = _Message;

  0000a	c7 41 04 00 00
	00 00		 mov	 DWORD PTR [ecx+4], OFFSET ??_C@_0BF@KINCDENJ@bad?5array?5new?5length@

; 141  :     {

  00011	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7bad_array_new_length@std@@6B@

; 142  :     }

  00017	c3		 ret	 0
??0bad_array_new_length@std@@QAE@XZ ENDP		; std::bad_array_new_length::bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\vcruntime_exception.h
;	COMDAT ??_Gbad_alloc@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Gbad_alloc@std@@UAEPAXI@Z PROC			; std::bad_alloc::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 89   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 90   :         __std_exception_destroy(&_Data);

  00006	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  00009	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  0000f	50		 push	 eax
  00010	e8 00 00 00 00	 call	 ___std_exception_destroy
  00015	83 c4 04	 add	 esp, 4
  00018	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0001c	74 0b		 je	 SHORT $LN9@scalar
  0001e	6a 0c		 push	 12			; 0000000cH
  00020	56		 push	 esi
  00021	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00026	83 c4 08	 add	 esp, 8
$LN9@scalar:
  00029	8b c6		 mov	 eax, esi
  0002b	5e		 pop	 esi
  0002c	5d		 pop	 ebp
  0002d	c2 04 00	 ret	 4
??_Gbad_alloc@std@@UAEPAXI@Z ENDP			; std::bad_alloc::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\vcruntime_exception.h
;	COMDAT ??0bad_alloc@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??0bad_alloc@std@@QAE@ABV01@@Z PROC			; std::bad_alloc::bad_alloc, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 72   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	0f 57 c0	 xorps	 xmm0, xmm0

; 71   :         : _Data()

  00009	8d 46 04	 lea	 eax, DWORD PTR [esi+4]

; 73   :         __std_exception_copy(&_Other._Data, &_Data);

  0000c	50		 push	 eax
  0000d	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  00013	66 0f d6 00	 movq	 QWORD PTR [eax], xmm0
  00017	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  0001a	83 c0 04	 add	 eax, 4
  0001d	50		 push	 eax
  0001e	e8 00 00 00 00	 call	 ___std_exception_copy
  00023	83 c4 08	 add	 esp, 8
  00026	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7bad_alloc@std@@6B@
  0002c	8b c6		 mov	 eax, esi
  0002e	5e		 pop	 esi
  0002f	5d		 pop	 ebp
  00030	c2 04 00	 ret	 4
??0bad_alloc@std@@QAE@ABV01@@Z ENDP			; std::bad_alloc::bad_alloc
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\vcruntime_exception.h
;	COMDAT ??_Gexception@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Gexception@std@@UAEPAXI@Z PROC			; std::exception::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 89   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 90   :         __std_exception_destroy(&_Data);

  00006	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  00009	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  0000f	50		 push	 eax
  00010	e8 00 00 00 00	 call	 ___std_exception_destroy
  00015	83 c4 04	 add	 esp, 4
  00018	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0001c	74 0b		 je	 SHORT $LN6@scalar
  0001e	6a 0c		 push	 12			; 0000000cH
  00020	56		 push	 esi
  00021	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00026	83 c4 08	 add	 esp, 8
$LN6@scalar:
  00029	8b c6		 mov	 eax, esi
  0002b	5e		 pop	 esi
  0002c	5d		 pop	 ebp
  0002d	c2 04 00	 ret	 4
??_Gexception@std@@UAEPAXI@Z ENDP			; std::exception::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\vcruntime_exception.h
;	COMDAT ?what@exception@std@@UBEPBDXZ
_TEXT	SEGMENT
?what@exception@std@@UBEPBDXZ PROC			; std::exception::what, COMDAT
; _this$ = ecx

; 95   :         return _Data._What ? _Data._What : "Unknown exception";

  00000	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00003	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0BC@EOODALEL@Unknown?5exception@
  00008	85 c9		 test	 ecx, ecx
  0000a	0f 45 c1	 cmovne	 eax, ecx

; 96   :     }

  0000d	c3		 ret	 0
?what@exception@std@@UBEPBDXZ ENDP			; std::exception::what
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\vcruntime_exception.h
;	COMDAT ??1exception@std@@UAE@XZ
_TEXT	SEGMENT
??1exception@std@@UAE@XZ PROC				; std::exception::~exception, COMDAT
; _this$ = ecx

; 90   :         __std_exception_destroy(&_Data);

  00000	8d 41 04	 lea	 eax, DWORD PTR [ecx+4]
  00003	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7exception@std@@6B@
  00009	50		 push	 eax
  0000a	e8 00 00 00 00	 call	 ___std_exception_destroy
  0000f	59		 pop	 ecx

; 91   :     }

  00010	c3		 ret	 0
??1exception@std@@UAE@XZ ENDP				; std::exception::~exception
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\visual studio 2019\visual studio 2019\VC\Tools\MSVC\14.29.30133\include\vcruntime_exception.h
;	COMDAT ??0exception@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
__Other$ = 8						; size = 4
??0exception@std@@QAE@ABV01@@Z PROC			; std::exception::exception, COMDAT
; _this$ = ecx

; 72   :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	0f 57 c0	 xorps	 xmm0, xmm0
  00009	8d 46 04	 lea	 eax, DWORD PTR [esi+4]

; 73   :         __std_exception_copy(&_Other._Data, &_Data);

  0000c	50		 push	 eax
  0000d	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  00013	66 0f d6 00	 movq	 QWORD PTR [eax], xmm0
  00017	8b 45 08	 mov	 eax, DWORD PTR __Other$[ebp]
  0001a	83 c0 04	 add	 eax, 4
  0001d	50		 push	 eax
  0001e	e8 00 00 00 00	 call	 ___std_exception_copy
  00023	83 c4 08	 add	 esp, 8

; 74   :     }

  00026	8b c6		 mov	 eax, esi
  00028	5e		 pop	 esi
  00029	5d		 pop	 ebp
  0002a	c2 04 00	 ret	 4
??0exception@std@@QAE@ABV01@@Z ENDP			; std::exception::exception
_TEXT	ENDS
END
